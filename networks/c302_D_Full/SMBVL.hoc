// Cell: SMBVL
/*
{
  "id" : "SMBVL",
  "sections" : [ {
    "name" : "Soma",
    "id" : "Soma",
    "points3d" : [ "0.425, -263.45, 33.05, 2.7427175", "0.425, -260.70728249999996, 33.05, 2.7427175" ],
    "comments" : "Section in NeuroML is spherical, so using cylindrical section along Y axis for NEURON\n"
  }, {
    "name" : "Axon",
    "id" : "Axon",
    "points3d" : [ "0.425, -263.45, 33.05, 0.39370042", "0.425, -263.425, 33.05, 0.39370042", "0.2, -264.0, 32.75, 0.41231057", "-0.45, -264.775, 32.65, 0.42720017", "-0.95, -266.19998, 32.975, 0.4387482", "-0.75, -269.55, 34.95, 0.4358899", "-0.45, -272.8, 37.024998, 0.39051247", "0.3, -273.15, 37.775, 0.39051247", "2.8999999, -273.42502, 39.825, 0.43011624", "4.475, -273.775, 42.449997, 0.44158804", "4.95, -274.225, 45.5, 0.39051247", "4.975, -274.2, 45.824997, 0.47434163", "4.5499997, -274.2, 46.05, 0.37416574", "4.225, -274.2, 45.899998, 0.32015622", "3.85, -274.2, 45.5, 0.36055514", "3.425, -273.775, 42.85, 0.36742347", "1.8750001, -273.42502, 40.225, 0.4555217", "-0.4, -273.15, 38.525, 0.4609772", "-1.25, -273.1, 37.125, 0.39051247", "-1.3000001, -272.05, 35.9, 0.3", "-1.3000001, -266.05002, 32.300003, 0.3", "-0.4, -264.1, 31.8, 0.28284273", "2.1, -259.92502, 26.699999, 0.3774917", "5.15, -250.77501, 21.05, 0.40311286", "10.5, -241.5, 15.6, 0.34641016", "11.0, -228.04999, 6.3, 0.3", "12.4, -213.925, -2.55, 0.3640055", "13.400001, -196.775, -14.1, 0.28722814", "13.349999, -165.3, -35.550003, 0.31622776", "13.05, -133.75, -52.074997, 0.35000002", "13.349999, -115.925, -57.9, 0.26925823", "13.375001, -100.125, -61.25, 0.39370042", "13.150001, -85.025, -63.550003, 0.35000002", "14.4, -50.6, -63.7, 0.28284273", "14.200001, -38.550003, -60.2, 0.3", "14.475, -0.35000002, -48.0, 0.41533118", "15.000001, 33.45, -30.199999, 0.3", "15.075, 34.6, -29.624998, 0.21213202", "17.85, 37.65, -25.475002, 0.35000002", "20.25, 39.95, -21.775, 0.35000002", "22.5, 42.699997, -16.975, 0.32015622", "23.925001, 44.7, -12.8, 0.32015622", "23.375, 46.9, -8.474999, 0.40620193", "23.3, 47.850002, -7.9000006, 0.3", "21.8, 83.05, 12.0, 0.3", "21.6, 87.65, 14.599999, 0.3", "21.6, 93.75, 15.6, 0.3", "21.6, 121.5, 20.0, 0.28284273", "21.65, 171.0, 17.5, 0.36055514", "21.9, 224.49998, 1.05, 0.36055514", "20.1, 252.80002, -6.8999996, 0.28284273", "16.8, 289.7, -12.9, 0.28284273", "15.5, 320.025, -15.4, 0.28722814", "14.25, 353.0, -12.3, 0.36055514", "9.6, 387.45, -0.95, 0.24494897", "8.1, 396.525, 3.8, 0.3774917", "7.9000006, 397.225, 4.3, 0.32015622" ],
    "parent" : "Soma",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma_group",
    "groups" : [ ],
    "sections" : [ "Soma" ]
  }, {
    "name" : "axon_group",
    "groups" : [ ],
    "sections" : [ "Axon" ]
  }, {
    "name" : "all",
    "sections" : [ "Soma", "Axon" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "all",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-45.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "12000.0"
  } ],
  "channelDensity" : [ {
    "id" : "Leak_all",
    "ionChannel" : "Leak",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "2.0E-5",
    "erev" : "-50.0"
  }, {
    "id" : "k_slow_all",
    "ionChannel" : "k_slow",
    "ion" : "k",
    "group" : "all",
    "condDens" : "0.0019999999",
    "erev" : "-60.0"
  }, {
    "id" : "k_fast_all",
    "ionChannel" : "k_fast",
    "ion" : "k",
    "group" : "all",
    "condDens" : "2.0E-4",
    "erev" : "-60.0"
  }, {
    "id" : "ca_boyle_all",
    "ionChannel" : "ca_boyle",
    "ion" : "ca",
    "group" : "all",
    "condDens" : "0.0019999999",
    "erev" : "40.0"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaPool",
    "group" : "all",
    "initialConcentration" : "0.0",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate SMBVL

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=all, sections=[Soma, Axon]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -45.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: all, with concentration model: CaPool
    forsec all {
        cai = 0.0  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( 0.425, -263.45, 33.05, 2.7427175 ) }
    Soma { pt3dadd( 0.425, -260.70728249999996, 33.05, 2.7427175 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( 0.425, -263.45, 33.05, 0.39370042 ) }
    Axon { pt3dadd( 0.425, -263.425, 33.05, 0.39370042 ) }
    Axon { pt3dadd( 0.2, -264.0, 32.75, 0.41231057 ) }
    Axon { pt3dadd( -0.45, -264.775, 32.65, 0.42720017 ) }
    Axon { pt3dadd( -0.95, -266.19998, 32.975, 0.4387482 ) }
    Axon { pt3dadd( -0.75, -269.55, 34.95, 0.4358899 ) }
    Axon { pt3dadd( -0.45, -272.8, 37.024998, 0.39051247 ) }
    Axon { pt3dadd( 0.3, -273.15, 37.775, 0.39051247 ) }
    Axon { pt3dadd( 2.8999999, -273.42502, 39.825, 0.43011624 ) }
    Axon { pt3dadd( 4.475, -273.775, 42.449997, 0.44158804 ) }
    Axon { pt3dadd( 4.95, -274.225, 45.5, 0.39051247 ) }
    Axon { pt3dadd( 4.975, -274.2, 45.824997, 0.47434163 ) }
    Axon { pt3dadd( 4.5499997, -274.2, 46.05, 0.37416574 ) }
    Axon { pt3dadd( 4.225, -274.2, 45.899998, 0.32015622 ) }
    Axon { pt3dadd( 3.85, -274.2, 45.5, 0.36055514 ) }
    Axon { pt3dadd( 3.425, -273.775, 42.85, 0.36742347 ) }
    Axon { pt3dadd( 1.8750001, -273.42502, 40.225, 0.4555217 ) }
    Axon { pt3dadd( -0.4, -273.15, 38.525, 0.4609772 ) }
    Axon { pt3dadd( -1.25, -273.1, 37.125, 0.39051247 ) }
    Axon { pt3dadd( -1.3000001, -272.05, 35.9, 0.3 ) }
    Axon { pt3dadd( -1.3000001, -266.05002, 32.300003, 0.3 ) }
    Axon { pt3dadd( -0.4, -264.1, 31.8, 0.28284273 ) }
    Axon { pt3dadd( 2.1, -259.92502, 26.699999, 0.3774917 ) }
    Axon { pt3dadd( 5.15, -250.77501, 21.05, 0.40311286 ) }
    Axon { pt3dadd( 10.5, -241.5, 15.6, 0.34641016 ) }
    Axon { pt3dadd( 11.0, -228.04999, 6.3, 0.3 ) }
    Axon { pt3dadd( 12.4, -213.925, -2.55, 0.3640055 ) }
    Axon { pt3dadd( 13.400001, -196.775, -14.1, 0.28722814 ) }
    Axon { pt3dadd( 13.349999, -165.3, -35.550003, 0.31622776 ) }
    Axon { pt3dadd( 13.05, -133.75, -52.074997, 0.35000002 ) }
    Axon { pt3dadd( 13.349999, -115.925, -57.9, 0.26925823 ) }
    Axon { pt3dadd( 13.375001, -100.125, -61.25, 0.39370042 ) }
    Axon { pt3dadd( 13.150001, -85.025, -63.550003, 0.35000002 ) }
    Axon { pt3dadd( 14.4, -50.6, -63.7, 0.28284273 ) }
    Axon { pt3dadd( 14.200001, -38.550003, -60.2, 0.3 ) }
    Axon { pt3dadd( 14.475, -0.35000002, -48.0, 0.41533118 ) }
    Axon { pt3dadd( 15.000001, 33.45, -30.199999, 0.3 ) }
    Axon { pt3dadd( 15.075, 34.6, -29.624998, 0.21213202 ) }
    Axon { pt3dadd( 17.85, 37.65, -25.475002, 0.35000002 ) }
    Axon { pt3dadd( 20.25, 39.95, -21.775, 0.35000002 ) }
    Axon { pt3dadd( 22.5, 42.699997, -16.975, 0.32015622 ) }
    Axon { pt3dadd( 23.925001, 44.7, -12.8, 0.32015622 ) }
    Axon { pt3dadd( 23.375, 46.9, -8.474999, 0.40620193 ) }
    Axon { pt3dadd( 23.3, 47.850002, -7.9000006, 0.3 ) }
    Axon { pt3dadd( 21.8, 83.05, 12.0, 0.3 ) }
    Axon { pt3dadd( 21.6, 87.65, 14.599999, 0.3 ) }
    Axon { pt3dadd( 21.6, 93.75, 15.6, 0.3 ) }
    Axon { pt3dadd( 21.6, 121.5, 20.0, 0.28284273 ) }
    Axon { pt3dadd( 21.65, 171.0, 17.5, 0.36055514 ) }
    Axon { pt3dadd( 21.9, 224.49998, 1.05, 0.36055514 ) }
    Axon { pt3dadd( 20.1, 252.80002, -6.8999996, 0.28284273 ) }
    Axon { pt3dadd( 16.8, 289.7, -12.9, 0.28284273 ) }
    Axon { pt3dadd( 15.5, 320.025, -15.4, 0.28722814 ) }
    Axon { pt3dadd( 14.25, 353.0, -12.3, 0.36055514 ) }
    Axon { pt3dadd( 9.6, 387.45, -0.95, 0.24494897 ) }
    Axon { pt3dadd( 8.1, 396.525, 3.8, 0.3774917 ) }
    Axon { pt3dadd( 7.9000006, 397.225, 4.3, 0.32015622 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=all, sections=[Soma, Axon]}
    all = new SectionList()
    Soma all.append()
    Axon all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec all cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 12000.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert Leak
        gmax_Leak = 2.0E-5  // units: S cm-2
        e_Leak = -50.0  // units: mV
    }
    forsec all {
        insert k_slow
        gmax_k_slow = 0.0019999999  // units: S cm-2
        ek = -60.0  // units: mV
    }
    forsec all {
        insert k_fast
        gmax_k_fast = 2.0E-4  // units: S cm-2
        ek = -60.0  // units: mV
    }
    forsec all {
        insert ca_boyle
        gmax_ca_boyle = 0.0019999999  // units: S cm-2
        eca = 40.0  // units: mV
    }

    // Concentration models for species
    // Ion: ca on group: all, with concentration model: CaPool
    forsec all {
        insert CaPool
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate SMBVL


