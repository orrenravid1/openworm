// Cell: RIVL
/*
{
  "id" : "RIVL",
  "sections" : [ {
    "name" : "Soma",
    "id" : "Soma",
    "points3d" : [ "4.5, -265.30002, 50.35, 2.823119", "4.5, -262.476901, 50.35, 2.823119" ],
    "comments" : "Section in NeuroML is spherical, so using cylindrical section along Y axis for NEURON\n"
  }, {
    "name" : "Axon",
    "id" : "Axon",
    "points3d" : [ "4.5, -265.30002, 50.35, 0.50990194", "4.5, -265.35, 50.35, 0.50990194", "4.1499996, -266.85, 49.85, 0.65574384", "2.5, -269.8, 49.5, 0.56568545", "2.525, -273.9, 50.950005, 0.57662815", "2.55, -274.825, 51.275, 0.57879186", "0.55, -275.05, 52.850002, 0.591608", "-2.2, -275.25, 53.350002, 0.5830952", "-4.9, -275.2, 52.8, 0.48989794", "-7.225, -275.1, 51.024998, 0.65192026", "-8.775001, -274.7, 48.575, 0.5338539", "-9.224999, -274.3, 45.649998, 0.6103278", "-8.75, -273.8, 42.375, 0.559017", "-7.2, -273.5, 39.875, 0.63442886", "-4.95, -273.30002, 38.2, 0.5744563", "-2.8000002, -273.2, 37.7, 0.56568545" ],
    "parent" : "Soma",
    "fractionAlong" : 1.0
  }, {
    "name" : "Neurite2",
    "id" : "Neurite2",
    "points3d" : [ "-2.8000002, -273.2, 37.7, 0.56568545", "-2.6499999, -273.25, 37.9, 0.42426404", "-2.8000002, -273.30002, 38.325, 0.45", "-3.85, -273.5, 38.7, 0.45825756", "-5.4, -273.475, 39.5, 0.45", "-6.525, -273.6, 40.575, 0.47434163", "-7.25, -273.6, 41.55, 0.50990194" ],
    "parent" : "Axon",
    "fractionAlong" : 1.0
  }, {
    "name" : "Neurite3",
    "id" : "Neurite3",
    "points3d" : [ "-2.8000002, -273.2, 37.7, 0.56568545", "-2.525, -273.25, 37.7, 0.5024938" ],
    "parent" : "Axon",
    "fractionAlong" : 1.0
  }, {
    "name" : "Neurite4",
    "id" : "Neurite4",
    "points3d" : [ "-2.525, -273.25, 37.7, 0.5024938", "-2.4, -273.2, 37.475, 0.45", "-2.4, -273.0, 36.199997, 0.4472136" ],
    "parent" : "Neurite3",
    "fractionAlong" : 1.0
  }, {
    "name" : "Neurite5",
    "id" : "Neurite5",
    "points3d" : [ "-2.525, -273.25, 37.7, 0.5024938", "-2.375, -273.30002, 37.875, 0.47434163", "-2.325, -273.5, 39.05, 0.5408327" ],
    "parent" : "Neurite3",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma_group",
    "groups" : [ ],
    "sections" : [ "Soma" ]
  }, {
    "name" : "axon_group",
    "groups" : [ ],
    "sections" : [ "Axon" ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ ],
    "sections" : [ "Neurite2", "Neurite3", "Neurite4", "Neurite5" ]
  }, {
    "name" : "all",
    "sections" : [ "Soma", "Axon", "Neurite2", "Neurite3", "Neurite4", "Neurite5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "all",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-45.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "12000.0"
  } ],
  "channelDensity" : [ {
    "id" : "Leak_all",
    "ionChannel" : "Leak",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "2.0E-5",
    "erev" : "-50.0"
  }, {
    "id" : "k_slow_all",
    "ionChannel" : "k_slow",
    "ion" : "k",
    "group" : "all",
    "condDens" : "0.0019999999",
    "erev" : "-60.0"
  }, {
    "id" : "k_fast_all",
    "ionChannel" : "k_fast",
    "ion" : "k",
    "group" : "all",
    "condDens" : "2.0E-4",
    "erev" : "-60.0"
  }, {
    "id" : "ca_boyle_all",
    "ionChannel" : "ca_boyle",
    "ion" : "ca",
    "group" : "all",
    "condDens" : "0.0019999999",
    "erev" : "40.0"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaPool",
    "group" : "all",
    "initialConcentration" : "0.0",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate RIVL

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Neurite2, id: Neurite2, parent: Axon
create Neurite2
public Neurite2
// Section: Neurite3, id: Neurite3, parent: Axon
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Neurite3
create Neurite4
public Neurite4
// Section: Neurite5, id: Neurite5, parent: Neurite3
create Neurite5
public Neurite5

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Neurite2, Neurite3, Neurite4, Neurite5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -45.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: all, with concentration model: CaPool
    forsec all {
        cai = 0.0  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Neurite2(0), Axon(1.0)
    connect Neurite3(0), Axon(1.0)
    connect Neurite4(0), Neurite3(1.0)
    connect Neurite5(0), Neurite3(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( 4.5, -265.30002, 50.35, 2.823119 ) }
    Soma { pt3dadd( 4.5, -262.476901, 50.35, 2.823119 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( 4.5, -265.30002, 50.35, 0.50990194 ) }
    Axon { pt3dadd( 4.5, -265.35, 50.35, 0.50990194 ) }
    Axon { pt3dadd( 4.1499996, -266.85, 49.85, 0.65574384 ) }
    Axon { pt3dadd( 2.5, -269.8, 49.5, 0.56568545 ) }
    Axon { pt3dadd( 2.525, -273.9, 50.950005, 0.57662815 ) }
    Axon { pt3dadd( 2.55, -274.825, 51.275, 0.57879186 ) }
    Axon { pt3dadd( 0.55, -275.05, 52.850002, 0.591608 ) }
    Axon { pt3dadd( -2.2, -275.25, 53.350002, 0.5830952 ) }
    Axon { pt3dadd( -4.9, -275.2, 52.8, 0.48989794 ) }
    Axon { pt3dadd( -7.225, -275.1, 51.024998, 0.65192026 ) }
    Axon { pt3dadd( -8.775001, -274.7, 48.575, 0.5338539 ) }
    Axon { pt3dadd( -9.224999, -274.3, 45.649998, 0.6103278 ) }
    Axon { pt3dadd( -8.75, -273.8, 42.375, 0.559017 ) }
    Axon { pt3dadd( -7.2, -273.5, 39.875, 0.63442886 ) }
    Axon { pt3dadd( -4.95, -273.30002, 38.2, 0.5744563 ) }
    Axon { pt3dadd( -2.8000002, -273.2, 37.7, 0.56568545 ) }
    // Section: Neurite2, id: Neurite2, parent: Axon (entry count 18/100)
    Neurite2 { pt3dclear() }
    Neurite2 { pt3dadd( -2.8000002, -273.2, 37.7, 0.56568545 ) }
    Neurite2 { pt3dadd( -2.6499999, -273.25, 37.9, 0.42426404 ) }
    Neurite2 { pt3dadd( -2.8000002, -273.30002, 38.325, 0.45 ) }
    Neurite2 { pt3dadd( -3.85, -273.5, 38.7, 0.45825756 ) }
    Neurite2 { pt3dadd( -5.4, -273.475, 39.5, 0.45 ) }
    Neurite2 { pt3dadd( -6.525, -273.6, 40.575, 0.47434163 ) }
    Neurite2 { pt3dadd( -7.25, -273.6, 41.55, 0.50990194 ) }
    // Section: Neurite3, id: Neurite3, parent: Axon (entry count 25/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( -2.8000002, -273.2, 37.7, 0.56568545 ) }
    Neurite3 { pt3dadd( -2.525, -273.25, 37.7, 0.5024938 ) }
    // Section: Neurite4, id: Neurite4, parent: Neurite3 (entry count 27/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( -2.525, -273.25, 37.7, 0.5024938 ) }
    Neurite4 { pt3dadd( -2.4, -273.2, 37.475, 0.45 ) }
    Neurite4 { pt3dadd( -2.4, -273.0, 36.199997, 0.4472136 ) }
    // Section: Neurite5, id: Neurite5, parent: Neurite3 (entry count 30/100)
    Neurite5 { pt3dclear() }
    Neurite5 { pt3dadd( -2.525, -273.25, 37.7, 0.5024938 ) }
    Neurite5 { pt3dadd( -2.375, -273.30002, 37.875, 0.47434163 ) }
    Neurite5 { pt3dadd( -2.325, -273.5, 39.05, 0.5408327 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Neurite2, Neurite3, Neurite4, Neurite5]}
    dendrite_group = new SectionList()
    Neurite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()
    Neurite5 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Neurite2, Neurite3, Neurite4, Neurite5]}
    all = new SectionList()
    Soma all.append()
    Axon all.append()
    Neurite2 all.append()
    Neurite3 all.append()
    Neurite4 all.append()
    Neurite5 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec all cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 12000.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert Leak
        gmax_Leak = 2.0E-5  // units: S cm-2
        e_Leak = -50.0  // units: mV
    }
    forsec all {
        insert k_slow
        gmax_k_slow = 0.0019999999  // units: S cm-2
        ek = -60.0  // units: mV
    }
    forsec all {
        insert k_fast
        gmax_k_fast = 2.0E-4  // units: S cm-2
        ek = -60.0  // units: mV
    }
    forsec all {
        insert ca_boyle
        gmax_ca_boyle = 0.0019999999  // units: S cm-2
        eca = 40.0  // units: mV
    }

    // Concentration models for species
    // Ion: ca on group: all, with concentration model: CaPool
    forsec all {
        insert CaPool
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate RIVL


