// Cell: ADER
/*
{
  "id" : "ADER",
  "sections" : [ {
    "name" : "Soma",
    "id" : "Soma",
    "points3d" : [ "-15.299999, -242.375, 32.45, 2.823119", "-15.299999, -239.551881, 32.45, 2.823119" ],
    "comments" : "Section in NeuroML is spherical, so using cylindrical section along Y axis for NEURON\n"
  }, {
    "name" : "Axon",
    "id" : "Axon",
    "points3d" : [ "-15.299999, -242.375, 32.45, 0.6", "-15.299999, -243.3, 32.8, 0.6", "-15.35, -245.54999, 33.75, 0.4358899", "-15.000001, -250.85, 36.25, 0.50990194", "-12.15, -254.55, 37.65, 0.4358899", "-8.25, -259.225, 39.35, 0.45", "-8.150001, -263.15, 40.75, 0.4358899" ],
    "parent" : "Soma",
    "fractionAlong" : 1.0
  }, {
    "name" : "Dendrite2",
    "id" : "Dendrite2",
    "points3d" : [ "-15.299999, -242.375, 32.45, 0.5744563", "-15.299999, -241.45, 32.100002, 0.5744563", "-15.35, -241.1, 31.900002, 0.41231057", "-15.35, -240.40001, 29.800001, 0.5", "-12.475, -240.35, 25.400002, 0.39051247", "-7.625, -241.05, 18.35, 0.4924429", "-3.475, -242.3, 15.299999, 0.45", "-2.95, -242.95001, 15.299999, 0.50990194", "-2.85, -243.95001, 14.775001, 0.55", "-2.85, -247.90001, 17.35, 0.42426404", "-2.35, -266.8, 25.150002, 0.46904156", "-2.35, -269.9, 29.1, 0.41231057", "-2.35, -270.8, 30.050001, 0.46904156" ],
    "parent" : "Soma",
    "fractionAlong" : 1.0
  }, {
    "name" : "Neurite3",
    "id" : "Neurite3",
    "points3d" : [ "-8.150001, -263.15, 40.75, 0.4358899", "-8.150001, -263.275, 41.0, 0.5024938", "-8.2, -263.2, 41.125, 0.3774917", "-8.2, -261.625, 41.0, 0.32015622", "-8.25, -259.34998, 40.375, 0.20615529", "-10.75, -256.75, 39.399998, 0.24494897", "-15.25, -252.4, 37.9, 0.3", "-19.425001, -250.3, 37.2, 0.28722814", "-20.3, -250.15, 37.2, 0.2236068", "-21.075, -250.09999, 37.1, 0.32015622" ],
    "parent" : "Axon",
    "fractionAlong" : 1.0
  }, {
    "name" : "Neurite4",
    "id" : "Neurite4",
    "points3d" : [ "-8.150001, -263.15, 40.75, 0.4358899", "-8.150001, -263.52502, 40.95, 0.42720017", "-8.150001, -265.925, 42.15, 0.4924429", "-8.150001, -276.1, 48.649998, 0.42426404", "-8.150001, -278.025, 49.0, 0.5024938", "-8.150001, -279.925, 48.25, 0.42720017" ],
    "parent" : "Axon",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma_group",
    "groups" : [ ],
    "sections" : [ "Soma" ]
  }, {
    "name" : "axon_group",
    "groups" : [ ],
    "sections" : [ "Axon" ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ ],
    "sections" : [ "Dendrite2", "Neurite3", "Neurite4" ]
  }, {
    "name" : "all",
    "sections" : [ "Soma", "Axon", "Dendrite2", "Neurite3", "Neurite4" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "all",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-45.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "12000.0"
  } ],
  "channelDensity" : [ {
    "id" : "Leak_all",
    "ionChannel" : "Leak",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "2.0E-5",
    "erev" : "-50.0"
  }, {
    "id" : "k_slow_all",
    "ionChannel" : "k_slow",
    "ion" : "k",
    "group" : "all",
    "condDens" : "0.0019999999",
    "erev" : "-60.0"
  }, {
    "id" : "k_fast_all",
    "ionChannel" : "k_fast",
    "ion" : "k",
    "group" : "all",
    "condDens" : "2.0E-4",
    "erev" : "-60.0"
  }, {
    "id" : "ca_boyle_all",
    "ionChannel" : "ca_boyle",
    "ion" : "ca",
    "group" : "all",
    "condDens" : "0.0019999999",
    "erev" : "40.0"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaPool",
    "group" : "all",
    "initialConcentration" : "0.0",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate ADER

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: Soma, id: Soma, parent: $s.parent
create Soma
public Soma
// Section: Axon, id: Axon, parent: Soma
create Axon
public Axon
// Section: Dendrite2, id: Dendrite2, parent: Soma
create Dendrite2
public Dendrite2
// Section: Neurite3, id: Neurite3, parent: Axon
create Neurite3
public Neurite3
// Section: Neurite4, id: Neurite4, parent: Axon
create Neurite4
public Neurite4

// Group: {name=soma_group, groups=[], sections=[Soma]}
objref soma_group
// Group: {name=axon_group, groups=[], sections=[Axon]}
objref axon_group
// Group: {name=dendrite_group, groups=[], sections=[Dendrite2, Neurite3, Neurite4]}
objref dendrite_group
// Group: {name=all, sections=[Soma, Axon, Dendrite2, Neurite3, Neurite4]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -45.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: all, with concentration model: CaPool
    forsec all {
        cai = 0.0  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect Axon(0), Soma(1.0)
    connect Dendrite2(0), Soma(1.0)
    connect Neurite3(0), Axon(1.0)
    connect Neurite4(0), Axon(1.0)

}


proc basic_shape() {

    // Section: Soma, id: Soma, parent: $s.parent (entry count 0/100)
    Soma { pt3dclear() }
    Soma { pt3dadd( -15.299999, -242.375, 32.45, 2.823119 ) }
    Soma { pt3dadd( -15.299999, -239.551881, 32.45, 2.823119 ) }
    // Section: Axon, id: Axon, parent: Soma (entry count 2/100)
    Axon { pt3dclear() }
    Axon { pt3dadd( -15.299999, -242.375, 32.45, 0.6 ) }
    Axon { pt3dadd( -15.299999, -243.3, 32.8, 0.6 ) }
    Axon { pt3dadd( -15.35, -245.54999, 33.75, 0.4358899 ) }
    Axon { pt3dadd( -15.000001, -250.85, 36.25, 0.50990194 ) }
    Axon { pt3dadd( -12.15, -254.55, 37.65, 0.4358899 ) }
    Axon { pt3dadd( -8.25, -259.225, 39.35, 0.45 ) }
    Axon { pt3dadd( -8.150001, -263.15, 40.75, 0.4358899 ) }
    // Section: Dendrite2, id: Dendrite2, parent: Soma (entry count 9/100)
    Dendrite2 { pt3dclear() }
    Dendrite2 { pt3dadd( -15.299999, -242.375, 32.45, 0.5744563 ) }
    Dendrite2 { pt3dadd( -15.299999, -241.45, 32.100002, 0.5744563 ) }
    Dendrite2 { pt3dadd( -15.35, -241.1, 31.900002, 0.41231057 ) }
    Dendrite2 { pt3dadd( -15.35, -240.40001, 29.800001, 0.5 ) }
    Dendrite2 { pt3dadd( -12.475, -240.35, 25.400002, 0.39051247 ) }
    Dendrite2 { pt3dadd( -7.625, -241.05, 18.35, 0.4924429 ) }
    Dendrite2 { pt3dadd( -3.475, -242.3, 15.299999, 0.45 ) }
    Dendrite2 { pt3dadd( -2.95, -242.95001, 15.299999, 0.50990194 ) }
    Dendrite2 { pt3dadd( -2.85, -243.95001, 14.775001, 0.55 ) }
    Dendrite2 { pt3dadd( -2.85, -247.90001, 17.35, 0.42426404 ) }
    Dendrite2 { pt3dadd( -2.35, -266.8, 25.150002, 0.46904156 ) }
    Dendrite2 { pt3dadd( -2.35, -269.9, 29.1, 0.41231057 ) }
    Dendrite2 { pt3dadd( -2.35, -270.8, 30.050001, 0.46904156 ) }
    // Section: Neurite3, id: Neurite3, parent: Axon (entry count 22/100)
    Neurite3 { pt3dclear() }
    Neurite3 { pt3dadd( -8.150001, -263.15, 40.75, 0.4358899 ) }
    Neurite3 { pt3dadd( -8.150001, -263.275, 41.0, 0.5024938 ) }
    Neurite3 { pt3dadd( -8.2, -263.2, 41.125, 0.3774917 ) }
    Neurite3 { pt3dadd( -8.2, -261.625, 41.0, 0.32015622 ) }
    Neurite3 { pt3dadd( -8.25, -259.34998, 40.375, 0.20615529 ) }
    Neurite3 { pt3dadd( -10.75, -256.75, 39.399998, 0.24494897 ) }
    Neurite3 { pt3dadd( -15.25, -252.4, 37.9, 0.3 ) }
    Neurite3 { pt3dadd( -19.425001, -250.3, 37.2, 0.28722814 ) }
    Neurite3 { pt3dadd( -20.3, -250.15, 37.2, 0.2236068 ) }
    Neurite3 { pt3dadd( -21.075, -250.09999, 37.1, 0.32015622 ) }
    // Section: Neurite4, id: Neurite4, parent: Axon (entry count 32/100)
    Neurite4 { pt3dclear() }
    Neurite4 { pt3dadd( -8.150001, -263.15, 40.75, 0.4358899 ) }
    Neurite4 { pt3dadd( -8.150001, -263.52502, 40.95, 0.42720017 ) }
    Neurite4 { pt3dadd( -8.150001, -265.925, 42.15, 0.4924429 ) }
    Neurite4 { pt3dadd( -8.150001, -276.1, 48.649998, 0.42426404 ) }
    Neurite4 { pt3dadd( -8.150001, -278.025, 49.0, 0.5024938 ) }
    Neurite4 { pt3dadd( -8.150001, -279.925, 48.25, 0.42720017 ) }

}


proc subsets() { local i

    // Group: {name=soma_group, groups=[], sections=[Soma]}
    soma_group = new SectionList()
    Soma soma_group.append()

    // Group: {name=axon_group, groups=[], sections=[Axon]}
    axon_group = new SectionList()
    Axon axon_group.append()

    // Group: {name=dendrite_group, groups=[], sections=[Dendrite2, Neurite3, Neurite4]}
    dendrite_group = new SectionList()
    Dendrite2 dendrite_group.append()
    Neurite3 dendrite_group.append()
    Neurite4 dendrite_group.append()

    // Group: {name=all, sections=[Soma, Axon, Dendrite2, Neurite3, Neurite4]}
    all = new SectionList()
    Soma all.append()
    Axon all.append()
    Dendrite2 all.append()
    Neurite3 all.append()
    Neurite4 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec all cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 12000.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert Leak
        gmax_Leak = 2.0E-5  // units: S cm-2
        e_Leak = -50.0  // units: mV
    }
    forsec all {
        insert k_slow
        gmax_k_slow = 0.0019999999  // units: S cm-2
        ek = -60.0  // units: mV
    }
    forsec all {
        insert k_fast
        gmax_k_fast = 2.0E-4  // units: S cm-2
        ek = -60.0  // units: mV
    }
    forsec all {
        insert ca_boyle
        gmax_ca_boyle = 0.0019999999  // units: S cm-2
        eca = 40.0  // units: mV
    }

    // Concentration models for species
    // Ion: ca on group: all, with concentration model: CaPool
    forsec all {
        insert CaPool
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate ADER


