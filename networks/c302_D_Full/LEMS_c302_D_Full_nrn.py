'''
Neuron simulator export for:

Components:
    Leak (Type: ionChannelPassive:  conductance=1.0E-11 (SI conductance))
    k_fast (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    k_slow (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    ca_boyle (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    ca_simple (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    ADAL (Type: cell)
    ADAR (Type: cell)
    ADEL (Type: cell)
    ADER (Type: cell)
    ADFL (Type: cell)
    ADFR (Type: cell)
    ADLL (Type: cell)
    ADLR (Type: cell)
    AFDL (Type: cell)
    AFDR (Type: cell)
    AIAL (Type: cell)
    AIAR (Type: cell)
    AIBL (Type: cell)
    AIBR (Type: cell)
    AIML (Type: cell)
    AIMR (Type: cell)
    AINL (Type: cell)
    AINR (Type: cell)
    AIYL (Type: cell)
    AIYR (Type: cell)
    AIZL (Type: cell)
    AIZR (Type: cell)
    ALA (Type: cell)
    ALML (Type: cell)
    ALMR (Type: cell)
    ALNL (Type: cell)
    ALNR (Type: cell)
    AQR (Type: cell)
    AS1 (Type: cell)
    AS10 (Type: cell)
    AS11 (Type: cell)
    AS2 (Type: cell)
    AS3 (Type: cell)
    AS4 (Type: cell)
    AS5 (Type: cell)
    AS6 (Type: cell)
    AS7 (Type: cell)
    AS8 (Type: cell)
    AS9 (Type: cell)
    ASEL (Type: cell)
    ASER (Type: cell)
    ASGL (Type: cell)
    ASGR (Type: cell)
    ASHL (Type: cell)
    ASHR (Type: cell)
    ASIL (Type: cell)
    ASIR (Type: cell)
    ASJL (Type: cell)
    ASJR (Type: cell)
    ASKL (Type: cell)
    ASKR (Type: cell)
    AUAL (Type: cell)
    AUAR (Type: cell)
    AVAL (Type: cell)
    AVAR (Type: cell)
    AVBL (Type: cell)
    AVBR (Type: cell)
    AVDL (Type: cell)
    AVDR (Type: cell)
    AVEL (Type: cell)
    AVER (Type: cell)
    AVFL (Type: cell)
    AVFR (Type: cell)
    AVG (Type: cell)
    AVHL (Type: cell)
    AVHR (Type: cell)
    AVJL (Type: cell)
    AVJR (Type: cell)
    AVKL (Type: cell)
    AVKR (Type: cell)
    AVL (Type: cell)
    AVM (Type: cell)
    AWAL (Type: cell)
    AWAR (Type: cell)
    AWBL (Type: cell)
    AWBR (Type: cell)
    AWCL (Type: cell)
    AWCR (Type: cell)
    BAGL (Type: cell)
    BAGR (Type: cell)
    BDUL (Type: cell)
    BDUR (Type: cell)
    CANL (Type: cell)
    CANR (Type: cell)
    CEPDL (Type: cell)
    CEPDR (Type: cell)
    CEPVL (Type: cell)
    CEPVR (Type: cell)
    DA1 (Type: cell)
    DA2 (Type: cell)
    DA3 (Type: cell)
    DA4 (Type: cell)
    DA5 (Type: cell)
    DA6 (Type: cell)
    DA7 (Type: cell)
    DA8 (Type: cell)
    DA9 (Type: cell)
    DB1 (Type: cell)
    DB2 (Type: cell)
    DB3 (Type: cell)
    DB4 (Type: cell)
    DB5 (Type: cell)
    DB6 (Type: cell)
    DB7 (Type: cell)
    DD1 (Type: cell)
    DD2 (Type: cell)
    DD3 (Type: cell)
    DD4 (Type: cell)
    DD5 (Type: cell)
    DD6 (Type: cell)
    DVA (Type: cell)
    DVB (Type: cell)
    DVC (Type: cell)
    FLPL (Type: cell)
    FLPR (Type: cell)
    HSNL (Type: cell)
    HSNR (Type: cell)
    I1L (Type: cell)
    I1R (Type: cell)
    I2L (Type: cell)
    I2R (Type: cell)
    I3 (Type: cell)
    I4 (Type: cell)
    I5 (Type: cell)
    I6 (Type: cell)
    IL1DL (Type: cell)
    IL1DR (Type: cell)
    IL1L (Type: cell)
    IL1R (Type: cell)
    IL1VL (Type: cell)
    IL1VR (Type: cell)
    IL2DL (Type: cell)
    IL2DR (Type: cell)
    IL2L (Type: cell)
    IL2R (Type: cell)
    IL2VL (Type: cell)
    IL2VR (Type: cell)
    LUAL (Type: cell)
    LUAR (Type: cell)
    M1 (Type: cell)
    M2L (Type: cell)
    M2R (Type: cell)
    M3L (Type: cell)
    M3R (Type: cell)
    M4 (Type: cell)
    M5 (Type: cell)
    MCL (Type: cell)
    MCR (Type: cell)
    MI (Type: cell)
    NSML (Type: cell)
    NSMR (Type: cell)
    OLLL (Type: cell)
    OLLR (Type: cell)
    OLQDL (Type: cell)
    OLQDR (Type: cell)
    OLQVL (Type: cell)
    OLQVR (Type: cell)
    PDA (Type: cell)
    PDB (Type: cell)
    PDEL (Type: cell)
    PDER (Type: cell)
    PHAL (Type: cell)
    PHAR (Type: cell)
    PHBL (Type: cell)
    PHBR (Type: cell)
    PHCL (Type: cell)
    PHCR (Type: cell)
    PLML (Type: cell)
    PLMR (Type: cell)
    PLNL (Type: cell)
    PLNR (Type: cell)
    PQR (Type: cell)
    PVCL (Type: cell)
    PVCR (Type: cell)
    PVDL (Type: cell)
    PVDR (Type: cell)
    PVM (Type: cell)
    PVNL (Type: cell)
    PVNR (Type: cell)
    PVPL (Type: cell)
    PVPR (Type: cell)
    PVQL (Type: cell)
    PVQR (Type: cell)
    PVR (Type: cell)
    PVT (Type: cell)
    PVWL (Type: cell)
    PVWR (Type: cell)
    RIAL (Type: cell)
    RIAR (Type: cell)
    RIBL (Type: cell)
    RIBR (Type: cell)
    RICL (Type: cell)
    RICR (Type: cell)
    RID (Type: cell)
    RIFL (Type: cell)
    RIFR (Type: cell)
    RIGL (Type: cell)
    RIGR (Type: cell)
    RIH (Type: cell)
    RIML (Type: cell)
    RIMR (Type: cell)
    RIPL (Type: cell)
    RIPR (Type: cell)
    RIR (Type: cell)
    RIS (Type: cell)
    RIVL (Type: cell)
    RIVR (Type: cell)
    RMDDL (Type: cell)
    RMDDR (Type: cell)
    RMDL (Type: cell)
    RMDR (Type: cell)
    RMDVL (Type: cell)
    RMDVR (Type: cell)
    RMED (Type: cell)
    RMEL (Type: cell)
    RMER (Type: cell)
    RMEV (Type: cell)
    RMFL (Type: cell)
    RMFR (Type: cell)
    RMGL (Type: cell)
    RMGR (Type: cell)
    RMHL (Type: cell)
    RMHR (Type: cell)
    SAADL (Type: cell)
    SAADR (Type: cell)
    SAAVL (Type: cell)
    SAAVR (Type: cell)
    SABD (Type: cell)
    SABVL (Type: cell)
    SABVR (Type: cell)
    SDQL (Type: cell)
    SDQR (Type: cell)
    SIADL (Type: cell)
    SIADR (Type: cell)
    SIAVL (Type: cell)
    SIAVR (Type: cell)
    SIBDL (Type: cell)
    SIBDR (Type: cell)
    SIBVL (Type: cell)
    SIBVR (Type: cell)
    SMBDL (Type: cell)
    SMBDR (Type: cell)
    SMBVL (Type: cell)
    SMBVR (Type: cell)
    SMDDL (Type: cell)
    SMDDR (Type: cell)
    SMDVL (Type: cell)
    SMDVR (Type: cell)
    URADL (Type: cell)
    URADR (Type: cell)
    URAVL (Type: cell)
    URAVR (Type: cell)
    URBL (Type: cell)
    URBR (Type: cell)
    URXL (Type: cell)
    URXR (Type: cell)
    URYDL (Type: cell)
    URYDR (Type: cell)
    URYVL (Type: cell)
    URYVR (Type: cell)
    VA1 (Type: cell)
    VA10 (Type: cell)
    VA11 (Type: cell)
    VA12 (Type: cell)
    VA2 (Type: cell)
    VA3 (Type: cell)
    VA4 (Type: cell)
    VA5 (Type: cell)
    VA6 (Type: cell)
    VA7 (Type: cell)
    VA8 (Type: cell)
    VA9 (Type: cell)
    VB1 (Type: cell)
    VB10 (Type: cell)
    VB11 (Type: cell)
    VB2 (Type: cell)
    VB3 (Type: cell)
    VB4 (Type: cell)
    VB5 (Type: cell)
    VB6 (Type: cell)
    VB7 (Type: cell)
    VB8 (Type: cell)
    VB9 (Type: cell)
    VC1 (Type: cell)
    VC2 (Type: cell)
    VC3 (Type: cell)
    VC4 (Type: cell)
    VC5 (Type: cell)
    VC6 (Type: cell)
    VD1 (Type: cell)
    VD10 (Type: cell)
    VD11 (Type: cell)
    VD12 (Type: cell)
    VD13 (Type: cell)
    VD2 (Type: cell)
    VD3 (Type: cell)
    VD4 (Type: cell)
    VD5 (Type: cell)
    VD6 (Type: cell)
    VD7 (Type: cell)
    VD8 (Type: cell)
    VD9 (Type: cell)
    null (Type: notes)
    CaPool (Type: fixedFactorConcentrationModel:  restingConc=0.0 (SI concentration) decayConstant=0.0115943 (SI time) rho=2.38919E-4 (SI rho_factor))
    neuron_to_neuron_exc_syn (Type: expTwoSynapse:  tauRise=0.001 (SI time) tauDecay=0.005 (SI time) peakTime=0.002011797390542625 (SI time) waveformFactor=1.8691859765265255 (dimensionless) gbase=1.0000000000000001E-11 (SI conductance) erev=0.0 (SI voltage))
    neuron_to_neuron_inh_syn (Type: expTwoSynapse:  tauRise=0.002 (SI time) tauDecay=0.04 (SI time) peakTime=0.0063068047864294555 (SI time) waveformFactor=1.232399909181873 (dimensionless) gbase=3.0000000000000004E-9 (SI conductance) erev=-0.06 (SI voltage))
    neuron_to_neuron_elec_syn (Type: gapJunction:  conductance=5.000000000000001E-13 (SI conductance))
    GenericMuscleCell (Type: cell)
    offset_current (Type: pulseGenerator:  delay=0.0 (SI time) duration=2.0 (SI time) amplitude=0.0 (SI current))
    c302_D_Full (Type: network)
    sim_c302_D_Full (Type: Simulation:  length=0.1 (SI time) step=1.0E-5 (SI time))


    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.11.0
         org.neuroml.model   v1.11.0
         jLEMS               v0.12.0

'''

import neuron

import time
import datetime
import sys

import hashlib
h = neuron.h
h.load_file("nrngui.hoc")

h("objref p")
h("p = new PythonObject()")

class NeuronSimulation():

    def __init__(self, tstop, dt=None, seed=123456789, abs_tol=None, rel_tol=None):

        print("\n    Starting simulation in NEURON of %sms generated from NeuroML2 model...\n"%tstop)

        self.setup_start = time.time()
        self.seed = seed
        self.abs_tol = abs_tol
        self.rel_tol = rel_tol
        self.randoms = []
        self.next_global_id = 0  # Used in Random123 classes for elements using random(), etc. 

        self.next_spiking_input_id = 0  # Used in Random123 classes for elements using random(), etc. 

        '''
        Adding simulation Component(id=sim_c302_D_Full type=Simulation) of network/component: c302_D_Full (Type: network)
        
        '''
        # ######################   Population: ADAL
        print("Population ADAL contains 1 instance(s) of component: ADAL of type: cell")

        print("Setting the default initial concentrations for ca (used in ADAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADAL.hoc")
        a_ADAL = []
        h("{ n_ADAL = 1 }")
        h("objectvar a_ADAL[n_ADAL]")
        for i in range(int(h.n_ADAL)):
            h("a_ADAL[%i] = new ADAL()"%i)
            h("access a_ADAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADAL() { for i = 0, n_ADAL-1 { a_ADAL[i].set_initial_v() } }")
        h("objref fih_ADAL")
        h('{fih_ADAL = new FInitializeHandler(0, "initialiseV_ADAL()")}')

        h("proc initialiseIons_ADAL() { for i = 0, n_ADAL-1 { a_ADAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADAL")
        h('{fih_ion_ADAL = new FInitializeHandler(1, "initialiseIons_ADAL()")}')

        # ######################   Population: ADAR
        print("Population ADAR contains 1 instance(s) of component: ADAR of type: cell")

        print("Setting the default initial concentrations for ca (used in ADAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADAR.hoc")
        a_ADAR = []
        h("{ n_ADAR = 1 }")
        h("objectvar a_ADAR[n_ADAR]")
        for i in range(int(h.n_ADAR)):
            h("a_ADAR[%i] = new ADAR()"%i)
            h("access a_ADAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADAR() { for i = 0, n_ADAR-1 { a_ADAR[i].set_initial_v() } }")
        h("objref fih_ADAR")
        h('{fih_ADAR = new FInitializeHandler(0, "initialiseV_ADAR()")}')

        h("proc initialiseIons_ADAR() { for i = 0, n_ADAR-1 { a_ADAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADAR")
        h('{fih_ion_ADAR = new FInitializeHandler(1, "initialiseIons_ADAR()")}')

        # ######################   Population: ADEL
        print("Population ADEL contains 1 instance(s) of component: ADEL of type: cell")

        print("Setting the default initial concentrations for ca (used in ADEL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADEL.hoc")
        a_ADEL = []
        h("{ n_ADEL = 1 }")
        h("objectvar a_ADEL[n_ADEL]")
        for i in range(int(h.n_ADEL)):
            h("a_ADEL[%i] = new ADEL()"%i)
            h("access a_ADEL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADEL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADEL() { for i = 0, n_ADEL-1 { a_ADEL[i].set_initial_v() } }")
        h("objref fih_ADEL")
        h('{fih_ADEL = new FInitializeHandler(0, "initialiseV_ADEL()")}')

        h("proc initialiseIons_ADEL() { for i = 0, n_ADEL-1 { a_ADEL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADEL")
        h('{fih_ion_ADEL = new FInitializeHandler(1, "initialiseIons_ADEL()")}')

        # ######################   Population: ADER
        print("Population ADER contains 1 instance(s) of component: ADER of type: cell")

        print("Setting the default initial concentrations for ca (used in ADER) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADER.hoc")
        a_ADER = []
        h("{ n_ADER = 1 }")
        h("objectvar a_ADER[n_ADER]")
        for i in range(int(h.n_ADER)):
            h("a_ADER[%i] = new ADER()"%i)
            h("access a_ADER[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADER[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADER() { for i = 0, n_ADER-1 { a_ADER[i].set_initial_v() } }")
        h("objref fih_ADER")
        h('{fih_ADER = new FInitializeHandler(0, "initialiseV_ADER()")}')

        h("proc initialiseIons_ADER() { for i = 0, n_ADER-1 { a_ADER[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADER")
        h('{fih_ion_ADER = new FInitializeHandler(1, "initialiseIons_ADER()")}')

        # ######################   Population: ADFL
        print("Population ADFL contains 1 instance(s) of component: ADFL of type: cell")

        print("Setting the default initial concentrations for ca (used in ADFL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADFL.hoc")
        a_ADFL = []
        h("{ n_ADFL = 1 }")
        h("objectvar a_ADFL[n_ADFL]")
        for i in range(int(h.n_ADFL)):
            h("a_ADFL[%i] = new ADFL()"%i)
            h("access a_ADFL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADFL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADFL() { for i = 0, n_ADFL-1 { a_ADFL[i].set_initial_v() } }")
        h("objref fih_ADFL")
        h('{fih_ADFL = new FInitializeHandler(0, "initialiseV_ADFL()")}')

        h("proc initialiseIons_ADFL() { for i = 0, n_ADFL-1 { a_ADFL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADFL")
        h('{fih_ion_ADFL = new FInitializeHandler(1, "initialiseIons_ADFL()")}')

        # ######################   Population: ADFR
        print("Population ADFR contains 1 instance(s) of component: ADFR of type: cell")

        print("Setting the default initial concentrations for ca (used in ADFR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADFR.hoc")
        a_ADFR = []
        h("{ n_ADFR = 1 }")
        h("objectvar a_ADFR[n_ADFR]")
        for i in range(int(h.n_ADFR)):
            h("a_ADFR[%i] = new ADFR()"%i)
            h("access a_ADFR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADFR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADFR() { for i = 0, n_ADFR-1 { a_ADFR[i].set_initial_v() } }")
        h("objref fih_ADFR")
        h('{fih_ADFR = new FInitializeHandler(0, "initialiseV_ADFR()")}')

        h("proc initialiseIons_ADFR() { for i = 0, n_ADFR-1 { a_ADFR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADFR")
        h('{fih_ion_ADFR = new FInitializeHandler(1, "initialiseIons_ADFR()")}')

        # ######################   Population: ADLL
        print("Population ADLL contains 1 instance(s) of component: ADLL of type: cell")

        print("Setting the default initial concentrations for ca (used in ADLL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADLL.hoc")
        a_ADLL = []
        h("{ n_ADLL = 1 }")
        h("objectvar a_ADLL[n_ADLL]")
        for i in range(int(h.n_ADLL)):
            h("a_ADLL[%i] = new ADLL()"%i)
            h("access a_ADLL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADLL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADLL() { for i = 0, n_ADLL-1 { a_ADLL[i].set_initial_v() } }")
        h("objref fih_ADLL")
        h('{fih_ADLL = new FInitializeHandler(0, "initialiseV_ADLL()")}')

        h("proc initialiseIons_ADLL() { for i = 0, n_ADLL-1 { a_ADLL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADLL")
        h('{fih_ion_ADLL = new FInitializeHandler(1, "initialiseIons_ADLL()")}')

        # ######################   Population: ADLR
        print("Population ADLR contains 1 instance(s) of component: ADLR of type: cell")

        print("Setting the default initial concentrations for ca (used in ADLR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ADLR.hoc")
        a_ADLR = []
        h("{ n_ADLR = 1 }")
        h("objectvar a_ADLR[n_ADLR]")
        for i in range(int(h.n_ADLR)):
            h("a_ADLR[%i] = new ADLR()"%i)
            h("access a_ADLR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ADLR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ADLR() { for i = 0, n_ADLR-1 { a_ADLR[i].set_initial_v() } }")
        h("objref fih_ADLR")
        h('{fih_ADLR = new FInitializeHandler(0, "initialiseV_ADLR()")}')

        h("proc initialiseIons_ADLR() { for i = 0, n_ADLR-1 { a_ADLR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ADLR")
        h('{fih_ion_ADLR = new FInitializeHandler(1, "initialiseIons_ADLR()")}')

        # ######################   Population: AFDL
        print("Population AFDL contains 1 instance(s) of component: AFDL of type: cell")

        print("Setting the default initial concentrations for ca (used in AFDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AFDL.hoc")
        a_AFDL = []
        h("{ n_AFDL = 1 }")
        h("objectvar a_AFDL[n_AFDL]")
        for i in range(int(h.n_AFDL)):
            h("a_AFDL[%i] = new AFDL()"%i)
            h("access a_AFDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AFDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AFDL() { for i = 0, n_AFDL-1 { a_AFDL[i].set_initial_v() } }")
        h("objref fih_AFDL")
        h('{fih_AFDL = new FInitializeHandler(0, "initialiseV_AFDL()")}')

        h("proc initialiseIons_AFDL() { for i = 0, n_AFDL-1 { a_AFDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AFDL")
        h('{fih_ion_AFDL = new FInitializeHandler(1, "initialiseIons_AFDL()")}')

        # ######################   Population: AFDR
        print("Population AFDR contains 1 instance(s) of component: AFDR of type: cell")

        print("Setting the default initial concentrations for ca (used in AFDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AFDR.hoc")
        a_AFDR = []
        h("{ n_AFDR = 1 }")
        h("objectvar a_AFDR[n_AFDR]")
        for i in range(int(h.n_AFDR)):
            h("a_AFDR[%i] = new AFDR()"%i)
            h("access a_AFDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AFDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AFDR() { for i = 0, n_AFDR-1 { a_AFDR[i].set_initial_v() } }")
        h("objref fih_AFDR")
        h('{fih_AFDR = new FInitializeHandler(0, "initialiseV_AFDR()")}')

        h("proc initialiseIons_AFDR() { for i = 0, n_AFDR-1 { a_AFDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AFDR")
        h('{fih_ion_AFDR = new FInitializeHandler(1, "initialiseIons_AFDR()")}')

        # ######################   Population: AIAL
        print("Population AIAL contains 1 instance(s) of component: AIAL of type: cell")

        print("Setting the default initial concentrations for ca (used in AIAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIAL.hoc")
        a_AIAL = []
        h("{ n_AIAL = 1 }")
        h("objectvar a_AIAL[n_AIAL]")
        for i in range(int(h.n_AIAL)):
            h("a_AIAL[%i] = new AIAL()"%i)
            h("access a_AIAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIAL() { for i = 0, n_AIAL-1 { a_AIAL[i].set_initial_v() } }")
        h("objref fih_AIAL")
        h('{fih_AIAL = new FInitializeHandler(0, "initialiseV_AIAL()")}')

        h("proc initialiseIons_AIAL() { for i = 0, n_AIAL-1 { a_AIAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIAL")
        h('{fih_ion_AIAL = new FInitializeHandler(1, "initialiseIons_AIAL()")}')

        # ######################   Population: AIAR
        print("Population AIAR contains 1 instance(s) of component: AIAR of type: cell")

        print("Setting the default initial concentrations for ca (used in AIAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIAR.hoc")
        a_AIAR = []
        h("{ n_AIAR = 1 }")
        h("objectvar a_AIAR[n_AIAR]")
        for i in range(int(h.n_AIAR)):
            h("a_AIAR[%i] = new AIAR()"%i)
            h("access a_AIAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIAR() { for i = 0, n_AIAR-1 { a_AIAR[i].set_initial_v() } }")
        h("objref fih_AIAR")
        h('{fih_AIAR = new FInitializeHandler(0, "initialiseV_AIAR()")}')

        h("proc initialiseIons_AIAR() { for i = 0, n_AIAR-1 { a_AIAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIAR")
        h('{fih_ion_AIAR = new FInitializeHandler(1, "initialiseIons_AIAR()")}')

        # ######################   Population: AIBL
        print("Population AIBL contains 1 instance(s) of component: AIBL of type: cell")

        print("Setting the default initial concentrations for ca (used in AIBL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIBL.hoc")
        a_AIBL = []
        h("{ n_AIBL = 1 }")
        h("objectvar a_AIBL[n_AIBL]")
        for i in range(int(h.n_AIBL)):
            h("a_AIBL[%i] = new AIBL()"%i)
            h("access a_AIBL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIBL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIBL() { for i = 0, n_AIBL-1 { a_AIBL[i].set_initial_v() } }")
        h("objref fih_AIBL")
        h('{fih_AIBL = new FInitializeHandler(0, "initialiseV_AIBL()")}')

        h("proc initialiseIons_AIBL() { for i = 0, n_AIBL-1 { a_AIBL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIBL")
        h('{fih_ion_AIBL = new FInitializeHandler(1, "initialiseIons_AIBL()")}')

        # ######################   Population: AIBR
        print("Population AIBR contains 1 instance(s) of component: AIBR of type: cell")

        print("Setting the default initial concentrations for ca (used in AIBR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIBR.hoc")
        a_AIBR = []
        h("{ n_AIBR = 1 }")
        h("objectvar a_AIBR[n_AIBR]")
        for i in range(int(h.n_AIBR)):
            h("a_AIBR[%i] = new AIBR()"%i)
            h("access a_AIBR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIBR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIBR() { for i = 0, n_AIBR-1 { a_AIBR[i].set_initial_v() } }")
        h("objref fih_AIBR")
        h('{fih_AIBR = new FInitializeHandler(0, "initialiseV_AIBR()")}')

        h("proc initialiseIons_AIBR() { for i = 0, n_AIBR-1 { a_AIBR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIBR")
        h('{fih_ion_AIBR = new FInitializeHandler(1, "initialiseIons_AIBR()")}')

        # ######################   Population: AIML
        print("Population AIML contains 1 instance(s) of component: AIML of type: cell")

        print("Setting the default initial concentrations for ca (used in AIML) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIML.hoc")
        a_AIML = []
        h("{ n_AIML = 1 }")
        h("objectvar a_AIML[n_AIML]")
        for i in range(int(h.n_AIML)):
            h("a_AIML[%i] = new AIML()"%i)
            h("access a_AIML[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIML[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIML() { for i = 0, n_AIML-1 { a_AIML[i].set_initial_v() } }")
        h("objref fih_AIML")
        h('{fih_AIML = new FInitializeHandler(0, "initialiseV_AIML()")}')

        h("proc initialiseIons_AIML() { for i = 0, n_AIML-1 { a_AIML[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIML")
        h('{fih_ion_AIML = new FInitializeHandler(1, "initialiseIons_AIML()")}')

        # ######################   Population: AIMR
        print("Population AIMR contains 1 instance(s) of component: AIMR of type: cell")

        print("Setting the default initial concentrations for ca (used in AIMR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIMR.hoc")
        a_AIMR = []
        h("{ n_AIMR = 1 }")
        h("objectvar a_AIMR[n_AIMR]")
        for i in range(int(h.n_AIMR)):
            h("a_AIMR[%i] = new AIMR()"%i)
            h("access a_AIMR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIMR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIMR() { for i = 0, n_AIMR-1 { a_AIMR[i].set_initial_v() } }")
        h("objref fih_AIMR")
        h('{fih_AIMR = new FInitializeHandler(0, "initialiseV_AIMR()")}')

        h("proc initialiseIons_AIMR() { for i = 0, n_AIMR-1 { a_AIMR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIMR")
        h('{fih_ion_AIMR = new FInitializeHandler(1, "initialiseIons_AIMR()")}')

        # ######################   Population: AINL
        print("Population AINL contains 1 instance(s) of component: AINL of type: cell")

        print("Setting the default initial concentrations for ca (used in AINL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AINL.hoc")
        a_AINL = []
        h("{ n_AINL = 1 }")
        h("objectvar a_AINL[n_AINL]")
        for i in range(int(h.n_AINL)):
            h("a_AINL[%i] = new AINL()"%i)
            h("access a_AINL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AINL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AINL() { for i = 0, n_AINL-1 { a_AINL[i].set_initial_v() } }")
        h("objref fih_AINL")
        h('{fih_AINL = new FInitializeHandler(0, "initialiseV_AINL()")}')

        h("proc initialiseIons_AINL() { for i = 0, n_AINL-1 { a_AINL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AINL")
        h('{fih_ion_AINL = new FInitializeHandler(1, "initialiseIons_AINL()")}')

        # ######################   Population: AINR
        print("Population AINR contains 1 instance(s) of component: AINR of type: cell")

        print("Setting the default initial concentrations for ca (used in AINR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AINR.hoc")
        a_AINR = []
        h("{ n_AINR = 1 }")
        h("objectvar a_AINR[n_AINR]")
        for i in range(int(h.n_AINR)):
            h("a_AINR[%i] = new AINR()"%i)
            h("access a_AINR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AINR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AINR() { for i = 0, n_AINR-1 { a_AINR[i].set_initial_v() } }")
        h("objref fih_AINR")
        h('{fih_AINR = new FInitializeHandler(0, "initialiseV_AINR()")}')

        h("proc initialiseIons_AINR() { for i = 0, n_AINR-1 { a_AINR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AINR")
        h('{fih_ion_AINR = new FInitializeHandler(1, "initialiseIons_AINR()")}')

        # ######################   Population: AIYL
        print("Population AIYL contains 1 instance(s) of component: AIYL of type: cell")

        print("Setting the default initial concentrations for ca (used in AIYL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIYL.hoc")
        a_AIYL = []
        h("{ n_AIYL = 1 }")
        h("objectvar a_AIYL[n_AIYL]")
        for i in range(int(h.n_AIYL)):
            h("a_AIYL[%i] = new AIYL()"%i)
            h("access a_AIYL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIYL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIYL() { for i = 0, n_AIYL-1 { a_AIYL[i].set_initial_v() } }")
        h("objref fih_AIYL")
        h('{fih_AIYL = new FInitializeHandler(0, "initialiseV_AIYL()")}')

        h("proc initialiseIons_AIYL() { for i = 0, n_AIYL-1 { a_AIYL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIYL")
        h('{fih_ion_AIYL = new FInitializeHandler(1, "initialiseIons_AIYL()")}')

        # ######################   Population: AIYR
        print("Population AIYR contains 1 instance(s) of component: AIYR of type: cell")

        print("Setting the default initial concentrations for ca (used in AIYR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIYR.hoc")
        a_AIYR = []
        h("{ n_AIYR = 1 }")
        h("objectvar a_AIYR[n_AIYR]")
        for i in range(int(h.n_AIYR)):
            h("a_AIYR[%i] = new AIYR()"%i)
            h("access a_AIYR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIYR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIYR() { for i = 0, n_AIYR-1 { a_AIYR[i].set_initial_v() } }")
        h("objref fih_AIYR")
        h('{fih_AIYR = new FInitializeHandler(0, "initialiseV_AIYR()")}')

        h("proc initialiseIons_AIYR() { for i = 0, n_AIYR-1 { a_AIYR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIYR")
        h('{fih_ion_AIYR = new FInitializeHandler(1, "initialiseIons_AIYR()")}')

        # ######################   Population: AIZL
        print("Population AIZL contains 1 instance(s) of component: AIZL of type: cell")

        print("Setting the default initial concentrations for ca (used in AIZL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIZL.hoc")
        a_AIZL = []
        h("{ n_AIZL = 1 }")
        h("objectvar a_AIZL[n_AIZL]")
        for i in range(int(h.n_AIZL)):
            h("a_AIZL[%i] = new AIZL()"%i)
            h("access a_AIZL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIZL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIZL() { for i = 0, n_AIZL-1 { a_AIZL[i].set_initial_v() } }")
        h("objref fih_AIZL")
        h('{fih_AIZL = new FInitializeHandler(0, "initialiseV_AIZL()")}')

        h("proc initialiseIons_AIZL() { for i = 0, n_AIZL-1 { a_AIZL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIZL")
        h('{fih_ion_AIZL = new FInitializeHandler(1, "initialiseIons_AIZL()")}')

        # ######################   Population: AIZR
        print("Population AIZR contains 1 instance(s) of component: AIZR of type: cell")

        print("Setting the default initial concentrations for ca (used in AIZR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AIZR.hoc")
        a_AIZR = []
        h("{ n_AIZR = 1 }")
        h("objectvar a_AIZR[n_AIZR]")
        for i in range(int(h.n_AIZR)):
            h("a_AIZR[%i] = new AIZR()"%i)
            h("access a_AIZR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AIZR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AIZR() { for i = 0, n_AIZR-1 { a_AIZR[i].set_initial_v() } }")
        h("objref fih_AIZR")
        h('{fih_AIZR = new FInitializeHandler(0, "initialiseV_AIZR()")}')

        h("proc initialiseIons_AIZR() { for i = 0, n_AIZR-1 { a_AIZR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AIZR")
        h('{fih_ion_AIZR = new FInitializeHandler(1, "initialiseIons_AIZR()")}')

        # ######################   Population: ALA
        print("Population ALA contains 1 instance(s) of component: ALA of type: cell")

        print("Setting the default initial concentrations for ca (used in ALA) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ALA.hoc")
        a_ALA = []
        h("{ n_ALA = 1 }")
        h("objectvar a_ALA[n_ALA]")
        for i in range(int(h.n_ALA)):
            h("a_ALA[%i] = new ALA()"%i)
            h("access a_ALA[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ALA[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ALA() { for i = 0, n_ALA-1 { a_ALA[i].set_initial_v() } }")
        h("objref fih_ALA")
        h('{fih_ALA = new FInitializeHandler(0, "initialiseV_ALA()")}')

        h("proc initialiseIons_ALA() { for i = 0, n_ALA-1 { a_ALA[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ALA")
        h('{fih_ion_ALA = new FInitializeHandler(1, "initialiseIons_ALA()")}')

        # ######################   Population: ALML
        print("Population ALML contains 1 instance(s) of component: ALML of type: cell")

        print("Setting the default initial concentrations for ca (used in ALML) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ALML.hoc")
        a_ALML = []
        h("{ n_ALML = 1 }")
        h("objectvar a_ALML[n_ALML]")
        for i in range(int(h.n_ALML)):
            h("a_ALML[%i] = new ALML()"%i)
            h("access a_ALML[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ALML[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ALML() { for i = 0, n_ALML-1 { a_ALML[i].set_initial_v() } }")
        h("objref fih_ALML")
        h('{fih_ALML = new FInitializeHandler(0, "initialiseV_ALML()")}')

        h("proc initialiseIons_ALML() { for i = 0, n_ALML-1 { a_ALML[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ALML")
        h('{fih_ion_ALML = new FInitializeHandler(1, "initialiseIons_ALML()")}')

        # ######################   Population: ALMR
        print("Population ALMR contains 1 instance(s) of component: ALMR of type: cell")

        print("Setting the default initial concentrations for ca (used in ALMR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ALMR.hoc")
        a_ALMR = []
        h("{ n_ALMR = 1 }")
        h("objectvar a_ALMR[n_ALMR]")
        for i in range(int(h.n_ALMR)):
            h("a_ALMR[%i] = new ALMR()"%i)
            h("access a_ALMR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ALMR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ALMR() { for i = 0, n_ALMR-1 { a_ALMR[i].set_initial_v() } }")
        h("objref fih_ALMR")
        h('{fih_ALMR = new FInitializeHandler(0, "initialiseV_ALMR()")}')

        h("proc initialiseIons_ALMR() { for i = 0, n_ALMR-1 { a_ALMR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ALMR")
        h('{fih_ion_ALMR = new FInitializeHandler(1, "initialiseIons_ALMR()")}')

        # ######################   Population: ALNL
        print("Population ALNL contains 1 instance(s) of component: ALNL of type: cell")

        print("Setting the default initial concentrations for ca (used in ALNL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ALNL.hoc")
        a_ALNL = []
        h("{ n_ALNL = 1 }")
        h("objectvar a_ALNL[n_ALNL]")
        for i in range(int(h.n_ALNL)):
            h("a_ALNL[%i] = new ALNL()"%i)
            h("access a_ALNL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ALNL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ALNL() { for i = 0, n_ALNL-1 { a_ALNL[i].set_initial_v() } }")
        h("objref fih_ALNL")
        h('{fih_ALNL = new FInitializeHandler(0, "initialiseV_ALNL()")}')

        h("proc initialiseIons_ALNL() { for i = 0, n_ALNL-1 { a_ALNL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ALNL")
        h('{fih_ion_ALNL = new FInitializeHandler(1, "initialiseIons_ALNL()")}')

        # ######################   Population: ALNR
        print("Population ALNR contains 1 instance(s) of component: ALNR of type: cell")

        print("Setting the default initial concentrations for ca (used in ALNR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ALNR.hoc")
        a_ALNR = []
        h("{ n_ALNR = 1 }")
        h("objectvar a_ALNR[n_ALNR]")
        for i in range(int(h.n_ALNR)):
            h("a_ALNR[%i] = new ALNR()"%i)
            h("access a_ALNR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ALNR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ALNR() { for i = 0, n_ALNR-1 { a_ALNR[i].set_initial_v() } }")
        h("objref fih_ALNR")
        h('{fih_ALNR = new FInitializeHandler(0, "initialiseV_ALNR()")}')

        h("proc initialiseIons_ALNR() { for i = 0, n_ALNR-1 { a_ALNR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ALNR")
        h('{fih_ion_ALNR = new FInitializeHandler(1, "initialiseIons_ALNR()")}')

        # ######################   Population: AQR
        print("Population AQR contains 1 instance(s) of component: AQR of type: cell")

        print("Setting the default initial concentrations for ca (used in AQR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AQR.hoc")
        a_AQR = []
        h("{ n_AQR = 1 }")
        h("objectvar a_AQR[n_AQR]")
        for i in range(int(h.n_AQR)):
            h("a_AQR[%i] = new AQR()"%i)
            h("access a_AQR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AQR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AQR() { for i = 0, n_AQR-1 { a_AQR[i].set_initial_v() } }")
        h("objref fih_AQR")
        h('{fih_AQR = new FInitializeHandler(0, "initialiseV_AQR()")}')

        h("proc initialiseIons_AQR() { for i = 0, n_AQR-1 { a_AQR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AQR")
        h('{fih_ion_AQR = new FInitializeHandler(1, "initialiseIons_AQR()")}')

        # ######################   Population: AS1
        print("Population AS1 contains 1 instance(s) of component: AS1 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS1.hoc")
        a_AS1 = []
        h("{ n_AS1 = 1 }")
        h("objectvar a_AS1[n_AS1]")
        for i in range(int(h.n_AS1)):
            h("a_AS1[%i] = new AS1()"%i)
            h("access a_AS1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS1() { for i = 0, n_AS1-1 { a_AS1[i].set_initial_v() } }")
        h("objref fih_AS1")
        h('{fih_AS1 = new FInitializeHandler(0, "initialiseV_AS1()")}')

        h("proc initialiseIons_AS1() { for i = 0, n_AS1-1 { a_AS1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS1")
        h('{fih_ion_AS1 = new FInitializeHandler(1, "initialiseIons_AS1()")}')

        # ######################   Population: AS10
        print("Population AS10 contains 1 instance(s) of component: AS10 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS10) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS10.hoc")
        a_AS10 = []
        h("{ n_AS10 = 1 }")
        h("objectvar a_AS10[n_AS10]")
        for i in range(int(h.n_AS10)):
            h("a_AS10[%i] = new AS10()"%i)
            h("access a_AS10[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS10[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS10() { for i = 0, n_AS10-1 { a_AS10[i].set_initial_v() } }")
        h("objref fih_AS10")
        h('{fih_AS10 = new FInitializeHandler(0, "initialiseV_AS10()")}')

        h("proc initialiseIons_AS10() { for i = 0, n_AS10-1 { a_AS10[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS10")
        h('{fih_ion_AS10 = new FInitializeHandler(1, "initialiseIons_AS10()")}')

        # ######################   Population: AS11
        print("Population AS11 contains 1 instance(s) of component: AS11 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS11) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS11.hoc")
        a_AS11 = []
        h("{ n_AS11 = 1 }")
        h("objectvar a_AS11[n_AS11]")
        for i in range(int(h.n_AS11)):
            h("a_AS11[%i] = new AS11()"%i)
            h("access a_AS11[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS11[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS11() { for i = 0, n_AS11-1 { a_AS11[i].set_initial_v() } }")
        h("objref fih_AS11")
        h('{fih_AS11 = new FInitializeHandler(0, "initialiseV_AS11()")}')

        h("proc initialiseIons_AS11() { for i = 0, n_AS11-1 { a_AS11[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS11")
        h('{fih_ion_AS11 = new FInitializeHandler(1, "initialiseIons_AS11()")}')

        # ######################   Population: AS2
        print("Population AS2 contains 1 instance(s) of component: AS2 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS2.hoc")
        a_AS2 = []
        h("{ n_AS2 = 1 }")
        h("objectvar a_AS2[n_AS2]")
        for i in range(int(h.n_AS2)):
            h("a_AS2[%i] = new AS2()"%i)
            h("access a_AS2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS2() { for i = 0, n_AS2-1 { a_AS2[i].set_initial_v() } }")
        h("objref fih_AS2")
        h('{fih_AS2 = new FInitializeHandler(0, "initialiseV_AS2()")}')

        h("proc initialiseIons_AS2() { for i = 0, n_AS2-1 { a_AS2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS2")
        h('{fih_ion_AS2 = new FInitializeHandler(1, "initialiseIons_AS2()")}')

        # ######################   Population: AS3
        print("Population AS3 contains 1 instance(s) of component: AS3 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS3.hoc")
        a_AS3 = []
        h("{ n_AS3 = 1 }")
        h("objectvar a_AS3[n_AS3]")
        for i in range(int(h.n_AS3)):
            h("a_AS3[%i] = new AS3()"%i)
            h("access a_AS3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS3() { for i = 0, n_AS3-1 { a_AS3[i].set_initial_v() } }")
        h("objref fih_AS3")
        h('{fih_AS3 = new FInitializeHandler(0, "initialiseV_AS3()")}')

        h("proc initialiseIons_AS3() { for i = 0, n_AS3-1 { a_AS3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS3")
        h('{fih_ion_AS3 = new FInitializeHandler(1, "initialiseIons_AS3()")}')

        # ######################   Population: AS4
        print("Population AS4 contains 1 instance(s) of component: AS4 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS4.hoc")
        a_AS4 = []
        h("{ n_AS4 = 1 }")
        h("objectvar a_AS4[n_AS4]")
        for i in range(int(h.n_AS4)):
            h("a_AS4[%i] = new AS4()"%i)
            h("access a_AS4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS4() { for i = 0, n_AS4-1 { a_AS4[i].set_initial_v() } }")
        h("objref fih_AS4")
        h('{fih_AS4 = new FInitializeHandler(0, "initialiseV_AS4()")}')

        h("proc initialiseIons_AS4() { for i = 0, n_AS4-1 { a_AS4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS4")
        h('{fih_ion_AS4 = new FInitializeHandler(1, "initialiseIons_AS4()")}')

        # ######################   Population: AS5
        print("Population AS5 contains 1 instance(s) of component: AS5 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS5.hoc")
        a_AS5 = []
        h("{ n_AS5 = 1 }")
        h("objectvar a_AS5[n_AS5]")
        for i in range(int(h.n_AS5)):
            h("a_AS5[%i] = new AS5()"%i)
            h("access a_AS5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS5() { for i = 0, n_AS5-1 { a_AS5[i].set_initial_v() } }")
        h("objref fih_AS5")
        h('{fih_AS5 = new FInitializeHandler(0, "initialiseV_AS5()")}')

        h("proc initialiseIons_AS5() { for i = 0, n_AS5-1 { a_AS5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS5")
        h('{fih_ion_AS5 = new FInitializeHandler(1, "initialiseIons_AS5()")}')

        # ######################   Population: AS6
        print("Population AS6 contains 1 instance(s) of component: AS6 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS6.hoc")
        a_AS6 = []
        h("{ n_AS6 = 1 }")
        h("objectvar a_AS6[n_AS6]")
        for i in range(int(h.n_AS6)):
            h("a_AS6[%i] = new AS6()"%i)
            h("access a_AS6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS6() { for i = 0, n_AS6-1 { a_AS6[i].set_initial_v() } }")
        h("objref fih_AS6")
        h('{fih_AS6 = new FInitializeHandler(0, "initialiseV_AS6()")}')

        h("proc initialiseIons_AS6() { for i = 0, n_AS6-1 { a_AS6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS6")
        h('{fih_ion_AS6 = new FInitializeHandler(1, "initialiseIons_AS6()")}')

        # ######################   Population: AS7
        print("Population AS7 contains 1 instance(s) of component: AS7 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS7) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS7.hoc")
        a_AS7 = []
        h("{ n_AS7 = 1 }")
        h("objectvar a_AS7[n_AS7]")
        for i in range(int(h.n_AS7)):
            h("a_AS7[%i] = new AS7()"%i)
            h("access a_AS7[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS7[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS7() { for i = 0, n_AS7-1 { a_AS7[i].set_initial_v() } }")
        h("objref fih_AS7")
        h('{fih_AS7 = new FInitializeHandler(0, "initialiseV_AS7()")}')

        h("proc initialiseIons_AS7() { for i = 0, n_AS7-1 { a_AS7[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS7")
        h('{fih_ion_AS7 = new FInitializeHandler(1, "initialiseIons_AS7()")}')

        # ######################   Population: AS8
        print("Population AS8 contains 1 instance(s) of component: AS8 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS8) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS8.hoc")
        a_AS8 = []
        h("{ n_AS8 = 1 }")
        h("objectvar a_AS8[n_AS8]")
        for i in range(int(h.n_AS8)):
            h("a_AS8[%i] = new AS8()"%i)
            h("access a_AS8[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS8[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS8() { for i = 0, n_AS8-1 { a_AS8[i].set_initial_v() } }")
        h("objref fih_AS8")
        h('{fih_AS8 = new FInitializeHandler(0, "initialiseV_AS8()")}')

        h("proc initialiseIons_AS8() { for i = 0, n_AS8-1 { a_AS8[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS8")
        h('{fih_ion_AS8 = new FInitializeHandler(1, "initialiseIons_AS8()")}')

        # ######################   Population: AS9
        print("Population AS9 contains 1 instance(s) of component: AS9 of type: cell")

        print("Setting the default initial concentrations for ca (used in AS9) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AS9.hoc")
        a_AS9 = []
        h("{ n_AS9 = 1 }")
        h("objectvar a_AS9[n_AS9]")
        for i in range(int(h.n_AS9)):
            h("a_AS9[%i] = new AS9()"%i)
            h("access a_AS9[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AS9[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AS9() { for i = 0, n_AS9-1 { a_AS9[i].set_initial_v() } }")
        h("objref fih_AS9")
        h('{fih_AS9 = new FInitializeHandler(0, "initialiseV_AS9()")}')

        h("proc initialiseIons_AS9() { for i = 0, n_AS9-1 { a_AS9[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AS9")
        h('{fih_ion_AS9 = new FInitializeHandler(1, "initialiseIons_AS9()")}')

        # ######################   Population: ASEL
        print("Population ASEL contains 1 instance(s) of component: ASEL of type: cell")

        print("Setting the default initial concentrations for ca (used in ASEL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASEL.hoc")
        a_ASEL = []
        h("{ n_ASEL = 1 }")
        h("objectvar a_ASEL[n_ASEL]")
        for i in range(int(h.n_ASEL)):
            h("a_ASEL[%i] = new ASEL()"%i)
            h("access a_ASEL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASEL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASEL() { for i = 0, n_ASEL-1 { a_ASEL[i].set_initial_v() } }")
        h("objref fih_ASEL")
        h('{fih_ASEL = new FInitializeHandler(0, "initialiseV_ASEL()")}')

        h("proc initialiseIons_ASEL() { for i = 0, n_ASEL-1 { a_ASEL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASEL")
        h('{fih_ion_ASEL = new FInitializeHandler(1, "initialiseIons_ASEL()")}')

        # ######################   Population: ASER
        print("Population ASER contains 1 instance(s) of component: ASER of type: cell")

        print("Setting the default initial concentrations for ca (used in ASER) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASER.hoc")
        a_ASER = []
        h("{ n_ASER = 1 }")
        h("objectvar a_ASER[n_ASER]")
        for i in range(int(h.n_ASER)):
            h("a_ASER[%i] = new ASER()"%i)
            h("access a_ASER[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASER[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASER() { for i = 0, n_ASER-1 { a_ASER[i].set_initial_v() } }")
        h("objref fih_ASER")
        h('{fih_ASER = new FInitializeHandler(0, "initialiseV_ASER()")}')

        h("proc initialiseIons_ASER() { for i = 0, n_ASER-1 { a_ASER[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASER")
        h('{fih_ion_ASER = new FInitializeHandler(1, "initialiseIons_ASER()")}')

        # ######################   Population: ASGL
        print("Population ASGL contains 1 instance(s) of component: ASGL of type: cell")

        print("Setting the default initial concentrations for ca (used in ASGL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASGL.hoc")
        a_ASGL = []
        h("{ n_ASGL = 1 }")
        h("objectvar a_ASGL[n_ASGL]")
        for i in range(int(h.n_ASGL)):
            h("a_ASGL[%i] = new ASGL()"%i)
            h("access a_ASGL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASGL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASGL() { for i = 0, n_ASGL-1 { a_ASGL[i].set_initial_v() } }")
        h("objref fih_ASGL")
        h('{fih_ASGL = new FInitializeHandler(0, "initialiseV_ASGL()")}')

        h("proc initialiseIons_ASGL() { for i = 0, n_ASGL-1 { a_ASGL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASGL")
        h('{fih_ion_ASGL = new FInitializeHandler(1, "initialiseIons_ASGL()")}')

        # ######################   Population: ASGR
        print("Population ASGR contains 1 instance(s) of component: ASGR of type: cell")

        print("Setting the default initial concentrations for ca (used in ASGR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASGR.hoc")
        a_ASGR = []
        h("{ n_ASGR = 1 }")
        h("objectvar a_ASGR[n_ASGR]")
        for i in range(int(h.n_ASGR)):
            h("a_ASGR[%i] = new ASGR()"%i)
            h("access a_ASGR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASGR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASGR() { for i = 0, n_ASGR-1 { a_ASGR[i].set_initial_v() } }")
        h("objref fih_ASGR")
        h('{fih_ASGR = new FInitializeHandler(0, "initialiseV_ASGR()")}')

        h("proc initialiseIons_ASGR() { for i = 0, n_ASGR-1 { a_ASGR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASGR")
        h('{fih_ion_ASGR = new FInitializeHandler(1, "initialiseIons_ASGR()")}')

        # ######################   Population: ASHL
        print("Population ASHL contains 1 instance(s) of component: ASHL of type: cell")

        print("Setting the default initial concentrations for ca (used in ASHL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASHL.hoc")
        a_ASHL = []
        h("{ n_ASHL = 1 }")
        h("objectvar a_ASHL[n_ASHL]")
        for i in range(int(h.n_ASHL)):
            h("a_ASHL[%i] = new ASHL()"%i)
            h("access a_ASHL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASHL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASHL() { for i = 0, n_ASHL-1 { a_ASHL[i].set_initial_v() } }")
        h("objref fih_ASHL")
        h('{fih_ASHL = new FInitializeHandler(0, "initialiseV_ASHL()")}')

        h("proc initialiseIons_ASHL() { for i = 0, n_ASHL-1 { a_ASHL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASHL")
        h('{fih_ion_ASHL = new FInitializeHandler(1, "initialiseIons_ASHL()")}')

        # ######################   Population: ASHR
        print("Population ASHR contains 1 instance(s) of component: ASHR of type: cell")

        print("Setting the default initial concentrations for ca (used in ASHR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASHR.hoc")
        a_ASHR = []
        h("{ n_ASHR = 1 }")
        h("objectvar a_ASHR[n_ASHR]")
        for i in range(int(h.n_ASHR)):
            h("a_ASHR[%i] = new ASHR()"%i)
            h("access a_ASHR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASHR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASHR() { for i = 0, n_ASHR-1 { a_ASHR[i].set_initial_v() } }")
        h("objref fih_ASHR")
        h('{fih_ASHR = new FInitializeHandler(0, "initialiseV_ASHR()")}')

        h("proc initialiseIons_ASHR() { for i = 0, n_ASHR-1 { a_ASHR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASHR")
        h('{fih_ion_ASHR = new FInitializeHandler(1, "initialiseIons_ASHR()")}')

        # ######################   Population: ASIL
        print("Population ASIL contains 1 instance(s) of component: ASIL of type: cell")

        print("Setting the default initial concentrations for ca (used in ASIL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASIL.hoc")
        a_ASIL = []
        h("{ n_ASIL = 1 }")
        h("objectvar a_ASIL[n_ASIL]")
        for i in range(int(h.n_ASIL)):
            h("a_ASIL[%i] = new ASIL()"%i)
            h("access a_ASIL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASIL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASIL() { for i = 0, n_ASIL-1 { a_ASIL[i].set_initial_v() } }")
        h("objref fih_ASIL")
        h('{fih_ASIL = new FInitializeHandler(0, "initialiseV_ASIL()")}')

        h("proc initialiseIons_ASIL() { for i = 0, n_ASIL-1 { a_ASIL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASIL")
        h('{fih_ion_ASIL = new FInitializeHandler(1, "initialiseIons_ASIL()")}')

        # ######################   Population: ASIR
        print("Population ASIR contains 1 instance(s) of component: ASIR of type: cell")

        print("Setting the default initial concentrations for ca (used in ASIR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASIR.hoc")
        a_ASIR = []
        h("{ n_ASIR = 1 }")
        h("objectvar a_ASIR[n_ASIR]")
        for i in range(int(h.n_ASIR)):
            h("a_ASIR[%i] = new ASIR()"%i)
            h("access a_ASIR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASIR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASIR() { for i = 0, n_ASIR-1 { a_ASIR[i].set_initial_v() } }")
        h("objref fih_ASIR")
        h('{fih_ASIR = new FInitializeHandler(0, "initialiseV_ASIR()")}')

        h("proc initialiseIons_ASIR() { for i = 0, n_ASIR-1 { a_ASIR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASIR")
        h('{fih_ion_ASIR = new FInitializeHandler(1, "initialiseIons_ASIR()")}')

        # ######################   Population: ASJL
        print("Population ASJL contains 1 instance(s) of component: ASJL of type: cell")

        print("Setting the default initial concentrations for ca (used in ASJL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASJL.hoc")
        a_ASJL = []
        h("{ n_ASJL = 1 }")
        h("objectvar a_ASJL[n_ASJL]")
        for i in range(int(h.n_ASJL)):
            h("a_ASJL[%i] = new ASJL()"%i)
            h("access a_ASJL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASJL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASJL() { for i = 0, n_ASJL-1 { a_ASJL[i].set_initial_v() } }")
        h("objref fih_ASJL")
        h('{fih_ASJL = new FInitializeHandler(0, "initialiseV_ASJL()")}')

        h("proc initialiseIons_ASJL() { for i = 0, n_ASJL-1 { a_ASJL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASJL")
        h('{fih_ion_ASJL = new FInitializeHandler(1, "initialiseIons_ASJL()")}')

        # ######################   Population: ASJR
        print("Population ASJR contains 1 instance(s) of component: ASJR of type: cell")

        print("Setting the default initial concentrations for ca (used in ASJR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASJR.hoc")
        a_ASJR = []
        h("{ n_ASJR = 1 }")
        h("objectvar a_ASJR[n_ASJR]")
        for i in range(int(h.n_ASJR)):
            h("a_ASJR[%i] = new ASJR()"%i)
            h("access a_ASJR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASJR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASJR() { for i = 0, n_ASJR-1 { a_ASJR[i].set_initial_v() } }")
        h("objref fih_ASJR")
        h('{fih_ASJR = new FInitializeHandler(0, "initialiseV_ASJR()")}')

        h("proc initialiseIons_ASJR() { for i = 0, n_ASJR-1 { a_ASJR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASJR")
        h('{fih_ion_ASJR = new FInitializeHandler(1, "initialiseIons_ASJR()")}')

        # ######################   Population: ASKL
        print("Population ASKL contains 1 instance(s) of component: ASKL of type: cell")

        print("Setting the default initial concentrations for ca (used in ASKL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASKL.hoc")
        a_ASKL = []
        h("{ n_ASKL = 1 }")
        h("objectvar a_ASKL[n_ASKL]")
        for i in range(int(h.n_ASKL)):
            h("a_ASKL[%i] = new ASKL()"%i)
            h("access a_ASKL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASKL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASKL() { for i = 0, n_ASKL-1 { a_ASKL[i].set_initial_v() } }")
        h("objref fih_ASKL")
        h('{fih_ASKL = new FInitializeHandler(0, "initialiseV_ASKL()")}')

        h("proc initialiseIons_ASKL() { for i = 0, n_ASKL-1 { a_ASKL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASKL")
        h('{fih_ion_ASKL = new FInitializeHandler(1, "initialiseIons_ASKL()")}')

        # ######################   Population: ASKR
        print("Population ASKR contains 1 instance(s) of component: ASKR of type: cell")

        print("Setting the default initial concentrations for ca (used in ASKR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("ASKR.hoc")
        a_ASKR = []
        h("{ n_ASKR = 1 }")
        h("objectvar a_ASKR[n_ASKR]")
        for i in range(int(h.n_ASKR)):
            h("a_ASKR[%i] = new ASKR()"%i)
            h("access a_ASKR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_ASKR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_ASKR() { for i = 0, n_ASKR-1 { a_ASKR[i].set_initial_v() } }")
        h("objref fih_ASKR")
        h('{fih_ASKR = new FInitializeHandler(0, "initialiseV_ASKR()")}')

        h("proc initialiseIons_ASKR() { for i = 0, n_ASKR-1 { a_ASKR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_ASKR")
        h('{fih_ion_ASKR = new FInitializeHandler(1, "initialiseIons_ASKR()")}')

        # ######################   Population: AUAL
        print("Population AUAL contains 1 instance(s) of component: AUAL of type: cell")

        print("Setting the default initial concentrations for ca (used in AUAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AUAL.hoc")
        a_AUAL = []
        h("{ n_AUAL = 1 }")
        h("objectvar a_AUAL[n_AUAL]")
        for i in range(int(h.n_AUAL)):
            h("a_AUAL[%i] = new AUAL()"%i)
            h("access a_AUAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AUAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AUAL() { for i = 0, n_AUAL-1 { a_AUAL[i].set_initial_v() } }")
        h("objref fih_AUAL")
        h('{fih_AUAL = new FInitializeHandler(0, "initialiseV_AUAL()")}')

        h("proc initialiseIons_AUAL() { for i = 0, n_AUAL-1 { a_AUAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AUAL")
        h('{fih_ion_AUAL = new FInitializeHandler(1, "initialiseIons_AUAL()")}')

        # ######################   Population: AUAR
        print("Population AUAR contains 1 instance(s) of component: AUAR of type: cell")

        print("Setting the default initial concentrations for ca (used in AUAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AUAR.hoc")
        a_AUAR = []
        h("{ n_AUAR = 1 }")
        h("objectvar a_AUAR[n_AUAR]")
        for i in range(int(h.n_AUAR)):
            h("a_AUAR[%i] = new AUAR()"%i)
            h("access a_AUAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AUAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AUAR() { for i = 0, n_AUAR-1 { a_AUAR[i].set_initial_v() } }")
        h("objref fih_AUAR")
        h('{fih_AUAR = new FInitializeHandler(0, "initialiseV_AUAR()")}')

        h("proc initialiseIons_AUAR() { for i = 0, n_AUAR-1 { a_AUAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AUAR")
        h('{fih_ion_AUAR = new FInitializeHandler(1, "initialiseIons_AUAR()")}')

        # ######################   Population: AVAL
        print("Population AVAL contains 1 instance(s) of component: AVAL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVAL.hoc")
        a_AVAL = []
        h("{ n_AVAL = 1 }")
        h("objectvar a_AVAL[n_AVAL]")
        for i in range(int(h.n_AVAL)):
            h("a_AVAL[%i] = new AVAL()"%i)
            h("access a_AVAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVAL() { for i = 0, n_AVAL-1 { a_AVAL[i].set_initial_v() } }")
        h("objref fih_AVAL")
        h('{fih_AVAL = new FInitializeHandler(0, "initialiseV_AVAL()")}')

        h("proc initialiseIons_AVAL() { for i = 0, n_AVAL-1 { a_AVAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVAL")
        h('{fih_ion_AVAL = new FInitializeHandler(1, "initialiseIons_AVAL()")}')

        # ######################   Population: AVAR
        print("Population AVAR contains 1 instance(s) of component: AVAR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVAR.hoc")
        a_AVAR = []
        h("{ n_AVAR = 1 }")
        h("objectvar a_AVAR[n_AVAR]")
        for i in range(int(h.n_AVAR)):
            h("a_AVAR[%i] = new AVAR()"%i)
            h("access a_AVAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVAR() { for i = 0, n_AVAR-1 { a_AVAR[i].set_initial_v() } }")
        h("objref fih_AVAR")
        h('{fih_AVAR = new FInitializeHandler(0, "initialiseV_AVAR()")}')

        h("proc initialiseIons_AVAR() { for i = 0, n_AVAR-1 { a_AVAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVAR")
        h('{fih_ion_AVAR = new FInitializeHandler(1, "initialiseIons_AVAR()")}')

        # ######################   Population: AVBL
        print("Population AVBL contains 1 instance(s) of component: AVBL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVBL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVBL.hoc")
        a_AVBL = []
        h("{ n_AVBL = 1 }")
        h("objectvar a_AVBL[n_AVBL]")
        for i in range(int(h.n_AVBL)):
            h("a_AVBL[%i] = new AVBL()"%i)
            h("access a_AVBL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVBL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVBL() { for i = 0, n_AVBL-1 { a_AVBL[i].set_initial_v() } }")
        h("objref fih_AVBL")
        h('{fih_AVBL = new FInitializeHandler(0, "initialiseV_AVBL()")}')

        h("proc initialiseIons_AVBL() { for i = 0, n_AVBL-1 { a_AVBL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVBL")
        h('{fih_ion_AVBL = new FInitializeHandler(1, "initialiseIons_AVBL()")}')

        # ######################   Population: AVBR
        print("Population AVBR contains 1 instance(s) of component: AVBR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVBR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVBR.hoc")
        a_AVBR = []
        h("{ n_AVBR = 1 }")
        h("objectvar a_AVBR[n_AVBR]")
        for i in range(int(h.n_AVBR)):
            h("a_AVBR[%i] = new AVBR()"%i)
            h("access a_AVBR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVBR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVBR() { for i = 0, n_AVBR-1 { a_AVBR[i].set_initial_v() } }")
        h("objref fih_AVBR")
        h('{fih_AVBR = new FInitializeHandler(0, "initialiseV_AVBR()")}')

        h("proc initialiseIons_AVBR() { for i = 0, n_AVBR-1 { a_AVBR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVBR")
        h('{fih_ion_AVBR = new FInitializeHandler(1, "initialiseIons_AVBR()")}')

        # ######################   Population: AVDL
        print("Population AVDL contains 1 instance(s) of component: AVDL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVDL.hoc")
        a_AVDL = []
        h("{ n_AVDL = 1 }")
        h("objectvar a_AVDL[n_AVDL]")
        for i in range(int(h.n_AVDL)):
            h("a_AVDL[%i] = new AVDL()"%i)
            h("access a_AVDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVDL() { for i = 0, n_AVDL-1 { a_AVDL[i].set_initial_v() } }")
        h("objref fih_AVDL")
        h('{fih_AVDL = new FInitializeHandler(0, "initialiseV_AVDL()")}')

        h("proc initialiseIons_AVDL() { for i = 0, n_AVDL-1 { a_AVDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVDL")
        h('{fih_ion_AVDL = new FInitializeHandler(1, "initialiseIons_AVDL()")}')

        # ######################   Population: AVDR
        print("Population AVDR contains 1 instance(s) of component: AVDR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVDR.hoc")
        a_AVDR = []
        h("{ n_AVDR = 1 }")
        h("objectvar a_AVDR[n_AVDR]")
        for i in range(int(h.n_AVDR)):
            h("a_AVDR[%i] = new AVDR()"%i)
            h("access a_AVDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVDR() { for i = 0, n_AVDR-1 { a_AVDR[i].set_initial_v() } }")
        h("objref fih_AVDR")
        h('{fih_AVDR = new FInitializeHandler(0, "initialiseV_AVDR()")}')

        h("proc initialiseIons_AVDR() { for i = 0, n_AVDR-1 { a_AVDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVDR")
        h('{fih_ion_AVDR = new FInitializeHandler(1, "initialiseIons_AVDR()")}')

        # ######################   Population: AVEL
        print("Population AVEL contains 1 instance(s) of component: AVEL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVEL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVEL.hoc")
        a_AVEL = []
        h("{ n_AVEL = 1 }")
        h("objectvar a_AVEL[n_AVEL]")
        for i in range(int(h.n_AVEL)):
            h("a_AVEL[%i] = new AVEL()"%i)
            h("access a_AVEL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVEL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVEL() { for i = 0, n_AVEL-1 { a_AVEL[i].set_initial_v() } }")
        h("objref fih_AVEL")
        h('{fih_AVEL = new FInitializeHandler(0, "initialiseV_AVEL()")}')

        h("proc initialiseIons_AVEL() { for i = 0, n_AVEL-1 { a_AVEL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVEL")
        h('{fih_ion_AVEL = new FInitializeHandler(1, "initialiseIons_AVEL()")}')

        # ######################   Population: AVER
        print("Population AVER contains 1 instance(s) of component: AVER of type: cell")

        print("Setting the default initial concentrations for ca (used in AVER) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVER.hoc")
        a_AVER = []
        h("{ n_AVER = 1 }")
        h("objectvar a_AVER[n_AVER]")
        for i in range(int(h.n_AVER)):
            h("a_AVER[%i] = new AVER()"%i)
            h("access a_AVER[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVER[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVER() { for i = 0, n_AVER-1 { a_AVER[i].set_initial_v() } }")
        h("objref fih_AVER")
        h('{fih_AVER = new FInitializeHandler(0, "initialiseV_AVER()")}')

        h("proc initialiseIons_AVER() { for i = 0, n_AVER-1 { a_AVER[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVER")
        h('{fih_ion_AVER = new FInitializeHandler(1, "initialiseIons_AVER()")}')

        # ######################   Population: AVFL
        print("Population AVFL contains 1 instance(s) of component: AVFL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVFL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVFL.hoc")
        a_AVFL = []
        h("{ n_AVFL = 1 }")
        h("objectvar a_AVFL[n_AVFL]")
        for i in range(int(h.n_AVFL)):
            h("a_AVFL[%i] = new AVFL()"%i)
            h("access a_AVFL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVFL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVFL() { for i = 0, n_AVFL-1 { a_AVFL[i].set_initial_v() } }")
        h("objref fih_AVFL")
        h('{fih_AVFL = new FInitializeHandler(0, "initialiseV_AVFL()")}')

        h("proc initialiseIons_AVFL() { for i = 0, n_AVFL-1 { a_AVFL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVFL")
        h('{fih_ion_AVFL = new FInitializeHandler(1, "initialiseIons_AVFL()")}')

        # ######################   Population: AVFR
        print("Population AVFR contains 1 instance(s) of component: AVFR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVFR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVFR.hoc")
        a_AVFR = []
        h("{ n_AVFR = 1 }")
        h("objectvar a_AVFR[n_AVFR]")
        for i in range(int(h.n_AVFR)):
            h("a_AVFR[%i] = new AVFR()"%i)
            h("access a_AVFR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVFR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVFR() { for i = 0, n_AVFR-1 { a_AVFR[i].set_initial_v() } }")
        h("objref fih_AVFR")
        h('{fih_AVFR = new FInitializeHandler(0, "initialiseV_AVFR()")}')

        h("proc initialiseIons_AVFR() { for i = 0, n_AVFR-1 { a_AVFR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVFR")
        h('{fih_ion_AVFR = new FInitializeHandler(1, "initialiseIons_AVFR()")}')

        # ######################   Population: AVG
        print("Population AVG contains 1 instance(s) of component: AVG of type: cell")

        print("Setting the default initial concentrations for ca (used in AVG) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVG.hoc")
        a_AVG = []
        h("{ n_AVG = 1 }")
        h("objectvar a_AVG[n_AVG]")
        for i in range(int(h.n_AVG)):
            h("a_AVG[%i] = new AVG()"%i)
            h("access a_AVG[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVG[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVG() { for i = 0, n_AVG-1 { a_AVG[i].set_initial_v() } }")
        h("objref fih_AVG")
        h('{fih_AVG = new FInitializeHandler(0, "initialiseV_AVG()")}')

        h("proc initialiseIons_AVG() { for i = 0, n_AVG-1 { a_AVG[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVG")
        h('{fih_ion_AVG = new FInitializeHandler(1, "initialiseIons_AVG()")}')

        # ######################   Population: AVHL
        print("Population AVHL contains 1 instance(s) of component: AVHL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVHL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVHL.hoc")
        a_AVHL = []
        h("{ n_AVHL = 1 }")
        h("objectvar a_AVHL[n_AVHL]")
        for i in range(int(h.n_AVHL)):
            h("a_AVHL[%i] = new AVHL()"%i)
            h("access a_AVHL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVHL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVHL() { for i = 0, n_AVHL-1 { a_AVHL[i].set_initial_v() } }")
        h("objref fih_AVHL")
        h('{fih_AVHL = new FInitializeHandler(0, "initialiseV_AVHL()")}')

        h("proc initialiseIons_AVHL() { for i = 0, n_AVHL-1 { a_AVHL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVHL")
        h('{fih_ion_AVHL = new FInitializeHandler(1, "initialiseIons_AVHL()")}')

        # ######################   Population: AVHR
        print("Population AVHR contains 1 instance(s) of component: AVHR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVHR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVHR.hoc")
        a_AVHR = []
        h("{ n_AVHR = 1 }")
        h("objectvar a_AVHR[n_AVHR]")
        for i in range(int(h.n_AVHR)):
            h("a_AVHR[%i] = new AVHR()"%i)
            h("access a_AVHR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVHR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVHR() { for i = 0, n_AVHR-1 { a_AVHR[i].set_initial_v() } }")
        h("objref fih_AVHR")
        h('{fih_AVHR = new FInitializeHandler(0, "initialiseV_AVHR()")}')

        h("proc initialiseIons_AVHR() { for i = 0, n_AVHR-1 { a_AVHR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVHR")
        h('{fih_ion_AVHR = new FInitializeHandler(1, "initialiseIons_AVHR()")}')

        # ######################   Population: AVJL
        print("Population AVJL contains 1 instance(s) of component: AVJL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVJL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVJL.hoc")
        a_AVJL = []
        h("{ n_AVJL = 1 }")
        h("objectvar a_AVJL[n_AVJL]")
        for i in range(int(h.n_AVJL)):
            h("a_AVJL[%i] = new AVJL()"%i)
            h("access a_AVJL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVJL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVJL() { for i = 0, n_AVJL-1 { a_AVJL[i].set_initial_v() } }")
        h("objref fih_AVJL")
        h('{fih_AVJL = new FInitializeHandler(0, "initialiseV_AVJL()")}')

        h("proc initialiseIons_AVJL() { for i = 0, n_AVJL-1 { a_AVJL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVJL")
        h('{fih_ion_AVJL = new FInitializeHandler(1, "initialiseIons_AVJL()")}')

        # ######################   Population: AVJR
        print("Population AVJR contains 1 instance(s) of component: AVJR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVJR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVJR.hoc")
        a_AVJR = []
        h("{ n_AVJR = 1 }")
        h("objectvar a_AVJR[n_AVJR]")
        for i in range(int(h.n_AVJR)):
            h("a_AVJR[%i] = new AVJR()"%i)
            h("access a_AVJR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVJR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVJR() { for i = 0, n_AVJR-1 { a_AVJR[i].set_initial_v() } }")
        h("objref fih_AVJR")
        h('{fih_AVJR = new FInitializeHandler(0, "initialiseV_AVJR()")}')

        h("proc initialiseIons_AVJR() { for i = 0, n_AVJR-1 { a_AVJR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVJR")
        h('{fih_ion_AVJR = new FInitializeHandler(1, "initialiseIons_AVJR()")}')

        # ######################   Population: AVKL
        print("Population AVKL contains 1 instance(s) of component: AVKL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVKL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVKL.hoc")
        a_AVKL = []
        h("{ n_AVKL = 1 }")
        h("objectvar a_AVKL[n_AVKL]")
        for i in range(int(h.n_AVKL)):
            h("a_AVKL[%i] = new AVKL()"%i)
            h("access a_AVKL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVKL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVKL() { for i = 0, n_AVKL-1 { a_AVKL[i].set_initial_v() } }")
        h("objref fih_AVKL")
        h('{fih_AVKL = new FInitializeHandler(0, "initialiseV_AVKL()")}')

        h("proc initialiseIons_AVKL() { for i = 0, n_AVKL-1 { a_AVKL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVKL")
        h('{fih_ion_AVKL = new FInitializeHandler(1, "initialiseIons_AVKL()")}')

        # ######################   Population: AVKR
        print("Population AVKR contains 1 instance(s) of component: AVKR of type: cell")

        print("Setting the default initial concentrations for ca (used in AVKR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVKR.hoc")
        a_AVKR = []
        h("{ n_AVKR = 1 }")
        h("objectvar a_AVKR[n_AVKR]")
        for i in range(int(h.n_AVKR)):
            h("a_AVKR[%i] = new AVKR()"%i)
            h("access a_AVKR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVKR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVKR() { for i = 0, n_AVKR-1 { a_AVKR[i].set_initial_v() } }")
        h("objref fih_AVKR")
        h('{fih_AVKR = new FInitializeHandler(0, "initialiseV_AVKR()")}')

        h("proc initialiseIons_AVKR() { for i = 0, n_AVKR-1 { a_AVKR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVKR")
        h('{fih_ion_AVKR = new FInitializeHandler(1, "initialiseIons_AVKR()")}')

        # ######################   Population: AVL
        print("Population AVL contains 1 instance(s) of component: AVL of type: cell")

        print("Setting the default initial concentrations for ca (used in AVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVL.hoc")
        a_AVL = []
        h("{ n_AVL = 1 }")
        h("objectvar a_AVL[n_AVL]")
        for i in range(int(h.n_AVL)):
            h("a_AVL[%i] = new AVL()"%i)
            h("access a_AVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVL() { for i = 0, n_AVL-1 { a_AVL[i].set_initial_v() } }")
        h("objref fih_AVL")
        h('{fih_AVL = new FInitializeHandler(0, "initialiseV_AVL()")}')

        h("proc initialiseIons_AVL() { for i = 0, n_AVL-1 { a_AVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVL")
        h('{fih_ion_AVL = new FInitializeHandler(1, "initialiseIons_AVL()")}')

        # ######################   Population: AVM
        print("Population AVM contains 1 instance(s) of component: AVM of type: cell")

        print("Setting the default initial concentrations for ca (used in AVM) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AVM.hoc")
        a_AVM = []
        h("{ n_AVM = 1 }")
        h("objectvar a_AVM[n_AVM]")
        for i in range(int(h.n_AVM)):
            h("a_AVM[%i] = new AVM()"%i)
            h("access a_AVM[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AVM[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AVM() { for i = 0, n_AVM-1 { a_AVM[i].set_initial_v() } }")
        h("objref fih_AVM")
        h('{fih_AVM = new FInitializeHandler(0, "initialiseV_AVM()")}')

        h("proc initialiseIons_AVM() { for i = 0, n_AVM-1 { a_AVM[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AVM")
        h('{fih_ion_AVM = new FInitializeHandler(1, "initialiseIons_AVM()")}')

        # ######################   Population: AWAL
        print("Population AWAL contains 1 instance(s) of component: AWAL of type: cell")

        print("Setting the default initial concentrations for ca (used in AWAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AWAL.hoc")
        a_AWAL = []
        h("{ n_AWAL = 1 }")
        h("objectvar a_AWAL[n_AWAL]")
        for i in range(int(h.n_AWAL)):
            h("a_AWAL[%i] = new AWAL()"%i)
            h("access a_AWAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AWAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AWAL() { for i = 0, n_AWAL-1 { a_AWAL[i].set_initial_v() } }")
        h("objref fih_AWAL")
        h('{fih_AWAL = new FInitializeHandler(0, "initialiseV_AWAL()")}')

        h("proc initialiseIons_AWAL() { for i = 0, n_AWAL-1 { a_AWAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AWAL")
        h('{fih_ion_AWAL = new FInitializeHandler(1, "initialiseIons_AWAL()")}')

        # ######################   Population: AWAR
        print("Population AWAR contains 1 instance(s) of component: AWAR of type: cell")

        print("Setting the default initial concentrations for ca (used in AWAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AWAR.hoc")
        a_AWAR = []
        h("{ n_AWAR = 1 }")
        h("objectvar a_AWAR[n_AWAR]")
        for i in range(int(h.n_AWAR)):
            h("a_AWAR[%i] = new AWAR()"%i)
            h("access a_AWAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AWAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AWAR() { for i = 0, n_AWAR-1 { a_AWAR[i].set_initial_v() } }")
        h("objref fih_AWAR")
        h('{fih_AWAR = new FInitializeHandler(0, "initialiseV_AWAR()")}')

        h("proc initialiseIons_AWAR() { for i = 0, n_AWAR-1 { a_AWAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AWAR")
        h('{fih_ion_AWAR = new FInitializeHandler(1, "initialiseIons_AWAR()")}')

        # ######################   Population: AWBL
        print("Population AWBL contains 1 instance(s) of component: AWBL of type: cell")

        print("Setting the default initial concentrations for ca (used in AWBL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AWBL.hoc")
        a_AWBL = []
        h("{ n_AWBL = 1 }")
        h("objectvar a_AWBL[n_AWBL]")
        for i in range(int(h.n_AWBL)):
            h("a_AWBL[%i] = new AWBL()"%i)
            h("access a_AWBL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AWBL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AWBL() { for i = 0, n_AWBL-1 { a_AWBL[i].set_initial_v() } }")
        h("objref fih_AWBL")
        h('{fih_AWBL = new FInitializeHandler(0, "initialiseV_AWBL()")}')

        h("proc initialiseIons_AWBL() { for i = 0, n_AWBL-1 { a_AWBL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AWBL")
        h('{fih_ion_AWBL = new FInitializeHandler(1, "initialiseIons_AWBL()")}')

        # ######################   Population: AWBR
        print("Population AWBR contains 1 instance(s) of component: AWBR of type: cell")

        print("Setting the default initial concentrations for ca (used in AWBR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AWBR.hoc")
        a_AWBR = []
        h("{ n_AWBR = 1 }")
        h("objectvar a_AWBR[n_AWBR]")
        for i in range(int(h.n_AWBR)):
            h("a_AWBR[%i] = new AWBR()"%i)
            h("access a_AWBR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AWBR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AWBR() { for i = 0, n_AWBR-1 { a_AWBR[i].set_initial_v() } }")
        h("objref fih_AWBR")
        h('{fih_AWBR = new FInitializeHandler(0, "initialiseV_AWBR()")}')

        h("proc initialiseIons_AWBR() { for i = 0, n_AWBR-1 { a_AWBR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AWBR")
        h('{fih_ion_AWBR = new FInitializeHandler(1, "initialiseIons_AWBR()")}')

        # ######################   Population: AWCL
        print("Population AWCL contains 1 instance(s) of component: AWCL of type: cell")

        print("Setting the default initial concentrations for ca (used in AWCL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AWCL.hoc")
        a_AWCL = []
        h("{ n_AWCL = 1 }")
        h("objectvar a_AWCL[n_AWCL]")
        for i in range(int(h.n_AWCL)):
            h("a_AWCL[%i] = new AWCL()"%i)
            h("access a_AWCL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AWCL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AWCL() { for i = 0, n_AWCL-1 { a_AWCL[i].set_initial_v() } }")
        h("objref fih_AWCL")
        h('{fih_AWCL = new FInitializeHandler(0, "initialiseV_AWCL()")}')

        h("proc initialiseIons_AWCL() { for i = 0, n_AWCL-1 { a_AWCL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AWCL")
        h('{fih_ion_AWCL = new FInitializeHandler(1, "initialiseIons_AWCL()")}')

        # ######################   Population: AWCR
        print("Population AWCR contains 1 instance(s) of component: AWCR of type: cell")

        print("Setting the default initial concentrations for ca (used in AWCR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("AWCR.hoc")
        a_AWCR = []
        h("{ n_AWCR = 1 }")
        h("objectvar a_AWCR[n_AWCR]")
        for i in range(int(h.n_AWCR)):
            h("a_AWCR[%i] = new AWCR()"%i)
            h("access a_AWCR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_AWCR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_AWCR() { for i = 0, n_AWCR-1 { a_AWCR[i].set_initial_v() } }")
        h("objref fih_AWCR")
        h('{fih_AWCR = new FInitializeHandler(0, "initialiseV_AWCR()")}')

        h("proc initialiseIons_AWCR() { for i = 0, n_AWCR-1 { a_AWCR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_AWCR")
        h('{fih_ion_AWCR = new FInitializeHandler(1, "initialiseIons_AWCR()")}')

        # ######################   Population: BAGL
        print("Population BAGL contains 1 instance(s) of component: BAGL of type: cell")

        print("Setting the default initial concentrations for ca (used in BAGL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("BAGL.hoc")
        a_BAGL = []
        h("{ n_BAGL = 1 }")
        h("objectvar a_BAGL[n_BAGL]")
        for i in range(int(h.n_BAGL)):
            h("a_BAGL[%i] = new BAGL()"%i)
            h("access a_BAGL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_BAGL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_BAGL() { for i = 0, n_BAGL-1 { a_BAGL[i].set_initial_v() } }")
        h("objref fih_BAGL")
        h('{fih_BAGL = new FInitializeHandler(0, "initialiseV_BAGL()")}')

        h("proc initialiseIons_BAGL() { for i = 0, n_BAGL-1 { a_BAGL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_BAGL")
        h('{fih_ion_BAGL = new FInitializeHandler(1, "initialiseIons_BAGL()")}')

        # ######################   Population: BAGR
        print("Population BAGR contains 1 instance(s) of component: BAGR of type: cell")

        print("Setting the default initial concentrations for ca (used in BAGR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("BAGR.hoc")
        a_BAGR = []
        h("{ n_BAGR = 1 }")
        h("objectvar a_BAGR[n_BAGR]")
        for i in range(int(h.n_BAGR)):
            h("a_BAGR[%i] = new BAGR()"%i)
            h("access a_BAGR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_BAGR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_BAGR() { for i = 0, n_BAGR-1 { a_BAGR[i].set_initial_v() } }")
        h("objref fih_BAGR")
        h('{fih_BAGR = new FInitializeHandler(0, "initialiseV_BAGR()")}')

        h("proc initialiseIons_BAGR() { for i = 0, n_BAGR-1 { a_BAGR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_BAGR")
        h('{fih_ion_BAGR = new FInitializeHandler(1, "initialiseIons_BAGR()")}')

        # ######################   Population: BDUL
        print("Population BDUL contains 1 instance(s) of component: BDUL of type: cell")

        print("Setting the default initial concentrations for ca (used in BDUL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("BDUL.hoc")
        a_BDUL = []
        h("{ n_BDUL = 1 }")
        h("objectvar a_BDUL[n_BDUL]")
        for i in range(int(h.n_BDUL)):
            h("a_BDUL[%i] = new BDUL()"%i)
            h("access a_BDUL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_BDUL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_BDUL() { for i = 0, n_BDUL-1 { a_BDUL[i].set_initial_v() } }")
        h("objref fih_BDUL")
        h('{fih_BDUL = new FInitializeHandler(0, "initialiseV_BDUL()")}')

        h("proc initialiseIons_BDUL() { for i = 0, n_BDUL-1 { a_BDUL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_BDUL")
        h('{fih_ion_BDUL = new FInitializeHandler(1, "initialiseIons_BDUL()")}')

        # ######################   Population: BDUR
        print("Population BDUR contains 1 instance(s) of component: BDUR of type: cell")

        print("Setting the default initial concentrations for ca (used in BDUR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("BDUR.hoc")
        a_BDUR = []
        h("{ n_BDUR = 1 }")
        h("objectvar a_BDUR[n_BDUR]")
        for i in range(int(h.n_BDUR)):
            h("a_BDUR[%i] = new BDUR()"%i)
            h("access a_BDUR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_BDUR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_BDUR() { for i = 0, n_BDUR-1 { a_BDUR[i].set_initial_v() } }")
        h("objref fih_BDUR")
        h('{fih_BDUR = new FInitializeHandler(0, "initialiseV_BDUR()")}')

        h("proc initialiseIons_BDUR() { for i = 0, n_BDUR-1 { a_BDUR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_BDUR")
        h('{fih_ion_BDUR = new FInitializeHandler(1, "initialiseIons_BDUR()")}')

        # ######################   Population: CANL
        print("Population CANL contains 1 instance(s) of component: CANL of type: cell")

        print("Setting the default initial concentrations for ca (used in CANL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("CANL.hoc")
        a_CANL = []
        h("{ n_CANL = 1 }")
        h("objectvar a_CANL[n_CANL]")
        for i in range(int(h.n_CANL)):
            h("a_CANL[%i] = new CANL()"%i)
            h("access a_CANL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_CANL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_CANL() { for i = 0, n_CANL-1 { a_CANL[i].set_initial_v() } }")
        h("objref fih_CANL")
        h('{fih_CANL = new FInitializeHandler(0, "initialiseV_CANL()")}')

        h("proc initialiseIons_CANL() { for i = 0, n_CANL-1 { a_CANL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_CANL")
        h('{fih_ion_CANL = new FInitializeHandler(1, "initialiseIons_CANL()")}')

        # ######################   Population: CANR
        print("Population CANR contains 1 instance(s) of component: CANR of type: cell")

        print("Setting the default initial concentrations for ca (used in CANR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("CANR.hoc")
        a_CANR = []
        h("{ n_CANR = 1 }")
        h("objectvar a_CANR[n_CANR]")
        for i in range(int(h.n_CANR)):
            h("a_CANR[%i] = new CANR()"%i)
            h("access a_CANR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_CANR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_CANR() { for i = 0, n_CANR-1 { a_CANR[i].set_initial_v() } }")
        h("objref fih_CANR")
        h('{fih_CANR = new FInitializeHandler(0, "initialiseV_CANR()")}')

        h("proc initialiseIons_CANR() { for i = 0, n_CANR-1 { a_CANR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_CANR")
        h('{fih_ion_CANR = new FInitializeHandler(1, "initialiseIons_CANR()")}')

        # ######################   Population: CEPDL
        print("Population CEPDL contains 1 instance(s) of component: CEPDL of type: cell")

        print("Setting the default initial concentrations for ca (used in CEPDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("CEPDL.hoc")
        a_CEPDL = []
        h("{ n_CEPDL = 1 }")
        h("objectvar a_CEPDL[n_CEPDL]")
        for i in range(int(h.n_CEPDL)):
            h("a_CEPDL[%i] = new CEPDL()"%i)
            h("access a_CEPDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_CEPDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_CEPDL() { for i = 0, n_CEPDL-1 { a_CEPDL[i].set_initial_v() } }")
        h("objref fih_CEPDL")
        h('{fih_CEPDL = new FInitializeHandler(0, "initialiseV_CEPDL()")}')

        h("proc initialiseIons_CEPDL() { for i = 0, n_CEPDL-1 { a_CEPDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_CEPDL")
        h('{fih_ion_CEPDL = new FInitializeHandler(1, "initialiseIons_CEPDL()")}')

        # ######################   Population: CEPDR
        print("Population CEPDR contains 1 instance(s) of component: CEPDR of type: cell")

        print("Setting the default initial concentrations for ca (used in CEPDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("CEPDR.hoc")
        a_CEPDR = []
        h("{ n_CEPDR = 1 }")
        h("objectvar a_CEPDR[n_CEPDR]")
        for i in range(int(h.n_CEPDR)):
            h("a_CEPDR[%i] = new CEPDR()"%i)
            h("access a_CEPDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_CEPDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_CEPDR() { for i = 0, n_CEPDR-1 { a_CEPDR[i].set_initial_v() } }")
        h("objref fih_CEPDR")
        h('{fih_CEPDR = new FInitializeHandler(0, "initialiseV_CEPDR()")}')

        h("proc initialiseIons_CEPDR() { for i = 0, n_CEPDR-1 { a_CEPDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_CEPDR")
        h('{fih_ion_CEPDR = new FInitializeHandler(1, "initialiseIons_CEPDR()")}')

        # ######################   Population: CEPVL
        print("Population CEPVL contains 1 instance(s) of component: CEPVL of type: cell")

        print("Setting the default initial concentrations for ca (used in CEPVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("CEPVL.hoc")
        a_CEPVL = []
        h("{ n_CEPVL = 1 }")
        h("objectvar a_CEPVL[n_CEPVL]")
        for i in range(int(h.n_CEPVL)):
            h("a_CEPVL[%i] = new CEPVL()"%i)
            h("access a_CEPVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_CEPVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_CEPVL() { for i = 0, n_CEPVL-1 { a_CEPVL[i].set_initial_v() } }")
        h("objref fih_CEPVL")
        h('{fih_CEPVL = new FInitializeHandler(0, "initialiseV_CEPVL()")}')

        h("proc initialiseIons_CEPVL() { for i = 0, n_CEPVL-1 { a_CEPVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_CEPVL")
        h('{fih_ion_CEPVL = new FInitializeHandler(1, "initialiseIons_CEPVL()")}')

        # ######################   Population: CEPVR
        print("Population CEPVR contains 1 instance(s) of component: CEPVR of type: cell")

        print("Setting the default initial concentrations for ca (used in CEPVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("CEPVR.hoc")
        a_CEPVR = []
        h("{ n_CEPVR = 1 }")
        h("objectvar a_CEPVR[n_CEPVR]")
        for i in range(int(h.n_CEPVR)):
            h("a_CEPVR[%i] = new CEPVR()"%i)
            h("access a_CEPVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_CEPVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_CEPVR() { for i = 0, n_CEPVR-1 { a_CEPVR[i].set_initial_v() } }")
        h("objref fih_CEPVR")
        h('{fih_CEPVR = new FInitializeHandler(0, "initialiseV_CEPVR()")}')

        h("proc initialiseIons_CEPVR() { for i = 0, n_CEPVR-1 { a_CEPVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_CEPVR")
        h('{fih_ion_CEPVR = new FInitializeHandler(1, "initialiseIons_CEPVR()")}')

        # ######################   Population: DA1
        print("Population DA1 contains 1 instance(s) of component: DA1 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA1.hoc")
        a_DA1 = []
        h("{ n_DA1 = 1 }")
        h("objectvar a_DA1[n_DA1]")
        for i in range(int(h.n_DA1)):
            h("a_DA1[%i] = new DA1()"%i)
            h("access a_DA1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA1() { for i = 0, n_DA1-1 { a_DA1[i].set_initial_v() } }")
        h("objref fih_DA1")
        h('{fih_DA1 = new FInitializeHandler(0, "initialiseV_DA1()")}')

        h("proc initialiseIons_DA1() { for i = 0, n_DA1-1 { a_DA1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA1")
        h('{fih_ion_DA1 = new FInitializeHandler(1, "initialiseIons_DA1()")}')

        # ######################   Population: DA2
        print("Population DA2 contains 1 instance(s) of component: DA2 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA2.hoc")
        a_DA2 = []
        h("{ n_DA2 = 1 }")
        h("objectvar a_DA2[n_DA2]")
        for i in range(int(h.n_DA2)):
            h("a_DA2[%i] = new DA2()"%i)
            h("access a_DA2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA2() { for i = 0, n_DA2-1 { a_DA2[i].set_initial_v() } }")
        h("objref fih_DA2")
        h('{fih_DA2 = new FInitializeHandler(0, "initialiseV_DA2()")}')

        h("proc initialiseIons_DA2() { for i = 0, n_DA2-1 { a_DA2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA2")
        h('{fih_ion_DA2 = new FInitializeHandler(1, "initialiseIons_DA2()")}')

        # ######################   Population: DA3
        print("Population DA3 contains 1 instance(s) of component: DA3 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA3.hoc")
        a_DA3 = []
        h("{ n_DA3 = 1 }")
        h("objectvar a_DA3[n_DA3]")
        for i in range(int(h.n_DA3)):
            h("a_DA3[%i] = new DA3()"%i)
            h("access a_DA3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA3() { for i = 0, n_DA3-1 { a_DA3[i].set_initial_v() } }")
        h("objref fih_DA3")
        h('{fih_DA3 = new FInitializeHandler(0, "initialiseV_DA3()")}')

        h("proc initialiseIons_DA3() { for i = 0, n_DA3-1 { a_DA3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA3")
        h('{fih_ion_DA3 = new FInitializeHandler(1, "initialiseIons_DA3()")}')

        # ######################   Population: DA4
        print("Population DA4 contains 1 instance(s) of component: DA4 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA4.hoc")
        a_DA4 = []
        h("{ n_DA4 = 1 }")
        h("objectvar a_DA4[n_DA4]")
        for i in range(int(h.n_DA4)):
            h("a_DA4[%i] = new DA4()"%i)
            h("access a_DA4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA4() { for i = 0, n_DA4-1 { a_DA4[i].set_initial_v() } }")
        h("objref fih_DA4")
        h('{fih_DA4 = new FInitializeHandler(0, "initialiseV_DA4()")}')

        h("proc initialiseIons_DA4() { for i = 0, n_DA4-1 { a_DA4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA4")
        h('{fih_ion_DA4 = new FInitializeHandler(1, "initialiseIons_DA4()")}')

        # ######################   Population: DA5
        print("Population DA5 contains 1 instance(s) of component: DA5 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA5.hoc")
        a_DA5 = []
        h("{ n_DA5 = 1 }")
        h("objectvar a_DA5[n_DA5]")
        for i in range(int(h.n_DA5)):
            h("a_DA5[%i] = new DA5()"%i)
            h("access a_DA5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA5() { for i = 0, n_DA5-1 { a_DA5[i].set_initial_v() } }")
        h("objref fih_DA5")
        h('{fih_DA5 = new FInitializeHandler(0, "initialiseV_DA5()")}')

        h("proc initialiseIons_DA5() { for i = 0, n_DA5-1 { a_DA5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA5")
        h('{fih_ion_DA5 = new FInitializeHandler(1, "initialiseIons_DA5()")}')

        # ######################   Population: DA6
        print("Population DA6 contains 1 instance(s) of component: DA6 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA6.hoc")
        a_DA6 = []
        h("{ n_DA6 = 1 }")
        h("objectvar a_DA6[n_DA6]")
        for i in range(int(h.n_DA6)):
            h("a_DA6[%i] = new DA6()"%i)
            h("access a_DA6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA6() { for i = 0, n_DA6-1 { a_DA6[i].set_initial_v() } }")
        h("objref fih_DA6")
        h('{fih_DA6 = new FInitializeHandler(0, "initialiseV_DA6()")}')

        h("proc initialiseIons_DA6() { for i = 0, n_DA6-1 { a_DA6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA6")
        h('{fih_ion_DA6 = new FInitializeHandler(1, "initialiseIons_DA6()")}')

        # ######################   Population: DA7
        print("Population DA7 contains 1 instance(s) of component: DA7 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA7) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA7.hoc")
        a_DA7 = []
        h("{ n_DA7 = 1 }")
        h("objectvar a_DA7[n_DA7]")
        for i in range(int(h.n_DA7)):
            h("a_DA7[%i] = new DA7()"%i)
            h("access a_DA7[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA7[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA7() { for i = 0, n_DA7-1 { a_DA7[i].set_initial_v() } }")
        h("objref fih_DA7")
        h('{fih_DA7 = new FInitializeHandler(0, "initialiseV_DA7()")}')

        h("proc initialiseIons_DA7() { for i = 0, n_DA7-1 { a_DA7[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA7")
        h('{fih_ion_DA7 = new FInitializeHandler(1, "initialiseIons_DA7()")}')

        # ######################   Population: DA8
        print("Population DA8 contains 1 instance(s) of component: DA8 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA8) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA8.hoc")
        a_DA8 = []
        h("{ n_DA8 = 1 }")
        h("objectvar a_DA8[n_DA8]")
        for i in range(int(h.n_DA8)):
            h("a_DA8[%i] = new DA8()"%i)
            h("access a_DA8[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA8[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA8() { for i = 0, n_DA8-1 { a_DA8[i].set_initial_v() } }")
        h("objref fih_DA8")
        h('{fih_DA8 = new FInitializeHandler(0, "initialiseV_DA8()")}')

        h("proc initialiseIons_DA8() { for i = 0, n_DA8-1 { a_DA8[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA8")
        h('{fih_ion_DA8 = new FInitializeHandler(1, "initialiseIons_DA8()")}')

        # ######################   Population: DA9
        print("Population DA9 contains 1 instance(s) of component: DA9 of type: cell")

        print("Setting the default initial concentrations for ca (used in DA9) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DA9.hoc")
        a_DA9 = []
        h("{ n_DA9 = 1 }")
        h("objectvar a_DA9[n_DA9]")
        for i in range(int(h.n_DA9)):
            h("a_DA9[%i] = new DA9()"%i)
            h("access a_DA9[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DA9[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DA9() { for i = 0, n_DA9-1 { a_DA9[i].set_initial_v() } }")
        h("objref fih_DA9")
        h('{fih_DA9 = new FInitializeHandler(0, "initialiseV_DA9()")}')

        h("proc initialiseIons_DA9() { for i = 0, n_DA9-1 { a_DA9[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DA9")
        h('{fih_ion_DA9 = new FInitializeHandler(1, "initialiseIons_DA9()")}')

        # ######################   Population: DB1
        print("Population DB1 contains 1 instance(s) of component: DB1 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB1.hoc")
        a_DB1 = []
        h("{ n_DB1 = 1 }")
        h("objectvar a_DB1[n_DB1]")
        for i in range(int(h.n_DB1)):
            h("a_DB1[%i] = new DB1()"%i)
            h("access a_DB1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB1() { for i = 0, n_DB1-1 { a_DB1[i].set_initial_v() } }")
        h("objref fih_DB1")
        h('{fih_DB1 = new FInitializeHandler(0, "initialiseV_DB1()")}')

        h("proc initialiseIons_DB1() { for i = 0, n_DB1-1 { a_DB1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB1")
        h('{fih_ion_DB1 = new FInitializeHandler(1, "initialiseIons_DB1()")}')

        # ######################   Population: DB2
        print("Population DB2 contains 1 instance(s) of component: DB2 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB2.hoc")
        a_DB2 = []
        h("{ n_DB2 = 1 }")
        h("objectvar a_DB2[n_DB2]")
        for i in range(int(h.n_DB2)):
            h("a_DB2[%i] = new DB2()"%i)
            h("access a_DB2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB2() { for i = 0, n_DB2-1 { a_DB2[i].set_initial_v() } }")
        h("objref fih_DB2")
        h('{fih_DB2 = new FInitializeHandler(0, "initialiseV_DB2()")}')

        h("proc initialiseIons_DB2() { for i = 0, n_DB2-1 { a_DB2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB2")
        h('{fih_ion_DB2 = new FInitializeHandler(1, "initialiseIons_DB2()")}')

        # ######################   Population: DB3
        print("Population DB3 contains 1 instance(s) of component: DB3 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB3.hoc")
        a_DB3 = []
        h("{ n_DB3 = 1 }")
        h("objectvar a_DB3[n_DB3]")
        for i in range(int(h.n_DB3)):
            h("a_DB3[%i] = new DB3()"%i)
            h("access a_DB3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB3() { for i = 0, n_DB3-1 { a_DB3[i].set_initial_v() } }")
        h("objref fih_DB3")
        h('{fih_DB3 = new FInitializeHandler(0, "initialiseV_DB3()")}')

        h("proc initialiseIons_DB3() { for i = 0, n_DB3-1 { a_DB3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB3")
        h('{fih_ion_DB3 = new FInitializeHandler(1, "initialiseIons_DB3()")}')

        # ######################   Population: DB4
        print("Population DB4 contains 1 instance(s) of component: DB4 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB4.hoc")
        a_DB4 = []
        h("{ n_DB4 = 1 }")
        h("objectvar a_DB4[n_DB4]")
        for i in range(int(h.n_DB4)):
            h("a_DB4[%i] = new DB4()"%i)
            h("access a_DB4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB4() { for i = 0, n_DB4-1 { a_DB4[i].set_initial_v() } }")
        h("objref fih_DB4")
        h('{fih_DB4 = new FInitializeHandler(0, "initialiseV_DB4()")}')

        h("proc initialiseIons_DB4() { for i = 0, n_DB4-1 { a_DB4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB4")
        h('{fih_ion_DB4 = new FInitializeHandler(1, "initialiseIons_DB4()")}')

        # ######################   Population: DB5
        print("Population DB5 contains 1 instance(s) of component: DB5 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB5.hoc")
        a_DB5 = []
        h("{ n_DB5 = 1 }")
        h("objectvar a_DB5[n_DB5]")
        for i in range(int(h.n_DB5)):
            h("a_DB5[%i] = new DB5()"%i)
            h("access a_DB5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB5() { for i = 0, n_DB5-1 { a_DB5[i].set_initial_v() } }")
        h("objref fih_DB5")
        h('{fih_DB5 = new FInitializeHandler(0, "initialiseV_DB5()")}')

        h("proc initialiseIons_DB5() { for i = 0, n_DB5-1 { a_DB5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB5")
        h('{fih_ion_DB5 = new FInitializeHandler(1, "initialiseIons_DB5()")}')

        # ######################   Population: DB6
        print("Population DB6 contains 1 instance(s) of component: DB6 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB6.hoc")
        a_DB6 = []
        h("{ n_DB6 = 1 }")
        h("objectvar a_DB6[n_DB6]")
        for i in range(int(h.n_DB6)):
            h("a_DB6[%i] = new DB6()"%i)
            h("access a_DB6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB6() { for i = 0, n_DB6-1 { a_DB6[i].set_initial_v() } }")
        h("objref fih_DB6")
        h('{fih_DB6 = new FInitializeHandler(0, "initialiseV_DB6()")}')

        h("proc initialiseIons_DB6() { for i = 0, n_DB6-1 { a_DB6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB6")
        h('{fih_ion_DB6 = new FInitializeHandler(1, "initialiseIons_DB6()")}')

        # ######################   Population: DB7
        print("Population DB7 contains 1 instance(s) of component: DB7 of type: cell")

        print("Setting the default initial concentrations for ca (used in DB7) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DB7.hoc")
        a_DB7 = []
        h("{ n_DB7 = 1 }")
        h("objectvar a_DB7[n_DB7]")
        for i in range(int(h.n_DB7)):
            h("a_DB7[%i] = new DB7()"%i)
            h("access a_DB7[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DB7[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DB7() { for i = 0, n_DB7-1 { a_DB7[i].set_initial_v() } }")
        h("objref fih_DB7")
        h('{fih_DB7 = new FInitializeHandler(0, "initialiseV_DB7()")}')

        h("proc initialiseIons_DB7() { for i = 0, n_DB7-1 { a_DB7[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DB7")
        h('{fih_ion_DB7 = new FInitializeHandler(1, "initialiseIons_DB7()")}')

        # ######################   Population: DD1
        print("Population DD1 contains 1 instance(s) of component: DD1 of type: cell")

        print("Setting the default initial concentrations for ca (used in DD1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DD1.hoc")
        a_DD1 = []
        h("{ n_DD1 = 1 }")
        h("objectvar a_DD1[n_DD1]")
        for i in range(int(h.n_DD1)):
            h("a_DD1[%i] = new DD1()"%i)
            h("access a_DD1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DD1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DD1() { for i = 0, n_DD1-1 { a_DD1[i].set_initial_v() } }")
        h("objref fih_DD1")
        h('{fih_DD1 = new FInitializeHandler(0, "initialiseV_DD1()")}')

        h("proc initialiseIons_DD1() { for i = 0, n_DD1-1 { a_DD1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DD1")
        h('{fih_ion_DD1 = new FInitializeHandler(1, "initialiseIons_DD1()")}')

        # ######################   Population: DD2
        print("Population DD2 contains 1 instance(s) of component: DD2 of type: cell")

        print("Setting the default initial concentrations for ca (used in DD2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DD2.hoc")
        a_DD2 = []
        h("{ n_DD2 = 1 }")
        h("objectvar a_DD2[n_DD2]")
        for i in range(int(h.n_DD2)):
            h("a_DD2[%i] = new DD2()"%i)
            h("access a_DD2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DD2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DD2() { for i = 0, n_DD2-1 { a_DD2[i].set_initial_v() } }")
        h("objref fih_DD2")
        h('{fih_DD2 = new FInitializeHandler(0, "initialiseV_DD2()")}')

        h("proc initialiseIons_DD2() { for i = 0, n_DD2-1 { a_DD2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DD2")
        h('{fih_ion_DD2 = new FInitializeHandler(1, "initialiseIons_DD2()")}')

        # ######################   Population: DD3
        print("Population DD3 contains 1 instance(s) of component: DD3 of type: cell")

        print("Setting the default initial concentrations for ca (used in DD3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DD3.hoc")
        a_DD3 = []
        h("{ n_DD3 = 1 }")
        h("objectvar a_DD3[n_DD3]")
        for i in range(int(h.n_DD3)):
            h("a_DD3[%i] = new DD3()"%i)
            h("access a_DD3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DD3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DD3() { for i = 0, n_DD3-1 { a_DD3[i].set_initial_v() } }")
        h("objref fih_DD3")
        h('{fih_DD3 = new FInitializeHandler(0, "initialiseV_DD3()")}')

        h("proc initialiseIons_DD3() { for i = 0, n_DD3-1 { a_DD3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DD3")
        h('{fih_ion_DD3 = new FInitializeHandler(1, "initialiseIons_DD3()")}')

        # ######################   Population: DD4
        print("Population DD4 contains 1 instance(s) of component: DD4 of type: cell")

        print("Setting the default initial concentrations for ca (used in DD4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DD4.hoc")
        a_DD4 = []
        h("{ n_DD4 = 1 }")
        h("objectvar a_DD4[n_DD4]")
        for i in range(int(h.n_DD4)):
            h("a_DD4[%i] = new DD4()"%i)
            h("access a_DD4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DD4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DD4() { for i = 0, n_DD4-1 { a_DD4[i].set_initial_v() } }")
        h("objref fih_DD4")
        h('{fih_DD4 = new FInitializeHandler(0, "initialiseV_DD4()")}')

        h("proc initialiseIons_DD4() { for i = 0, n_DD4-1 { a_DD4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DD4")
        h('{fih_ion_DD4 = new FInitializeHandler(1, "initialiseIons_DD4()")}')

        # ######################   Population: DD5
        print("Population DD5 contains 1 instance(s) of component: DD5 of type: cell")

        print("Setting the default initial concentrations for ca (used in DD5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DD5.hoc")
        a_DD5 = []
        h("{ n_DD5 = 1 }")
        h("objectvar a_DD5[n_DD5]")
        for i in range(int(h.n_DD5)):
            h("a_DD5[%i] = new DD5()"%i)
            h("access a_DD5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DD5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DD5() { for i = 0, n_DD5-1 { a_DD5[i].set_initial_v() } }")
        h("objref fih_DD5")
        h('{fih_DD5 = new FInitializeHandler(0, "initialiseV_DD5()")}')

        h("proc initialiseIons_DD5() { for i = 0, n_DD5-1 { a_DD5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DD5")
        h('{fih_ion_DD5 = new FInitializeHandler(1, "initialiseIons_DD5()")}')

        # ######################   Population: DD6
        print("Population DD6 contains 1 instance(s) of component: DD6 of type: cell")

        print("Setting the default initial concentrations for ca (used in DD6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DD6.hoc")
        a_DD6 = []
        h("{ n_DD6 = 1 }")
        h("objectvar a_DD6[n_DD6]")
        for i in range(int(h.n_DD6)):
            h("a_DD6[%i] = new DD6()"%i)
            h("access a_DD6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DD6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DD6() { for i = 0, n_DD6-1 { a_DD6[i].set_initial_v() } }")
        h("objref fih_DD6")
        h('{fih_DD6 = new FInitializeHandler(0, "initialiseV_DD6()")}')

        h("proc initialiseIons_DD6() { for i = 0, n_DD6-1 { a_DD6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DD6")
        h('{fih_ion_DD6 = new FInitializeHandler(1, "initialiseIons_DD6()")}')

        # ######################   Population: DVA
        print("Population DVA contains 1 instance(s) of component: DVA of type: cell")

        print("Setting the default initial concentrations for ca (used in DVA) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DVA.hoc")
        a_DVA = []
        h("{ n_DVA = 1 }")
        h("objectvar a_DVA[n_DVA]")
        for i in range(int(h.n_DVA)):
            h("a_DVA[%i] = new DVA()"%i)
            h("access a_DVA[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DVA[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DVA() { for i = 0, n_DVA-1 { a_DVA[i].set_initial_v() } }")
        h("objref fih_DVA")
        h('{fih_DVA = new FInitializeHandler(0, "initialiseV_DVA()")}')

        h("proc initialiseIons_DVA() { for i = 0, n_DVA-1 { a_DVA[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DVA")
        h('{fih_ion_DVA = new FInitializeHandler(1, "initialiseIons_DVA()")}')

        # ######################   Population: DVB
        print("Population DVB contains 1 instance(s) of component: DVB of type: cell")

        print("Setting the default initial concentrations for ca (used in DVB) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DVB.hoc")
        a_DVB = []
        h("{ n_DVB = 1 }")
        h("objectvar a_DVB[n_DVB]")
        for i in range(int(h.n_DVB)):
            h("a_DVB[%i] = new DVB()"%i)
            h("access a_DVB[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DVB[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DVB() { for i = 0, n_DVB-1 { a_DVB[i].set_initial_v() } }")
        h("objref fih_DVB")
        h('{fih_DVB = new FInitializeHandler(0, "initialiseV_DVB()")}')

        h("proc initialiseIons_DVB() { for i = 0, n_DVB-1 { a_DVB[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DVB")
        h('{fih_ion_DVB = new FInitializeHandler(1, "initialiseIons_DVB()")}')

        # ######################   Population: DVC
        print("Population DVC contains 1 instance(s) of component: DVC of type: cell")

        print("Setting the default initial concentrations for ca (used in DVC) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("DVC.hoc")
        a_DVC = []
        h("{ n_DVC = 1 }")
        h("objectvar a_DVC[n_DVC]")
        for i in range(int(h.n_DVC)):
            h("a_DVC[%i] = new DVC()"%i)
            h("access a_DVC[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_DVC[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_DVC() { for i = 0, n_DVC-1 { a_DVC[i].set_initial_v() } }")
        h("objref fih_DVC")
        h('{fih_DVC = new FInitializeHandler(0, "initialiseV_DVC()")}')

        h("proc initialiseIons_DVC() { for i = 0, n_DVC-1 { a_DVC[i].set_initial_ion_properties() } }")
        h("objref fih_ion_DVC")
        h('{fih_ion_DVC = new FInitializeHandler(1, "initialiseIons_DVC()")}')

        # ######################   Population: FLPL
        print("Population FLPL contains 1 instance(s) of component: FLPL of type: cell")

        print("Setting the default initial concentrations for ca (used in FLPL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("FLPL.hoc")
        a_FLPL = []
        h("{ n_FLPL = 1 }")
        h("objectvar a_FLPL[n_FLPL]")
        for i in range(int(h.n_FLPL)):
            h("a_FLPL[%i] = new FLPL()"%i)
            h("access a_FLPL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_FLPL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_FLPL() { for i = 0, n_FLPL-1 { a_FLPL[i].set_initial_v() } }")
        h("objref fih_FLPL")
        h('{fih_FLPL = new FInitializeHandler(0, "initialiseV_FLPL()")}')

        h("proc initialiseIons_FLPL() { for i = 0, n_FLPL-1 { a_FLPL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_FLPL")
        h('{fih_ion_FLPL = new FInitializeHandler(1, "initialiseIons_FLPL()")}')

        # ######################   Population: FLPR
        print("Population FLPR contains 1 instance(s) of component: FLPR of type: cell")

        print("Setting the default initial concentrations for ca (used in FLPR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("FLPR.hoc")
        a_FLPR = []
        h("{ n_FLPR = 1 }")
        h("objectvar a_FLPR[n_FLPR]")
        for i in range(int(h.n_FLPR)):
            h("a_FLPR[%i] = new FLPR()"%i)
            h("access a_FLPR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_FLPR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_FLPR() { for i = 0, n_FLPR-1 { a_FLPR[i].set_initial_v() } }")
        h("objref fih_FLPR")
        h('{fih_FLPR = new FInitializeHandler(0, "initialiseV_FLPR()")}')

        h("proc initialiseIons_FLPR() { for i = 0, n_FLPR-1 { a_FLPR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_FLPR")
        h('{fih_ion_FLPR = new FInitializeHandler(1, "initialiseIons_FLPR()")}')

        # ######################   Population: HSNL
        print("Population HSNL contains 1 instance(s) of component: HSNL of type: cell")

        print("Setting the default initial concentrations for ca (used in HSNL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("HSNL.hoc")
        a_HSNL = []
        h("{ n_HSNL = 1 }")
        h("objectvar a_HSNL[n_HSNL]")
        for i in range(int(h.n_HSNL)):
            h("a_HSNL[%i] = new HSNL()"%i)
            h("access a_HSNL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_HSNL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_HSNL() { for i = 0, n_HSNL-1 { a_HSNL[i].set_initial_v() } }")
        h("objref fih_HSNL")
        h('{fih_HSNL = new FInitializeHandler(0, "initialiseV_HSNL()")}')

        h("proc initialiseIons_HSNL() { for i = 0, n_HSNL-1 { a_HSNL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_HSNL")
        h('{fih_ion_HSNL = new FInitializeHandler(1, "initialiseIons_HSNL()")}')

        # ######################   Population: HSNR
        print("Population HSNR contains 1 instance(s) of component: HSNR of type: cell")

        print("Setting the default initial concentrations for ca (used in HSNR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("HSNR.hoc")
        a_HSNR = []
        h("{ n_HSNR = 1 }")
        h("objectvar a_HSNR[n_HSNR]")
        for i in range(int(h.n_HSNR)):
            h("a_HSNR[%i] = new HSNR()"%i)
            h("access a_HSNR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_HSNR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_HSNR() { for i = 0, n_HSNR-1 { a_HSNR[i].set_initial_v() } }")
        h("objref fih_HSNR")
        h('{fih_HSNR = new FInitializeHandler(0, "initialiseV_HSNR()")}')

        h("proc initialiseIons_HSNR() { for i = 0, n_HSNR-1 { a_HSNR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_HSNR")
        h('{fih_ion_HSNR = new FInitializeHandler(1, "initialiseIons_HSNR()")}')

        # ######################   Population: I1L
        print("Population I1L contains 1 instance(s) of component: I1L of type: cell")

        print("Setting the default initial concentrations for ca (used in I1L) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I1L.hoc")
        a_I1L = []
        h("{ n_I1L = 1 }")
        h("objectvar a_I1L[n_I1L]")
        for i in range(int(h.n_I1L)):
            h("a_I1L[%i] = new I1L()"%i)
            h("access a_I1L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I1L[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I1L() { for i = 0, n_I1L-1 { a_I1L[i].set_initial_v() } }")
        h("objref fih_I1L")
        h('{fih_I1L = new FInitializeHandler(0, "initialiseV_I1L()")}')

        h("proc initialiseIons_I1L() { for i = 0, n_I1L-1 { a_I1L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I1L")
        h('{fih_ion_I1L = new FInitializeHandler(1, "initialiseIons_I1L()")}')

        # ######################   Population: I1R
        print("Population I1R contains 1 instance(s) of component: I1R of type: cell")

        print("Setting the default initial concentrations for ca (used in I1R) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I1R.hoc")
        a_I1R = []
        h("{ n_I1R = 1 }")
        h("objectvar a_I1R[n_I1R]")
        for i in range(int(h.n_I1R)):
            h("a_I1R[%i] = new I1R()"%i)
            h("access a_I1R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I1R[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I1R() { for i = 0, n_I1R-1 { a_I1R[i].set_initial_v() } }")
        h("objref fih_I1R")
        h('{fih_I1R = new FInitializeHandler(0, "initialiseV_I1R()")}')

        h("proc initialiseIons_I1R() { for i = 0, n_I1R-1 { a_I1R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I1R")
        h('{fih_ion_I1R = new FInitializeHandler(1, "initialiseIons_I1R()")}')

        # ######################   Population: I2L
        print("Population I2L contains 1 instance(s) of component: I2L of type: cell")

        print("Setting the default initial concentrations for ca (used in I2L) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I2L.hoc")
        a_I2L = []
        h("{ n_I2L = 1 }")
        h("objectvar a_I2L[n_I2L]")
        for i in range(int(h.n_I2L)):
            h("a_I2L[%i] = new I2L()"%i)
            h("access a_I2L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I2L[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I2L() { for i = 0, n_I2L-1 { a_I2L[i].set_initial_v() } }")
        h("objref fih_I2L")
        h('{fih_I2L = new FInitializeHandler(0, "initialiseV_I2L()")}')

        h("proc initialiseIons_I2L() { for i = 0, n_I2L-1 { a_I2L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I2L")
        h('{fih_ion_I2L = new FInitializeHandler(1, "initialiseIons_I2L()")}')

        # ######################   Population: I2R
        print("Population I2R contains 1 instance(s) of component: I2R of type: cell")

        print("Setting the default initial concentrations for ca (used in I2R) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I2R.hoc")
        a_I2R = []
        h("{ n_I2R = 1 }")
        h("objectvar a_I2R[n_I2R]")
        for i in range(int(h.n_I2R)):
            h("a_I2R[%i] = new I2R()"%i)
            h("access a_I2R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I2R[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I2R() { for i = 0, n_I2R-1 { a_I2R[i].set_initial_v() } }")
        h("objref fih_I2R")
        h('{fih_I2R = new FInitializeHandler(0, "initialiseV_I2R()")}')

        h("proc initialiseIons_I2R() { for i = 0, n_I2R-1 { a_I2R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I2R")
        h('{fih_ion_I2R = new FInitializeHandler(1, "initialiseIons_I2R()")}')

        # ######################   Population: I3
        print("Population I3 contains 1 instance(s) of component: I3 of type: cell")

        print("Setting the default initial concentrations for ca (used in I3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I3.hoc")
        a_I3 = []
        h("{ n_I3 = 1 }")
        h("objectvar a_I3[n_I3]")
        for i in range(int(h.n_I3)):
            h("a_I3[%i] = new I3()"%i)
            h("access a_I3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I3() { for i = 0, n_I3-1 { a_I3[i].set_initial_v() } }")
        h("objref fih_I3")
        h('{fih_I3 = new FInitializeHandler(0, "initialiseV_I3()")}')

        h("proc initialiseIons_I3() { for i = 0, n_I3-1 { a_I3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I3")
        h('{fih_ion_I3 = new FInitializeHandler(1, "initialiseIons_I3()")}')

        # ######################   Population: I4
        print("Population I4 contains 1 instance(s) of component: I4 of type: cell")

        print("Setting the default initial concentrations for ca (used in I4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I4.hoc")
        a_I4 = []
        h("{ n_I4 = 1 }")
        h("objectvar a_I4[n_I4]")
        for i in range(int(h.n_I4)):
            h("a_I4[%i] = new I4()"%i)
            h("access a_I4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I4() { for i = 0, n_I4-1 { a_I4[i].set_initial_v() } }")
        h("objref fih_I4")
        h('{fih_I4 = new FInitializeHandler(0, "initialiseV_I4()")}')

        h("proc initialiseIons_I4() { for i = 0, n_I4-1 { a_I4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I4")
        h('{fih_ion_I4 = new FInitializeHandler(1, "initialiseIons_I4()")}')

        # ######################   Population: I5
        print("Population I5 contains 1 instance(s) of component: I5 of type: cell")

        print("Setting the default initial concentrations for ca (used in I5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I5.hoc")
        a_I5 = []
        h("{ n_I5 = 1 }")
        h("objectvar a_I5[n_I5]")
        for i in range(int(h.n_I5)):
            h("a_I5[%i] = new I5()"%i)
            h("access a_I5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I5() { for i = 0, n_I5-1 { a_I5[i].set_initial_v() } }")
        h("objref fih_I5")
        h('{fih_I5 = new FInitializeHandler(0, "initialiseV_I5()")}')

        h("proc initialiseIons_I5() { for i = 0, n_I5-1 { a_I5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I5")
        h('{fih_ion_I5 = new FInitializeHandler(1, "initialiseIons_I5()")}')

        # ######################   Population: I6
        print("Population I6 contains 1 instance(s) of component: I6 of type: cell")

        print("Setting the default initial concentrations for ca (used in I6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("I6.hoc")
        a_I6 = []
        h("{ n_I6 = 1 }")
        h("objectvar a_I6[n_I6]")
        for i in range(int(h.n_I6)):
            h("a_I6[%i] = new I6()"%i)
            h("access a_I6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_I6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_I6() { for i = 0, n_I6-1 { a_I6[i].set_initial_v() } }")
        h("objref fih_I6")
        h('{fih_I6 = new FInitializeHandler(0, "initialiseV_I6()")}')

        h("proc initialiseIons_I6() { for i = 0, n_I6-1 { a_I6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_I6")
        h('{fih_ion_I6 = new FInitializeHandler(1, "initialiseIons_I6()")}')

        # ######################   Population: IL1DL
        print("Population IL1DL contains 1 instance(s) of component: IL1DL of type: cell")

        print("Setting the default initial concentrations for ca (used in IL1DL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL1DL.hoc")
        a_IL1DL = []
        h("{ n_IL1DL = 1 }")
        h("objectvar a_IL1DL[n_IL1DL]")
        for i in range(int(h.n_IL1DL)):
            h("a_IL1DL[%i] = new IL1DL()"%i)
            h("access a_IL1DL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL1DL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL1DL() { for i = 0, n_IL1DL-1 { a_IL1DL[i].set_initial_v() } }")
        h("objref fih_IL1DL")
        h('{fih_IL1DL = new FInitializeHandler(0, "initialiseV_IL1DL()")}')

        h("proc initialiseIons_IL1DL() { for i = 0, n_IL1DL-1 { a_IL1DL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL1DL")
        h('{fih_ion_IL1DL = new FInitializeHandler(1, "initialiseIons_IL1DL()")}')

        # ######################   Population: IL1DR
        print("Population IL1DR contains 1 instance(s) of component: IL1DR of type: cell")

        print("Setting the default initial concentrations for ca (used in IL1DR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL1DR.hoc")
        a_IL1DR = []
        h("{ n_IL1DR = 1 }")
        h("objectvar a_IL1DR[n_IL1DR]")
        for i in range(int(h.n_IL1DR)):
            h("a_IL1DR[%i] = new IL1DR()"%i)
            h("access a_IL1DR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL1DR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL1DR() { for i = 0, n_IL1DR-1 { a_IL1DR[i].set_initial_v() } }")
        h("objref fih_IL1DR")
        h('{fih_IL1DR = new FInitializeHandler(0, "initialiseV_IL1DR()")}')

        h("proc initialiseIons_IL1DR() { for i = 0, n_IL1DR-1 { a_IL1DR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL1DR")
        h('{fih_ion_IL1DR = new FInitializeHandler(1, "initialiseIons_IL1DR()")}')

        # ######################   Population: IL1L
        print("Population IL1L contains 1 instance(s) of component: IL1L of type: cell")

        print("Setting the default initial concentrations for ca (used in IL1L) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL1L.hoc")
        a_IL1L = []
        h("{ n_IL1L = 1 }")
        h("objectvar a_IL1L[n_IL1L]")
        for i in range(int(h.n_IL1L)):
            h("a_IL1L[%i] = new IL1L()"%i)
            h("access a_IL1L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL1L[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL1L() { for i = 0, n_IL1L-1 { a_IL1L[i].set_initial_v() } }")
        h("objref fih_IL1L")
        h('{fih_IL1L = new FInitializeHandler(0, "initialiseV_IL1L()")}')

        h("proc initialiseIons_IL1L() { for i = 0, n_IL1L-1 { a_IL1L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL1L")
        h('{fih_ion_IL1L = new FInitializeHandler(1, "initialiseIons_IL1L()")}')

        # ######################   Population: IL1R
        print("Population IL1R contains 1 instance(s) of component: IL1R of type: cell")

        print("Setting the default initial concentrations for ca (used in IL1R) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL1R.hoc")
        a_IL1R = []
        h("{ n_IL1R = 1 }")
        h("objectvar a_IL1R[n_IL1R]")
        for i in range(int(h.n_IL1R)):
            h("a_IL1R[%i] = new IL1R()"%i)
            h("access a_IL1R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL1R[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL1R() { for i = 0, n_IL1R-1 { a_IL1R[i].set_initial_v() } }")
        h("objref fih_IL1R")
        h('{fih_IL1R = new FInitializeHandler(0, "initialiseV_IL1R()")}')

        h("proc initialiseIons_IL1R() { for i = 0, n_IL1R-1 { a_IL1R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL1R")
        h('{fih_ion_IL1R = new FInitializeHandler(1, "initialiseIons_IL1R()")}')

        # ######################   Population: IL1VL
        print("Population IL1VL contains 1 instance(s) of component: IL1VL of type: cell")

        print("Setting the default initial concentrations for ca (used in IL1VL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL1VL.hoc")
        a_IL1VL = []
        h("{ n_IL1VL = 1 }")
        h("objectvar a_IL1VL[n_IL1VL]")
        for i in range(int(h.n_IL1VL)):
            h("a_IL1VL[%i] = new IL1VL()"%i)
            h("access a_IL1VL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL1VL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL1VL() { for i = 0, n_IL1VL-1 { a_IL1VL[i].set_initial_v() } }")
        h("objref fih_IL1VL")
        h('{fih_IL1VL = new FInitializeHandler(0, "initialiseV_IL1VL()")}')

        h("proc initialiseIons_IL1VL() { for i = 0, n_IL1VL-1 { a_IL1VL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL1VL")
        h('{fih_ion_IL1VL = new FInitializeHandler(1, "initialiseIons_IL1VL()")}')

        # ######################   Population: IL1VR
        print("Population IL1VR contains 1 instance(s) of component: IL1VR of type: cell")

        print("Setting the default initial concentrations for ca (used in IL1VR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL1VR.hoc")
        a_IL1VR = []
        h("{ n_IL1VR = 1 }")
        h("objectvar a_IL1VR[n_IL1VR]")
        for i in range(int(h.n_IL1VR)):
            h("a_IL1VR[%i] = new IL1VR()"%i)
            h("access a_IL1VR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL1VR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL1VR() { for i = 0, n_IL1VR-1 { a_IL1VR[i].set_initial_v() } }")
        h("objref fih_IL1VR")
        h('{fih_IL1VR = new FInitializeHandler(0, "initialiseV_IL1VR()")}')

        h("proc initialiseIons_IL1VR() { for i = 0, n_IL1VR-1 { a_IL1VR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL1VR")
        h('{fih_ion_IL1VR = new FInitializeHandler(1, "initialiseIons_IL1VR()")}')

        # ######################   Population: IL2DL
        print("Population IL2DL contains 1 instance(s) of component: IL2DL of type: cell")

        print("Setting the default initial concentrations for ca (used in IL2DL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL2DL.hoc")
        a_IL2DL = []
        h("{ n_IL2DL = 1 }")
        h("objectvar a_IL2DL[n_IL2DL]")
        for i in range(int(h.n_IL2DL)):
            h("a_IL2DL[%i] = new IL2DL()"%i)
            h("access a_IL2DL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL2DL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL2DL() { for i = 0, n_IL2DL-1 { a_IL2DL[i].set_initial_v() } }")
        h("objref fih_IL2DL")
        h('{fih_IL2DL = new FInitializeHandler(0, "initialiseV_IL2DL()")}')

        h("proc initialiseIons_IL2DL() { for i = 0, n_IL2DL-1 { a_IL2DL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL2DL")
        h('{fih_ion_IL2DL = new FInitializeHandler(1, "initialiseIons_IL2DL()")}')

        # ######################   Population: IL2DR
        print("Population IL2DR contains 1 instance(s) of component: IL2DR of type: cell")

        print("Setting the default initial concentrations for ca (used in IL2DR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL2DR.hoc")
        a_IL2DR = []
        h("{ n_IL2DR = 1 }")
        h("objectvar a_IL2DR[n_IL2DR]")
        for i in range(int(h.n_IL2DR)):
            h("a_IL2DR[%i] = new IL2DR()"%i)
            h("access a_IL2DR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL2DR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL2DR() { for i = 0, n_IL2DR-1 { a_IL2DR[i].set_initial_v() } }")
        h("objref fih_IL2DR")
        h('{fih_IL2DR = new FInitializeHandler(0, "initialiseV_IL2DR()")}')

        h("proc initialiseIons_IL2DR() { for i = 0, n_IL2DR-1 { a_IL2DR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL2DR")
        h('{fih_ion_IL2DR = new FInitializeHandler(1, "initialiseIons_IL2DR()")}')

        # ######################   Population: IL2L
        print("Population IL2L contains 1 instance(s) of component: IL2L of type: cell")

        print("Setting the default initial concentrations for ca (used in IL2L) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL2L.hoc")
        a_IL2L = []
        h("{ n_IL2L = 1 }")
        h("objectvar a_IL2L[n_IL2L]")
        for i in range(int(h.n_IL2L)):
            h("a_IL2L[%i] = new IL2L()"%i)
            h("access a_IL2L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL2L[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL2L() { for i = 0, n_IL2L-1 { a_IL2L[i].set_initial_v() } }")
        h("objref fih_IL2L")
        h('{fih_IL2L = new FInitializeHandler(0, "initialiseV_IL2L()")}')

        h("proc initialiseIons_IL2L() { for i = 0, n_IL2L-1 { a_IL2L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL2L")
        h('{fih_ion_IL2L = new FInitializeHandler(1, "initialiseIons_IL2L()")}')

        # ######################   Population: IL2R
        print("Population IL2R contains 1 instance(s) of component: IL2R of type: cell")

        print("Setting the default initial concentrations for ca (used in IL2R) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL2R.hoc")
        a_IL2R = []
        h("{ n_IL2R = 1 }")
        h("objectvar a_IL2R[n_IL2R]")
        for i in range(int(h.n_IL2R)):
            h("a_IL2R[%i] = new IL2R()"%i)
            h("access a_IL2R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL2R[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL2R() { for i = 0, n_IL2R-1 { a_IL2R[i].set_initial_v() } }")
        h("objref fih_IL2R")
        h('{fih_IL2R = new FInitializeHandler(0, "initialiseV_IL2R()")}')

        h("proc initialiseIons_IL2R() { for i = 0, n_IL2R-1 { a_IL2R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL2R")
        h('{fih_ion_IL2R = new FInitializeHandler(1, "initialiseIons_IL2R()")}')

        # ######################   Population: IL2VL
        print("Population IL2VL contains 1 instance(s) of component: IL2VL of type: cell")

        print("Setting the default initial concentrations for ca (used in IL2VL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL2VL.hoc")
        a_IL2VL = []
        h("{ n_IL2VL = 1 }")
        h("objectvar a_IL2VL[n_IL2VL]")
        for i in range(int(h.n_IL2VL)):
            h("a_IL2VL[%i] = new IL2VL()"%i)
            h("access a_IL2VL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL2VL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL2VL() { for i = 0, n_IL2VL-1 { a_IL2VL[i].set_initial_v() } }")
        h("objref fih_IL2VL")
        h('{fih_IL2VL = new FInitializeHandler(0, "initialiseV_IL2VL()")}')

        h("proc initialiseIons_IL2VL() { for i = 0, n_IL2VL-1 { a_IL2VL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL2VL")
        h('{fih_ion_IL2VL = new FInitializeHandler(1, "initialiseIons_IL2VL()")}')

        # ######################   Population: IL2VR
        print("Population IL2VR contains 1 instance(s) of component: IL2VR of type: cell")

        print("Setting the default initial concentrations for ca (used in IL2VR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("IL2VR.hoc")
        a_IL2VR = []
        h("{ n_IL2VR = 1 }")
        h("objectvar a_IL2VR[n_IL2VR]")
        for i in range(int(h.n_IL2VR)):
            h("a_IL2VR[%i] = new IL2VR()"%i)
            h("access a_IL2VR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_IL2VR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_IL2VR() { for i = 0, n_IL2VR-1 { a_IL2VR[i].set_initial_v() } }")
        h("objref fih_IL2VR")
        h('{fih_IL2VR = new FInitializeHandler(0, "initialiseV_IL2VR()")}')

        h("proc initialiseIons_IL2VR() { for i = 0, n_IL2VR-1 { a_IL2VR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_IL2VR")
        h('{fih_ion_IL2VR = new FInitializeHandler(1, "initialiseIons_IL2VR()")}')

        # ######################   Population: LUAL
        print("Population LUAL contains 1 instance(s) of component: LUAL of type: cell")

        print("Setting the default initial concentrations for ca (used in LUAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("LUAL.hoc")
        a_LUAL = []
        h("{ n_LUAL = 1 }")
        h("objectvar a_LUAL[n_LUAL]")
        for i in range(int(h.n_LUAL)):
            h("a_LUAL[%i] = new LUAL()"%i)
            h("access a_LUAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_LUAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_LUAL() { for i = 0, n_LUAL-1 { a_LUAL[i].set_initial_v() } }")
        h("objref fih_LUAL")
        h('{fih_LUAL = new FInitializeHandler(0, "initialiseV_LUAL()")}')

        h("proc initialiseIons_LUAL() { for i = 0, n_LUAL-1 { a_LUAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_LUAL")
        h('{fih_ion_LUAL = new FInitializeHandler(1, "initialiseIons_LUAL()")}')

        # ######################   Population: LUAR
        print("Population LUAR contains 1 instance(s) of component: LUAR of type: cell")

        print("Setting the default initial concentrations for ca (used in LUAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("LUAR.hoc")
        a_LUAR = []
        h("{ n_LUAR = 1 }")
        h("objectvar a_LUAR[n_LUAR]")
        for i in range(int(h.n_LUAR)):
            h("a_LUAR[%i] = new LUAR()"%i)
            h("access a_LUAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_LUAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_LUAR() { for i = 0, n_LUAR-1 { a_LUAR[i].set_initial_v() } }")
        h("objref fih_LUAR")
        h('{fih_LUAR = new FInitializeHandler(0, "initialiseV_LUAR()")}')

        h("proc initialiseIons_LUAR() { for i = 0, n_LUAR-1 { a_LUAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_LUAR")
        h('{fih_ion_LUAR = new FInitializeHandler(1, "initialiseIons_LUAR()")}')

        # ######################   Population: M1
        print("Population M1 contains 1 instance(s) of component: M1 of type: cell")

        print("Setting the default initial concentrations for ca (used in M1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M1.hoc")
        a_M1 = []
        h("{ n_M1 = 1 }")
        h("objectvar a_M1[n_M1]")
        for i in range(int(h.n_M1)):
            h("a_M1[%i] = new M1()"%i)
            h("access a_M1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M1() { for i = 0, n_M1-1 { a_M1[i].set_initial_v() } }")
        h("objref fih_M1")
        h('{fih_M1 = new FInitializeHandler(0, "initialiseV_M1()")}')

        h("proc initialiseIons_M1() { for i = 0, n_M1-1 { a_M1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M1")
        h('{fih_ion_M1 = new FInitializeHandler(1, "initialiseIons_M1()")}')

        # ######################   Population: M2L
        print("Population M2L contains 1 instance(s) of component: M2L of type: cell")

        print("Setting the default initial concentrations for ca (used in M2L) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M2L.hoc")
        a_M2L = []
        h("{ n_M2L = 1 }")
        h("objectvar a_M2L[n_M2L]")
        for i in range(int(h.n_M2L)):
            h("a_M2L[%i] = new M2L()"%i)
            h("access a_M2L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M2L[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M2L() { for i = 0, n_M2L-1 { a_M2L[i].set_initial_v() } }")
        h("objref fih_M2L")
        h('{fih_M2L = new FInitializeHandler(0, "initialiseV_M2L()")}')

        h("proc initialiseIons_M2L() { for i = 0, n_M2L-1 { a_M2L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M2L")
        h('{fih_ion_M2L = new FInitializeHandler(1, "initialiseIons_M2L()")}')

        # ######################   Population: M2R
        print("Population M2R contains 1 instance(s) of component: M2R of type: cell")

        print("Setting the default initial concentrations for ca (used in M2R) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M2R.hoc")
        a_M2R = []
        h("{ n_M2R = 1 }")
        h("objectvar a_M2R[n_M2R]")
        for i in range(int(h.n_M2R)):
            h("a_M2R[%i] = new M2R()"%i)
            h("access a_M2R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M2R[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M2R() { for i = 0, n_M2R-1 { a_M2R[i].set_initial_v() } }")
        h("objref fih_M2R")
        h('{fih_M2R = new FInitializeHandler(0, "initialiseV_M2R()")}')

        h("proc initialiseIons_M2R() { for i = 0, n_M2R-1 { a_M2R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M2R")
        h('{fih_ion_M2R = new FInitializeHandler(1, "initialiseIons_M2R()")}')

        # ######################   Population: M3L
        print("Population M3L contains 1 instance(s) of component: M3L of type: cell")

        print("Setting the default initial concentrations for ca (used in M3L) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M3L.hoc")
        a_M3L = []
        h("{ n_M3L = 1 }")
        h("objectvar a_M3L[n_M3L]")
        for i in range(int(h.n_M3L)):
            h("a_M3L[%i] = new M3L()"%i)
            h("access a_M3L[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M3L[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M3L() { for i = 0, n_M3L-1 { a_M3L[i].set_initial_v() } }")
        h("objref fih_M3L")
        h('{fih_M3L = new FInitializeHandler(0, "initialiseV_M3L()")}')

        h("proc initialiseIons_M3L() { for i = 0, n_M3L-1 { a_M3L[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M3L")
        h('{fih_ion_M3L = new FInitializeHandler(1, "initialiseIons_M3L()")}')

        # ######################   Population: M3R
        print("Population M3R contains 1 instance(s) of component: M3R of type: cell")

        print("Setting the default initial concentrations for ca (used in M3R) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M3R.hoc")
        a_M3R = []
        h("{ n_M3R = 1 }")
        h("objectvar a_M3R[n_M3R]")
        for i in range(int(h.n_M3R)):
            h("a_M3R[%i] = new M3R()"%i)
            h("access a_M3R[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M3R[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M3R() { for i = 0, n_M3R-1 { a_M3R[i].set_initial_v() } }")
        h("objref fih_M3R")
        h('{fih_M3R = new FInitializeHandler(0, "initialiseV_M3R()")}')

        h("proc initialiseIons_M3R() { for i = 0, n_M3R-1 { a_M3R[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M3R")
        h('{fih_ion_M3R = new FInitializeHandler(1, "initialiseIons_M3R()")}')

        # ######################   Population: M4
        print("Population M4 contains 1 instance(s) of component: M4 of type: cell")

        print("Setting the default initial concentrations for ca (used in M4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M4.hoc")
        a_M4 = []
        h("{ n_M4 = 1 }")
        h("objectvar a_M4[n_M4]")
        for i in range(int(h.n_M4)):
            h("a_M4[%i] = new M4()"%i)
            h("access a_M4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M4() { for i = 0, n_M4-1 { a_M4[i].set_initial_v() } }")
        h("objref fih_M4")
        h('{fih_M4 = new FInitializeHandler(0, "initialiseV_M4()")}')

        h("proc initialiseIons_M4() { for i = 0, n_M4-1 { a_M4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M4")
        h('{fih_ion_M4 = new FInitializeHandler(1, "initialiseIons_M4()")}')

        # ######################   Population: M5
        print("Population M5 contains 1 instance(s) of component: M5 of type: cell")

        print("Setting the default initial concentrations for ca (used in M5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("M5.hoc")
        a_M5 = []
        h("{ n_M5 = 1 }")
        h("objectvar a_M5[n_M5]")
        for i in range(int(h.n_M5)):
            h("a_M5[%i] = new M5()"%i)
            h("access a_M5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_M5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_M5() { for i = 0, n_M5-1 { a_M5[i].set_initial_v() } }")
        h("objref fih_M5")
        h('{fih_M5 = new FInitializeHandler(0, "initialiseV_M5()")}')

        h("proc initialiseIons_M5() { for i = 0, n_M5-1 { a_M5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_M5")
        h('{fih_ion_M5 = new FInitializeHandler(1, "initialiseIons_M5()")}')

        # ######################   Population: MCL
        print("Population MCL contains 1 instance(s) of component: MCL of type: cell")

        print("Setting the default initial concentrations for ca (used in MCL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("MCL.hoc")
        a_MCL = []
        h("{ n_MCL = 1 }")
        h("objectvar a_MCL[n_MCL]")
        for i in range(int(h.n_MCL)):
            h("a_MCL[%i] = new MCL()"%i)
            h("access a_MCL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_MCL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_MCL() { for i = 0, n_MCL-1 { a_MCL[i].set_initial_v() } }")
        h("objref fih_MCL")
        h('{fih_MCL = new FInitializeHandler(0, "initialiseV_MCL()")}')

        h("proc initialiseIons_MCL() { for i = 0, n_MCL-1 { a_MCL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_MCL")
        h('{fih_ion_MCL = new FInitializeHandler(1, "initialiseIons_MCL()")}')

        # ######################   Population: MCR
        print("Population MCR contains 1 instance(s) of component: MCR of type: cell")

        print("Setting the default initial concentrations for ca (used in MCR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("MCR.hoc")
        a_MCR = []
        h("{ n_MCR = 1 }")
        h("objectvar a_MCR[n_MCR]")
        for i in range(int(h.n_MCR)):
            h("a_MCR[%i] = new MCR()"%i)
            h("access a_MCR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_MCR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_MCR() { for i = 0, n_MCR-1 { a_MCR[i].set_initial_v() } }")
        h("objref fih_MCR")
        h('{fih_MCR = new FInitializeHandler(0, "initialiseV_MCR()")}')

        h("proc initialiseIons_MCR() { for i = 0, n_MCR-1 { a_MCR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_MCR")
        h('{fih_ion_MCR = new FInitializeHandler(1, "initialiseIons_MCR()")}')

        # ######################   Population: MI
        print("Population MI contains 1 instance(s) of component: MI of type: cell")

        print("Setting the default initial concentrations for ca (used in MI) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("MI.hoc")
        a_MI = []
        h("{ n_MI = 1 }")
        h("objectvar a_MI[n_MI]")
        for i in range(int(h.n_MI)):
            h("a_MI[%i] = new MI()"%i)
            h("access a_MI[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_MI[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_MI() { for i = 0, n_MI-1 { a_MI[i].set_initial_v() } }")
        h("objref fih_MI")
        h('{fih_MI = new FInitializeHandler(0, "initialiseV_MI()")}')

        h("proc initialiseIons_MI() { for i = 0, n_MI-1 { a_MI[i].set_initial_ion_properties() } }")
        h("objref fih_ion_MI")
        h('{fih_ion_MI = new FInitializeHandler(1, "initialiseIons_MI()")}')

        # ######################   Population: NSML
        print("Population NSML contains 1 instance(s) of component: NSML of type: cell")

        print("Setting the default initial concentrations for ca (used in NSML) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("NSML.hoc")
        a_NSML = []
        h("{ n_NSML = 1 }")
        h("objectvar a_NSML[n_NSML]")
        for i in range(int(h.n_NSML)):
            h("a_NSML[%i] = new NSML()"%i)
            h("access a_NSML[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_NSML[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_NSML() { for i = 0, n_NSML-1 { a_NSML[i].set_initial_v() } }")
        h("objref fih_NSML")
        h('{fih_NSML = new FInitializeHandler(0, "initialiseV_NSML()")}')

        h("proc initialiseIons_NSML() { for i = 0, n_NSML-1 { a_NSML[i].set_initial_ion_properties() } }")
        h("objref fih_ion_NSML")
        h('{fih_ion_NSML = new FInitializeHandler(1, "initialiseIons_NSML()")}')

        # ######################   Population: NSMR
        print("Population NSMR contains 1 instance(s) of component: NSMR of type: cell")

        print("Setting the default initial concentrations for ca (used in NSMR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("NSMR.hoc")
        a_NSMR = []
        h("{ n_NSMR = 1 }")
        h("objectvar a_NSMR[n_NSMR]")
        for i in range(int(h.n_NSMR)):
            h("a_NSMR[%i] = new NSMR()"%i)
            h("access a_NSMR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_NSMR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_NSMR() { for i = 0, n_NSMR-1 { a_NSMR[i].set_initial_v() } }")
        h("objref fih_NSMR")
        h('{fih_NSMR = new FInitializeHandler(0, "initialiseV_NSMR()")}')

        h("proc initialiseIons_NSMR() { for i = 0, n_NSMR-1 { a_NSMR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_NSMR")
        h('{fih_ion_NSMR = new FInitializeHandler(1, "initialiseIons_NSMR()")}')

        # ######################   Population: OLLL
        print("Population OLLL contains 1 instance(s) of component: OLLL of type: cell")

        print("Setting the default initial concentrations for ca (used in OLLL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("OLLL.hoc")
        a_OLLL = []
        h("{ n_OLLL = 1 }")
        h("objectvar a_OLLL[n_OLLL]")
        for i in range(int(h.n_OLLL)):
            h("a_OLLL[%i] = new OLLL()"%i)
            h("access a_OLLL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_OLLL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_OLLL() { for i = 0, n_OLLL-1 { a_OLLL[i].set_initial_v() } }")
        h("objref fih_OLLL")
        h('{fih_OLLL = new FInitializeHandler(0, "initialiseV_OLLL()")}')

        h("proc initialiseIons_OLLL() { for i = 0, n_OLLL-1 { a_OLLL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_OLLL")
        h('{fih_ion_OLLL = new FInitializeHandler(1, "initialiseIons_OLLL()")}')

        # ######################   Population: OLLR
        print("Population OLLR contains 1 instance(s) of component: OLLR of type: cell")

        print("Setting the default initial concentrations for ca (used in OLLR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("OLLR.hoc")
        a_OLLR = []
        h("{ n_OLLR = 1 }")
        h("objectvar a_OLLR[n_OLLR]")
        for i in range(int(h.n_OLLR)):
            h("a_OLLR[%i] = new OLLR()"%i)
            h("access a_OLLR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_OLLR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_OLLR() { for i = 0, n_OLLR-1 { a_OLLR[i].set_initial_v() } }")
        h("objref fih_OLLR")
        h('{fih_OLLR = new FInitializeHandler(0, "initialiseV_OLLR()")}')

        h("proc initialiseIons_OLLR() { for i = 0, n_OLLR-1 { a_OLLR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_OLLR")
        h('{fih_ion_OLLR = new FInitializeHandler(1, "initialiseIons_OLLR()")}')

        # ######################   Population: OLQDL
        print("Population OLQDL contains 1 instance(s) of component: OLQDL of type: cell")

        print("Setting the default initial concentrations for ca (used in OLQDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("OLQDL.hoc")
        a_OLQDL = []
        h("{ n_OLQDL = 1 }")
        h("objectvar a_OLQDL[n_OLQDL]")
        for i in range(int(h.n_OLQDL)):
            h("a_OLQDL[%i] = new OLQDL()"%i)
            h("access a_OLQDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_OLQDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_OLQDL() { for i = 0, n_OLQDL-1 { a_OLQDL[i].set_initial_v() } }")
        h("objref fih_OLQDL")
        h('{fih_OLQDL = new FInitializeHandler(0, "initialiseV_OLQDL()")}')

        h("proc initialiseIons_OLQDL() { for i = 0, n_OLQDL-1 { a_OLQDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_OLQDL")
        h('{fih_ion_OLQDL = new FInitializeHandler(1, "initialiseIons_OLQDL()")}')

        # ######################   Population: OLQDR
        print("Population OLQDR contains 1 instance(s) of component: OLQDR of type: cell")

        print("Setting the default initial concentrations for ca (used in OLQDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("OLQDR.hoc")
        a_OLQDR = []
        h("{ n_OLQDR = 1 }")
        h("objectvar a_OLQDR[n_OLQDR]")
        for i in range(int(h.n_OLQDR)):
            h("a_OLQDR[%i] = new OLQDR()"%i)
            h("access a_OLQDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_OLQDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_OLQDR() { for i = 0, n_OLQDR-1 { a_OLQDR[i].set_initial_v() } }")
        h("objref fih_OLQDR")
        h('{fih_OLQDR = new FInitializeHandler(0, "initialiseV_OLQDR()")}')

        h("proc initialiseIons_OLQDR() { for i = 0, n_OLQDR-1 { a_OLQDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_OLQDR")
        h('{fih_ion_OLQDR = new FInitializeHandler(1, "initialiseIons_OLQDR()")}')

        # ######################   Population: OLQVL
        print("Population OLQVL contains 1 instance(s) of component: OLQVL of type: cell")

        print("Setting the default initial concentrations for ca (used in OLQVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("OLQVL.hoc")
        a_OLQVL = []
        h("{ n_OLQVL = 1 }")
        h("objectvar a_OLQVL[n_OLQVL]")
        for i in range(int(h.n_OLQVL)):
            h("a_OLQVL[%i] = new OLQVL()"%i)
            h("access a_OLQVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_OLQVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_OLQVL() { for i = 0, n_OLQVL-1 { a_OLQVL[i].set_initial_v() } }")
        h("objref fih_OLQVL")
        h('{fih_OLQVL = new FInitializeHandler(0, "initialiseV_OLQVL()")}')

        h("proc initialiseIons_OLQVL() { for i = 0, n_OLQVL-1 { a_OLQVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_OLQVL")
        h('{fih_ion_OLQVL = new FInitializeHandler(1, "initialiseIons_OLQVL()")}')

        # ######################   Population: OLQVR
        print("Population OLQVR contains 1 instance(s) of component: OLQVR of type: cell")

        print("Setting the default initial concentrations for ca (used in OLQVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("OLQVR.hoc")
        a_OLQVR = []
        h("{ n_OLQVR = 1 }")
        h("objectvar a_OLQVR[n_OLQVR]")
        for i in range(int(h.n_OLQVR)):
            h("a_OLQVR[%i] = new OLQVR()"%i)
            h("access a_OLQVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_OLQVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_OLQVR() { for i = 0, n_OLQVR-1 { a_OLQVR[i].set_initial_v() } }")
        h("objref fih_OLQVR")
        h('{fih_OLQVR = new FInitializeHandler(0, "initialiseV_OLQVR()")}')

        h("proc initialiseIons_OLQVR() { for i = 0, n_OLQVR-1 { a_OLQVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_OLQVR")
        h('{fih_ion_OLQVR = new FInitializeHandler(1, "initialiseIons_OLQVR()")}')

        # ######################   Population: PDA
        print("Population PDA contains 1 instance(s) of component: PDA of type: cell")

        print("Setting the default initial concentrations for ca (used in PDA) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PDA.hoc")
        a_PDA = []
        h("{ n_PDA = 1 }")
        h("objectvar a_PDA[n_PDA]")
        for i in range(int(h.n_PDA)):
            h("a_PDA[%i] = new PDA()"%i)
            h("access a_PDA[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PDA[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PDA() { for i = 0, n_PDA-1 { a_PDA[i].set_initial_v() } }")
        h("objref fih_PDA")
        h('{fih_PDA = new FInitializeHandler(0, "initialiseV_PDA()")}')

        h("proc initialiseIons_PDA() { for i = 0, n_PDA-1 { a_PDA[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PDA")
        h('{fih_ion_PDA = new FInitializeHandler(1, "initialiseIons_PDA()")}')

        # ######################   Population: PDB
        print("Population PDB contains 1 instance(s) of component: PDB of type: cell")

        print("Setting the default initial concentrations for ca (used in PDB) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PDB.hoc")
        a_PDB = []
        h("{ n_PDB = 1 }")
        h("objectvar a_PDB[n_PDB]")
        for i in range(int(h.n_PDB)):
            h("a_PDB[%i] = new PDB()"%i)
            h("access a_PDB[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PDB[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PDB() { for i = 0, n_PDB-1 { a_PDB[i].set_initial_v() } }")
        h("objref fih_PDB")
        h('{fih_PDB = new FInitializeHandler(0, "initialiseV_PDB()")}')

        h("proc initialiseIons_PDB() { for i = 0, n_PDB-1 { a_PDB[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PDB")
        h('{fih_ion_PDB = new FInitializeHandler(1, "initialiseIons_PDB()")}')

        # ######################   Population: PDEL
        print("Population PDEL contains 1 instance(s) of component: PDEL of type: cell")

        print("Setting the default initial concentrations for ca (used in PDEL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PDEL.hoc")
        a_PDEL = []
        h("{ n_PDEL = 1 }")
        h("objectvar a_PDEL[n_PDEL]")
        for i in range(int(h.n_PDEL)):
            h("a_PDEL[%i] = new PDEL()"%i)
            h("access a_PDEL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PDEL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PDEL() { for i = 0, n_PDEL-1 { a_PDEL[i].set_initial_v() } }")
        h("objref fih_PDEL")
        h('{fih_PDEL = new FInitializeHandler(0, "initialiseV_PDEL()")}')

        h("proc initialiseIons_PDEL() { for i = 0, n_PDEL-1 { a_PDEL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PDEL")
        h('{fih_ion_PDEL = new FInitializeHandler(1, "initialiseIons_PDEL()")}')

        # ######################   Population: PDER
        print("Population PDER contains 1 instance(s) of component: PDER of type: cell")

        print("Setting the default initial concentrations for ca (used in PDER) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PDER.hoc")
        a_PDER = []
        h("{ n_PDER = 1 }")
        h("objectvar a_PDER[n_PDER]")
        for i in range(int(h.n_PDER)):
            h("a_PDER[%i] = new PDER()"%i)
            h("access a_PDER[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PDER[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PDER() { for i = 0, n_PDER-1 { a_PDER[i].set_initial_v() } }")
        h("objref fih_PDER")
        h('{fih_PDER = new FInitializeHandler(0, "initialiseV_PDER()")}')

        h("proc initialiseIons_PDER() { for i = 0, n_PDER-1 { a_PDER[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PDER")
        h('{fih_ion_PDER = new FInitializeHandler(1, "initialiseIons_PDER()")}')

        # ######################   Population: PHAL
        print("Population PHAL contains 1 instance(s) of component: PHAL of type: cell")

        print("Setting the default initial concentrations for ca (used in PHAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PHAL.hoc")
        a_PHAL = []
        h("{ n_PHAL = 1 }")
        h("objectvar a_PHAL[n_PHAL]")
        for i in range(int(h.n_PHAL)):
            h("a_PHAL[%i] = new PHAL()"%i)
            h("access a_PHAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PHAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PHAL() { for i = 0, n_PHAL-1 { a_PHAL[i].set_initial_v() } }")
        h("objref fih_PHAL")
        h('{fih_PHAL = new FInitializeHandler(0, "initialiseV_PHAL()")}')

        h("proc initialiseIons_PHAL() { for i = 0, n_PHAL-1 { a_PHAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PHAL")
        h('{fih_ion_PHAL = new FInitializeHandler(1, "initialiseIons_PHAL()")}')

        # ######################   Population: PHAR
        print("Population PHAR contains 1 instance(s) of component: PHAR of type: cell")

        print("Setting the default initial concentrations for ca (used in PHAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PHAR.hoc")
        a_PHAR = []
        h("{ n_PHAR = 1 }")
        h("objectvar a_PHAR[n_PHAR]")
        for i in range(int(h.n_PHAR)):
            h("a_PHAR[%i] = new PHAR()"%i)
            h("access a_PHAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PHAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PHAR() { for i = 0, n_PHAR-1 { a_PHAR[i].set_initial_v() } }")
        h("objref fih_PHAR")
        h('{fih_PHAR = new FInitializeHandler(0, "initialiseV_PHAR()")}')

        h("proc initialiseIons_PHAR() { for i = 0, n_PHAR-1 { a_PHAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PHAR")
        h('{fih_ion_PHAR = new FInitializeHandler(1, "initialiseIons_PHAR()")}')

        # ######################   Population: PHBL
        print("Population PHBL contains 1 instance(s) of component: PHBL of type: cell")

        print("Setting the default initial concentrations for ca (used in PHBL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PHBL.hoc")
        a_PHBL = []
        h("{ n_PHBL = 1 }")
        h("objectvar a_PHBL[n_PHBL]")
        for i in range(int(h.n_PHBL)):
            h("a_PHBL[%i] = new PHBL()"%i)
            h("access a_PHBL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PHBL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PHBL() { for i = 0, n_PHBL-1 { a_PHBL[i].set_initial_v() } }")
        h("objref fih_PHBL")
        h('{fih_PHBL = new FInitializeHandler(0, "initialiseV_PHBL()")}')

        h("proc initialiseIons_PHBL() { for i = 0, n_PHBL-1 { a_PHBL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PHBL")
        h('{fih_ion_PHBL = new FInitializeHandler(1, "initialiseIons_PHBL()")}')

        # ######################   Population: PHBR
        print("Population PHBR contains 1 instance(s) of component: PHBR of type: cell")

        print("Setting the default initial concentrations for ca (used in PHBR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PHBR.hoc")
        a_PHBR = []
        h("{ n_PHBR = 1 }")
        h("objectvar a_PHBR[n_PHBR]")
        for i in range(int(h.n_PHBR)):
            h("a_PHBR[%i] = new PHBR()"%i)
            h("access a_PHBR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PHBR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PHBR() { for i = 0, n_PHBR-1 { a_PHBR[i].set_initial_v() } }")
        h("objref fih_PHBR")
        h('{fih_PHBR = new FInitializeHandler(0, "initialiseV_PHBR()")}')

        h("proc initialiseIons_PHBR() { for i = 0, n_PHBR-1 { a_PHBR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PHBR")
        h('{fih_ion_PHBR = new FInitializeHandler(1, "initialiseIons_PHBR()")}')

        # ######################   Population: PHCL
        print("Population PHCL contains 1 instance(s) of component: PHCL of type: cell")

        print("Setting the default initial concentrations for ca (used in PHCL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PHCL.hoc")
        a_PHCL = []
        h("{ n_PHCL = 1 }")
        h("objectvar a_PHCL[n_PHCL]")
        for i in range(int(h.n_PHCL)):
            h("a_PHCL[%i] = new PHCL()"%i)
            h("access a_PHCL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PHCL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PHCL() { for i = 0, n_PHCL-1 { a_PHCL[i].set_initial_v() } }")
        h("objref fih_PHCL")
        h('{fih_PHCL = new FInitializeHandler(0, "initialiseV_PHCL()")}')

        h("proc initialiseIons_PHCL() { for i = 0, n_PHCL-1 { a_PHCL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PHCL")
        h('{fih_ion_PHCL = new FInitializeHandler(1, "initialiseIons_PHCL()")}')

        # ######################   Population: PHCR
        print("Population PHCR contains 1 instance(s) of component: PHCR of type: cell")

        print("Setting the default initial concentrations for ca (used in PHCR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PHCR.hoc")
        a_PHCR = []
        h("{ n_PHCR = 1 }")
        h("objectvar a_PHCR[n_PHCR]")
        for i in range(int(h.n_PHCR)):
            h("a_PHCR[%i] = new PHCR()"%i)
            h("access a_PHCR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PHCR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PHCR() { for i = 0, n_PHCR-1 { a_PHCR[i].set_initial_v() } }")
        h("objref fih_PHCR")
        h('{fih_PHCR = new FInitializeHandler(0, "initialiseV_PHCR()")}')

        h("proc initialiseIons_PHCR() { for i = 0, n_PHCR-1 { a_PHCR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PHCR")
        h('{fih_ion_PHCR = new FInitializeHandler(1, "initialiseIons_PHCR()")}')

        # ######################   Population: PLML
        print("Population PLML contains 1 instance(s) of component: PLML of type: cell")

        print("Setting the default initial concentrations for ca (used in PLML) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PLML.hoc")
        a_PLML = []
        h("{ n_PLML = 1 }")
        h("objectvar a_PLML[n_PLML]")
        for i in range(int(h.n_PLML)):
            h("a_PLML[%i] = new PLML()"%i)
            h("access a_PLML[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PLML[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PLML() { for i = 0, n_PLML-1 { a_PLML[i].set_initial_v() } }")
        h("objref fih_PLML")
        h('{fih_PLML = new FInitializeHandler(0, "initialiseV_PLML()")}')

        h("proc initialiseIons_PLML() { for i = 0, n_PLML-1 { a_PLML[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PLML")
        h('{fih_ion_PLML = new FInitializeHandler(1, "initialiseIons_PLML()")}')

        # ######################   Population: PLMR
        print("Population PLMR contains 1 instance(s) of component: PLMR of type: cell")

        print("Setting the default initial concentrations for ca (used in PLMR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PLMR.hoc")
        a_PLMR = []
        h("{ n_PLMR = 1 }")
        h("objectvar a_PLMR[n_PLMR]")
        for i in range(int(h.n_PLMR)):
            h("a_PLMR[%i] = new PLMR()"%i)
            h("access a_PLMR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PLMR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PLMR() { for i = 0, n_PLMR-1 { a_PLMR[i].set_initial_v() } }")
        h("objref fih_PLMR")
        h('{fih_PLMR = new FInitializeHandler(0, "initialiseV_PLMR()")}')

        h("proc initialiseIons_PLMR() { for i = 0, n_PLMR-1 { a_PLMR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PLMR")
        h('{fih_ion_PLMR = new FInitializeHandler(1, "initialiseIons_PLMR()")}')

        # ######################   Population: PLNL
        print("Population PLNL contains 1 instance(s) of component: PLNL of type: cell")

        print("Setting the default initial concentrations for ca (used in PLNL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PLNL.hoc")
        a_PLNL = []
        h("{ n_PLNL = 1 }")
        h("objectvar a_PLNL[n_PLNL]")
        for i in range(int(h.n_PLNL)):
            h("a_PLNL[%i] = new PLNL()"%i)
            h("access a_PLNL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PLNL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PLNL() { for i = 0, n_PLNL-1 { a_PLNL[i].set_initial_v() } }")
        h("objref fih_PLNL")
        h('{fih_PLNL = new FInitializeHandler(0, "initialiseV_PLNL()")}')

        h("proc initialiseIons_PLNL() { for i = 0, n_PLNL-1 { a_PLNL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PLNL")
        h('{fih_ion_PLNL = new FInitializeHandler(1, "initialiseIons_PLNL()")}')

        # ######################   Population: PLNR
        print("Population PLNR contains 1 instance(s) of component: PLNR of type: cell")

        print("Setting the default initial concentrations for ca (used in PLNR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PLNR.hoc")
        a_PLNR = []
        h("{ n_PLNR = 1 }")
        h("objectvar a_PLNR[n_PLNR]")
        for i in range(int(h.n_PLNR)):
            h("a_PLNR[%i] = new PLNR()"%i)
            h("access a_PLNR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PLNR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PLNR() { for i = 0, n_PLNR-1 { a_PLNR[i].set_initial_v() } }")
        h("objref fih_PLNR")
        h('{fih_PLNR = new FInitializeHandler(0, "initialiseV_PLNR()")}')

        h("proc initialiseIons_PLNR() { for i = 0, n_PLNR-1 { a_PLNR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PLNR")
        h('{fih_ion_PLNR = new FInitializeHandler(1, "initialiseIons_PLNR()")}')

        # ######################   Population: PQR
        print("Population PQR contains 1 instance(s) of component: PQR of type: cell")

        print("Setting the default initial concentrations for ca (used in PQR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PQR.hoc")
        a_PQR = []
        h("{ n_PQR = 1 }")
        h("objectvar a_PQR[n_PQR]")
        for i in range(int(h.n_PQR)):
            h("a_PQR[%i] = new PQR()"%i)
            h("access a_PQR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PQR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PQR() { for i = 0, n_PQR-1 { a_PQR[i].set_initial_v() } }")
        h("objref fih_PQR")
        h('{fih_PQR = new FInitializeHandler(0, "initialiseV_PQR()")}')

        h("proc initialiseIons_PQR() { for i = 0, n_PQR-1 { a_PQR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PQR")
        h('{fih_ion_PQR = new FInitializeHandler(1, "initialiseIons_PQR()")}')

        # ######################   Population: PVCL
        print("Population PVCL contains 1 instance(s) of component: PVCL of type: cell")

        print("Setting the default initial concentrations for ca (used in PVCL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVCL.hoc")
        a_PVCL = []
        h("{ n_PVCL = 1 }")
        h("objectvar a_PVCL[n_PVCL]")
        for i in range(int(h.n_PVCL)):
            h("a_PVCL[%i] = new PVCL()"%i)
            h("access a_PVCL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVCL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVCL() { for i = 0, n_PVCL-1 { a_PVCL[i].set_initial_v() } }")
        h("objref fih_PVCL")
        h('{fih_PVCL = new FInitializeHandler(0, "initialiseV_PVCL()")}')

        h("proc initialiseIons_PVCL() { for i = 0, n_PVCL-1 { a_PVCL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVCL")
        h('{fih_ion_PVCL = new FInitializeHandler(1, "initialiseIons_PVCL()")}')

        # ######################   Population: PVCR
        print("Population PVCR contains 1 instance(s) of component: PVCR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVCR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVCR.hoc")
        a_PVCR = []
        h("{ n_PVCR = 1 }")
        h("objectvar a_PVCR[n_PVCR]")
        for i in range(int(h.n_PVCR)):
            h("a_PVCR[%i] = new PVCR()"%i)
            h("access a_PVCR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVCR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVCR() { for i = 0, n_PVCR-1 { a_PVCR[i].set_initial_v() } }")
        h("objref fih_PVCR")
        h('{fih_PVCR = new FInitializeHandler(0, "initialiseV_PVCR()")}')

        h("proc initialiseIons_PVCR() { for i = 0, n_PVCR-1 { a_PVCR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVCR")
        h('{fih_ion_PVCR = new FInitializeHandler(1, "initialiseIons_PVCR()")}')

        # ######################   Population: PVDL
        print("Population PVDL contains 1 instance(s) of component: PVDL of type: cell")

        print("Setting the default initial concentrations for ca (used in PVDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVDL.hoc")
        a_PVDL = []
        h("{ n_PVDL = 1 }")
        h("objectvar a_PVDL[n_PVDL]")
        for i in range(int(h.n_PVDL)):
            h("a_PVDL[%i] = new PVDL()"%i)
            h("access a_PVDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVDL() { for i = 0, n_PVDL-1 { a_PVDL[i].set_initial_v() } }")
        h("objref fih_PVDL")
        h('{fih_PVDL = new FInitializeHandler(0, "initialiseV_PVDL()")}')

        h("proc initialiseIons_PVDL() { for i = 0, n_PVDL-1 { a_PVDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVDL")
        h('{fih_ion_PVDL = new FInitializeHandler(1, "initialiseIons_PVDL()")}')

        # ######################   Population: PVDR
        print("Population PVDR contains 1 instance(s) of component: PVDR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVDR.hoc")
        a_PVDR = []
        h("{ n_PVDR = 1 }")
        h("objectvar a_PVDR[n_PVDR]")
        for i in range(int(h.n_PVDR)):
            h("a_PVDR[%i] = new PVDR()"%i)
            h("access a_PVDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVDR() { for i = 0, n_PVDR-1 { a_PVDR[i].set_initial_v() } }")
        h("objref fih_PVDR")
        h('{fih_PVDR = new FInitializeHandler(0, "initialiseV_PVDR()")}')

        h("proc initialiseIons_PVDR() { for i = 0, n_PVDR-1 { a_PVDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVDR")
        h('{fih_ion_PVDR = new FInitializeHandler(1, "initialiseIons_PVDR()")}')

        # ######################   Population: PVM
        print("Population PVM contains 1 instance(s) of component: PVM of type: cell")

        print("Setting the default initial concentrations for ca (used in PVM) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVM.hoc")
        a_PVM = []
        h("{ n_PVM = 1 }")
        h("objectvar a_PVM[n_PVM]")
        for i in range(int(h.n_PVM)):
            h("a_PVM[%i] = new PVM()"%i)
            h("access a_PVM[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVM[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVM() { for i = 0, n_PVM-1 { a_PVM[i].set_initial_v() } }")
        h("objref fih_PVM")
        h('{fih_PVM = new FInitializeHandler(0, "initialiseV_PVM()")}')

        h("proc initialiseIons_PVM() { for i = 0, n_PVM-1 { a_PVM[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVM")
        h('{fih_ion_PVM = new FInitializeHandler(1, "initialiseIons_PVM()")}')

        # ######################   Population: PVNL
        print("Population PVNL contains 1 instance(s) of component: PVNL of type: cell")

        print("Setting the default initial concentrations for ca (used in PVNL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVNL.hoc")
        a_PVNL = []
        h("{ n_PVNL = 1 }")
        h("objectvar a_PVNL[n_PVNL]")
        for i in range(int(h.n_PVNL)):
            h("a_PVNL[%i] = new PVNL()"%i)
            h("access a_PVNL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVNL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVNL() { for i = 0, n_PVNL-1 { a_PVNL[i].set_initial_v() } }")
        h("objref fih_PVNL")
        h('{fih_PVNL = new FInitializeHandler(0, "initialiseV_PVNL()")}')

        h("proc initialiseIons_PVNL() { for i = 0, n_PVNL-1 { a_PVNL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVNL")
        h('{fih_ion_PVNL = new FInitializeHandler(1, "initialiseIons_PVNL()")}')

        # ######################   Population: PVNR
        print("Population PVNR contains 1 instance(s) of component: PVNR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVNR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVNR.hoc")
        a_PVNR = []
        h("{ n_PVNR = 1 }")
        h("objectvar a_PVNR[n_PVNR]")
        for i in range(int(h.n_PVNR)):
            h("a_PVNR[%i] = new PVNR()"%i)
            h("access a_PVNR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVNR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVNR() { for i = 0, n_PVNR-1 { a_PVNR[i].set_initial_v() } }")
        h("objref fih_PVNR")
        h('{fih_PVNR = new FInitializeHandler(0, "initialiseV_PVNR()")}')

        h("proc initialiseIons_PVNR() { for i = 0, n_PVNR-1 { a_PVNR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVNR")
        h('{fih_ion_PVNR = new FInitializeHandler(1, "initialiseIons_PVNR()")}')

        # ######################   Population: PVPL
        print("Population PVPL contains 1 instance(s) of component: PVPL of type: cell")

        print("Setting the default initial concentrations for ca (used in PVPL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVPL.hoc")
        a_PVPL = []
        h("{ n_PVPL = 1 }")
        h("objectvar a_PVPL[n_PVPL]")
        for i in range(int(h.n_PVPL)):
            h("a_PVPL[%i] = new PVPL()"%i)
            h("access a_PVPL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVPL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVPL() { for i = 0, n_PVPL-1 { a_PVPL[i].set_initial_v() } }")
        h("objref fih_PVPL")
        h('{fih_PVPL = new FInitializeHandler(0, "initialiseV_PVPL()")}')

        h("proc initialiseIons_PVPL() { for i = 0, n_PVPL-1 { a_PVPL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVPL")
        h('{fih_ion_PVPL = new FInitializeHandler(1, "initialiseIons_PVPL()")}')

        # ######################   Population: PVPR
        print("Population PVPR contains 1 instance(s) of component: PVPR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVPR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVPR.hoc")
        a_PVPR = []
        h("{ n_PVPR = 1 }")
        h("objectvar a_PVPR[n_PVPR]")
        for i in range(int(h.n_PVPR)):
            h("a_PVPR[%i] = new PVPR()"%i)
            h("access a_PVPR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVPR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVPR() { for i = 0, n_PVPR-1 { a_PVPR[i].set_initial_v() } }")
        h("objref fih_PVPR")
        h('{fih_PVPR = new FInitializeHandler(0, "initialiseV_PVPR()")}')

        h("proc initialiseIons_PVPR() { for i = 0, n_PVPR-1 { a_PVPR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVPR")
        h('{fih_ion_PVPR = new FInitializeHandler(1, "initialiseIons_PVPR()")}')

        # ######################   Population: PVQL
        print("Population PVQL contains 1 instance(s) of component: PVQL of type: cell")

        print("Setting the default initial concentrations for ca (used in PVQL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVQL.hoc")
        a_PVQL = []
        h("{ n_PVQL = 1 }")
        h("objectvar a_PVQL[n_PVQL]")
        for i in range(int(h.n_PVQL)):
            h("a_PVQL[%i] = new PVQL()"%i)
            h("access a_PVQL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVQL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVQL() { for i = 0, n_PVQL-1 { a_PVQL[i].set_initial_v() } }")
        h("objref fih_PVQL")
        h('{fih_PVQL = new FInitializeHandler(0, "initialiseV_PVQL()")}')

        h("proc initialiseIons_PVQL() { for i = 0, n_PVQL-1 { a_PVQL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVQL")
        h('{fih_ion_PVQL = new FInitializeHandler(1, "initialiseIons_PVQL()")}')

        # ######################   Population: PVQR
        print("Population PVQR contains 1 instance(s) of component: PVQR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVQR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVQR.hoc")
        a_PVQR = []
        h("{ n_PVQR = 1 }")
        h("objectvar a_PVQR[n_PVQR]")
        for i in range(int(h.n_PVQR)):
            h("a_PVQR[%i] = new PVQR()"%i)
            h("access a_PVQR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVQR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVQR() { for i = 0, n_PVQR-1 { a_PVQR[i].set_initial_v() } }")
        h("objref fih_PVQR")
        h('{fih_PVQR = new FInitializeHandler(0, "initialiseV_PVQR()")}')

        h("proc initialiseIons_PVQR() { for i = 0, n_PVQR-1 { a_PVQR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVQR")
        h('{fih_ion_PVQR = new FInitializeHandler(1, "initialiseIons_PVQR()")}')

        # ######################   Population: PVR
        print("Population PVR contains 1 instance(s) of component: PVR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVR.hoc")
        a_PVR = []
        h("{ n_PVR = 1 }")
        h("objectvar a_PVR[n_PVR]")
        for i in range(int(h.n_PVR)):
            h("a_PVR[%i] = new PVR()"%i)
            h("access a_PVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVR() { for i = 0, n_PVR-1 { a_PVR[i].set_initial_v() } }")
        h("objref fih_PVR")
        h('{fih_PVR = new FInitializeHandler(0, "initialiseV_PVR()")}')

        h("proc initialiseIons_PVR() { for i = 0, n_PVR-1 { a_PVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVR")
        h('{fih_ion_PVR = new FInitializeHandler(1, "initialiseIons_PVR()")}')

        # ######################   Population: PVT
        print("Population PVT contains 1 instance(s) of component: PVT of type: cell")

        print("Setting the default initial concentrations for ca (used in PVT) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVT.hoc")
        a_PVT = []
        h("{ n_PVT = 1 }")
        h("objectvar a_PVT[n_PVT]")
        for i in range(int(h.n_PVT)):
            h("a_PVT[%i] = new PVT()"%i)
            h("access a_PVT[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVT[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVT() { for i = 0, n_PVT-1 { a_PVT[i].set_initial_v() } }")
        h("objref fih_PVT")
        h('{fih_PVT = new FInitializeHandler(0, "initialiseV_PVT()")}')

        h("proc initialiseIons_PVT() { for i = 0, n_PVT-1 { a_PVT[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVT")
        h('{fih_ion_PVT = new FInitializeHandler(1, "initialiseIons_PVT()")}')

        # ######################   Population: PVWL
        print("Population PVWL contains 1 instance(s) of component: PVWL of type: cell")

        print("Setting the default initial concentrations for ca (used in PVWL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVWL.hoc")
        a_PVWL = []
        h("{ n_PVWL = 1 }")
        h("objectvar a_PVWL[n_PVWL]")
        for i in range(int(h.n_PVWL)):
            h("a_PVWL[%i] = new PVWL()"%i)
            h("access a_PVWL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVWL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVWL() { for i = 0, n_PVWL-1 { a_PVWL[i].set_initial_v() } }")
        h("objref fih_PVWL")
        h('{fih_PVWL = new FInitializeHandler(0, "initialiseV_PVWL()")}')

        h("proc initialiseIons_PVWL() { for i = 0, n_PVWL-1 { a_PVWL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVWL")
        h('{fih_ion_PVWL = new FInitializeHandler(1, "initialiseIons_PVWL()")}')

        # ######################   Population: PVWR
        print("Population PVWR contains 1 instance(s) of component: PVWR of type: cell")

        print("Setting the default initial concentrations for ca (used in PVWR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("PVWR.hoc")
        a_PVWR = []
        h("{ n_PVWR = 1 }")
        h("objectvar a_PVWR[n_PVWR]")
        for i in range(int(h.n_PVWR)):
            h("a_PVWR[%i] = new PVWR()"%i)
            h("access a_PVWR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_PVWR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_PVWR() { for i = 0, n_PVWR-1 { a_PVWR[i].set_initial_v() } }")
        h("objref fih_PVWR")
        h('{fih_PVWR = new FInitializeHandler(0, "initialiseV_PVWR()")}')

        h("proc initialiseIons_PVWR() { for i = 0, n_PVWR-1 { a_PVWR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_PVWR")
        h('{fih_ion_PVWR = new FInitializeHandler(1, "initialiseIons_PVWR()")}')

        # ######################   Population: RIAL
        print("Population RIAL contains 1 instance(s) of component: RIAL of type: cell")

        print("Setting the default initial concentrations for ca (used in RIAL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIAL.hoc")
        a_RIAL = []
        h("{ n_RIAL = 1 }")
        h("objectvar a_RIAL[n_RIAL]")
        for i in range(int(h.n_RIAL)):
            h("a_RIAL[%i] = new RIAL()"%i)
            h("access a_RIAL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIAL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIAL() { for i = 0, n_RIAL-1 { a_RIAL[i].set_initial_v() } }")
        h("objref fih_RIAL")
        h('{fih_RIAL = new FInitializeHandler(0, "initialiseV_RIAL()")}')

        h("proc initialiseIons_RIAL() { for i = 0, n_RIAL-1 { a_RIAL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIAL")
        h('{fih_ion_RIAL = new FInitializeHandler(1, "initialiseIons_RIAL()")}')

        # ######################   Population: RIAR
        print("Population RIAR contains 1 instance(s) of component: RIAR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIAR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIAR.hoc")
        a_RIAR = []
        h("{ n_RIAR = 1 }")
        h("objectvar a_RIAR[n_RIAR]")
        for i in range(int(h.n_RIAR)):
            h("a_RIAR[%i] = new RIAR()"%i)
            h("access a_RIAR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIAR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIAR() { for i = 0, n_RIAR-1 { a_RIAR[i].set_initial_v() } }")
        h("objref fih_RIAR")
        h('{fih_RIAR = new FInitializeHandler(0, "initialiseV_RIAR()")}')

        h("proc initialiseIons_RIAR() { for i = 0, n_RIAR-1 { a_RIAR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIAR")
        h('{fih_ion_RIAR = new FInitializeHandler(1, "initialiseIons_RIAR()")}')

        # ######################   Population: RIBL
        print("Population RIBL contains 1 instance(s) of component: RIBL of type: cell")

        print("Setting the default initial concentrations for ca (used in RIBL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIBL.hoc")
        a_RIBL = []
        h("{ n_RIBL = 1 }")
        h("objectvar a_RIBL[n_RIBL]")
        for i in range(int(h.n_RIBL)):
            h("a_RIBL[%i] = new RIBL()"%i)
            h("access a_RIBL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIBL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIBL() { for i = 0, n_RIBL-1 { a_RIBL[i].set_initial_v() } }")
        h("objref fih_RIBL")
        h('{fih_RIBL = new FInitializeHandler(0, "initialiseV_RIBL()")}')

        h("proc initialiseIons_RIBL() { for i = 0, n_RIBL-1 { a_RIBL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIBL")
        h('{fih_ion_RIBL = new FInitializeHandler(1, "initialiseIons_RIBL()")}')

        # ######################   Population: RIBR
        print("Population RIBR contains 1 instance(s) of component: RIBR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIBR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIBR.hoc")
        a_RIBR = []
        h("{ n_RIBR = 1 }")
        h("objectvar a_RIBR[n_RIBR]")
        for i in range(int(h.n_RIBR)):
            h("a_RIBR[%i] = new RIBR()"%i)
            h("access a_RIBR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIBR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIBR() { for i = 0, n_RIBR-1 { a_RIBR[i].set_initial_v() } }")
        h("objref fih_RIBR")
        h('{fih_RIBR = new FInitializeHandler(0, "initialiseV_RIBR()")}')

        h("proc initialiseIons_RIBR() { for i = 0, n_RIBR-1 { a_RIBR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIBR")
        h('{fih_ion_RIBR = new FInitializeHandler(1, "initialiseIons_RIBR()")}')

        # ######################   Population: RICL
        print("Population RICL contains 1 instance(s) of component: RICL of type: cell")

        print("Setting the default initial concentrations for ca (used in RICL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RICL.hoc")
        a_RICL = []
        h("{ n_RICL = 1 }")
        h("objectvar a_RICL[n_RICL]")
        for i in range(int(h.n_RICL)):
            h("a_RICL[%i] = new RICL()"%i)
            h("access a_RICL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RICL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RICL() { for i = 0, n_RICL-1 { a_RICL[i].set_initial_v() } }")
        h("objref fih_RICL")
        h('{fih_RICL = new FInitializeHandler(0, "initialiseV_RICL()")}')

        h("proc initialiseIons_RICL() { for i = 0, n_RICL-1 { a_RICL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RICL")
        h('{fih_ion_RICL = new FInitializeHandler(1, "initialiseIons_RICL()")}')

        # ######################   Population: RICR
        print("Population RICR contains 1 instance(s) of component: RICR of type: cell")

        print("Setting the default initial concentrations for ca (used in RICR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RICR.hoc")
        a_RICR = []
        h("{ n_RICR = 1 }")
        h("objectvar a_RICR[n_RICR]")
        for i in range(int(h.n_RICR)):
            h("a_RICR[%i] = new RICR()"%i)
            h("access a_RICR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RICR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RICR() { for i = 0, n_RICR-1 { a_RICR[i].set_initial_v() } }")
        h("objref fih_RICR")
        h('{fih_RICR = new FInitializeHandler(0, "initialiseV_RICR()")}')

        h("proc initialiseIons_RICR() { for i = 0, n_RICR-1 { a_RICR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RICR")
        h('{fih_ion_RICR = new FInitializeHandler(1, "initialiseIons_RICR()")}')

        # ######################   Population: RID
        print("Population RID contains 1 instance(s) of component: RID of type: cell")

        print("Setting the default initial concentrations for ca (used in RID) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RID.hoc")
        a_RID = []
        h("{ n_RID = 1 }")
        h("objectvar a_RID[n_RID]")
        for i in range(int(h.n_RID)):
            h("a_RID[%i] = new RID()"%i)
            h("access a_RID[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RID[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RID() { for i = 0, n_RID-1 { a_RID[i].set_initial_v() } }")
        h("objref fih_RID")
        h('{fih_RID = new FInitializeHandler(0, "initialiseV_RID()")}')

        h("proc initialiseIons_RID() { for i = 0, n_RID-1 { a_RID[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RID")
        h('{fih_ion_RID = new FInitializeHandler(1, "initialiseIons_RID()")}')

        # ######################   Population: RIFL
        print("Population RIFL contains 1 instance(s) of component: RIFL of type: cell")

        print("Setting the default initial concentrations for ca (used in RIFL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIFL.hoc")
        a_RIFL = []
        h("{ n_RIFL = 1 }")
        h("objectvar a_RIFL[n_RIFL]")
        for i in range(int(h.n_RIFL)):
            h("a_RIFL[%i] = new RIFL()"%i)
            h("access a_RIFL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIFL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIFL() { for i = 0, n_RIFL-1 { a_RIFL[i].set_initial_v() } }")
        h("objref fih_RIFL")
        h('{fih_RIFL = new FInitializeHandler(0, "initialiseV_RIFL()")}')

        h("proc initialiseIons_RIFL() { for i = 0, n_RIFL-1 { a_RIFL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIFL")
        h('{fih_ion_RIFL = new FInitializeHandler(1, "initialiseIons_RIFL()")}')

        # ######################   Population: RIFR
        print("Population RIFR contains 1 instance(s) of component: RIFR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIFR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIFR.hoc")
        a_RIFR = []
        h("{ n_RIFR = 1 }")
        h("objectvar a_RIFR[n_RIFR]")
        for i in range(int(h.n_RIFR)):
            h("a_RIFR[%i] = new RIFR()"%i)
            h("access a_RIFR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIFR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIFR() { for i = 0, n_RIFR-1 { a_RIFR[i].set_initial_v() } }")
        h("objref fih_RIFR")
        h('{fih_RIFR = new FInitializeHandler(0, "initialiseV_RIFR()")}')

        h("proc initialiseIons_RIFR() { for i = 0, n_RIFR-1 { a_RIFR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIFR")
        h('{fih_ion_RIFR = new FInitializeHandler(1, "initialiseIons_RIFR()")}')

        # ######################   Population: RIGL
        print("Population RIGL contains 1 instance(s) of component: RIGL of type: cell")

        print("Setting the default initial concentrations for ca (used in RIGL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIGL.hoc")
        a_RIGL = []
        h("{ n_RIGL = 1 }")
        h("objectvar a_RIGL[n_RIGL]")
        for i in range(int(h.n_RIGL)):
            h("a_RIGL[%i] = new RIGL()"%i)
            h("access a_RIGL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIGL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIGL() { for i = 0, n_RIGL-1 { a_RIGL[i].set_initial_v() } }")
        h("objref fih_RIGL")
        h('{fih_RIGL = new FInitializeHandler(0, "initialiseV_RIGL()")}')

        h("proc initialiseIons_RIGL() { for i = 0, n_RIGL-1 { a_RIGL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIGL")
        h('{fih_ion_RIGL = new FInitializeHandler(1, "initialiseIons_RIGL()")}')

        # ######################   Population: RIGR
        print("Population RIGR contains 1 instance(s) of component: RIGR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIGR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIGR.hoc")
        a_RIGR = []
        h("{ n_RIGR = 1 }")
        h("objectvar a_RIGR[n_RIGR]")
        for i in range(int(h.n_RIGR)):
            h("a_RIGR[%i] = new RIGR()"%i)
            h("access a_RIGR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIGR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIGR() { for i = 0, n_RIGR-1 { a_RIGR[i].set_initial_v() } }")
        h("objref fih_RIGR")
        h('{fih_RIGR = new FInitializeHandler(0, "initialiseV_RIGR()")}')

        h("proc initialiseIons_RIGR() { for i = 0, n_RIGR-1 { a_RIGR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIGR")
        h('{fih_ion_RIGR = new FInitializeHandler(1, "initialiseIons_RIGR()")}')

        # ######################   Population: RIH
        print("Population RIH contains 1 instance(s) of component: RIH of type: cell")

        print("Setting the default initial concentrations for ca (used in RIH) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIH.hoc")
        a_RIH = []
        h("{ n_RIH = 1 }")
        h("objectvar a_RIH[n_RIH]")
        for i in range(int(h.n_RIH)):
            h("a_RIH[%i] = new RIH()"%i)
            h("access a_RIH[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIH[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIH() { for i = 0, n_RIH-1 { a_RIH[i].set_initial_v() } }")
        h("objref fih_RIH")
        h('{fih_RIH = new FInitializeHandler(0, "initialiseV_RIH()")}')

        h("proc initialiseIons_RIH() { for i = 0, n_RIH-1 { a_RIH[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIH")
        h('{fih_ion_RIH = new FInitializeHandler(1, "initialiseIons_RIH()")}')

        # ######################   Population: RIML
        print("Population RIML contains 1 instance(s) of component: RIML of type: cell")

        print("Setting the default initial concentrations for ca (used in RIML) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIML.hoc")
        a_RIML = []
        h("{ n_RIML = 1 }")
        h("objectvar a_RIML[n_RIML]")
        for i in range(int(h.n_RIML)):
            h("a_RIML[%i] = new RIML()"%i)
            h("access a_RIML[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIML[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIML() { for i = 0, n_RIML-1 { a_RIML[i].set_initial_v() } }")
        h("objref fih_RIML")
        h('{fih_RIML = new FInitializeHandler(0, "initialiseV_RIML()")}')

        h("proc initialiseIons_RIML() { for i = 0, n_RIML-1 { a_RIML[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIML")
        h('{fih_ion_RIML = new FInitializeHandler(1, "initialiseIons_RIML()")}')

        # ######################   Population: RIMR
        print("Population RIMR contains 1 instance(s) of component: RIMR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIMR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIMR.hoc")
        a_RIMR = []
        h("{ n_RIMR = 1 }")
        h("objectvar a_RIMR[n_RIMR]")
        for i in range(int(h.n_RIMR)):
            h("a_RIMR[%i] = new RIMR()"%i)
            h("access a_RIMR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIMR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIMR() { for i = 0, n_RIMR-1 { a_RIMR[i].set_initial_v() } }")
        h("objref fih_RIMR")
        h('{fih_RIMR = new FInitializeHandler(0, "initialiseV_RIMR()")}')

        h("proc initialiseIons_RIMR() { for i = 0, n_RIMR-1 { a_RIMR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIMR")
        h('{fih_ion_RIMR = new FInitializeHandler(1, "initialiseIons_RIMR()")}')

        # ######################   Population: RIPL
        print("Population RIPL contains 1 instance(s) of component: RIPL of type: cell")

        print("Setting the default initial concentrations for ca (used in RIPL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIPL.hoc")
        a_RIPL = []
        h("{ n_RIPL = 1 }")
        h("objectvar a_RIPL[n_RIPL]")
        for i in range(int(h.n_RIPL)):
            h("a_RIPL[%i] = new RIPL()"%i)
            h("access a_RIPL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIPL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIPL() { for i = 0, n_RIPL-1 { a_RIPL[i].set_initial_v() } }")
        h("objref fih_RIPL")
        h('{fih_RIPL = new FInitializeHandler(0, "initialiseV_RIPL()")}')

        h("proc initialiseIons_RIPL() { for i = 0, n_RIPL-1 { a_RIPL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIPL")
        h('{fih_ion_RIPL = new FInitializeHandler(1, "initialiseIons_RIPL()")}')

        # ######################   Population: RIPR
        print("Population RIPR contains 1 instance(s) of component: RIPR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIPR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIPR.hoc")
        a_RIPR = []
        h("{ n_RIPR = 1 }")
        h("objectvar a_RIPR[n_RIPR]")
        for i in range(int(h.n_RIPR)):
            h("a_RIPR[%i] = new RIPR()"%i)
            h("access a_RIPR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIPR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIPR() { for i = 0, n_RIPR-1 { a_RIPR[i].set_initial_v() } }")
        h("objref fih_RIPR")
        h('{fih_RIPR = new FInitializeHandler(0, "initialiseV_RIPR()")}')

        h("proc initialiseIons_RIPR() { for i = 0, n_RIPR-1 { a_RIPR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIPR")
        h('{fih_ion_RIPR = new FInitializeHandler(1, "initialiseIons_RIPR()")}')

        # ######################   Population: RIR
        print("Population RIR contains 1 instance(s) of component: RIR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIR.hoc")
        a_RIR = []
        h("{ n_RIR = 1 }")
        h("objectvar a_RIR[n_RIR]")
        for i in range(int(h.n_RIR)):
            h("a_RIR[%i] = new RIR()"%i)
            h("access a_RIR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIR() { for i = 0, n_RIR-1 { a_RIR[i].set_initial_v() } }")
        h("objref fih_RIR")
        h('{fih_RIR = new FInitializeHandler(0, "initialiseV_RIR()")}')

        h("proc initialiseIons_RIR() { for i = 0, n_RIR-1 { a_RIR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIR")
        h('{fih_ion_RIR = new FInitializeHandler(1, "initialiseIons_RIR()")}')

        # ######################   Population: RIS
        print("Population RIS contains 1 instance(s) of component: RIS of type: cell")

        print("Setting the default initial concentrations for ca (used in RIS) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIS.hoc")
        a_RIS = []
        h("{ n_RIS = 1 }")
        h("objectvar a_RIS[n_RIS]")
        for i in range(int(h.n_RIS)):
            h("a_RIS[%i] = new RIS()"%i)
            h("access a_RIS[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIS[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIS() { for i = 0, n_RIS-1 { a_RIS[i].set_initial_v() } }")
        h("objref fih_RIS")
        h('{fih_RIS = new FInitializeHandler(0, "initialiseV_RIS()")}')

        h("proc initialiseIons_RIS() { for i = 0, n_RIS-1 { a_RIS[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIS")
        h('{fih_ion_RIS = new FInitializeHandler(1, "initialiseIons_RIS()")}')

        # ######################   Population: RIVL
        print("Population RIVL contains 1 instance(s) of component: RIVL of type: cell")

        print("Setting the default initial concentrations for ca (used in RIVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIVL.hoc")
        a_RIVL = []
        h("{ n_RIVL = 1 }")
        h("objectvar a_RIVL[n_RIVL]")
        for i in range(int(h.n_RIVL)):
            h("a_RIVL[%i] = new RIVL()"%i)
            h("access a_RIVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIVL() { for i = 0, n_RIVL-1 { a_RIVL[i].set_initial_v() } }")
        h("objref fih_RIVL")
        h('{fih_RIVL = new FInitializeHandler(0, "initialiseV_RIVL()")}')

        h("proc initialiseIons_RIVL() { for i = 0, n_RIVL-1 { a_RIVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIVL")
        h('{fih_ion_RIVL = new FInitializeHandler(1, "initialiseIons_RIVL()")}')

        # ######################   Population: RIVR
        print("Population RIVR contains 1 instance(s) of component: RIVR of type: cell")

        print("Setting the default initial concentrations for ca (used in RIVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RIVR.hoc")
        a_RIVR = []
        h("{ n_RIVR = 1 }")
        h("objectvar a_RIVR[n_RIVR]")
        for i in range(int(h.n_RIVR)):
            h("a_RIVR[%i] = new RIVR()"%i)
            h("access a_RIVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RIVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RIVR() { for i = 0, n_RIVR-1 { a_RIVR[i].set_initial_v() } }")
        h("objref fih_RIVR")
        h('{fih_RIVR = new FInitializeHandler(0, "initialiseV_RIVR()")}')

        h("proc initialiseIons_RIVR() { for i = 0, n_RIVR-1 { a_RIVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RIVR")
        h('{fih_ion_RIVR = new FInitializeHandler(1, "initialiseIons_RIVR()")}')

        # ######################   Population: RMDDL
        print("Population RMDDL contains 1 instance(s) of component: RMDDL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMDDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMDDL.hoc")
        a_RMDDL = []
        h("{ n_RMDDL = 1 }")
        h("objectvar a_RMDDL[n_RMDDL]")
        for i in range(int(h.n_RMDDL)):
            h("a_RMDDL[%i] = new RMDDL()"%i)
            h("access a_RMDDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDDL() { for i = 0, n_RMDDL-1 { a_RMDDL[i].set_initial_v() } }")
        h("objref fih_RMDDL")
        h('{fih_RMDDL = new FInitializeHandler(0, "initialiseV_RMDDL()")}')

        h("proc initialiseIons_RMDDL() { for i = 0, n_RMDDL-1 { a_RMDDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDDL")
        h('{fih_ion_RMDDL = new FInitializeHandler(1, "initialiseIons_RMDDL()")}')

        # ######################   Population: RMDDR
        print("Population RMDDR contains 1 instance(s) of component: RMDDR of type: cell")

        print("Setting the default initial concentrations for ca (used in RMDDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMDDR.hoc")
        a_RMDDR = []
        h("{ n_RMDDR = 1 }")
        h("objectvar a_RMDDR[n_RMDDR]")
        for i in range(int(h.n_RMDDR)):
            h("a_RMDDR[%i] = new RMDDR()"%i)
            h("access a_RMDDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDDR() { for i = 0, n_RMDDR-1 { a_RMDDR[i].set_initial_v() } }")
        h("objref fih_RMDDR")
        h('{fih_RMDDR = new FInitializeHandler(0, "initialiseV_RMDDR()")}')

        h("proc initialiseIons_RMDDR() { for i = 0, n_RMDDR-1 { a_RMDDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDDR")
        h('{fih_ion_RMDDR = new FInitializeHandler(1, "initialiseIons_RMDDR()")}')

        # ######################   Population: RMDL
        print("Population RMDL contains 1 instance(s) of component: RMDL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMDL.hoc")
        a_RMDL = []
        h("{ n_RMDL = 1 }")
        h("objectvar a_RMDL[n_RMDL]")
        for i in range(int(h.n_RMDL)):
            h("a_RMDL[%i] = new RMDL()"%i)
            h("access a_RMDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDL() { for i = 0, n_RMDL-1 { a_RMDL[i].set_initial_v() } }")
        h("objref fih_RMDL")
        h('{fih_RMDL = new FInitializeHandler(0, "initialiseV_RMDL()")}')

        h("proc initialiseIons_RMDL() { for i = 0, n_RMDL-1 { a_RMDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDL")
        h('{fih_ion_RMDL = new FInitializeHandler(1, "initialiseIons_RMDL()")}')

        # ######################   Population: RMDR
        print("Population RMDR contains 1 instance(s) of component: RMDR of type: cell")

        print("Setting the default initial concentrations for ca (used in RMDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMDR.hoc")
        a_RMDR = []
        h("{ n_RMDR = 1 }")
        h("objectvar a_RMDR[n_RMDR]")
        for i in range(int(h.n_RMDR)):
            h("a_RMDR[%i] = new RMDR()"%i)
            h("access a_RMDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDR() { for i = 0, n_RMDR-1 { a_RMDR[i].set_initial_v() } }")
        h("objref fih_RMDR")
        h('{fih_RMDR = new FInitializeHandler(0, "initialiseV_RMDR()")}')

        h("proc initialiseIons_RMDR() { for i = 0, n_RMDR-1 { a_RMDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDR")
        h('{fih_ion_RMDR = new FInitializeHandler(1, "initialiseIons_RMDR()")}')

        # ######################   Population: RMDVL
        print("Population RMDVL contains 1 instance(s) of component: RMDVL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMDVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMDVL.hoc")
        a_RMDVL = []
        h("{ n_RMDVL = 1 }")
        h("objectvar a_RMDVL[n_RMDVL]")
        for i in range(int(h.n_RMDVL)):
            h("a_RMDVL[%i] = new RMDVL()"%i)
            h("access a_RMDVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDVL() { for i = 0, n_RMDVL-1 { a_RMDVL[i].set_initial_v() } }")
        h("objref fih_RMDVL")
        h('{fih_RMDVL = new FInitializeHandler(0, "initialiseV_RMDVL()")}')

        h("proc initialiseIons_RMDVL() { for i = 0, n_RMDVL-1 { a_RMDVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDVL")
        h('{fih_ion_RMDVL = new FInitializeHandler(1, "initialiseIons_RMDVL()")}')

        # ######################   Population: RMDVR
        print("Population RMDVR contains 1 instance(s) of component: RMDVR of type: cell")

        print("Setting the default initial concentrations for ca (used in RMDVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMDVR.hoc")
        a_RMDVR = []
        h("{ n_RMDVR = 1 }")
        h("objectvar a_RMDVR[n_RMDVR]")
        for i in range(int(h.n_RMDVR)):
            h("a_RMDVR[%i] = new RMDVR()"%i)
            h("access a_RMDVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMDVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMDVR() { for i = 0, n_RMDVR-1 { a_RMDVR[i].set_initial_v() } }")
        h("objref fih_RMDVR")
        h('{fih_RMDVR = new FInitializeHandler(0, "initialiseV_RMDVR()")}')

        h("proc initialiseIons_RMDVR() { for i = 0, n_RMDVR-1 { a_RMDVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMDVR")
        h('{fih_ion_RMDVR = new FInitializeHandler(1, "initialiseIons_RMDVR()")}')

        # ######################   Population: RMED
        print("Population RMED contains 1 instance(s) of component: RMED of type: cell")

        print("Setting the default initial concentrations for ca (used in RMED) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMED.hoc")
        a_RMED = []
        h("{ n_RMED = 1 }")
        h("objectvar a_RMED[n_RMED]")
        for i in range(int(h.n_RMED)):
            h("a_RMED[%i] = new RMED()"%i)
            h("access a_RMED[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMED[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMED() { for i = 0, n_RMED-1 { a_RMED[i].set_initial_v() } }")
        h("objref fih_RMED")
        h('{fih_RMED = new FInitializeHandler(0, "initialiseV_RMED()")}')

        h("proc initialiseIons_RMED() { for i = 0, n_RMED-1 { a_RMED[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMED")
        h('{fih_ion_RMED = new FInitializeHandler(1, "initialiseIons_RMED()")}')

        # ######################   Population: RMEL
        print("Population RMEL contains 1 instance(s) of component: RMEL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMEL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMEL.hoc")
        a_RMEL = []
        h("{ n_RMEL = 1 }")
        h("objectvar a_RMEL[n_RMEL]")
        for i in range(int(h.n_RMEL)):
            h("a_RMEL[%i] = new RMEL()"%i)
            h("access a_RMEL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMEL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMEL() { for i = 0, n_RMEL-1 { a_RMEL[i].set_initial_v() } }")
        h("objref fih_RMEL")
        h('{fih_RMEL = new FInitializeHandler(0, "initialiseV_RMEL()")}')

        h("proc initialiseIons_RMEL() { for i = 0, n_RMEL-1 { a_RMEL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMEL")
        h('{fih_ion_RMEL = new FInitializeHandler(1, "initialiseIons_RMEL()")}')

        # ######################   Population: RMER
        print("Population RMER contains 1 instance(s) of component: RMER of type: cell")

        print("Setting the default initial concentrations for ca (used in RMER) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMER.hoc")
        a_RMER = []
        h("{ n_RMER = 1 }")
        h("objectvar a_RMER[n_RMER]")
        for i in range(int(h.n_RMER)):
            h("a_RMER[%i] = new RMER()"%i)
            h("access a_RMER[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMER[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMER() { for i = 0, n_RMER-1 { a_RMER[i].set_initial_v() } }")
        h("objref fih_RMER")
        h('{fih_RMER = new FInitializeHandler(0, "initialiseV_RMER()")}')

        h("proc initialiseIons_RMER() { for i = 0, n_RMER-1 { a_RMER[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMER")
        h('{fih_ion_RMER = new FInitializeHandler(1, "initialiseIons_RMER()")}')

        # ######################   Population: RMEV
        print("Population RMEV contains 1 instance(s) of component: RMEV of type: cell")

        print("Setting the default initial concentrations for ca (used in RMEV) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMEV.hoc")
        a_RMEV = []
        h("{ n_RMEV = 1 }")
        h("objectvar a_RMEV[n_RMEV]")
        for i in range(int(h.n_RMEV)):
            h("a_RMEV[%i] = new RMEV()"%i)
            h("access a_RMEV[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMEV[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMEV() { for i = 0, n_RMEV-1 { a_RMEV[i].set_initial_v() } }")
        h("objref fih_RMEV")
        h('{fih_RMEV = new FInitializeHandler(0, "initialiseV_RMEV()")}')

        h("proc initialiseIons_RMEV() { for i = 0, n_RMEV-1 { a_RMEV[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMEV")
        h('{fih_ion_RMEV = new FInitializeHandler(1, "initialiseIons_RMEV()")}')

        # ######################   Population: RMFL
        print("Population RMFL contains 1 instance(s) of component: RMFL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMFL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMFL.hoc")
        a_RMFL = []
        h("{ n_RMFL = 1 }")
        h("objectvar a_RMFL[n_RMFL]")
        for i in range(int(h.n_RMFL)):
            h("a_RMFL[%i] = new RMFL()"%i)
            h("access a_RMFL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMFL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMFL() { for i = 0, n_RMFL-1 { a_RMFL[i].set_initial_v() } }")
        h("objref fih_RMFL")
        h('{fih_RMFL = new FInitializeHandler(0, "initialiseV_RMFL()")}')

        h("proc initialiseIons_RMFL() { for i = 0, n_RMFL-1 { a_RMFL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMFL")
        h('{fih_ion_RMFL = new FInitializeHandler(1, "initialiseIons_RMFL()")}')

        # ######################   Population: RMFR
        print("Population RMFR contains 1 instance(s) of component: RMFR of type: cell")

        print("Setting the default initial concentrations for ca (used in RMFR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMFR.hoc")
        a_RMFR = []
        h("{ n_RMFR = 1 }")
        h("objectvar a_RMFR[n_RMFR]")
        for i in range(int(h.n_RMFR)):
            h("a_RMFR[%i] = new RMFR()"%i)
            h("access a_RMFR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMFR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMFR() { for i = 0, n_RMFR-1 { a_RMFR[i].set_initial_v() } }")
        h("objref fih_RMFR")
        h('{fih_RMFR = new FInitializeHandler(0, "initialiseV_RMFR()")}')

        h("proc initialiseIons_RMFR() { for i = 0, n_RMFR-1 { a_RMFR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMFR")
        h('{fih_ion_RMFR = new FInitializeHandler(1, "initialiseIons_RMFR()")}')

        # ######################   Population: RMGL
        print("Population RMGL contains 1 instance(s) of component: RMGL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMGL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMGL.hoc")
        a_RMGL = []
        h("{ n_RMGL = 1 }")
        h("objectvar a_RMGL[n_RMGL]")
        for i in range(int(h.n_RMGL)):
            h("a_RMGL[%i] = new RMGL()"%i)
            h("access a_RMGL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMGL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMGL() { for i = 0, n_RMGL-1 { a_RMGL[i].set_initial_v() } }")
        h("objref fih_RMGL")
        h('{fih_RMGL = new FInitializeHandler(0, "initialiseV_RMGL()")}')

        h("proc initialiseIons_RMGL() { for i = 0, n_RMGL-1 { a_RMGL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMGL")
        h('{fih_ion_RMGL = new FInitializeHandler(1, "initialiseIons_RMGL()")}')

        # ######################   Population: RMGR
        print("Population RMGR contains 1 instance(s) of component: RMGR of type: cell")

        print("Setting the default initial concentrations for ca (used in RMGR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMGR.hoc")
        a_RMGR = []
        h("{ n_RMGR = 1 }")
        h("objectvar a_RMGR[n_RMGR]")
        for i in range(int(h.n_RMGR)):
            h("a_RMGR[%i] = new RMGR()"%i)
            h("access a_RMGR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMGR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMGR() { for i = 0, n_RMGR-1 { a_RMGR[i].set_initial_v() } }")
        h("objref fih_RMGR")
        h('{fih_RMGR = new FInitializeHandler(0, "initialiseV_RMGR()")}')

        h("proc initialiseIons_RMGR() { for i = 0, n_RMGR-1 { a_RMGR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMGR")
        h('{fih_ion_RMGR = new FInitializeHandler(1, "initialiseIons_RMGR()")}')

        # ######################   Population: RMHL
        print("Population RMHL contains 1 instance(s) of component: RMHL of type: cell")

        print("Setting the default initial concentrations for ca (used in RMHL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMHL.hoc")
        a_RMHL = []
        h("{ n_RMHL = 1 }")
        h("objectvar a_RMHL[n_RMHL]")
        for i in range(int(h.n_RMHL)):
            h("a_RMHL[%i] = new RMHL()"%i)
            h("access a_RMHL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMHL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMHL() { for i = 0, n_RMHL-1 { a_RMHL[i].set_initial_v() } }")
        h("objref fih_RMHL")
        h('{fih_RMHL = new FInitializeHandler(0, "initialiseV_RMHL()")}')

        h("proc initialiseIons_RMHL() { for i = 0, n_RMHL-1 { a_RMHL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMHL")
        h('{fih_ion_RMHL = new FInitializeHandler(1, "initialiseIons_RMHL()")}')

        # ######################   Population: RMHR
        print("Population RMHR contains 1 instance(s) of component: RMHR of type: cell")

        print("Setting the default initial concentrations for ca (used in RMHR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("RMHR.hoc")
        a_RMHR = []
        h("{ n_RMHR = 1 }")
        h("objectvar a_RMHR[n_RMHR]")
        for i in range(int(h.n_RMHR)):
            h("a_RMHR[%i] = new RMHR()"%i)
            h("access a_RMHR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_RMHR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_RMHR() { for i = 0, n_RMHR-1 { a_RMHR[i].set_initial_v() } }")
        h("objref fih_RMHR")
        h('{fih_RMHR = new FInitializeHandler(0, "initialiseV_RMHR()")}')

        h("proc initialiseIons_RMHR() { for i = 0, n_RMHR-1 { a_RMHR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_RMHR")
        h('{fih_ion_RMHR = new FInitializeHandler(1, "initialiseIons_RMHR()")}')

        # ######################   Population: SAADL
        print("Population SAADL contains 1 instance(s) of component: SAADL of type: cell")

        print("Setting the default initial concentrations for ca (used in SAADL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SAADL.hoc")
        a_SAADL = []
        h("{ n_SAADL = 1 }")
        h("objectvar a_SAADL[n_SAADL]")
        for i in range(int(h.n_SAADL)):
            h("a_SAADL[%i] = new SAADL()"%i)
            h("access a_SAADL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SAADL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SAADL() { for i = 0, n_SAADL-1 { a_SAADL[i].set_initial_v() } }")
        h("objref fih_SAADL")
        h('{fih_SAADL = new FInitializeHandler(0, "initialiseV_SAADL()")}')

        h("proc initialiseIons_SAADL() { for i = 0, n_SAADL-1 { a_SAADL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SAADL")
        h('{fih_ion_SAADL = new FInitializeHandler(1, "initialiseIons_SAADL()")}')

        # ######################   Population: SAADR
        print("Population SAADR contains 1 instance(s) of component: SAADR of type: cell")

        print("Setting the default initial concentrations for ca (used in SAADR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SAADR.hoc")
        a_SAADR = []
        h("{ n_SAADR = 1 }")
        h("objectvar a_SAADR[n_SAADR]")
        for i in range(int(h.n_SAADR)):
            h("a_SAADR[%i] = new SAADR()"%i)
            h("access a_SAADR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SAADR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SAADR() { for i = 0, n_SAADR-1 { a_SAADR[i].set_initial_v() } }")
        h("objref fih_SAADR")
        h('{fih_SAADR = new FInitializeHandler(0, "initialiseV_SAADR()")}')

        h("proc initialiseIons_SAADR() { for i = 0, n_SAADR-1 { a_SAADR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SAADR")
        h('{fih_ion_SAADR = new FInitializeHandler(1, "initialiseIons_SAADR()")}')

        # ######################   Population: SAAVL
        print("Population SAAVL contains 1 instance(s) of component: SAAVL of type: cell")

        print("Setting the default initial concentrations for ca (used in SAAVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SAAVL.hoc")
        a_SAAVL = []
        h("{ n_SAAVL = 1 }")
        h("objectvar a_SAAVL[n_SAAVL]")
        for i in range(int(h.n_SAAVL)):
            h("a_SAAVL[%i] = new SAAVL()"%i)
            h("access a_SAAVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SAAVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SAAVL() { for i = 0, n_SAAVL-1 { a_SAAVL[i].set_initial_v() } }")
        h("objref fih_SAAVL")
        h('{fih_SAAVL = new FInitializeHandler(0, "initialiseV_SAAVL()")}')

        h("proc initialiseIons_SAAVL() { for i = 0, n_SAAVL-1 { a_SAAVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SAAVL")
        h('{fih_ion_SAAVL = new FInitializeHandler(1, "initialiseIons_SAAVL()")}')

        # ######################   Population: SAAVR
        print("Population SAAVR contains 1 instance(s) of component: SAAVR of type: cell")

        print("Setting the default initial concentrations for ca (used in SAAVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SAAVR.hoc")
        a_SAAVR = []
        h("{ n_SAAVR = 1 }")
        h("objectvar a_SAAVR[n_SAAVR]")
        for i in range(int(h.n_SAAVR)):
            h("a_SAAVR[%i] = new SAAVR()"%i)
            h("access a_SAAVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SAAVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SAAVR() { for i = 0, n_SAAVR-1 { a_SAAVR[i].set_initial_v() } }")
        h("objref fih_SAAVR")
        h('{fih_SAAVR = new FInitializeHandler(0, "initialiseV_SAAVR()")}')

        h("proc initialiseIons_SAAVR() { for i = 0, n_SAAVR-1 { a_SAAVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SAAVR")
        h('{fih_ion_SAAVR = new FInitializeHandler(1, "initialiseIons_SAAVR()")}')

        # ######################   Population: SABD
        print("Population SABD contains 1 instance(s) of component: SABD of type: cell")

        print("Setting the default initial concentrations for ca (used in SABD) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SABD.hoc")
        a_SABD = []
        h("{ n_SABD = 1 }")
        h("objectvar a_SABD[n_SABD]")
        for i in range(int(h.n_SABD)):
            h("a_SABD[%i] = new SABD()"%i)
            h("access a_SABD[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SABD[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SABD() { for i = 0, n_SABD-1 { a_SABD[i].set_initial_v() } }")
        h("objref fih_SABD")
        h('{fih_SABD = new FInitializeHandler(0, "initialiseV_SABD()")}')

        h("proc initialiseIons_SABD() { for i = 0, n_SABD-1 { a_SABD[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SABD")
        h('{fih_ion_SABD = new FInitializeHandler(1, "initialiseIons_SABD()")}')

        # ######################   Population: SABVL
        print("Population SABVL contains 1 instance(s) of component: SABVL of type: cell")

        print("Setting the default initial concentrations for ca (used in SABVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SABVL.hoc")
        a_SABVL = []
        h("{ n_SABVL = 1 }")
        h("objectvar a_SABVL[n_SABVL]")
        for i in range(int(h.n_SABVL)):
            h("a_SABVL[%i] = new SABVL()"%i)
            h("access a_SABVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SABVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SABVL() { for i = 0, n_SABVL-1 { a_SABVL[i].set_initial_v() } }")
        h("objref fih_SABVL")
        h('{fih_SABVL = new FInitializeHandler(0, "initialiseV_SABVL()")}')

        h("proc initialiseIons_SABVL() { for i = 0, n_SABVL-1 { a_SABVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SABVL")
        h('{fih_ion_SABVL = new FInitializeHandler(1, "initialiseIons_SABVL()")}')

        # ######################   Population: SABVR
        print("Population SABVR contains 1 instance(s) of component: SABVR of type: cell")

        print("Setting the default initial concentrations for ca (used in SABVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SABVR.hoc")
        a_SABVR = []
        h("{ n_SABVR = 1 }")
        h("objectvar a_SABVR[n_SABVR]")
        for i in range(int(h.n_SABVR)):
            h("a_SABVR[%i] = new SABVR()"%i)
            h("access a_SABVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SABVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SABVR() { for i = 0, n_SABVR-1 { a_SABVR[i].set_initial_v() } }")
        h("objref fih_SABVR")
        h('{fih_SABVR = new FInitializeHandler(0, "initialiseV_SABVR()")}')

        h("proc initialiseIons_SABVR() { for i = 0, n_SABVR-1 { a_SABVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SABVR")
        h('{fih_ion_SABVR = new FInitializeHandler(1, "initialiseIons_SABVR()")}')

        # ######################   Population: SDQL
        print("Population SDQL contains 1 instance(s) of component: SDQL of type: cell")

        print("Setting the default initial concentrations for ca (used in SDQL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SDQL.hoc")
        a_SDQL = []
        h("{ n_SDQL = 1 }")
        h("objectvar a_SDQL[n_SDQL]")
        for i in range(int(h.n_SDQL)):
            h("a_SDQL[%i] = new SDQL()"%i)
            h("access a_SDQL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SDQL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SDQL() { for i = 0, n_SDQL-1 { a_SDQL[i].set_initial_v() } }")
        h("objref fih_SDQL")
        h('{fih_SDQL = new FInitializeHandler(0, "initialiseV_SDQL()")}')

        h("proc initialiseIons_SDQL() { for i = 0, n_SDQL-1 { a_SDQL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SDQL")
        h('{fih_ion_SDQL = new FInitializeHandler(1, "initialiseIons_SDQL()")}')

        # ######################   Population: SDQR
        print("Population SDQR contains 1 instance(s) of component: SDQR of type: cell")

        print("Setting the default initial concentrations for ca (used in SDQR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SDQR.hoc")
        a_SDQR = []
        h("{ n_SDQR = 1 }")
        h("objectvar a_SDQR[n_SDQR]")
        for i in range(int(h.n_SDQR)):
            h("a_SDQR[%i] = new SDQR()"%i)
            h("access a_SDQR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SDQR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SDQR() { for i = 0, n_SDQR-1 { a_SDQR[i].set_initial_v() } }")
        h("objref fih_SDQR")
        h('{fih_SDQR = new FInitializeHandler(0, "initialiseV_SDQR()")}')

        h("proc initialiseIons_SDQR() { for i = 0, n_SDQR-1 { a_SDQR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SDQR")
        h('{fih_ion_SDQR = new FInitializeHandler(1, "initialiseIons_SDQR()")}')

        # ######################   Population: SIADL
        print("Population SIADL contains 1 instance(s) of component: SIADL of type: cell")

        print("Setting the default initial concentrations for ca (used in SIADL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIADL.hoc")
        a_SIADL = []
        h("{ n_SIADL = 1 }")
        h("objectvar a_SIADL[n_SIADL]")
        for i in range(int(h.n_SIADL)):
            h("a_SIADL[%i] = new SIADL()"%i)
            h("access a_SIADL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIADL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIADL() { for i = 0, n_SIADL-1 { a_SIADL[i].set_initial_v() } }")
        h("objref fih_SIADL")
        h('{fih_SIADL = new FInitializeHandler(0, "initialiseV_SIADL()")}')

        h("proc initialiseIons_SIADL() { for i = 0, n_SIADL-1 { a_SIADL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIADL")
        h('{fih_ion_SIADL = new FInitializeHandler(1, "initialiseIons_SIADL()")}')

        # ######################   Population: SIADR
        print("Population SIADR contains 1 instance(s) of component: SIADR of type: cell")

        print("Setting the default initial concentrations for ca (used in SIADR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIADR.hoc")
        a_SIADR = []
        h("{ n_SIADR = 1 }")
        h("objectvar a_SIADR[n_SIADR]")
        for i in range(int(h.n_SIADR)):
            h("a_SIADR[%i] = new SIADR()"%i)
            h("access a_SIADR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIADR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIADR() { for i = 0, n_SIADR-1 { a_SIADR[i].set_initial_v() } }")
        h("objref fih_SIADR")
        h('{fih_SIADR = new FInitializeHandler(0, "initialiseV_SIADR()")}')

        h("proc initialiseIons_SIADR() { for i = 0, n_SIADR-1 { a_SIADR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIADR")
        h('{fih_ion_SIADR = new FInitializeHandler(1, "initialiseIons_SIADR()")}')

        # ######################   Population: SIAVL
        print("Population SIAVL contains 1 instance(s) of component: SIAVL of type: cell")

        print("Setting the default initial concentrations for ca (used in SIAVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIAVL.hoc")
        a_SIAVL = []
        h("{ n_SIAVL = 1 }")
        h("objectvar a_SIAVL[n_SIAVL]")
        for i in range(int(h.n_SIAVL)):
            h("a_SIAVL[%i] = new SIAVL()"%i)
            h("access a_SIAVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIAVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIAVL() { for i = 0, n_SIAVL-1 { a_SIAVL[i].set_initial_v() } }")
        h("objref fih_SIAVL")
        h('{fih_SIAVL = new FInitializeHandler(0, "initialiseV_SIAVL()")}')

        h("proc initialiseIons_SIAVL() { for i = 0, n_SIAVL-1 { a_SIAVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIAVL")
        h('{fih_ion_SIAVL = new FInitializeHandler(1, "initialiseIons_SIAVL()")}')

        # ######################   Population: SIAVR
        print("Population SIAVR contains 1 instance(s) of component: SIAVR of type: cell")

        print("Setting the default initial concentrations for ca (used in SIAVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIAVR.hoc")
        a_SIAVR = []
        h("{ n_SIAVR = 1 }")
        h("objectvar a_SIAVR[n_SIAVR]")
        for i in range(int(h.n_SIAVR)):
            h("a_SIAVR[%i] = new SIAVR()"%i)
            h("access a_SIAVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIAVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIAVR() { for i = 0, n_SIAVR-1 { a_SIAVR[i].set_initial_v() } }")
        h("objref fih_SIAVR")
        h('{fih_SIAVR = new FInitializeHandler(0, "initialiseV_SIAVR()")}')

        h("proc initialiseIons_SIAVR() { for i = 0, n_SIAVR-1 { a_SIAVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIAVR")
        h('{fih_ion_SIAVR = new FInitializeHandler(1, "initialiseIons_SIAVR()")}')

        # ######################   Population: SIBDL
        print("Population SIBDL contains 1 instance(s) of component: SIBDL of type: cell")

        print("Setting the default initial concentrations for ca (used in SIBDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIBDL.hoc")
        a_SIBDL = []
        h("{ n_SIBDL = 1 }")
        h("objectvar a_SIBDL[n_SIBDL]")
        for i in range(int(h.n_SIBDL)):
            h("a_SIBDL[%i] = new SIBDL()"%i)
            h("access a_SIBDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIBDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIBDL() { for i = 0, n_SIBDL-1 { a_SIBDL[i].set_initial_v() } }")
        h("objref fih_SIBDL")
        h('{fih_SIBDL = new FInitializeHandler(0, "initialiseV_SIBDL()")}')

        h("proc initialiseIons_SIBDL() { for i = 0, n_SIBDL-1 { a_SIBDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIBDL")
        h('{fih_ion_SIBDL = new FInitializeHandler(1, "initialiseIons_SIBDL()")}')

        # ######################   Population: SIBDR
        print("Population SIBDR contains 1 instance(s) of component: SIBDR of type: cell")

        print("Setting the default initial concentrations for ca (used in SIBDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIBDR.hoc")
        a_SIBDR = []
        h("{ n_SIBDR = 1 }")
        h("objectvar a_SIBDR[n_SIBDR]")
        for i in range(int(h.n_SIBDR)):
            h("a_SIBDR[%i] = new SIBDR()"%i)
            h("access a_SIBDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIBDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIBDR() { for i = 0, n_SIBDR-1 { a_SIBDR[i].set_initial_v() } }")
        h("objref fih_SIBDR")
        h('{fih_SIBDR = new FInitializeHandler(0, "initialiseV_SIBDR()")}')

        h("proc initialiseIons_SIBDR() { for i = 0, n_SIBDR-1 { a_SIBDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIBDR")
        h('{fih_ion_SIBDR = new FInitializeHandler(1, "initialiseIons_SIBDR()")}')

        # ######################   Population: SIBVL
        print("Population SIBVL contains 1 instance(s) of component: SIBVL of type: cell")

        print("Setting the default initial concentrations for ca (used in SIBVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIBVL.hoc")
        a_SIBVL = []
        h("{ n_SIBVL = 1 }")
        h("objectvar a_SIBVL[n_SIBVL]")
        for i in range(int(h.n_SIBVL)):
            h("a_SIBVL[%i] = new SIBVL()"%i)
            h("access a_SIBVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIBVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIBVL() { for i = 0, n_SIBVL-1 { a_SIBVL[i].set_initial_v() } }")
        h("objref fih_SIBVL")
        h('{fih_SIBVL = new FInitializeHandler(0, "initialiseV_SIBVL()")}')

        h("proc initialiseIons_SIBVL() { for i = 0, n_SIBVL-1 { a_SIBVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIBVL")
        h('{fih_ion_SIBVL = new FInitializeHandler(1, "initialiseIons_SIBVL()")}')

        # ######################   Population: SIBVR
        print("Population SIBVR contains 1 instance(s) of component: SIBVR of type: cell")

        print("Setting the default initial concentrations for ca (used in SIBVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SIBVR.hoc")
        a_SIBVR = []
        h("{ n_SIBVR = 1 }")
        h("objectvar a_SIBVR[n_SIBVR]")
        for i in range(int(h.n_SIBVR)):
            h("a_SIBVR[%i] = new SIBVR()"%i)
            h("access a_SIBVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SIBVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SIBVR() { for i = 0, n_SIBVR-1 { a_SIBVR[i].set_initial_v() } }")
        h("objref fih_SIBVR")
        h('{fih_SIBVR = new FInitializeHandler(0, "initialiseV_SIBVR()")}')

        h("proc initialiseIons_SIBVR() { for i = 0, n_SIBVR-1 { a_SIBVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SIBVR")
        h('{fih_ion_SIBVR = new FInitializeHandler(1, "initialiseIons_SIBVR()")}')

        # ######################   Population: SMBDL
        print("Population SMBDL contains 1 instance(s) of component: SMBDL of type: cell")

        print("Setting the default initial concentrations for ca (used in SMBDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMBDL.hoc")
        a_SMBDL = []
        h("{ n_SMBDL = 1 }")
        h("objectvar a_SMBDL[n_SMBDL]")
        for i in range(int(h.n_SMBDL)):
            h("a_SMBDL[%i] = new SMBDL()"%i)
            h("access a_SMBDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMBDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMBDL() { for i = 0, n_SMBDL-1 { a_SMBDL[i].set_initial_v() } }")
        h("objref fih_SMBDL")
        h('{fih_SMBDL = new FInitializeHandler(0, "initialiseV_SMBDL()")}')

        h("proc initialiseIons_SMBDL() { for i = 0, n_SMBDL-1 { a_SMBDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMBDL")
        h('{fih_ion_SMBDL = new FInitializeHandler(1, "initialiseIons_SMBDL()")}')

        # ######################   Population: SMBDR
        print("Population SMBDR contains 1 instance(s) of component: SMBDR of type: cell")

        print("Setting the default initial concentrations for ca (used in SMBDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMBDR.hoc")
        a_SMBDR = []
        h("{ n_SMBDR = 1 }")
        h("objectvar a_SMBDR[n_SMBDR]")
        for i in range(int(h.n_SMBDR)):
            h("a_SMBDR[%i] = new SMBDR()"%i)
            h("access a_SMBDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMBDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMBDR() { for i = 0, n_SMBDR-1 { a_SMBDR[i].set_initial_v() } }")
        h("objref fih_SMBDR")
        h('{fih_SMBDR = new FInitializeHandler(0, "initialiseV_SMBDR()")}')

        h("proc initialiseIons_SMBDR() { for i = 0, n_SMBDR-1 { a_SMBDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMBDR")
        h('{fih_ion_SMBDR = new FInitializeHandler(1, "initialiseIons_SMBDR()")}')

        # ######################   Population: SMBVL
        print("Population SMBVL contains 1 instance(s) of component: SMBVL of type: cell")

        print("Setting the default initial concentrations for ca (used in SMBVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMBVL.hoc")
        a_SMBVL = []
        h("{ n_SMBVL = 1 }")
        h("objectvar a_SMBVL[n_SMBVL]")
        for i in range(int(h.n_SMBVL)):
            h("a_SMBVL[%i] = new SMBVL()"%i)
            h("access a_SMBVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMBVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMBVL() { for i = 0, n_SMBVL-1 { a_SMBVL[i].set_initial_v() } }")
        h("objref fih_SMBVL")
        h('{fih_SMBVL = new FInitializeHandler(0, "initialiseV_SMBVL()")}')

        h("proc initialiseIons_SMBVL() { for i = 0, n_SMBVL-1 { a_SMBVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMBVL")
        h('{fih_ion_SMBVL = new FInitializeHandler(1, "initialiseIons_SMBVL()")}')

        # ######################   Population: SMBVR
        print("Population SMBVR contains 1 instance(s) of component: SMBVR of type: cell")

        print("Setting the default initial concentrations for ca (used in SMBVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMBVR.hoc")
        a_SMBVR = []
        h("{ n_SMBVR = 1 }")
        h("objectvar a_SMBVR[n_SMBVR]")
        for i in range(int(h.n_SMBVR)):
            h("a_SMBVR[%i] = new SMBVR()"%i)
            h("access a_SMBVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMBVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMBVR() { for i = 0, n_SMBVR-1 { a_SMBVR[i].set_initial_v() } }")
        h("objref fih_SMBVR")
        h('{fih_SMBVR = new FInitializeHandler(0, "initialiseV_SMBVR()")}')

        h("proc initialiseIons_SMBVR() { for i = 0, n_SMBVR-1 { a_SMBVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMBVR")
        h('{fih_ion_SMBVR = new FInitializeHandler(1, "initialiseIons_SMBVR()")}')

        # ######################   Population: SMDDL
        print("Population SMDDL contains 1 instance(s) of component: SMDDL of type: cell")

        print("Setting the default initial concentrations for ca (used in SMDDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMDDL.hoc")
        a_SMDDL = []
        h("{ n_SMDDL = 1 }")
        h("objectvar a_SMDDL[n_SMDDL]")
        for i in range(int(h.n_SMDDL)):
            h("a_SMDDL[%i] = new SMDDL()"%i)
            h("access a_SMDDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMDDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMDDL() { for i = 0, n_SMDDL-1 { a_SMDDL[i].set_initial_v() } }")
        h("objref fih_SMDDL")
        h('{fih_SMDDL = new FInitializeHandler(0, "initialiseV_SMDDL()")}')

        h("proc initialiseIons_SMDDL() { for i = 0, n_SMDDL-1 { a_SMDDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMDDL")
        h('{fih_ion_SMDDL = new FInitializeHandler(1, "initialiseIons_SMDDL()")}')

        # ######################   Population: SMDDR
        print("Population SMDDR contains 1 instance(s) of component: SMDDR of type: cell")

        print("Setting the default initial concentrations for ca (used in SMDDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMDDR.hoc")
        a_SMDDR = []
        h("{ n_SMDDR = 1 }")
        h("objectvar a_SMDDR[n_SMDDR]")
        for i in range(int(h.n_SMDDR)):
            h("a_SMDDR[%i] = new SMDDR()"%i)
            h("access a_SMDDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMDDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMDDR() { for i = 0, n_SMDDR-1 { a_SMDDR[i].set_initial_v() } }")
        h("objref fih_SMDDR")
        h('{fih_SMDDR = new FInitializeHandler(0, "initialiseV_SMDDR()")}')

        h("proc initialiseIons_SMDDR() { for i = 0, n_SMDDR-1 { a_SMDDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMDDR")
        h('{fih_ion_SMDDR = new FInitializeHandler(1, "initialiseIons_SMDDR()")}')

        # ######################   Population: SMDVL
        print("Population SMDVL contains 1 instance(s) of component: SMDVL of type: cell")

        print("Setting the default initial concentrations for ca (used in SMDVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMDVL.hoc")
        a_SMDVL = []
        h("{ n_SMDVL = 1 }")
        h("objectvar a_SMDVL[n_SMDVL]")
        for i in range(int(h.n_SMDVL)):
            h("a_SMDVL[%i] = new SMDVL()"%i)
            h("access a_SMDVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMDVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMDVL() { for i = 0, n_SMDVL-1 { a_SMDVL[i].set_initial_v() } }")
        h("objref fih_SMDVL")
        h('{fih_SMDVL = new FInitializeHandler(0, "initialiseV_SMDVL()")}')

        h("proc initialiseIons_SMDVL() { for i = 0, n_SMDVL-1 { a_SMDVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMDVL")
        h('{fih_ion_SMDVL = new FInitializeHandler(1, "initialiseIons_SMDVL()")}')

        # ######################   Population: SMDVR
        print("Population SMDVR contains 1 instance(s) of component: SMDVR of type: cell")

        print("Setting the default initial concentrations for ca (used in SMDVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("SMDVR.hoc")
        a_SMDVR = []
        h("{ n_SMDVR = 1 }")
        h("objectvar a_SMDVR[n_SMDVR]")
        for i in range(int(h.n_SMDVR)):
            h("a_SMDVR[%i] = new SMDVR()"%i)
            h("access a_SMDVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_SMDVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_SMDVR() { for i = 0, n_SMDVR-1 { a_SMDVR[i].set_initial_v() } }")
        h("objref fih_SMDVR")
        h('{fih_SMDVR = new FInitializeHandler(0, "initialiseV_SMDVR()")}')

        h("proc initialiseIons_SMDVR() { for i = 0, n_SMDVR-1 { a_SMDVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_SMDVR")
        h('{fih_ion_SMDVR = new FInitializeHandler(1, "initialiseIons_SMDVR()")}')

        # ######################   Population: URADL
        print("Population URADL contains 1 instance(s) of component: URADL of type: cell")

        print("Setting the default initial concentrations for ca (used in URADL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URADL.hoc")
        a_URADL = []
        h("{ n_URADL = 1 }")
        h("objectvar a_URADL[n_URADL]")
        for i in range(int(h.n_URADL)):
            h("a_URADL[%i] = new URADL()"%i)
            h("access a_URADL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URADL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URADL() { for i = 0, n_URADL-1 { a_URADL[i].set_initial_v() } }")
        h("objref fih_URADL")
        h('{fih_URADL = new FInitializeHandler(0, "initialiseV_URADL()")}')

        h("proc initialiseIons_URADL() { for i = 0, n_URADL-1 { a_URADL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URADL")
        h('{fih_ion_URADL = new FInitializeHandler(1, "initialiseIons_URADL()")}')

        # ######################   Population: URADR
        print("Population URADR contains 1 instance(s) of component: URADR of type: cell")

        print("Setting the default initial concentrations for ca (used in URADR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URADR.hoc")
        a_URADR = []
        h("{ n_URADR = 1 }")
        h("objectvar a_URADR[n_URADR]")
        for i in range(int(h.n_URADR)):
            h("a_URADR[%i] = new URADR()"%i)
            h("access a_URADR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URADR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URADR() { for i = 0, n_URADR-1 { a_URADR[i].set_initial_v() } }")
        h("objref fih_URADR")
        h('{fih_URADR = new FInitializeHandler(0, "initialiseV_URADR()")}')

        h("proc initialiseIons_URADR() { for i = 0, n_URADR-1 { a_URADR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URADR")
        h('{fih_ion_URADR = new FInitializeHandler(1, "initialiseIons_URADR()")}')

        # ######################   Population: URAVL
        print("Population URAVL contains 1 instance(s) of component: URAVL of type: cell")

        print("Setting the default initial concentrations for ca (used in URAVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URAVL.hoc")
        a_URAVL = []
        h("{ n_URAVL = 1 }")
        h("objectvar a_URAVL[n_URAVL]")
        for i in range(int(h.n_URAVL)):
            h("a_URAVL[%i] = new URAVL()"%i)
            h("access a_URAVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URAVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URAVL() { for i = 0, n_URAVL-1 { a_URAVL[i].set_initial_v() } }")
        h("objref fih_URAVL")
        h('{fih_URAVL = new FInitializeHandler(0, "initialiseV_URAVL()")}')

        h("proc initialiseIons_URAVL() { for i = 0, n_URAVL-1 { a_URAVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URAVL")
        h('{fih_ion_URAVL = new FInitializeHandler(1, "initialiseIons_URAVL()")}')

        # ######################   Population: URAVR
        print("Population URAVR contains 1 instance(s) of component: URAVR of type: cell")

        print("Setting the default initial concentrations for ca (used in URAVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URAVR.hoc")
        a_URAVR = []
        h("{ n_URAVR = 1 }")
        h("objectvar a_URAVR[n_URAVR]")
        for i in range(int(h.n_URAVR)):
            h("a_URAVR[%i] = new URAVR()"%i)
            h("access a_URAVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URAVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URAVR() { for i = 0, n_URAVR-1 { a_URAVR[i].set_initial_v() } }")
        h("objref fih_URAVR")
        h('{fih_URAVR = new FInitializeHandler(0, "initialiseV_URAVR()")}')

        h("proc initialiseIons_URAVR() { for i = 0, n_URAVR-1 { a_URAVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URAVR")
        h('{fih_ion_URAVR = new FInitializeHandler(1, "initialiseIons_URAVR()")}')

        # ######################   Population: URBL
        print("Population URBL contains 1 instance(s) of component: URBL of type: cell")

        print("Setting the default initial concentrations for ca (used in URBL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URBL.hoc")
        a_URBL = []
        h("{ n_URBL = 1 }")
        h("objectvar a_URBL[n_URBL]")
        for i in range(int(h.n_URBL)):
            h("a_URBL[%i] = new URBL()"%i)
            h("access a_URBL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URBL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URBL() { for i = 0, n_URBL-1 { a_URBL[i].set_initial_v() } }")
        h("objref fih_URBL")
        h('{fih_URBL = new FInitializeHandler(0, "initialiseV_URBL()")}')

        h("proc initialiseIons_URBL() { for i = 0, n_URBL-1 { a_URBL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URBL")
        h('{fih_ion_URBL = new FInitializeHandler(1, "initialiseIons_URBL()")}')

        # ######################   Population: URBR
        print("Population URBR contains 1 instance(s) of component: URBR of type: cell")

        print("Setting the default initial concentrations for ca (used in URBR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URBR.hoc")
        a_URBR = []
        h("{ n_URBR = 1 }")
        h("objectvar a_URBR[n_URBR]")
        for i in range(int(h.n_URBR)):
            h("a_URBR[%i] = new URBR()"%i)
            h("access a_URBR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URBR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URBR() { for i = 0, n_URBR-1 { a_URBR[i].set_initial_v() } }")
        h("objref fih_URBR")
        h('{fih_URBR = new FInitializeHandler(0, "initialiseV_URBR()")}')

        h("proc initialiseIons_URBR() { for i = 0, n_URBR-1 { a_URBR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URBR")
        h('{fih_ion_URBR = new FInitializeHandler(1, "initialiseIons_URBR()")}')

        # ######################   Population: URXL
        print("Population URXL contains 1 instance(s) of component: URXL of type: cell")

        print("Setting the default initial concentrations for ca (used in URXL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URXL.hoc")
        a_URXL = []
        h("{ n_URXL = 1 }")
        h("objectvar a_URXL[n_URXL]")
        for i in range(int(h.n_URXL)):
            h("a_URXL[%i] = new URXL()"%i)
            h("access a_URXL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URXL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URXL() { for i = 0, n_URXL-1 { a_URXL[i].set_initial_v() } }")
        h("objref fih_URXL")
        h('{fih_URXL = new FInitializeHandler(0, "initialiseV_URXL()")}')

        h("proc initialiseIons_URXL() { for i = 0, n_URXL-1 { a_URXL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URXL")
        h('{fih_ion_URXL = new FInitializeHandler(1, "initialiseIons_URXL()")}')

        # ######################   Population: URXR
        print("Population URXR contains 1 instance(s) of component: URXR of type: cell")

        print("Setting the default initial concentrations for ca (used in URXR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URXR.hoc")
        a_URXR = []
        h("{ n_URXR = 1 }")
        h("objectvar a_URXR[n_URXR]")
        for i in range(int(h.n_URXR)):
            h("a_URXR[%i] = new URXR()"%i)
            h("access a_URXR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URXR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URXR() { for i = 0, n_URXR-1 { a_URXR[i].set_initial_v() } }")
        h("objref fih_URXR")
        h('{fih_URXR = new FInitializeHandler(0, "initialiseV_URXR()")}')

        h("proc initialiseIons_URXR() { for i = 0, n_URXR-1 { a_URXR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URXR")
        h('{fih_ion_URXR = new FInitializeHandler(1, "initialiseIons_URXR()")}')

        # ######################   Population: URYDL
        print("Population URYDL contains 1 instance(s) of component: URYDL of type: cell")

        print("Setting the default initial concentrations for ca (used in URYDL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URYDL.hoc")
        a_URYDL = []
        h("{ n_URYDL = 1 }")
        h("objectvar a_URYDL[n_URYDL]")
        for i in range(int(h.n_URYDL)):
            h("a_URYDL[%i] = new URYDL()"%i)
            h("access a_URYDL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URYDL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URYDL() { for i = 0, n_URYDL-1 { a_URYDL[i].set_initial_v() } }")
        h("objref fih_URYDL")
        h('{fih_URYDL = new FInitializeHandler(0, "initialiseV_URYDL()")}')

        h("proc initialiseIons_URYDL() { for i = 0, n_URYDL-1 { a_URYDL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URYDL")
        h('{fih_ion_URYDL = new FInitializeHandler(1, "initialiseIons_URYDL()")}')

        # ######################   Population: URYDR
        print("Population URYDR contains 1 instance(s) of component: URYDR of type: cell")

        print("Setting the default initial concentrations for ca (used in URYDR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URYDR.hoc")
        a_URYDR = []
        h("{ n_URYDR = 1 }")
        h("objectvar a_URYDR[n_URYDR]")
        for i in range(int(h.n_URYDR)):
            h("a_URYDR[%i] = new URYDR()"%i)
            h("access a_URYDR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URYDR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URYDR() { for i = 0, n_URYDR-1 { a_URYDR[i].set_initial_v() } }")
        h("objref fih_URYDR")
        h('{fih_URYDR = new FInitializeHandler(0, "initialiseV_URYDR()")}')

        h("proc initialiseIons_URYDR() { for i = 0, n_URYDR-1 { a_URYDR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URYDR")
        h('{fih_ion_URYDR = new FInitializeHandler(1, "initialiseIons_URYDR()")}')

        # ######################   Population: URYVL
        print("Population URYVL contains 1 instance(s) of component: URYVL of type: cell")

        print("Setting the default initial concentrations for ca (used in URYVL) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URYVL.hoc")
        a_URYVL = []
        h("{ n_URYVL = 1 }")
        h("objectvar a_URYVL[n_URYVL]")
        for i in range(int(h.n_URYVL)):
            h("a_URYVL[%i] = new URYVL()"%i)
            h("access a_URYVL[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URYVL[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URYVL() { for i = 0, n_URYVL-1 { a_URYVL[i].set_initial_v() } }")
        h("objref fih_URYVL")
        h('{fih_URYVL = new FInitializeHandler(0, "initialiseV_URYVL()")}')

        h("proc initialiseIons_URYVL() { for i = 0, n_URYVL-1 { a_URYVL[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URYVL")
        h('{fih_ion_URYVL = new FInitializeHandler(1, "initialiseIons_URYVL()")}')

        # ######################   Population: URYVR
        print("Population URYVR contains 1 instance(s) of component: URYVR of type: cell")

        print("Setting the default initial concentrations for ca (used in URYVR) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("URYVR.hoc")
        a_URYVR = []
        h("{ n_URYVR = 1 }")
        h("objectvar a_URYVR[n_URYVR]")
        for i in range(int(h.n_URYVR)):
            h("a_URYVR[%i] = new URYVR()"%i)
            h("access a_URYVR[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_URYVR[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_URYVR() { for i = 0, n_URYVR-1 { a_URYVR[i].set_initial_v() } }")
        h("objref fih_URYVR")
        h('{fih_URYVR = new FInitializeHandler(0, "initialiseV_URYVR()")}')

        h("proc initialiseIons_URYVR() { for i = 0, n_URYVR-1 { a_URYVR[i].set_initial_ion_properties() } }")
        h("objref fih_ion_URYVR")
        h('{fih_ion_URYVR = new FInitializeHandler(1, "initialiseIons_URYVR()")}')

        # ######################   Population: VA1
        print("Population VA1 contains 1 instance(s) of component: VA1 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA1.hoc")
        a_VA1 = []
        h("{ n_VA1 = 1 }")
        h("objectvar a_VA1[n_VA1]")
        for i in range(int(h.n_VA1)):
            h("a_VA1[%i] = new VA1()"%i)
            h("access a_VA1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA1() { for i = 0, n_VA1-1 { a_VA1[i].set_initial_v() } }")
        h("objref fih_VA1")
        h('{fih_VA1 = new FInitializeHandler(0, "initialiseV_VA1()")}')

        h("proc initialiseIons_VA1() { for i = 0, n_VA1-1 { a_VA1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA1")
        h('{fih_ion_VA1 = new FInitializeHandler(1, "initialiseIons_VA1()")}')

        # ######################   Population: VA10
        print("Population VA10 contains 1 instance(s) of component: VA10 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA10) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA10.hoc")
        a_VA10 = []
        h("{ n_VA10 = 1 }")
        h("objectvar a_VA10[n_VA10]")
        for i in range(int(h.n_VA10)):
            h("a_VA10[%i] = new VA10()"%i)
            h("access a_VA10[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA10[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA10() { for i = 0, n_VA10-1 { a_VA10[i].set_initial_v() } }")
        h("objref fih_VA10")
        h('{fih_VA10 = new FInitializeHandler(0, "initialiseV_VA10()")}')

        h("proc initialiseIons_VA10() { for i = 0, n_VA10-1 { a_VA10[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA10")
        h('{fih_ion_VA10 = new FInitializeHandler(1, "initialiseIons_VA10()")}')

        # ######################   Population: VA11
        print("Population VA11 contains 1 instance(s) of component: VA11 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA11) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA11.hoc")
        a_VA11 = []
        h("{ n_VA11 = 1 }")
        h("objectvar a_VA11[n_VA11]")
        for i in range(int(h.n_VA11)):
            h("a_VA11[%i] = new VA11()"%i)
            h("access a_VA11[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA11[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA11() { for i = 0, n_VA11-1 { a_VA11[i].set_initial_v() } }")
        h("objref fih_VA11")
        h('{fih_VA11 = new FInitializeHandler(0, "initialiseV_VA11()")}')

        h("proc initialiseIons_VA11() { for i = 0, n_VA11-1 { a_VA11[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA11")
        h('{fih_ion_VA11 = new FInitializeHandler(1, "initialiseIons_VA11()")}')

        # ######################   Population: VA12
        print("Population VA12 contains 1 instance(s) of component: VA12 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA12) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA12.hoc")
        a_VA12 = []
        h("{ n_VA12 = 1 }")
        h("objectvar a_VA12[n_VA12]")
        for i in range(int(h.n_VA12)):
            h("a_VA12[%i] = new VA12()"%i)
            h("access a_VA12[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA12[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA12() { for i = 0, n_VA12-1 { a_VA12[i].set_initial_v() } }")
        h("objref fih_VA12")
        h('{fih_VA12 = new FInitializeHandler(0, "initialiseV_VA12()")}')

        h("proc initialiseIons_VA12() { for i = 0, n_VA12-1 { a_VA12[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA12")
        h('{fih_ion_VA12 = new FInitializeHandler(1, "initialiseIons_VA12()")}')

        # ######################   Population: VA2
        print("Population VA2 contains 1 instance(s) of component: VA2 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA2.hoc")
        a_VA2 = []
        h("{ n_VA2 = 1 }")
        h("objectvar a_VA2[n_VA2]")
        for i in range(int(h.n_VA2)):
            h("a_VA2[%i] = new VA2()"%i)
            h("access a_VA2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA2() { for i = 0, n_VA2-1 { a_VA2[i].set_initial_v() } }")
        h("objref fih_VA2")
        h('{fih_VA2 = new FInitializeHandler(0, "initialiseV_VA2()")}')

        h("proc initialiseIons_VA2() { for i = 0, n_VA2-1 { a_VA2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA2")
        h('{fih_ion_VA2 = new FInitializeHandler(1, "initialiseIons_VA2()")}')

        # ######################   Population: VA3
        print("Population VA3 contains 1 instance(s) of component: VA3 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA3.hoc")
        a_VA3 = []
        h("{ n_VA3 = 1 }")
        h("objectvar a_VA3[n_VA3]")
        for i in range(int(h.n_VA3)):
            h("a_VA3[%i] = new VA3()"%i)
            h("access a_VA3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA3() { for i = 0, n_VA3-1 { a_VA3[i].set_initial_v() } }")
        h("objref fih_VA3")
        h('{fih_VA3 = new FInitializeHandler(0, "initialiseV_VA3()")}')

        h("proc initialiseIons_VA3() { for i = 0, n_VA3-1 { a_VA3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA3")
        h('{fih_ion_VA3 = new FInitializeHandler(1, "initialiseIons_VA3()")}')

        # ######################   Population: VA4
        print("Population VA4 contains 1 instance(s) of component: VA4 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA4.hoc")
        a_VA4 = []
        h("{ n_VA4 = 1 }")
        h("objectvar a_VA4[n_VA4]")
        for i in range(int(h.n_VA4)):
            h("a_VA4[%i] = new VA4()"%i)
            h("access a_VA4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA4() { for i = 0, n_VA4-1 { a_VA4[i].set_initial_v() } }")
        h("objref fih_VA4")
        h('{fih_VA4 = new FInitializeHandler(0, "initialiseV_VA4()")}')

        h("proc initialiseIons_VA4() { for i = 0, n_VA4-1 { a_VA4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA4")
        h('{fih_ion_VA4 = new FInitializeHandler(1, "initialiseIons_VA4()")}')

        # ######################   Population: VA5
        print("Population VA5 contains 1 instance(s) of component: VA5 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA5.hoc")
        a_VA5 = []
        h("{ n_VA5 = 1 }")
        h("objectvar a_VA5[n_VA5]")
        for i in range(int(h.n_VA5)):
            h("a_VA5[%i] = new VA5()"%i)
            h("access a_VA5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA5() { for i = 0, n_VA5-1 { a_VA5[i].set_initial_v() } }")
        h("objref fih_VA5")
        h('{fih_VA5 = new FInitializeHandler(0, "initialiseV_VA5()")}')

        h("proc initialiseIons_VA5() { for i = 0, n_VA5-1 { a_VA5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA5")
        h('{fih_ion_VA5 = new FInitializeHandler(1, "initialiseIons_VA5()")}')

        # ######################   Population: VA6
        print("Population VA6 contains 1 instance(s) of component: VA6 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA6.hoc")
        a_VA6 = []
        h("{ n_VA6 = 1 }")
        h("objectvar a_VA6[n_VA6]")
        for i in range(int(h.n_VA6)):
            h("a_VA6[%i] = new VA6()"%i)
            h("access a_VA6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA6() { for i = 0, n_VA6-1 { a_VA6[i].set_initial_v() } }")
        h("objref fih_VA6")
        h('{fih_VA6 = new FInitializeHandler(0, "initialiseV_VA6()")}')

        h("proc initialiseIons_VA6() { for i = 0, n_VA6-1 { a_VA6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA6")
        h('{fih_ion_VA6 = new FInitializeHandler(1, "initialiseIons_VA6()")}')

        # ######################   Population: VA7
        print("Population VA7 contains 1 instance(s) of component: VA7 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA7) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA7.hoc")
        a_VA7 = []
        h("{ n_VA7 = 1 }")
        h("objectvar a_VA7[n_VA7]")
        for i in range(int(h.n_VA7)):
            h("a_VA7[%i] = new VA7()"%i)
            h("access a_VA7[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA7[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA7() { for i = 0, n_VA7-1 { a_VA7[i].set_initial_v() } }")
        h("objref fih_VA7")
        h('{fih_VA7 = new FInitializeHandler(0, "initialiseV_VA7()")}')

        h("proc initialiseIons_VA7() { for i = 0, n_VA7-1 { a_VA7[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA7")
        h('{fih_ion_VA7 = new FInitializeHandler(1, "initialiseIons_VA7()")}')

        # ######################   Population: VA8
        print("Population VA8 contains 1 instance(s) of component: VA8 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA8) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA8.hoc")
        a_VA8 = []
        h("{ n_VA8 = 1 }")
        h("objectvar a_VA8[n_VA8]")
        for i in range(int(h.n_VA8)):
            h("a_VA8[%i] = new VA8()"%i)
            h("access a_VA8[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA8[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA8() { for i = 0, n_VA8-1 { a_VA8[i].set_initial_v() } }")
        h("objref fih_VA8")
        h('{fih_VA8 = new FInitializeHandler(0, "initialiseV_VA8()")}')

        h("proc initialiseIons_VA8() { for i = 0, n_VA8-1 { a_VA8[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA8")
        h('{fih_ion_VA8 = new FInitializeHandler(1, "initialiseIons_VA8()")}')

        # ######################   Population: VA9
        print("Population VA9 contains 1 instance(s) of component: VA9 of type: cell")

        print("Setting the default initial concentrations for ca (used in VA9) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VA9.hoc")
        a_VA9 = []
        h("{ n_VA9 = 1 }")
        h("objectvar a_VA9[n_VA9]")
        for i in range(int(h.n_VA9)):
            h("a_VA9[%i] = new VA9()"%i)
            h("access a_VA9[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VA9[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VA9() { for i = 0, n_VA9-1 { a_VA9[i].set_initial_v() } }")
        h("objref fih_VA9")
        h('{fih_VA9 = new FInitializeHandler(0, "initialiseV_VA9()")}')

        h("proc initialiseIons_VA9() { for i = 0, n_VA9-1 { a_VA9[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VA9")
        h('{fih_ion_VA9 = new FInitializeHandler(1, "initialiseIons_VA9()")}')

        # ######################   Population: VB1
        print("Population VB1 contains 1 instance(s) of component: VB1 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB1.hoc")
        a_VB1 = []
        h("{ n_VB1 = 1 }")
        h("objectvar a_VB1[n_VB1]")
        for i in range(int(h.n_VB1)):
            h("a_VB1[%i] = new VB1()"%i)
            h("access a_VB1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB1() { for i = 0, n_VB1-1 { a_VB1[i].set_initial_v() } }")
        h("objref fih_VB1")
        h('{fih_VB1 = new FInitializeHandler(0, "initialiseV_VB1()")}')

        h("proc initialiseIons_VB1() { for i = 0, n_VB1-1 { a_VB1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB1")
        h('{fih_ion_VB1 = new FInitializeHandler(1, "initialiseIons_VB1()")}')

        # ######################   Population: VB10
        print("Population VB10 contains 1 instance(s) of component: VB10 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB10) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB10.hoc")
        a_VB10 = []
        h("{ n_VB10 = 1 }")
        h("objectvar a_VB10[n_VB10]")
        for i in range(int(h.n_VB10)):
            h("a_VB10[%i] = new VB10()"%i)
            h("access a_VB10[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB10[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB10() { for i = 0, n_VB10-1 { a_VB10[i].set_initial_v() } }")
        h("objref fih_VB10")
        h('{fih_VB10 = new FInitializeHandler(0, "initialiseV_VB10()")}')

        h("proc initialiseIons_VB10() { for i = 0, n_VB10-1 { a_VB10[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB10")
        h('{fih_ion_VB10 = new FInitializeHandler(1, "initialiseIons_VB10()")}')

        # ######################   Population: VB11
        print("Population VB11 contains 1 instance(s) of component: VB11 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB11) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB11.hoc")
        a_VB11 = []
        h("{ n_VB11 = 1 }")
        h("objectvar a_VB11[n_VB11]")
        for i in range(int(h.n_VB11)):
            h("a_VB11[%i] = new VB11()"%i)
            h("access a_VB11[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB11[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB11() { for i = 0, n_VB11-1 { a_VB11[i].set_initial_v() } }")
        h("objref fih_VB11")
        h('{fih_VB11 = new FInitializeHandler(0, "initialiseV_VB11()")}')

        h("proc initialiseIons_VB11() { for i = 0, n_VB11-1 { a_VB11[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB11")
        h('{fih_ion_VB11 = new FInitializeHandler(1, "initialiseIons_VB11()")}')

        # ######################   Population: VB2
        print("Population VB2 contains 1 instance(s) of component: VB2 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB2.hoc")
        a_VB2 = []
        h("{ n_VB2 = 1 }")
        h("objectvar a_VB2[n_VB2]")
        for i in range(int(h.n_VB2)):
            h("a_VB2[%i] = new VB2()"%i)
            h("access a_VB2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB2() { for i = 0, n_VB2-1 { a_VB2[i].set_initial_v() } }")
        h("objref fih_VB2")
        h('{fih_VB2 = new FInitializeHandler(0, "initialiseV_VB2()")}')

        h("proc initialiseIons_VB2() { for i = 0, n_VB2-1 { a_VB2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB2")
        h('{fih_ion_VB2 = new FInitializeHandler(1, "initialiseIons_VB2()")}')

        # ######################   Population: VB3
        print("Population VB3 contains 1 instance(s) of component: VB3 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB3.hoc")
        a_VB3 = []
        h("{ n_VB3 = 1 }")
        h("objectvar a_VB3[n_VB3]")
        for i in range(int(h.n_VB3)):
            h("a_VB3[%i] = new VB3()"%i)
            h("access a_VB3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB3() { for i = 0, n_VB3-1 { a_VB3[i].set_initial_v() } }")
        h("objref fih_VB3")
        h('{fih_VB3 = new FInitializeHandler(0, "initialiseV_VB3()")}')

        h("proc initialiseIons_VB3() { for i = 0, n_VB3-1 { a_VB3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB3")
        h('{fih_ion_VB3 = new FInitializeHandler(1, "initialiseIons_VB3()")}')

        # ######################   Population: VB4
        print("Population VB4 contains 1 instance(s) of component: VB4 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB4.hoc")
        a_VB4 = []
        h("{ n_VB4 = 1 }")
        h("objectvar a_VB4[n_VB4]")
        for i in range(int(h.n_VB4)):
            h("a_VB4[%i] = new VB4()"%i)
            h("access a_VB4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB4() { for i = 0, n_VB4-1 { a_VB4[i].set_initial_v() } }")
        h("objref fih_VB4")
        h('{fih_VB4 = new FInitializeHandler(0, "initialiseV_VB4()")}')

        h("proc initialiseIons_VB4() { for i = 0, n_VB4-1 { a_VB4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB4")
        h('{fih_ion_VB4 = new FInitializeHandler(1, "initialiseIons_VB4()")}')

        # ######################   Population: VB5
        print("Population VB5 contains 1 instance(s) of component: VB5 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB5.hoc")
        a_VB5 = []
        h("{ n_VB5 = 1 }")
        h("objectvar a_VB5[n_VB5]")
        for i in range(int(h.n_VB5)):
            h("a_VB5[%i] = new VB5()"%i)
            h("access a_VB5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB5() { for i = 0, n_VB5-1 { a_VB5[i].set_initial_v() } }")
        h("objref fih_VB5")
        h('{fih_VB5 = new FInitializeHandler(0, "initialiseV_VB5()")}')

        h("proc initialiseIons_VB5() { for i = 0, n_VB5-1 { a_VB5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB5")
        h('{fih_ion_VB5 = new FInitializeHandler(1, "initialiseIons_VB5()")}')

        # ######################   Population: VB6
        print("Population VB6 contains 1 instance(s) of component: VB6 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB6.hoc")
        a_VB6 = []
        h("{ n_VB6 = 1 }")
        h("objectvar a_VB6[n_VB6]")
        for i in range(int(h.n_VB6)):
            h("a_VB6[%i] = new VB6()"%i)
            h("access a_VB6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB6() { for i = 0, n_VB6-1 { a_VB6[i].set_initial_v() } }")
        h("objref fih_VB6")
        h('{fih_VB6 = new FInitializeHandler(0, "initialiseV_VB6()")}')

        h("proc initialiseIons_VB6() { for i = 0, n_VB6-1 { a_VB6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB6")
        h('{fih_ion_VB6 = new FInitializeHandler(1, "initialiseIons_VB6()")}')

        # ######################   Population: VB7
        print("Population VB7 contains 1 instance(s) of component: VB7 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB7) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB7.hoc")
        a_VB7 = []
        h("{ n_VB7 = 1 }")
        h("objectvar a_VB7[n_VB7]")
        for i in range(int(h.n_VB7)):
            h("a_VB7[%i] = new VB7()"%i)
            h("access a_VB7[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB7[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB7() { for i = 0, n_VB7-1 { a_VB7[i].set_initial_v() } }")
        h("objref fih_VB7")
        h('{fih_VB7 = new FInitializeHandler(0, "initialiseV_VB7()")}')

        h("proc initialiseIons_VB7() { for i = 0, n_VB7-1 { a_VB7[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB7")
        h('{fih_ion_VB7 = new FInitializeHandler(1, "initialiseIons_VB7()")}')

        # ######################   Population: VB8
        print("Population VB8 contains 1 instance(s) of component: VB8 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB8) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB8.hoc")
        a_VB8 = []
        h("{ n_VB8 = 1 }")
        h("objectvar a_VB8[n_VB8]")
        for i in range(int(h.n_VB8)):
            h("a_VB8[%i] = new VB8()"%i)
            h("access a_VB8[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB8[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB8() { for i = 0, n_VB8-1 { a_VB8[i].set_initial_v() } }")
        h("objref fih_VB8")
        h('{fih_VB8 = new FInitializeHandler(0, "initialiseV_VB8()")}')

        h("proc initialiseIons_VB8() { for i = 0, n_VB8-1 { a_VB8[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB8")
        h('{fih_ion_VB8 = new FInitializeHandler(1, "initialiseIons_VB8()")}')

        # ######################   Population: VB9
        print("Population VB9 contains 1 instance(s) of component: VB9 of type: cell")

        print("Setting the default initial concentrations for ca (used in VB9) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VB9.hoc")
        a_VB9 = []
        h("{ n_VB9 = 1 }")
        h("objectvar a_VB9[n_VB9]")
        for i in range(int(h.n_VB9)):
            h("a_VB9[%i] = new VB9()"%i)
            h("access a_VB9[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VB9[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VB9() { for i = 0, n_VB9-1 { a_VB9[i].set_initial_v() } }")
        h("objref fih_VB9")
        h('{fih_VB9 = new FInitializeHandler(0, "initialiseV_VB9()")}')

        h("proc initialiseIons_VB9() { for i = 0, n_VB9-1 { a_VB9[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VB9")
        h('{fih_ion_VB9 = new FInitializeHandler(1, "initialiseIons_VB9()")}')

        # ######################   Population: VC1
        print("Population VC1 contains 1 instance(s) of component: VC1 of type: cell")

        print("Setting the default initial concentrations for ca (used in VC1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VC1.hoc")
        a_VC1 = []
        h("{ n_VC1 = 1 }")
        h("objectvar a_VC1[n_VC1]")
        for i in range(int(h.n_VC1)):
            h("a_VC1[%i] = new VC1()"%i)
            h("access a_VC1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VC1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VC1() { for i = 0, n_VC1-1 { a_VC1[i].set_initial_v() } }")
        h("objref fih_VC1")
        h('{fih_VC1 = new FInitializeHandler(0, "initialiseV_VC1()")}')

        h("proc initialiseIons_VC1() { for i = 0, n_VC1-1 { a_VC1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VC1")
        h('{fih_ion_VC1 = new FInitializeHandler(1, "initialiseIons_VC1()")}')

        # ######################   Population: VC2
        print("Population VC2 contains 1 instance(s) of component: VC2 of type: cell")

        print("Setting the default initial concentrations for ca (used in VC2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VC2.hoc")
        a_VC2 = []
        h("{ n_VC2 = 1 }")
        h("objectvar a_VC2[n_VC2]")
        for i in range(int(h.n_VC2)):
            h("a_VC2[%i] = new VC2()"%i)
            h("access a_VC2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VC2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VC2() { for i = 0, n_VC2-1 { a_VC2[i].set_initial_v() } }")
        h("objref fih_VC2")
        h('{fih_VC2 = new FInitializeHandler(0, "initialiseV_VC2()")}')

        h("proc initialiseIons_VC2() { for i = 0, n_VC2-1 { a_VC2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VC2")
        h('{fih_ion_VC2 = new FInitializeHandler(1, "initialiseIons_VC2()")}')

        # ######################   Population: VC3
        print("Population VC3 contains 1 instance(s) of component: VC3 of type: cell")

        print("Setting the default initial concentrations for ca (used in VC3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VC3.hoc")
        a_VC3 = []
        h("{ n_VC3 = 1 }")
        h("objectvar a_VC3[n_VC3]")
        for i in range(int(h.n_VC3)):
            h("a_VC3[%i] = new VC3()"%i)
            h("access a_VC3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VC3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VC3() { for i = 0, n_VC3-1 { a_VC3[i].set_initial_v() } }")
        h("objref fih_VC3")
        h('{fih_VC3 = new FInitializeHandler(0, "initialiseV_VC3()")}')

        h("proc initialiseIons_VC3() { for i = 0, n_VC3-1 { a_VC3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VC3")
        h('{fih_ion_VC3 = new FInitializeHandler(1, "initialiseIons_VC3()")}')

        # ######################   Population: VC4
        print("Population VC4 contains 1 instance(s) of component: VC4 of type: cell")

        print("Setting the default initial concentrations for ca (used in VC4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VC4.hoc")
        a_VC4 = []
        h("{ n_VC4 = 1 }")
        h("objectvar a_VC4[n_VC4]")
        for i in range(int(h.n_VC4)):
            h("a_VC4[%i] = new VC4()"%i)
            h("access a_VC4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VC4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VC4() { for i = 0, n_VC4-1 { a_VC4[i].set_initial_v() } }")
        h("objref fih_VC4")
        h('{fih_VC4 = new FInitializeHandler(0, "initialiseV_VC4()")}')

        h("proc initialiseIons_VC4() { for i = 0, n_VC4-1 { a_VC4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VC4")
        h('{fih_ion_VC4 = new FInitializeHandler(1, "initialiseIons_VC4()")}')

        # ######################   Population: VC5
        print("Population VC5 contains 1 instance(s) of component: VC5 of type: cell")

        print("Setting the default initial concentrations for ca (used in VC5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VC5.hoc")
        a_VC5 = []
        h("{ n_VC5 = 1 }")
        h("objectvar a_VC5[n_VC5]")
        for i in range(int(h.n_VC5)):
            h("a_VC5[%i] = new VC5()"%i)
            h("access a_VC5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VC5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VC5() { for i = 0, n_VC5-1 { a_VC5[i].set_initial_v() } }")
        h("objref fih_VC5")
        h('{fih_VC5 = new FInitializeHandler(0, "initialiseV_VC5()")}')

        h("proc initialiseIons_VC5() { for i = 0, n_VC5-1 { a_VC5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VC5")
        h('{fih_ion_VC5 = new FInitializeHandler(1, "initialiseIons_VC5()")}')

        # ######################   Population: VC6
        print("Population VC6 contains 1 instance(s) of component: VC6 of type: cell")

        print("Setting the default initial concentrations for ca (used in VC6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VC6.hoc")
        a_VC6 = []
        h("{ n_VC6 = 1 }")
        h("objectvar a_VC6[n_VC6]")
        for i in range(int(h.n_VC6)):
            h("a_VC6[%i] = new VC6()"%i)
            h("access a_VC6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VC6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VC6() { for i = 0, n_VC6-1 { a_VC6[i].set_initial_v() } }")
        h("objref fih_VC6")
        h('{fih_VC6 = new FInitializeHandler(0, "initialiseV_VC6()")}')

        h("proc initialiseIons_VC6() { for i = 0, n_VC6-1 { a_VC6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VC6")
        h('{fih_ion_VC6 = new FInitializeHandler(1, "initialiseIons_VC6()")}')

        # ######################   Population: VD1
        print("Population VD1 contains 1 instance(s) of component: VD1 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD1) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD1.hoc")
        a_VD1 = []
        h("{ n_VD1 = 1 }")
        h("objectvar a_VD1[n_VD1]")
        for i in range(int(h.n_VD1)):
            h("a_VD1[%i] = new VD1()"%i)
            h("access a_VD1[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD1[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD1() { for i = 0, n_VD1-1 { a_VD1[i].set_initial_v() } }")
        h("objref fih_VD1")
        h('{fih_VD1 = new FInitializeHandler(0, "initialiseV_VD1()")}')

        h("proc initialiseIons_VD1() { for i = 0, n_VD1-1 { a_VD1[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD1")
        h('{fih_ion_VD1 = new FInitializeHandler(1, "initialiseIons_VD1()")}')

        # ######################   Population: VD10
        print("Population VD10 contains 1 instance(s) of component: VD10 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD10) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD10.hoc")
        a_VD10 = []
        h("{ n_VD10 = 1 }")
        h("objectvar a_VD10[n_VD10]")
        for i in range(int(h.n_VD10)):
            h("a_VD10[%i] = new VD10()"%i)
            h("access a_VD10[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD10[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD10() { for i = 0, n_VD10-1 { a_VD10[i].set_initial_v() } }")
        h("objref fih_VD10")
        h('{fih_VD10 = new FInitializeHandler(0, "initialiseV_VD10()")}')

        h("proc initialiseIons_VD10() { for i = 0, n_VD10-1 { a_VD10[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD10")
        h('{fih_ion_VD10 = new FInitializeHandler(1, "initialiseIons_VD10()")}')

        # ######################   Population: VD11
        print("Population VD11 contains 1 instance(s) of component: VD11 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD11) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD11.hoc")
        a_VD11 = []
        h("{ n_VD11 = 1 }")
        h("objectvar a_VD11[n_VD11]")
        for i in range(int(h.n_VD11)):
            h("a_VD11[%i] = new VD11()"%i)
            h("access a_VD11[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD11[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD11() { for i = 0, n_VD11-1 { a_VD11[i].set_initial_v() } }")
        h("objref fih_VD11")
        h('{fih_VD11 = new FInitializeHandler(0, "initialiseV_VD11()")}')

        h("proc initialiseIons_VD11() { for i = 0, n_VD11-1 { a_VD11[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD11")
        h('{fih_ion_VD11 = new FInitializeHandler(1, "initialiseIons_VD11()")}')

        # ######################   Population: VD12
        print("Population VD12 contains 1 instance(s) of component: VD12 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD12) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD12.hoc")
        a_VD12 = []
        h("{ n_VD12 = 1 }")
        h("objectvar a_VD12[n_VD12]")
        for i in range(int(h.n_VD12)):
            h("a_VD12[%i] = new VD12()"%i)
            h("access a_VD12[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD12[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD12() { for i = 0, n_VD12-1 { a_VD12[i].set_initial_v() } }")
        h("objref fih_VD12")
        h('{fih_VD12 = new FInitializeHandler(0, "initialiseV_VD12()")}')

        h("proc initialiseIons_VD12() { for i = 0, n_VD12-1 { a_VD12[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD12")
        h('{fih_ion_VD12 = new FInitializeHandler(1, "initialiseIons_VD12()")}')

        # ######################   Population: VD13
        print("Population VD13 contains 1 instance(s) of component: VD13 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD13) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD13.hoc")
        a_VD13 = []
        h("{ n_VD13 = 1 }")
        h("objectvar a_VD13[n_VD13]")
        for i in range(int(h.n_VD13)):
            h("a_VD13[%i] = new VD13()"%i)
            h("access a_VD13[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD13[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD13() { for i = 0, n_VD13-1 { a_VD13[i].set_initial_v() } }")
        h("objref fih_VD13")
        h('{fih_VD13 = new FInitializeHandler(0, "initialiseV_VD13()")}')

        h("proc initialiseIons_VD13() { for i = 0, n_VD13-1 { a_VD13[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD13")
        h('{fih_ion_VD13 = new FInitializeHandler(1, "initialiseIons_VD13()")}')

        # ######################   Population: VD2
        print("Population VD2 contains 1 instance(s) of component: VD2 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD2) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD2.hoc")
        a_VD2 = []
        h("{ n_VD2 = 1 }")
        h("objectvar a_VD2[n_VD2]")
        for i in range(int(h.n_VD2)):
            h("a_VD2[%i] = new VD2()"%i)
            h("access a_VD2[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD2[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD2() { for i = 0, n_VD2-1 { a_VD2[i].set_initial_v() } }")
        h("objref fih_VD2")
        h('{fih_VD2 = new FInitializeHandler(0, "initialiseV_VD2()")}')

        h("proc initialiseIons_VD2() { for i = 0, n_VD2-1 { a_VD2[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD2")
        h('{fih_ion_VD2 = new FInitializeHandler(1, "initialiseIons_VD2()")}')

        # ######################   Population: VD3
        print("Population VD3 contains 1 instance(s) of component: VD3 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD3) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD3.hoc")
        a_VD3 = []
        h("{ n_VD3 = 1 }")
        h("objectvar a_VD3[n_VD3]")
        for i in range(int(h.n_VD3)):
            h("a_VD3[%i] = new VD3()"%i)
            h("access a_VD3[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD3[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD3() { for i = 0, n_VD3-1 { a_VD3[i].set_initial_v() } }")
        h("objref fih_VD3")
        h('{fih_VD3 = new FInitializeHandler(0, "initialiseV_VD3()")}')

        h("proc initialiseIons_VD3() { for i = 0, n_VD3-1 { a_VD3[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD3")
        h('{fih_ion_VD3 = new FInitializeHandler(1, "initialiseIons_VD3()")}')

        # ######################   Population: VD4
        print("Population VD4 contains 1 instance(s) of component: VD4 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD4) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD4.hoc")
        a_VD4 = []
        h("{ n_VD4 = 1 }")
        h("objectvar a_VD4[n_VD4]")
        for i in range(int(h.n_VD4)):
            h("a_VD4[%i] = new VD4()"%i)
            h("access a_VD4[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD4[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD4() { for i = 0, n_VD4-1 { a_VD4[i].set_initial_v() } }")
        h("objref fih_VD4")
        h('{fih_VD4 = new FInitializeHandler(0, "initialiseV_VD4()")}')

        h("proc initialiseIons_VD4() { for i = 0, n_VD4-1 { a_VD4[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD4")
        h('{fih_ion_VD4 = new FInitializeHandler(1, "initialiseIons_VD4()")}')

        # ######################   Population: VD5
        print("Population VD5 contains 1 instance(s) of component: VD5 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD5) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD5.hoc")
        a_VD5 = []
        h("{ n_VD5 = 1 }")
        h("objectvar a_VD5[n_VD5]")
        for i in range(int(h.n_VD5)):
            h("a_VD5[%i] = new VD5()"%i)
            h("access a_VD5[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD5[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD5() { for i = 0, n_VD5-1 { a_VD5[i].set_initial_v() } }")
        h("objref fih_VD5")
        h('{fih_VD5 = new FInitializeHandler(0, "initialiseV_VD5()")}')

        h("proc initialiseIons_VD5() { for i = 0, n_VD5-1 { a_VD5[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD5")
        h('{fih_ion_VD5 = new FInitializeHandler(1, "initialiseIons_VD5()")}')

        # ######################   Population: VD6
        print("Population VD6 contains 1 instance(s) of component: VD6 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD6) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD6.hoc")
        a_VD6 = []
        h("{ n_VD6 = 1 }")
        h("objectvar a_VD6[n_VD6]")
        for i in range(int(h.n_VD6)):
            h("a_VD6[%i] = new VD6()"%i)
            h("access a_VD6[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD6[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD6() { for i = 0, n_VD6-1 { a_VD6[i].set_initial_v() } }")
        h("objref fih_VD6")
        h('{fih_VD6 = new FInitializeHandler(0, "initialiseV_VD6()")}')

        h("proc initialiseIons_VD6() { for i = 0, n_VD6-1 { a_VD6[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD6")
        h('{fih_ion_VD6 = new FInitializeHandler(1, "initialiseIons_VD6()")}')

        # ######################   Population: VD7
        print("Population VD7 contains 1 instance(s) of component: VD7 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD7) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD7.hoc")
        a_VD7 = []
        h("{ n_VD7 = 1 }")
        h("objectvar a_VD7[n_VD7]")
        for i in range(int(h.n_VD7)):
            h("a_VD7[%i] = new VD7()"%i)
            h("access a_VD7[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD7[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD7() { for i = 0, n_VD7-1 { a_VD7[i].set_initial_v() } }")
        h("objref fih_VD7")
        h('{fih_VD7 = new FInitializeHandler(0, "initialiseV_VD7()")}')

        h("proc initialiseIons_VD7() { for i = 0, n_VD7-1 { a_VD7[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD7")
        h('{fih_ion_VD7 = new FInitializeHandler(1, "initialiseIons_VD7()")}')

        # ######################   Population: VD8
        print("Population VD8 contains 1 instance(s) of component: VD8 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD8) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD8.hoc")
        a_VD8 = []
        h("{ n_VD8 = 1 }")
        h("objectvar a_VD8[n_VD8]")
        for i in range(int(h.n_VD8)):
            h("a_VD8[%i] = new VD8()"%i)
            h("access a_VD8[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD8[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD8() { for i = 0, n_VD8-1 { a_VD8[i].set_initial_v() } }")
        h("objref fih_VD8")
        h('{fih_VD8 = new FInitializeHandler(0, "initialiseV_VD8()")}')

        h("proc initialiseIons_VD8() { for i = 0, n_VD8-1 { a_VD8[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD8")
        h('{fih_ion_VD8 = new FInitializeHandler(1, "initialiseIons_VD8()")}')

        # ######################   Population: VD9
        print("Population VD9 contains 1 instance(s) of component: VD9 of type: cell")

        print("Setting the default initial concentrations for ca (used in VD9) to 0.0 mM (internal), 2.0 mM (external)")
        h("cai0_ca_ion = 0.0")
        h("cao0_ca_ion = 2.0")

        h.load_file("VD9.hoc")
        a_VD9 = []
        h("{ n_VD9 = 1 }")
        h("objectvar a_VD9[n_VD9]")
        for i in range(int(h.n_VD9)):
            h("a_VD9[%i] = new VD9()"%i)
            h("access a_VD9[%i].Soma"%i)

            self.next_global_id+=1

        h("{ a_VD9[0].position(0.0, 0.0, 0.0) }")

        h("proc initialiseV_VD9() { for i = 0, n_VD9-1 { a_VD9[i].set_initial_v() } }")
        h("objref fih_VD9")
        h('{fih_VD9 = new FInitializeHandler(0, "initialiseV_VD9()")}')

        h("proc initialiseIons_VD9() { for i = 0, n_VD9-1 { a_VD9[i].set_initial_ion_properties() } }")
        h("objref fih_ion_VD9")
        h('{fih_ion_VD9 = new FInitializeHandler(1, "initialiseIons_VD9()")}')

        # ######################   Projection: NC_ADAL_AIBL_Glutamate
        print("Adding projection: NC_ADAL_AIBL_Glutamate, from ADAL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ADAL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_AIBR_Glutamate
        print("Adding projection: NC_ADAL_AIBR_Glutamate, from ADAL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ADAL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADAL_AVAR_Glutamate
        print("Adding projection: NC_ADAL_AVAR_Glutamate, from ADAL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_ADAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADAL_AVBL_Glutamate
        print("Adding projection: NC_ADAL_AVBL_Glutamate, from ADAL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_ADAL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ADAL_AVBR_Glutamate
        print("Adding projection: NC_ADAL_AVBR_Glutamate, from ADAL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_ADAL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_ADAL_AVDL_Glutamate
        print("Adding projection: NC_ADAL_AVDL_Glutamate, from ADAL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_ADAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_AVEL_Glutamate
        print("Adding projection: NC_ADAL_AVEL_Glutamate, from ADAL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_ADAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_AVJR_Glutamate
        print("Adding projection: NC_ADAL_AVJR_Glutamate, from ADAL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_ADAL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADAL_FLPR_Glutamate
        print("Adding projection: NC_ADAL_FLPR_Glutamate, from ADAL to FLPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_FLPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_FLPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPR[0].Soma syn_NC_ADAL_FLPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_FLPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_FLPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_RICL_Glutamate
        print("Adding projection: NC_ADAL_RICL_Glutamate, from ADAL to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_ADAL_RICL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_RICL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_RICR_Glutamate
        print("Adding projection: NC_ADAL_RICR_Glutamate, from ADAL to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_ADAL_RICR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_RICR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_RIML_Glutamate
        print("Adding projection: NC_ADAL_RIML_Glutamate, from ADAL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 3.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_ADAL_RIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_RIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADAL_RIPL_Glutamate
        print("Adding projection: NC_ADAL_RIPL_Glutamate, from ADAL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_ADAL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAL_SMDVR_Glutamate
        print("Adding projection: NC_ADAL_SMDVR_Glutamate, from ADAL to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_ADAL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADAR_AIBL_Glutamate
        print("Adding projection: NC_ADAR_AIBL_Glutamate, from ADAR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ADAR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_AIBR_Glutamate
        print("Adding projection: NC_ADAR_AIBR_Glutamate, from ADAR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ADAR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_AVAL_Glutamate
        print("Adding projection: NC_ADAR_AVAL_Glutamate, from ADAR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_ADAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_AVBL_Glutamate
        print("Adding projection: NC_ADAR_AVBL_Glutamate, from ADAR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_ADAR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_AVBR_Glutamate
        print("Adding projection: NC_ADAR_AVBR_Glutamate, from ADAR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_ADAR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADAR_AVEL_Glutamate
        print("Adding projection: NC_ADAR_AVEL_Glutamate, from ADAR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_ADAR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_AVJL_Glutamate
        print("Adding projection: NC_ADAR_AVJL_Glutamate, from ADAR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_ADAR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADAR_RICL_Glutamate
        print("Adding projection: NC_ADAR_RICL_Glutamate, from ADAR to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_ADAR_RICL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_RICL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_RIMR_Glutamate
        print("Adding projection: NC_ADAR_RIMR_Glutamate, from ADAR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_ADAR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADAR_RIPR_Glutamate
        print("Adding projection: NC_ADAR_RIPR_Glutamate, from ADAR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_ADAR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_RIVR_Glutamate
        print("Adding projection: NC_ADAR_RIVR_Glutamate, from ADAR to RIVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_RIVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_RIVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVR[0].Soma syn_NC_ADAR_RIVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_RIVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_RIVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADAR_SMDVL_Glutamate
        print("Adding projection: NC_ADAR_SMDVL_Glutamate, from ADAR to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADAR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADAR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_ADAR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADAR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADAR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADEL_ADAL_Dopamine
        print("Adding projection: NC_ADEL_ADAL_Dopamine, from ADEL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_ADAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_ADAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_ADEL_ADAL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_ADAL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_ADER_Dopamine
        print("Adding projection: NC_ADEL_ADER_Dopamine, from ADEL to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_ADER_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_ADER_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_ADEL_ADER_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_ADER_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_AVAL_Dopamine
        print("Adding projection: NC_ADEL_AVAL_Dopamine, from ADEL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_AVAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_AVAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_ADEL_AVAL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_AVAL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADEL_AVAR_Dopamine
        print("Adding projection: NC_ADEL_AVAR_Dopamine, from ADEL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_AVAR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_AVAR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_ADEL_AVAR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_AVAR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADEL_AVEL_Dopamine
        print("Adding projection: NC_ADEL_AVEL_Dopamine, from ADEL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_AVEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_AVEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_ADEL_AVEL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_AVEL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_AVL_Dopamine
        print("Adding projection: NC_ADEL_AVL_Dopamine, from ADEL to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_AVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_AVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_ADEL_AVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_AVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_BDUL_Dopamine
        print("Adding projection: NC_ADEL_BDUL_Dopamine, from ADEL to BDUL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_BDUL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_BDUL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma], weight: 1.0, delay 0.0
        h("a_BDUL[0].Soma syn_NC_ADEL_BDUL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_BDUL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_BDUL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_CEPDL_Dopamine
        print("Adding projection: NC_ADEL_CEPDL_Dopamine, from ADEL to CEPDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_CEPDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_CEPDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDL[0].Soma syn_NC_ADEL_CEPDL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_CEPDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_CEPDL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_FLPL_Dopamine
        print("Adding projection: NC_ADEL_FLPL_Dopamine, from ADEL to FLPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_FLPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_FLPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPL[0].Soma syn_NC_ADEL_FLPL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_FLPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_FLPL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_IL1L_Dopamine
        print("Adding projection: NC_ADEL_IL1L_Dopamine, from ADEL to IL1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_IL1L_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_IL1L_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1L[0].Soma syn_NC_ADEL_IL1L_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_IL1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_IL1L_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_IL2L_Dopamine
        print("Adding projection: NC_ADEL_IL2L_Dopamine, from ADEL to IL2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_IL2L_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_IL2L_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2L[0].Soma syn_NC_ADEL_IL2L_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_IL2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_IL2L_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_OLLL_Dopamine
        print("Adding projection: NC_ADEL_OLLL_Dopamine, from ADEL to OLLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_OLLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_OLLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLL[0].Soma syn_NC_ADEL_OLLL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_OLLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_OLLL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIAL_Dopamine
        print("Adding projection: NC_ADEL_RIAL_Dopamine, from ADEL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_ADEL_RIAL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIAL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIFL_Dopamine
        print("Adding projection: NC_ADEL_RIFL_Dopamine, from ADEL to RIFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIFL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIFL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFL[0].Soma syn_NC_ADEL_RIFL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIFL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIGL_Dopamine
        print("Adding projection: NC_ADEL_RIGL_Dopamine, from ADEL to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_ADEL_RIGL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIGL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIGR_Dopamine
        print("Adding projection: NC_ADEL_RIGR_Dopamine, from ADEL to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_ADEL_RIGR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIGR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIH_Dopamine
        print("Adding projection: NC_ADEL_RIH_Dopamine, from ADEL to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIH_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIH_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 2.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_ADEL_RIH_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIH_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIVL_Dopamine
        print("Adding projection: NC_ADEL_RIVL_Dopamine, from ADEL to RIVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVL[0].Soma syn_NC_ADEL_RIVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_RIVR_Dopamine
        print("Adding projection: NC_ADEL_RIVR_Dopamine, from ADEL to RIVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RIVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RIVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVR[0].Soma syn_NC_ADEL_RIVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RIVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RIVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_RMDL_Dopamine
        print("Adding projection: NC_ADEL_RMDL_Dopamine, from ADEL to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RMDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RMDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_ADEL_RMDL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RMDL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADEL_RMGL_Dopamine
        print("Adding projection: NC_ADEL_RMGL_Dopamine, from ADEL to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RMGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RMGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_ADEL_RMGL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RMGL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_RMHL_Dopamine
        print("Adding projection: NC_ADEL_RMHL_Dopamine, from ADEL to RMHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_RMHL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_RMHL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHL[0].Soma syn_NC_ADEL_RMHL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_RMHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_RMHL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_SIADR_Dopamine
        print("Adding projection: NC_ADEL_SIADR_Dopamine, from ADEL to SIADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_SIADR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_SIADR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIADR[0].Soma syn_NC_ADEL_SIADR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_SIADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_SIADR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_SIBDR_Dopamine
        print("Adding projection: NC_ADEL_SIBDR_Dopamine, from ADEL to SIBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_SIBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_SIBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBDR[0].Soma syn_NC_ADEL_SIBDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_SIBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_SIBDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_SMBDR_Dopamine
        print("Adding projection: NC_ADEL_SMBDR_Dopamine, from ADEL to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_ADEL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADEL_URBL_Dopamine
        print("Adding projection: NC_ADEL_URBL_Dopamine, from ADEL to URBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADEL_URBL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADEL_URBL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma], weight: 1.0, delay 0.0
        h("a_URBL[0].Soma syn_NC_ADEL_URBL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADEL[0].Soma a_URBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADEL_URBL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_ADAR_Dopamine
        print("Adding projection: NC_ADER_ADAR_Dopamine, from ADER to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_ADAR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_ADAR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_ADER_ADAR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_ADAR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_ADEL_Dopamine
        print("Adding projection: NC_ADER_ADEL_Dopamine, from ADER to ADEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_ADEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_ADEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 2.0, delay 0.0
        h("a_ADEL[0].Soma syn_NC_ADER_ADEL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_ADEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_ADEL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADER_ALA_Dopamine
        print("Adding projection: NC_ADER_ALA_Dopamine, from ADER to ALA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_ALA_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_ALA_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma], weight: 1.0, delay 0.0
        h("a_ALA[0].Soma syn_NC_ADER_ALA_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_ALA[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_ALA_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_AVAL_Dopamine
        print("Adding projection: NC_ADER_AVAL_Dopamine, from ADER to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVAL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_ADER_AVAL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVAL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADER_AVAR_Dopamine
        print("Adding projection: NC_ADER_AVAR_Dopamine, from ADER to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVAR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVAR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_ADER_AVAR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVAR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_AVDR_Dopamine
        print("Adding projection: NC_ADER_AVDR_Dopamine, from ADER to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_ADER_AVDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADER_AVER_Dopamine
        print("Adding projection: NC_ADER_AVER_Dopamine, from ADER to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVER_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVER_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_ADER_AVER_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVER_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_AVJR_Dopamine
        print("Adding projection: NC_ADER_AVJR_Dopamine, from ADER to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVJR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVJR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_ADER_AVJR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVJR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_AVKL_Dopamine
        print("Adding projection: NC_ADER_AVKL_Dopamine, from ADER to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVKL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVKL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_ADER_AVKL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVKL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_AVKR_Dopamine
        print("Adding projection: NC_ADER_AVKR_Dopamine, from ADER to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_AVKR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_AVKR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_ADER_AVKR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_AVKR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_CEPDR_Dopamine
        print("Adding projection: NC_ADER_CEPDR_Dopamine, from ADER to CEPDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_CEPDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_CEPDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_ADER_CEPDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_CEPDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_FLPL_Dopamine
        print("Adding projection: NC_ADER_FLPL_Dopamine, from ADER to FLPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_FLPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_FLPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPL[0].Soma syn_NC_ADER_FLPL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_FLPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_FLPL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_FLPR_Dopamine
        print("Adding projection: NC_ADER_FLPR_Dopamine, from ADER to FLPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_FLPR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_FLPR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPR[0].Soma syn_NC_ADER_FLPR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_FLPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_FLPR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_OLLR_Dopamine
        print("Adding projection: NC_ADER_OLLR_Dopamine, from ADER to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_OLLR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_OLLR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 2.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_ADER_OLLR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_OLLR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADER_PVR_Dopamine
        print("Adding projection: NC_ADER_PVR_Dopamine, from ADER to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_PVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_PVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_ADER_PVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_PVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_RIGL_Dopamine
        print("Adding projection: NC_ADER_RIGL_Dopamine, from ADER to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_RIGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_RIGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 7.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_ADER_RIGL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_RIGL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_ADER_RIGR_Dopamine
        print("Adding projection: NC_ADER_RIGR_Dopamine, from ADER to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_RIGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_RIGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_ADER_RIGR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_RIGR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ADER_RIH_Dopamine
        print("Adding projection: NC_ADER_RIH_Dopamine, from ADER to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_RIH_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_RIH_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_ADER_RIH_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_RIH_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADER_RMDR_Dopamine
        print("Adding projection: NC_ADER_RMDR_Dopamine, from ADER to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_RMDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_RMDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_ADER_RMDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_RMDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADER_SAAVR_Dopamine
        print("Adding projection: NC_ADER_SAAVR_Dopamine, from ADER to SAAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADER_SAAVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADER_SAAVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAAVR[0].Soma syn_NC_ADER_SAAVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADER[0].Soma a_SAAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADER_SAAVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFL_ADAL_Serotonin
        print("Adding projection: NC_ADFL_ADAL_Serotonin, from ADFL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_ADAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_ADAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_ADFL_ADAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_ADAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFL_AIZL_Serotonin
        print("Adding projection: NC_ADFL_AIZL_Serotonin, from ADFL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 12.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_ADFL_AIZL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_AIZL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_ADFL_AUAL_Serotonin
        print("Adding projection: NC_ADFL_AUAL_Serotonin, from ADFL to AUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_AUAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_AUAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AUAL[0].Soma syn_NC_ADFL_AUAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_AUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_AUAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADFL_OLQVL_Serotonin
        print("Adding projection: NC_ADFL_OLQVL_Serotonin, from ADFL to OLQVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQVL[0].Soma syn_NC_ADFL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_OLQVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFL_RIAL_Serotonin
        print("Adding projection: NC_ADFL_RIAL_Serotonin, from ADFL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 15.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_ADFL_RIAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_RIAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_ADFL_RIGL_Serotonin
        print("Adding projection: NC_ADFL_RIGL_Serotonin, from ADFL to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_RIGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_RIGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_ADFL_RIGL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_RIGL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFL_RIR_Serotonin
        print("Adding projection: NC_ADFL_RIR_Serotonin, from ADFL to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_RIR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_RIR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_ADFL_RIR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_RIR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADFL_SMBVL_Serotonin
        print("Adding projection: NC_ADFL_SMBVL_Serotonin, from ADFL to SMBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFL_SMBVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFL_SMBVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_ADFL_SMBVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFL[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFL_SMBVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADFR_ADAR_Serotonin
        print("Adding projection: NC_ADFR_ADAR_Serotonin, from ADFR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_ADAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_ADAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_ADFR_ADAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_ADAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFR_AIYR_Serotonin
        print("Adding projection: NC_ADFR_AIYR_Serotonin, from ADFR to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_AIYR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_AIYR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_ADFR_AIYR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_AIYR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFR_AIZR_Serotonin
        print("Adding projection: NC_ADFR_AIZR_Serotonin, from ADFR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 8.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_ADFR_AIZR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_AIZR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_ADFR_ASHR_Serotonin
        print("Adding projection: NC_ADFR_ASHR_Serotonin, from ADFR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_ASHR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_ASHR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_ADFR_ASHR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_ASHR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFR_AUAR_Serotonin
        print("Adding projection: NC_ADFR_AUAR_Serotonin, from ADFR to AUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_AUAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_AUAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 4.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_ADFR_AUAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_AUAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ADFR_AWBR_Serotonin
        print("Adding projection: NC_ADFR_AWBR_Serotonin, from ADFR to AWBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_AWBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_AWBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBR[0].Soma syn_NC_ADFR_AWBR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_AWBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_AWBR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFR_PVPR_Serotonin
        print("Adding projection: NC_ADFR_PVPR_Serotonin, from ADFR to PVPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_PVPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_PVPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_ADFR_PVPR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_PVPR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFR_RIAR_Serotonin
        print("Adding projection: NC_ADFR_RIAR_Serotonin, from ADFR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 16.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_ADFR_RIAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_RIAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_ADFR_RIGR_Serotonin
        print("Adding projection: NC_ADFR_RIGR_Serotonin, from ADFR to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_RIGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_RIGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_ADFR_RIGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_RIGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADFR_RIR_Serotonin
        print("Adding projection: NC_ADFR_RIR_Serotonin, from ADFR to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_RIR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_RIR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_ADFR_RIR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_RIR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADFR_SMBDR_Serotonin
        print("Adding projection: NC_ADFR_SMBDR_Serotonin, from ADFR to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_SMBDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_SMBDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_ADFR_SMBDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_SMBDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADFR_SMBVR_Serotonin
        print("Adding projection: NC_ADFR_SMBVR_Serotonin, from ADFR to SMBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_SMBVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_SMBVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBVR[0].Soma syn_NC_ADFR_SMBVR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_SMBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_SMBVR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADFR_URXR_Serotonin
        print("Adding projection: NC_ADFR_URXR_Serotonin, from ADFR to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADFR_URXR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADFR_URXR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_ADFR_URXR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADFR[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADFR_URXR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLL_AIAL_FMRFamide
        print("Adding projection: NC_ADLL_AIAL_FMRFamide, from ADLL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 6.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ADLL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_ADLL_AIBL_FMRFamide
        print("Adding projection: NC_ADLL_AIBL_FMRFamide, from ADLL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 7.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ADLL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_ADLL_AIBR_FMRFamide
        print("Adding projection: NC_ADLL_AIBR_FMRFamide, from ADLL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ADLL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLL_ALA_FMRFamide
        print("Adding projection: NC_ADLL_ALA_FMRFamide, from ADLL to ALA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_ALA_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_ALA_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma], weight: 2.0, delay 0.0
        h("a_ALA[0].Soma syn_NC_ADLL_ALA_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_ALA[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_ALA_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLL_ASER_FMRFamide
        print("Adding projection: NC_ADLL_ASER_FMRFamide, from ADLL to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_ASER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_ASER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 3.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_ADLL_ASER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_ASER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADLL_ASHL_FMRFamide
        print("Adding projection: NC_ADLL_ASHL_FMRFamide, from ADLL to ASHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 2.0, delay 0.0
        h("a_ASHL[0].Soma syn_NC_ADLL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_ASHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVAL_FMRFamide
        print("Adding projection: NC_ADLL_AVAL_FMRFamide, from ADLL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_ADLL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVAR_FMRFamide
        print("Adding projection: NC_ADLL_AVAR_FMRFamide, from ADLL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_ADLL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVBL_FMRFamide
        print("Adding projection: NC_ADLL_AVBL_FMRFamide, from ADLL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_ADLL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVDL_FMRFamide
        print("Adding projection: NC_ADLL_AVDL_FMRFamide, from ADLL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_ADLL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVDR_FMRFamide
        print("Adding projection: NC_ADLL_AVDR_FMRFamide, from ADLL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_ADLL_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVJL_FMRFamide
        print("Adding projection: NC_ADLL_AVJL_FMRFamide, from ADLL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVJL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVJL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_ADLL_AVJL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVJL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLL_AVJR_FMRFamide
        print("Adding projection: NC_ADLL_AVJR_FMRFamide, from ADLL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVJR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AVJR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_ADLL_AVJR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AVJR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADLL_AWBL_FMRFamide
        print("Adding projection: NC_ADLL_AWBL_FMRFamide, from ADLL to AWBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_AWBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_AWBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AWBL[0].Soma syn_NC_ADLL_AWBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_AWBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_AWBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLL_OLQVL_FMRFamide
        print("Adding projection: NC_ADLL_OLQVL_FMRFamide, from ADLL to OLQVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_OLQVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_OLQVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQVL[0].Soma syn_NC_ADLL_OLQVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_OLQVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_OLQVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLL_RIPL_FMRFamide
        print("Adding projection: NC_ADLL_RIPL_FMRFamide, from ADLL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLL_RIPL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLL_RIPL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_ADLL_RIPL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLL_RIPL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_AIAR_FMRFamide
        print("Adding projection: NC_ADLR_AIAR_FMRFamide, from ADLR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AIAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AIAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 10.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_ADLR_AIAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AIAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_ADLR_AIBR_FMRFamide
        print("Adding projection: NC_ADLR_AIBR_FMRFamide, from ADLR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 10.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ADLR_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_ADLR_ASER_FMRFamide
        print("Adding projection: NC_ADLR_ASER_FMRFamide, from ADLR to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_ASER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_ASER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_ADLR_ASER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_ASER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_ASHR_FMRFamide
        print("Adding projection: NC_ADLR_ASHR_FMRFamide, from ADLR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 3.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_ADLR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADLR_AVAR_FMRFamide
        print("Adding projection: NC_ADLR_AVAR_FMRFamide, from ADLR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_ADLR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLR_AVBL_FMRFamide
        print("Adding projection: NC_ADLR_AVBL_FMRFamide, from ADLR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_ADLR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_AVBR_FMRFamide
        print("Adding projection: NC_ADLR_AVBR_FMRFamide, from ADLR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_ADLR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLR_AVDL_FMRFamide
        print("Adding projection: NC_ADLR_AVDL_FMRFamide, from ADLR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_ADLR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ADLR_AVDR_FMRFamide
        print("Adding projection: NC_ADLR_AVDR_FMRFamide, from ADLR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_ADLR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ADLR_AVJR_FMRFamide
        print("Adding projection: NC_ADLR_AVJR_FMRFamide, from ADLR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AVJR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AVJR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_ADLR_AVJR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AVJR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_AWCR_FMRFamide
        print("Adding projection: NC_ADLR_AWCR_FMRFamide, from ADLR to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_AWCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_AWCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 3.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_ADLR_AWCR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_AWCR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ADLR_OLLR_FMRFamide
        print("Adding projection: NC_ADLR_OLLR_FMRFamide, from ADLR to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_OLLR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_OLLR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_ADLR_OLLR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_OLLR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_PVCL_FMRFamide
        print("Adding projection: NC_ADLR_PVCL_FMRFamide, from ADLR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_ADLR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_RICL_FMRFamide
        print("Adding projection: NC_ADLR_RICL_FMRFamide, from ADLR to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_RICL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_RICL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_ADLR_RICL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_RICL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ADLR_RICR_FMRFamide
        print("Adding projection: NC_ADLR_RICR_FMRFamide, from ADLR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ADLR_RICR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ADLR_RICR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_ADLR_RICR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ADLR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ADLR_RICR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AFDL_AINR_Glutamate
        print("Adding projection: NC_AFDL_AINR_Glutamate, from AFDL to AINR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AFDL_AINR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AFDL_AINR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma], weight: 1.0, delay 0.0
        h("a_AINR[0].Soma syn_NC_AFDL_AINR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AFDL[0].Soma a_AINR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AFDL_AINR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AFDL_AIYL_Glutamate
        print("Adding projection: NC_AFDL_AIYL_Glutamate, from AFDL to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AFDL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AFDL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 7.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_AFDL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AFDL[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AFDL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AFDR_AIYR_Glutamate
        print("Adding projection: NC_AFDR_AIYR_Glutamate, from AFDR to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AFDR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AFDR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 13.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_AFDR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AFDR[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AFDR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_AFDR_ASER_Glutamate
        print("Adding projection: NC_AFDR_ASER_Glutamate, from AFDR to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AFDR_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AFDR_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_AFDR_ASER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AFDR[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AFDR_ASER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_ADAL_Acetylcholine
        print("Adding projection: NC_AIAL_ADAL_Acetylcholine, from AIAL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_ADAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_ADAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_AIAL_ADAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_ADAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_AIBL_Acetylcholine
        print("Adding projection: NC_AIAL_AIBL_Acetylcholine, from AIAL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 10.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_AIAL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_AIAL_AIML_Acetylcholine
        print("Adding projection: NC_AIAL_AIML_Acetylcholine, from AIAL to AIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_AIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_AIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma], weight: 2.0, delay 0.0
        h("a_AIML[0].Soma syn_NC_AIAL_AIML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_AIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_AIML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIAL_AIZL_Acetylcholine
        print("Adding projection: NC_AIAL_AIZL_Acetylcholine, from AIAL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_AIAL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_ASER_Acetylcholine
        print("Adding projection: NC_AIAL_ASER_Acetylcholine, from AIAL to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_ASER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_ASER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 3.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_AIAL_ASER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_ASER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIAL_ASGL_Acetylcholine
        print("Adding projection: NC_AIAL_ASGL_Acetylcholine, from AIAL to ASGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_ASGL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_ASGL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGL[0].Soma syn_NC_AIAL_ASGL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_ASGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_ASGL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_ASHL_Acetylcholine
        print("Adding projection: NC_AIAL_ASHL_Acetylcholine, from AIAL to ASHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_ASHL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_ASHL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHL[0].Soma syn_NC_AIAL_ASHL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_ASHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_ASHL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_ASKL_Acetylcholine
        print("Adding projection: NC_AIAL_ASKL_Acetylcholine, from AIAL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_ASKL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_ASKL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 3.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_AIAL_ASKL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_ASKL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIAL_AWCR_Acetylcholine
        print("Adding projection: NC_AIAL_AWCR_Acetylcholine, from AIAL to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_AIAL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_HSNL_Acetylcholine
        print("Adding projection: NC_AIAL_HSNL_Acetylcholine, from AIAL to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_AIAL_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_RIFL_Acetylcholine
        print("Adding projection: NC_AIAL_RIFL_Acetylcholine, from AIAL to RIFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_RIFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_RIFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFL[0].Soma syn_NC_AIAL_RIFL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_RIFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_RIFL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAL_RMGL_Acetylcholine
        print("Adding projection: NC_AIAL_RMGL_Acetylcholine, from AIAL to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAL_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAL_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_AIAL_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAL[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAL_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_ADAR_Acetylcholine
        print("Adding projection: NC_AIAR_ADAR_Acetylcholine, from AIAR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_AIAR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_ADLR_Acetylcholine
        print("Adding projection: NC_AIAR_ADLR_Acetylcholine, from AIAR to ADLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_ADLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_ADLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma], weight: 2.0, delay 0.0
        h("a_ADLR[0].Soma syn_NC_AIAR_ADLR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_ADLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_ADLR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIAR_AIBR_Acetylcholine
        print("Adding projection: NC_AIAR_AIBR_Acetylcholine, from AIAR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 14.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_AIAR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 14.0))") # *->cell

        # ######################   Projection: NC_AIAR_AIZR_Acetylcholine
        print("Adding projection: NC_AIAR_AIZR_Acetylcholine, from AIAR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_AIAR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_ASER_Acetylcholine
        print("Adding projection: NC_AIAR_ASER_Acetylcholine, from AIAR to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_ASER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_ASER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_AIAR_ASER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_ASER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_ASGR_Acetylcholine
        print("Adding projection: NC_AIAR_ASGR_Acetylcholine, from AIAR to ASGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_ASGR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_ASGR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGR[0].Soma syn_NC_AIAR_ASGR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_ASGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_ASGR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_AWAR_Acetylcholine
        print("Adding projection: NC_AIAR_AWAR_Acetylcholine, from AIAR to AWAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWAR[0].Soma syn_NC_AIAR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_AWAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_AWCL_Acetylcholine
        print("Adding projection: NC_AIAR_AWCL_Acetylcholine, from AIAR to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_AIAR_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIAR_AWCR_Acetylcholine
        print("Adding projection: NC_AIAR_AWCR_Acetylcholine, from AIAR to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 3.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_AIAR_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIAR_RIFR_Acetylcholine
        print("Adding projection: NC_AIAR_RIFR_Acetylcholine, from AIAR to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIAR_RIFR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIAR_RIFR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_AIAR_RIFR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIAR[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIAR_RIFR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIBL_AIYL_Glutamate
        print("Adding projection: NC_AIBL_AIYL_Glutamate, from AIBL to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_AIBL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBL_ASER_Glutamate
        print("Adding projection: NC_AIBL_ASER_Glutamate, from AIBL to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_AIBL_ASER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_ASER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBL_AVAL_Glutamate
        print("Adding projection: NC_AIBL_AVAL_Glutamate, from AIBL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIBL_AVBL_Glutamate
        print("Adding projection: NC_AIBL_AVBL_Glutamate, from AIBL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AIBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AIBL_FLPL_Glutamate
        print("Adding projection: NC_AIBL_FLPL_Glutamate, from AIBL to FLPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_FLPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_FLPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPL[0].Soma syn_NC_AIBL_FLPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_FLPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_FLPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBL_RIBR_Glutamate
        print("Adding projection: NC_AIBL_RIBR_Glutamate, from AIBL to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_AIBL_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIBL_RIFL_Glutamate
        print("Adding projection: NC_AIBL_RIFL_Glutamate, from AIBL to RIFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_RIFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFL[0].Soma syn_NC_AIBL_RIFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_RIFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_RIFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBL_RIGR_Glutamate
        print("Adding projection: NC_AIBL_RIGR_Glutamate, from AIBL to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_AIBL_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBL_RIML_Glutamate
        print("Adding projection: NC_AIBL_RIML_Glutamate, from AIBL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_AIBL_RIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_RIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIBL_RIMR_Glutamate
        print("Adding projection: NC_AIBL_RIMR_Glutamate, from AIBL to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 13.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_AIBL_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_AIBL_SAADL_Glutamate
        print("Adding projection: NC_AIBL_SAADL_Glutamate, from AIBL to SAADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_SAADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_SAADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 2.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_AIBL_SAADL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_SAADL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIBL_SAADR_Glutamate
        print("Adding projection: NC_AIBL_SAADR_Glutamate, from AIBL to SAADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_SAADR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_SAADR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 2.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_AIBL_SAADR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_SAADR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIBL_SMDDR_Glutamate
        print("Adding projection: NC_AIBL_SMDDR_Glutamate, from AIBL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_AIBL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIBR_AVAR_Glutamate
        print("Adding projection: NC_AIBR_AVAR_Glutamate, from AIBR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBR_AVBR_Glutamate
        print("Adding projection: NC_AIBR_AVBR_Glutamate, from AIBR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AIBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIBR_AVEL_Glutamate
        print("Adding projection: NC_AIBR_AVEL_Glutamate, from AIBR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBR_RIAL_Glutamate
        print("Adding projection: NC_AIBR_RIAL_Glutamate, from AIBR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AIBR_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBR_RIBL_Glutamate
        print("Adding projection: NC_AIBR_RIBL_Glutamate, from AIBR to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_AIBR_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIBR_RIML_Glutamate
        print("Adding projection: NC_AIBR_RIML_Glutamate, from AIBR to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 16.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_AIBR_RIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_RIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_AIBR_RIMR_Glutamate
        print("Adding projection: NC_AIBR_RIMR_Glutamate, from AIBR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_AIBR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBR_SAADL_Glutamate
        print("Adding projection: NC_AIBR_SAADL_Glutamate, from AIBR to SAADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_SAADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_SAADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_AIBR_SAADL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_SAADL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBR_SMDDL_Glutamate
        print("Adding projection: NC_AIBR_SMDDL_Glutamate, from AIBR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_AIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIBR_SMDVL_Glutamate
        print("Adding projection: NC_AIBR_SMDVL_Glutamate, from AIBR to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_AIBR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIBR_VB1_Glutamate
        print("Adding projection: NC_AIBR_VB1_Glutamate, from AIBR to VB1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIBR_VB1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIBR_VB1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 3.0, delay 0.0
        h("a_VB1[0].Soma syn_NC_AIBR_VB1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIBR[0].Soma a_VB1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIBR_VB1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIML_AIAL_Serotonin
        print("Adding projection: NC_AIML_AIAL_Serotonin, from AIML to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_AIML_AIAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AIAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AIML_ALML_Serotonin
        print("Adding projection: NC_AIML_ALML_Serotonin, from AIML to ALML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_ALML_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_ALML_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma], weight: 1.0, delay 0.0
        h("a_ALML[0].Soma syn_NC_AIML_ALML_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_ALML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_ALML_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_ASGL_Serotonin
        print("Adding projection: NC_AIML_ASGL_Serotonin, from AIML to ASGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_ASGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_ASGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma], weight: 2.0, delay 0.0
        h("a_ASGL[0].Soma syn_NC_AIML_ASGL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_ASGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_ASGL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIML_ASKL_Serotonin
        print("Adding projection: NC_AIML_ASKL_Serotonin, from AIML to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_ASKL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_ASKL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 2.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_AIML_ASKL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_ASKL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIML_AVBR_Serotonin
        print("Adding projection: NC_AIML_AVBR_Serotonin, from AIML to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AIML_AVBR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVBR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIML_AVDL_Serotonin
        print("Adding projection: NC_AIML_AVDL_Serotonin, from AIML to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AIML_AVDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_AVDR_Serotonin
        print("Adding projection: NC_AIML_AVDR_Serotonin, from AIML to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AIML_AVDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_AVER_Serotonin
        print("Adding projection: NC_AIML_AVER_Serotonin, from AIML to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AIML_AVER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_AVFL_Serotonin
        print("Adding projection: NC_AIML_AVFL_Serotonin, from AIML to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_AIML_AVFL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVFL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIML_AVFR_Serotonin
        print("Adding projection: NC_AIML_AVFR_Serotonin, from AIML to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AIML_AVFR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVFR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_AVHL_Serotonin
        print("Adding projection: NC_AIML_AVHL_Serotonin, from AIML to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVHL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVHL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_AIML_AVHL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVHL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIML_AVHR_Serotonin
        print("Adding projection: NC_AIML_AVHR_Serotonin, from AIML to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVHR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVHR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_AIML_AVHR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVHR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_AVJL_Serotonin
        print("Adding projection: NC_AIML_AVJL_Serotonin, from AIML to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_AVJL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_AVJL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AIML_AVJL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_AVJL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_PVQL_Serotonin
        print("Adding projection: NC_AIML_PVQL_Serotonin, from AIML to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_PVQL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_PVQL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_AIML_PVQL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_PVQL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_RIFL_Serotonin
        print("Adding projection: NC_AIML_RIFL_Serotonin, from AIML to RIFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_RIFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_RIFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFL[0].Soma syn_NC_AIML_RIFL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_RIFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_RIFL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIML_SMBVL_Serotonin
        print("Adding projection: NC_AIML_SMBVL_Serotonin, from AIML to SMBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIML_SMBVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIML_SMBVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_AIML_SMBVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIML[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIML_SMBVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_AIAR_Serotonin
        print("Adding projection: NC_AIMR_AIAR_Serotonin, from AIMR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_AIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_AIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 5.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_AIMR_AIAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_AIAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AIMR_ASGR_Serotonin
        print("Adding projection: NC_AIMR_ASGR_Serotonin, from AIMR to ASGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_ASGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_ASGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 2.0, delay 0.0
        h("a_ASGR[0].Soma syn_NC_AIMR_ASGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_ASGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_ASGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIMR_ASJR_Serotonin
        print("Adding projection: NC_AIMR_ASJR_Serotonin, from AIMR to ASJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_ASJR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_ASJR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma], weight: 2.0, delay 0.0
        h("a_ASJR[0].Soma syn_NC_AIMR_ASJR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_ASJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_ASJR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIMR_ASKR_Serotonin
        print("Adding projection: NC_AIMR_ASKR_Serotonin, from AIMR to ASKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_ASKR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_ASKR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 3.0, delay 0.0
        h("a_ASKR[0].Soma syn_NC_AIMR_ASKR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_ASKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_ASKR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIMR_AVDR_Serotonin
        print("Adding projection: NC_AIMR_AVDR_Serotonin, from AIMR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AIMR_AVDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_AVDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_AVFL_Serotonin
        print("Adding projection: NC_AIMR_AVFL_Serotonin, from AIMR to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_AVFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_AVFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_AIMR_AVFL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_AVFL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_AVFR_Serotonin
        print("Adding projection: NC_AIMR_AVFR_Serotonin, from AIMR to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_AVFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_AVFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AIMR_AVFR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_AVFR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_HSNL_Serotonin
        print("Adding projection: NC_AIMR_HSNL_Serotonin, from AIMR to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_HSNL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_HSNL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_AIMR_HSNL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_HSNL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_HSNR_Serotonin
        print("Adding projection: NC_AIMR_HSNR_Serotonin, from AIMR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_HSNR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_HSNR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 2.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_AIMR_HSNR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_HSNR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIMR_OLQDR_Serotonin
        print("Adding projection: NC_AIMR_OLQDR_Serotonin, from AIMR to OLQDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQDR[0].Soma syn_NC_AIMR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_OLQDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_PVNR_Serotonin
        print("Adding projection: NC_AIMR_PVNR_Serotonin, from AIMR to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_PVNR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_PVNR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_AIMR_PVNR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_PVNR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_RIFR_Serotonin
        print("Adding projection: NC_AIMR_RIFR_Serotonin, from AIMR to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_RIFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_RIFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_AIMR_RIFR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_RIFR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIMR_RMGR_Serotonin
        print("Adding projection: NC_AIMR_RMGR_Serotonin, from AIMR to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIMR_RMGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIMR_RMGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_AIMR_RMGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIMR[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIMR_RMGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINL_AFDR_Glutamate
        print("Adding projection: NC_AINL_AFDR_Glutamate, from AINL to AFDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_AFDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_AFDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 5.0, delay 0.0
        h("a_AFDR[0].Soma syn_NC_AINL_AFDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_AFDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_AFDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AINL_ASEL_Glutamate
        print("Adding projection: NC_AINL_ASEL_Glutamate, from AINL to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 3.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AINL_ASEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_ASEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AINL_ASGR_Glutamate
        print("Adding projection: NC_AINL_ASGR_Glutamate, from AINL to ASGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_ASGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_ASGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGR[0].Soma syn_NC_AINL_ASGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_ASGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_ASGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINL_AUAR_Glutamate
        print("Adding projection: NC_AINL_AUAR_Glutamate, from AINL to AUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_AUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_AUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_AINL_AUAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_AUAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINL_BAGL_Glutamate
        print("Adding projection: NC_AINL_BAGL_Glutamate, from AINL to BAGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_BAGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_BAGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma], weight: 3.0, delay 0.0
        h("a_BAGL[0].Soma syn_NC_AINL_BAGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_BAGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_BAGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AINL_RIBL_Glutamate
        print("Adding projection: NC_AINL_RIBL_Glutamate, from AINL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_AINL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINL_RIBR_Glutamate
        print("Adding projection: NC_AINL_RIBR_Glutamate, from AINL to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINL_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINL_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_AINL_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINL[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINL_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AINR_AFDL_Glutamate
        print("Adding projection: NC_AINR_AFDL_Glutamate, from AINR to AFDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_AFDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_AFDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma], weight: 4.0, delay 0.0
        h("a_AFDL[0].Soma syn_NC_AINR_AFDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_AFDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_AFDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AINR_AFDR_Glutamate
        print("Adding projection: NC_AINR_AFDR_Glutamate, from AINR to AFDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_AFDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_AFDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AFDR[0].Soma syn_NC_AINR_AFDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_AFDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_AFDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINR_AIAL_Glutamate
        print("Adding projection: NC_AINR_AIAL_Glutamate, from AINR to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_AINR_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AINR_AIBL_Glutamate
        print("Adding projection: NC_AINR_AIBL_Glutamate, from AINR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_AINR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AINR_ASEL_Glutamate
        print("Adding projection: NC_AINR_ASEL_Glutamate, from AINR to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AINR_ASEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_ASEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINR_ASER_Glutamate
        print("Adding projection: NC_AINR_ASER_Glutamate, from AINR to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_AINR_ASER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_ASER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINR_AUAR_Glutamate
        print("Adding projection: NC_AINR_AUAR_Glutamate, from AINR to AUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_AUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_AUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_AINR_AUAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_AUAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AINR_BAGR_Glutamate
        print("Adding projection: NC_AINR_BAGR_Glutamate, from AINR to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 3.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_AINR_BAGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_BAGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AINR_RIBL_Glutamate
        print("Adding projection: NC_AINR_RIBL_Glutamate, from AINR to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_AINR_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AINR_RID_Glutamate
        print("Adding projection: NC_AINR_RID_Glutamate, from AINR to RID with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AINR_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AINR_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0, delay 0.0
        h("a_RID[0].Soma syn_NC_AINR_RID_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AINR[0].Soma a_RID[0].synlist.append(new NetCon(&v(0.5), syn_NC_AINR_RID_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYL_AIZL_Acetylcholine
        print("Adding projection: NC_AIYL_AIZL_Acetylcholine, from AIYL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 13.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_AIYL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_AIZL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_AIYL_AWAL_Acetylcholine
        print("Adding projection: NC_AIYL_AWAL_Acetylcholine, from AIYL to AWAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_AWAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_AWAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AWAL[0].Soma syn_NC_AIYL_AWAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_AWAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_AWAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIYL_AWCL_Acetylcholine
        print("Adding projection: NC_AIYL_AWCL_Acetylcholine, from AIYL to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_AIYL_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_AWCL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYL_AWCR_Acetylcholine
        print("Adding projection: NC_AIYL_AWCR_Acetylcholine, from AIYL to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_AIYL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_AWCR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYL_HSNR_Acetylcholine
        print("Adding projection: NC_AIYL_HSNR_Acetylcholine, from AIYL to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_HSNR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_HSNR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_AIYL_HSNR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_HSNR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYL_RIAL_Acetylcholine
        print("Adding projection: NC_AIYL_RIAL_Acetylcholine, from AIYL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 7.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AIYL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AIYL_RIBL_Acetylcholine
        print("Adding projection: NC_AIYL_RIBL_Acetylcholine, from AIYL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYL_RIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYL_RIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_AIYL_RIBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYL_RIBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIYR_ADFR_Acetylcholine
        print("Adding projection: NC_AIYR_ADFR_Acetylcholine, from AIYR to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYR_ADFR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYR_ADFR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_AIYR_ADFR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYR[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYR_ADFR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYR_AIZR_Acetylcholine
        print("Adding projection: NC_AIYR_AIZR_Acetylcholine, from AIYR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 8.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_AIYR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYR_AIZR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AIYR_AWAR_Acetylcholine
        print("Adding projection: NC_AIYR_AWAR_Acetylcholine, from AIYR to AWAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWAR[0].Soma syn_NC_AIYR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYR[0].Soma a_AWAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYR_AWAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYR_HSNL_Acetylcholine
        print("Adding projection: NC_AIYR_HSNL_Acetylcholine, from AIYR to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYR_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYR_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_AIYR_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYR[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYR_HSNL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIYR_RIAR_Acetylcholine
        print("Adding projection: NC_AIYR_RIAR_Acetylcholine, from AIYR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 6.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_AIYR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AIYR_RIBR_Acetylcholine
        print("Adding projection: NC_AIYR_RIBR_Acetylcholine, from AIYR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIYR_RIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIYR_RIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_AIYR_RIBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIYR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIYR_RIBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIZL_AIAL_Glutamate
        print("Adding projection: NC_AIZL_AIAL_Glutamate, from AIZL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_AIZL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIZL_AIBL_Glutamate
        print("Adding projection: NC_AIZL_AIBL_Glutamate, from AIZL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_AIZL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AIZL_AIBR_Glutamate
        print("Adding projection: NC_AIZL_AIBR_Glutamate, from AIZL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 8.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_AIZL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AIZL_ASEL_Glutamate
        print("Adding projection: NC_AIZL_ASEL_Glutamate, from AIZL to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AIZL_ASEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_ASEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZL_AVER_Glutamate
        print("Adding projection: NC_AIZL_AVER_Glutamate, from AIZL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 5.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AIZL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AIZL_DVA_Glutamate
        print("Adding projection: NC_AIZL_DVA_Glutamate, from AIZL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_AIZL_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZL_RIAL_Glutamate
        print("Adding projection: NC_AIZL_RIAL_Glutamate, from AIZL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 8.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AIZL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AIZL_RIGL_Glutamate
        print("Adding projection: NC_AIZL_RIGL_Glutamate, from AIZL to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_AIZL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZL_RIML_Glutamate
        print("Adding projection: NC_AIZL_RIML_Glutamate, from AIZL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 4.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_AIZL_RIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_RIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIZL_SMBDL_Glutamate
        print("Adding projection: NC_AIZL_SMBDL_Glutamate, from AIZL to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 9.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_AIZL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AIZL_SMBVL_Glutamate
        print("Adding projection: NC_AIZL_SMBVL_Glutamate, from AIZL to SMBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_SMBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_SMBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 7.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_AIZL_SMBVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_SMBVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AIZL_VB2_Glutamate
        print("Adding projection: NC_AIZL_VB2_Glutamate, from AIZL to VB2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZL_VB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZL_VB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0, delay 0.0
        h("a_VB2[0].Soma syn_NC_AIZL_VB2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZL[0].Soma a_VB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZL_VB2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZR_AIAR_Glutamate
        print("Adding projection: NC_AIZR_AIAR_Glutamate, from AIZR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_AIZR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZR_AIBL_Glutamate
        print("Adding projection: NC_AIZR_AIBL_Glutamate, from AIZR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 8.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_AIZR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AIZR_AIBR_Glutamate
        print("Adding projection: NC_AIZR_AIBR_Glutamate, from AIZR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_AIZR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZR_AVEL_Glutamate
        print("Adding projection: NC_AIZR_AVEL_Glutamate, from AIZR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AIZR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIZR_AVER_Glutamate
        print("Adding projection: NC_AIZR_AVER_Glutamate, from AIZR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AIZR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZR_DVA_Glutamate
        print("Adding projection: NC_AIZR_DVA_Glutamate, from AIZR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_AIZR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AIZR_RIAR_Glutamate
        print("Adding projection: NC_AIZR_RIAR_Glutamate, from AIZR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 7.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_AIZR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AIZR_RIMR_Glutamate
        print("Adding projection: NC_AIZR_RIMR_Glutamate, from AIZR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_AIZR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AIZR_SMBDR_Glutamate
        print("Adding projection: NC_AIZR_SMBDR_Glutamate, from AIZR to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_SMBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_SMBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 5.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_AIZR_SMBDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_SMBDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AIZR_SMBVR_Glutamate
        print("Adding projection: NC_AIZR_SMBVR_Glutamate, from AIZR to SMBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 3.0, delay 0.0
        h("a_SMBVR[0].Soma syn_NC_AIZR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_SMBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AIZR_SMDDR_Glutamate
        print("Adding projection: NC_AIZR_SMDDR_Glutamate, from AIZR to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AIZR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AIZR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_AIZR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AIZR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AIZR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALA_ADEL_Glutamate
        print("Adding projection: NC_ALA_ADEL_Glutamate, from ALA to ADEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALA_ADEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALA_ADEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADEL[0].Soma syn_NC_ALA_ADEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALA[0].Soma a_ADEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALA_ADEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALA_AVAL_Glutamate
        print("Adding projection: NC_ALA_AVAL_Glutamate, from ALA to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALA_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALA_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_ALA_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALA[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALA_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALA_AVEL_Glutamate
        print("Adding projection: NC_ALA_AVEL_Glutamate, from ALA to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALA_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALA_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_ALA_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALA[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALA_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ALA_AVER_Glutamate
        print("Adding projection: NC_ALA_AVER_Glutamate, from ALA to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALA_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALA_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_ALA_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALA[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALA_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALA_RMDR_Glutamate
        print("Adding projection: NC_ALA_RMDR_Glutamate, from ALA to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALA_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALA_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_ALA_RMDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALA[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALA_RMDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALML_AVDR_Glutamate
        print("Adding projection: NC_ALML_AVDR_Glutamate, from ALML to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_ALML_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALML_AVEL_Glutamate
        print("Adding projection: NC_ALML_AVEL_Glutamate, from ALML to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_ALML_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALML_BDUL_Glutamate
        print("Adding projection: NC_ALML_BDUL_Glutamate, from ALML to BDUL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma], weight: 6.0, delay 0.0
        h("a_BDUL[0].Soma syn_NC_ALML_BDUL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_BDUL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_BDUL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_ALML_CEPDL_Glutamate
        print("Adding projection: NC_ALML_CEPDL_Glutamate, from ALML to CEPDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_CEPDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_CEPDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 3.0, delay 0.0
        h("a_CEPDL[0].Soma syn_NC_ALML_CEPDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_CEPDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_CEPDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ALML_CEPVL_Glutamate
        print("Adding projection: NC_ALML_CEPVL_Glutamate, from ALML to CEPVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_CEPVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_CEPVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 2.0, delay 0.0
        h("a_CEPVL[0].Soma syn_NC_ALML_CEPVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_CEPVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_CEPVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ALML_PVCL_Glutamate
        print("Adding projection: NC_ALML_PVCL_Glutamate, from ALML to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_ALML_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ALML_PVCR_Glutamate
        print("Adding projection: NC_ALML_PVCR_Glutamate, from ALML to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_ALML_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALML_RMDDR_Glutamate
        print("Adding projection: NC_ALML_RMDDR_Glutamate, from ALML to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_ALML_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALML_RMGL_Glutamate
        print("Adding projection: NC_ALML_RMGL_Glutamate, from ALML to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_ALML_RMGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_RMGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALML_SDQL_Glutamate
        print("Adding projection: NC_ALML_SDQL_Glutamate, from ALML to SDQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALML_SDQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALML_SDQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma], weight: 1.0, delay 0.0
        h("a_SDQL[0].Soma syn_NC_ALML_SDQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALML[0].Soma a_SDQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALML_SDQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALMR_BDUR_Glutamate
        print("Adding projection: NC_ALMR_BDUR_Glutamate, from ALMR to BDUR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALMR_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALMR_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma], weight: 5.0, delay 0.0
        h("a_BDUR[0].Soma syn_NC_ALMR_BDUR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALMR[0].Soma a_BDUR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALMR_BDUR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ALMR_CEPDR_Glutamate
        print("Adding projection: NC_ALMR_CEPDR_Glutamate, from ALMR to CEPDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALMR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALMR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_ALMR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALMR[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALMR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALMR_CEPVR_Glutamate
        print("Adding projection: NC_ALMR_CEPVR_Glutamate, from ALMR to CEPVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALMR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALMR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVR[0].Soma syn_NC_ALMR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALMR[0].Soma a_CEPVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALMR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALMR_PVCR_Glutamate
        print("Adding projection: NC_ALMR_PVCR_Glutamate, from ALMR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALMR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALMR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_ALMR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALMR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALMR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ALMR_RMDDL_Glutamate
        print("Adding projection: NC_ALMR_RMDDL_Glutamate, from ALMR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALMR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALMR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_ALMR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALMR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALMR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALMR_SIADL_Glutamate
        print("Adding projection: NC_ALMR_SIADL_Glutamate, from ALMR to SIADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALMR_SIADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALMR_SIADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIADL[0].Soma syn_NC_ALMR_SIADL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALMR[0].Soma a_SIADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALMR_SIADL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALNL_SAAVL_Acetylcholine
        print("Adding projection: NC_ALNL_SAAVL_Acetylcholine, from ALNL to SAAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNL_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNL_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SAAVL[0].Soma syn_NC_ALNL_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNL[0].Soma a_SAAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNL_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ALNL_SMBDR_Acetylcholine
        print("Adding projection: NC_ALNL_SMBDR_Acetylcholine, from ALNL to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_ALNL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNL[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ALNL_SMDVL_Acetylcholine
        print("Adding projection: NC_ALNL_SMDVL_Acetylcholine, from ALNL to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNL_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNL_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_ALNL_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNL[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNL_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALNR_ADER_Acetylcholine
        print("Adding projection: NC_ALNR_ADER_Acetylcholine, from ALNR to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNR_ADER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNR_ADER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_ALNR_ADER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNR[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNR_ADER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALNR_RMHR_Acetylcholine
        print("Adding projection: NC_ALNR_RMHR_Acetylcholine, from ALNR to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_ALNR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNR[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALNR_SAAVR_Acetylcholine
        print("Adding projection: NC_ALNR_SAAVR_Acetylcholine, from ALNR to SAAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNR_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNR_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SAAVR[0].Soma syn_NC_ALNR_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNR[0].Soma a_SAAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNR_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ALNR_SMBDL_Acetylcholine
        print("Adding projection: NC_ALNR_SMBDL_Acetylcholine, from ALNR to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_ALNR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNR[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ALNR_SMDDR_Acetylcholine
        print("Adding projection: NC_ALNR_SMDDR_Acetylcholine, from ALNR to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNR_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNR_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_ALNR_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNR_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ALNR_SMDVL_Acetylcholine
        print("Adding projection: NC_ALNR_SMDVL_Acetylcholine, from ALNR to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ALNR_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ALNR_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_ALNR_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ALNR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ALNR_SMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_AVAL_Glutamate
        print("Adding projection: NC_AQR_AVAL_Glutamate, from AQR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_AVAR_Glutamate
        print("Adding projection: NC_AQR_AVAR_Glutamate, from AQR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AQR_AVBL_Glutamate
        print("Adding projection: NC_AQR_AVBL_Glutamate, from AQR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AQR_AVBR_Glutamate
        print("Adding projection: NC_AQR_AVBR_Glutamate, from AQR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AQR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AQR_AVDL_Glutamate
        print("Adding projection: NC_AQR_AVDL_Glutamate, from AQR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_AVDR_Glutamate
        print("Adding projection: NC_AQR_AVDR_Glutamate, from AQR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_AVJL_Glutamate
        print("Adding projection: NC_AQR_AVJL_Glutamate, from AQR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AQR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_BAGL_Glutamate
        print("Adding projection: NC_AQR_BAGL_Glutamate, from AQR to BAGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_BAGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_BAGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma], weight: 2.0, delay 0.0
        h("a_BAGL[0].Soma syn_NC_AQR_BAGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_BAGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_BAGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AQR_BAGR_Glutamate
        print("Adding projection: NC_AQR_BAGR_Glutamate, from AQR to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 2.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_AQR_BAGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_BAGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AQR_PVCR_Glutamate
        print("Adding projection: NC_AQR_PVCR_Glutamate, from AQR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AQR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AQR_PVPL_Glutamate
        print("Adding projection: NC_AQR_PVPL_Glutamate, from AQR to PVPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_PVPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_PVPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPL[0].Soma syn_NC_AQR_PVPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_PVPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_PVPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_RIAL_Glutamate
        print("Adding projection: NC_AQR_RIAL_Glutamate, from AQR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AQR_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AQR_RIAR_Glutamate
        print("Adding projection: NC_AQR_RIAR_Glutamate, from AQR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_AQR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AQR_URXL_Glutamate
        print("Adding projection: NC_AQR_URXL_Glutamate, from AQR to URXL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AQR_URXL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AQR_URXL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma], weight: 1.0, delay 0.0
        h("a_URXL[0].Soma syn_NC_AQR_URXL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AQR[0].Soma a_URXL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AQR_URXL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS1_DA1_Acetylcholine
        print("Adding projection: NC_AS1_DA1_Acetylcholine, from AS1 to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS1_DA1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS1_DA1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 2.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AS1_DA1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS1[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS1_DA1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AS1_VD1_Acetylcholine
        print("Adding projection: NC_AS1_VD1_Acetylcholine, from AS1 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 5.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_AS1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS1[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AS11_PDA_Acetylcholine
        print("Adding projection: NC_AS11_PDA_Acetylcholine, from AS11 to PDA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS11_PDA_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS11_PDA_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma], weight: 1.0, delay 0.0
        h("a_PDA[0].Soma syn_NC_AS11_PDA_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS11[0].Soma a_PDA[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS11_PDA_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS11_PDB_Acetylcholine
        print("Adding projection: NC_AS11_PDB_Acetylcholine, from AS11 to PDB with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS11_PDB_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS11_PDB_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDB[0].Soma], weight: 1.0, delay 0.0
        h("a_PDB[0].Soma syn_NC_AS11_PDB_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS11[0].Soma a_PDB[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS11_PDB_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS11_VD13_Acetylcholine
        print("Adding projection: NC_AS11_VD13_Acetylcholine, from AS11 to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS11_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS11_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 2.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_AS11_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS11[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS11_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AS2_DB1_Acetylcholine
        print("Adding projection: NC_AS2_DB1_Acetylcholine, from AS2 to DB1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS2_DB1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS2_DB1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0, delay 0.0
        h("a_DB1[0].Soma syn_NC_AS2_DB1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS2[0].Soma a_DB1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS2_DB1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS2_DD1_Acetylcholine
        print("Adding projection: NC_AS2_DD1_Acetylcholine, from AS2 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_AS2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS2[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS2_VD2_Acetylcholine
        print("Adding projection: NC_AS2_VD2_Acetylcholine, from AS2 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 10.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_AS2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS2[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_AS3_DA3_Acetylcholine
        print("Adding projection: NC_AS3_DA3_Acetylcholine, from AS3 to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS3_DA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS3_DA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 1.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AS3_DA3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS3[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS3_DA3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS3_DD1_Acetylcholine
        print("Adding projection: NC_AS3_DD1_Acetylcholine, from AS3 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_AS3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS3[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS3_VD2_Acetylcholine
        print("Adding projection: NC_AS3_VD2_Acetylcholine, from AS3 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_AS3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS3[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS3_VD3_Acetylcholine
        print("Adding projection: NC_AS3_VD3_Acetylcholine, from AS3 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 15.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_AS3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS3[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_AS4_AS5_Acetylcholine
        print("Adding projection: NC_AS4_AS5_Acetylcholine, from AS4 to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS4_AS5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS4_AS5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AS4_AS5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS4[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS4_AS5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS4_VD4_Acetylcholine
        print("Adding projection: NC_AS4_VD4_Acetylcholine, from AS4 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 11.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_AS4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS4[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_AS5_DD2_Acetylcholine
        print("Adding projection: NC_AS5_DD2_Acetylcholine, from AS5 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 1.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_AS5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS5[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AS5_VD5_Acetylcholine
        print("Adding projection: NC_AS5_VD5_Acetylcholine, from AS5 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 9.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_AS5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS5[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AS6_VD6_Acetylcholine
        print("Adding projection: NC_AS6_VD6_Acetylcholine, from AS6 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 13.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_AS6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS6[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_AS9_AVAR_Acetylcholine
        print("Adding projection: NC_AS9_AVAR_Acetylcholine, from AS9 to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AS9_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AS9_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AS9_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AS9[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AS9_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASEL_ADFR_FMRFamide
        print("Adding projection: NC_ASEL_ADFR_FMRFamide, from ASEL to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_ADFR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_ADFR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_ASEL_ADFR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_ADFR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASEL_AIAL_FMRFamide
        print("Adding projection: NC_ASEL_AIAL_FMRFamide, from ASEL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ASEL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AIAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASEL_AIBL_FMRFamide
        print("Adding projection: NC_ASEL_AIBL_FMRFamide, from ASEL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 7.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ASEL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AIBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_ASEL_AIBR_FMRFamide
        print("Adding projection: NC_ASEL_AIBR_FMRFamide, from ASEL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ASEL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASEL_AIYL_FMRFamide
        print("Adding projection: NC_ASEL_AIYL_FMRFamide, from ASEL to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AIYL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AIYL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 13.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_ASEL_AIYL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AIYL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_ASEL_AIYR_FMRFamide
        print("Adding projection: NC_ASEL_AIYR_FMRFamide, from ASEL to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AIYR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AIYR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 6.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_ASEL_AIYR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AIYR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_ASEL_AWCL_FMRFamide
        print("Adding projection: NC_ASEL_AWCL_FMRFamide, from ASEL to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AWCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AWCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 4.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_ASEL_AWCL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AWCL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ASEL_AWCR_FMRFamide
        print("Adding projection: NC_ASEL_AWCR_FMRFamide, from ASEL to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_AWCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_AWCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_ASEL_AWCR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_AWCR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASEL_RIAR_FMRFamide
        print("Adding projection: NC_ASEL_RIAR_FMRFamide, from ASEL to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASEL_RIAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASEL_RIAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_ASEL_RIAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASEL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASEL_RIAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASER_AFDL_FMRFamide
        print("Adding projection: NC_ASER_AFDL_FMRFamide, from ASER to AFDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AFDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AFDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AFDL[0].Soma syn_NC_ASER_AFDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AFDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AFDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASER_AFDR_FMRFamide
        print("Adding projection: NC_ASER_AFDR_FMRFamide, from ASER to AFDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AFDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AFDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AFDR[0].Soma syn_NC_ASER_AFDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AFDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AFDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASER_AIAL_FMRFamide
        print("Adding projection: NC_ASER_AIAL_FMRFamide, from ASER to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AIAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AIAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ASER_AIAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AIAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASER_AIAR_FMRFamide
        print("Adding projection: NC_ASER_AIAR_FMRFamide, from ASER to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AIAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AIAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_ASER_AIAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AIAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASER_AIBL_FMRFamide
        print("Adding projection: NC_ASER_AIBL_FMRFamide, from ASER to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ASER_AIBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AIBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASER_AIBR_FMRFamide
        print("Adding projection: NC_ASER_AIBR_FMRFamide, from ASER to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 10.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ASER_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_ASER_AIYL_FMRFamide
        print("Adding projection: NC_ASER_AIYL_FMRFamide, from ASER to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AIYL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AIYL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_ASER_AIYL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AIYL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASER_AIYR_FMRFamide
        print("Adding projection: NC_ASER_AIYR_FMRFamide, from ASER to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AIYR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AIYR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 14.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_ASER_AIYR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AIYR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 14.0))") # *->cell

        # ######################   Projection: NC_ASER_AWAR_FMRFamide
        print("Adding projection: NC_ASER_AWAR_FMRFamide, from ASER to AWAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AWAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AWAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWAR[0].Soma syn_NC_ASER_AWAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AWAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AWAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASER_AWCL_FMRFamide
        print("Adding projection: NC_ASER_AWCL_FMRFamide, from ASER to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AWCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AWCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_ASER_AWCL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AWCL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASER_AWCR_FMRFamide
        print("Adding projection: NC_ASER_AWCR_FMRFamide, from ASER to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASER_AWCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASER_AWCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_ASER_AWCR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASER[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASER_AWCR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASGL_AIAL_Glutamate
        print("Adding projection: NC_ASGL_AIAL_Glutamate, from ASGL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 9.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ASGL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_ASGL_AIBL_Glutamate
        print("Adding projection: NC_ASGL_AIBL_Glutamate, from ASGL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 3.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ASGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASGL_AINR_Glutamate
        print("Adding projection: NC_ASGL_AINR_Glutamate, from ASGL to AINR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGL_AINR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGL_AINR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma], weight: 1.0, delay 0.0
        h("a_AINR[0].Soma syn_NC_ASGL_AINR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGL[0].Soma a_AINR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGL_AINR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASGL_ASKL_Glutamate
        print("Adding projection: NC_ASGL_ASKL_Glutamate, from ASGL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_ASGL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASGR_AIAR_Glutamate
        print("Adding projection: NC_ASGR_AIAR_Glutamate, from ASGR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 10.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_ASGR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_ASGR_AIBR_Glutamate
        print("Adding projection: NC_ASGR_AIBR_Glutamate, from ASGR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ASGR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASGR_AIYR_Glutamate
        print("Adding projection: NC_ASGR_AIYR_Glutamate, from ASGR to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASGR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASGR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_ASGR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASGR[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASGR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHL_ADAL_Glutamate
        print("Adding projection: NC_ASHL_ADAL_Glutamate, from ASHL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_ADAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_ADAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_ASHL_ADAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_ADAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHL_ADFL_Glutamate
        print("Adding projection: NC_ASHL_ADFL_Glutamate, from ASHL to ADFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_ADFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_ADFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma], weight: 3.0, delay 0.0
        h("a_ADFL[0].Soma syn_NC_ASHL_ADFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_ADFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_ADFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASHL_AIAL_Glutamate
        print("Adding projection: NC_ASHL_AIAL_Glutamate, from ASHL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 7.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ASHL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_ASHL_AIBL_Glutamate
        print("Adding projection: NC_ASHL_AIBL_Glutamate, from ASHL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 5.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ASHL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ASHL_ASKL_Glutamate
        print("Adding projection: NC_ASHL_ASKL_Glutamate, from ASHL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_ASHL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHL_AVAL_Glutamate
        print("Adding projection: NC_ASHL_AVAL_Glutamate, from ASHL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_ASHL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASHL_AVBL_Glutamate
        print("Adding projection: NC_ASHL_AVBL_Glutamate, from ASHL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_ASHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_ASHL_AVDL_Glutamate
        print("Adding projection: NC_ASHL_AVDL_Glutamate, from ASHL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_ASHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASHL_AVDR_Glutamate
        print("Adding projection: NC_ASHL_AVDR_Glutamate, from ASHL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_ASHL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASHL_RIAL_Glutamate
        print("Adding projection: NC_ASHL_RIAL_Glutamate, from ASHL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_ASHL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ASHL_RIML_Glutamate
        print("Adding projection: NC_ASHL_RIML_Glutamate, from ASHL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 1.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_ASHL_RIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_RIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHL_RIPL_Glutamate
        print("Adding projection: NC_ASHL_RIPL_Glutamate, from ASHL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_ASHL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHR_ADAR_Glutamate
        print("Adding projection: NC_ASHR_ADAR_Glutamate, from ASHR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_ADAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_ADAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 2.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_ASHR_ADAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_ADAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASHR_ADFR_Glutamate
        print("Adding projection: NC_ASHR_ADFR_Glutamate, from ASHR to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 2.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_ASHR_ADFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_ADFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASHR_AIAR_Glutamate
        print("Adding projection: NC_ASHR_AIAR_Glutamate, from ASHR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 10.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_ASHR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_ASHR_AIBR_Glutamate
        print("Adding projection: NC_ASHR_AIBR_Glutamate, from ASHR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 3.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ASHR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASHR_AVAR_Glutamate
        print("Adding projection: NC_ASHR_AVAR_Glutamate, from ASHR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_ASHR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ASHR_AVBR_Glutamate
        print("Adding projection: NC_ASHR_AVBR_Glutamate, from ASHR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_ASHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASHR_AVDL_Glutamate
        print("Adding projection: NC_ASHR_AVDL_Glutamate, from ASHR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_ASHR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_ASHR_AVDR_Glutamate
        print("Adding projection: NC_ASHR_AVDR_Glutamate, from ASHR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_ASHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHR_AVER_Glutamate
        print("Adding projection: NC_ASHR_AVER_Glutamate, from ASHR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 3.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_ASHR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASHR_HSNR_Glutamate
        print("Adding projection: NC_ASHR_HSNR_Glutamate, from ASHR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_ASHR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHR_PVPR_Glutamate
        print("Adding projection: NC_ASHR_PVPR_Glutamate, from ASHR to PVPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_ASHR_PVPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_PVPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASHR_RIAR_Glutamate
        print("Adding projection: NC_ASHR_RIAR_Glutamate, from ASHR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_ASHR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASHR_RMGR_Glutamate
        print("Adding projection: NC_ASHR_RMGR_Glutamate, from ASHR to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASHR_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASHR_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_ASHR_RMGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASHR[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASHR_RMGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASIL_AIBL_Glutamate
        print("Adding projection: NC_ASIL_AIBL_Glutamate, from ASIL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ASIL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIL_AIYL_Glutamate
        print("Adding projection: NC_ASIL_AIYL_Glutamate, from ASIL to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_ASIL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASIL_AIZL_Glutamate
        print("Adding projection: NC_ASIL_AIZL_Glutamate, from ASIL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_AIZL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_AIZL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_ASIL_AIZL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_AIZL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIL_ASER_Glutamate
        print("Adding projection: NC_ASIL_ASER_Glutamate, from ASIL to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_ASIL_ASER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_ASER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIL_ASKL_Glutamate
        print("Adding projection: NC_ASIL_ASKL_Glutamate, from ASIL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 2.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_ASIL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASIL_AWCL_Glutamate
        print("Adding projection: NC_ASIL_AWCL_Glutamate, from ASIL to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_AWCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_AWCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_ASIL_AWCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_AWCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIL_AWCR_Glutamate
        print("Adding projection: NC_ASIL_AWCR_Glutamate, from ASIL to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_AWCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_AWCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_ASIL_AWCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_AWCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIL_RIBL_Glutamate
        print("Adding projection: NC_ASIL_RIBL_Glutamate, from ASIL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_ASIL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIR_AIAL_Glutamate
        print("Adding projection: NC_ASIR_AIAL_Glutamate, from ASIR to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ASIR_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIR_AIAR_Glutamate
        print("Adding projection: NC_ASIR_AIAR_Glutamate, from ASIR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_ASIR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_ASIR_AIBR_Glutamate
        print("Adding projection: NC_ASIR_AIBR_Glutamate, from ASIR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_ASIR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIR_ASEL_Glutamate
        print("Adding projection: NC_ASIR_ASEL_Glutamate, from ASIR to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 2.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_ASIR_ASEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_ASEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASIR_ASHR_Glutamate
        print("Adding projection: NC_ASIR_ASHR_Glutamate, from ASIR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_ASIR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIR_AWCL_Glutamate
        print("Adding projection: NC_ASIR_AWCL_Glutamate, from ASIR to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_AWCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_AWCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_ASIR_AWCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_AWCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASIR_AWCR_Glutamate
        print("Adding projection: NC_ASIR_AWCR_Glutamate, from ASIR to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASIR_AWCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASIR_AWCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_ASIR_AWCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASIR[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASIR_AWCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASJL_ASKL_Glutamate
        print("Adding projection: NC_ASJL_ASKL_Glutamate, from ASJL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 4.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_ASJL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ASJL_HSNL_Glutamate
        print("Adding projection: NC_ASJL_HSNL_Glutamate, from ASJL to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJL_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJL_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_ASJL_HSNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJL[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJL_HSNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASJL_HSNR_Glutamate
        print("Adding projection: NC_ASJL_HSNR_Glutamate, from ASJL to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_ASJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJL[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASJL_PVQL_Glutamate
        print("Adding projection: NC_ASJL_PVQL_Glutamate, from ASJL to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 14.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_ASJL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJL[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 14.0))") # *->cell

        # ######################   Projection: NC_ASJR_ASKR_Glutamate
        print("Adding projection: NC_ASJR_ASKR_Glutamate, from ASJR to ASKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJR_ASKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJR_ASKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 4.0, delay 0.0
        h("a_ASKR[0].Soma syn_NC_ASJR_ASKR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJR[0].Soma a_ASKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJR_ASKR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_ASJR_HSNR_Glutamate
        print("Adding projection: NC_ASJR_HSNR_Glutamate, from ASJR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_ASJR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASJR_PVQR_Glutamate
        print("Adding projection: NC_ASJR_PVQR_Glutamate, from ASJR to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 13.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_ASJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASJR[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_ASKL_AIAL_Glutamate
        print("Adding projection: NC_ASKL_AIAL_Glutamate, from ASKL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 11.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_ASKL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_ASKL_AIBL_Glutamate
        print("Adding projection: NC_ASKL_AIBL_Glutamate, from ASKL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_ASKL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASKL_AIML_Glutamate
        print("Adding projection: NC_ASKL_AIML_Glutamate, from ASKL to AIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKL_AIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKL_AIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma], weight: 2.0, delay 0.0
        h("a_AIML[0].Soma syn_NC_ASKL_AIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKL[0].Soma a_AIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKL_AIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_ASKR_AIAR_Glutamate
        print("Adding projection: NC_ASKR_AIAR_Glutamate, from ASKR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 11.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_ASKR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_ASKR_AIMR_Glutamate
        print("Adding projection: NC_ASKR_AIMR_Glutamate, from ASKR to AIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKR_AIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKR_AIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIMR[0].Soma syn_NC_ASKR_AIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKR[0].Soma a_AIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKR_AIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASKR_AWAR_Glutamate
        print("Adding projection: NC_ASKR_AWAR_Glutamate, from ASKR to AWAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKR_AWAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKR_AWAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWAR[0].Soma syn_NC_ASKR_AWAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKR[0].Soma a_AWAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKR_AWAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASKR_CEPVR_Glutamate
        print("Adding projection: NC_ASKR_CEPVR_Glutamate, from ASKR to CEPVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVR[0].Soma syn_NC_ASKR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKR[0].Soma a_CEPVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_ASKR_RIFR_Glutamate
        print("Adding projection: NC_ASKR_RIFR_Glutamate, from ASKR to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_ASKR_RIFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_ASKR_RIFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_ASKR_RIFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_ASKR[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_ASKR_RIFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AUAL_AVAL_Glutamate
        print("Adding projection: NC_AUAL_AVAL_Glutamate, from AUAL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AUAL_AVDR_Glutamate
        print("Adding projection: NC_AUAL_AVDR_Glutamate, from AUAL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AUAL_AVEL_Glutamate
        print("Adding projection: NC_AUAL_AVEL_Glutamate, from AUAL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AUAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AUAL_RIAL_Glutamate
        print("Adding projection: NC_AUAL_RIAL_Glutamate, from AUAL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AUAL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AUAL_RIBL_Glutamate
        print("Adding projection: NC_AUAL_RIBL_Glutamate, from AUAL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 9.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_AUAL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AUAR_AIYR_Glutamate
        print("Adding projection: NC_AUAR_AIYR_Glutamate, from AUAR to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_AUAR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAR[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AUAR_AVAR_Glutamate
        print("Adding projection: NC_AUAR_AVAR_Glutamate, from AUAR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AUAR_AVER_Glutamate
        print("Adding projection: NC_AUAR_AVER_Glutamate, from AUAR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 4.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AUAR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AUAR_RIAR_Glutamate
        print("Adding projection: NC_AUAR_RIAR_Glutamate, from AUAR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 6.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_AUAR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AUAR_RIBR_Glutamate
        print("Adding projection: NC_AUAR_RIBR_Glutamate, from AUAR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 13.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_AUAR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_AUAR_URXR_Glutamate
        print("Adding projection: NC_AUAR_URXR_Glutamate, from AUAR to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AUAR_URXR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AUAR_URXR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_AUAR_URXR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AUAR[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AUAR_URXR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS10_FMRFamide
        print("Adding projection: NC_AVAL_AS10_FMRFamide, from AVAL to AS10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 2.0, delay 0.0
        h("a_AS10[0].Soma syn_NC_AVAL_AS10_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS10_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS11_FMRFamide
        print("Adding projection: NC_AVAL_AS11_FMRFamide, from AVAL to AS11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma], weight: 4.0, delay 0.0
        h("a_AS11[0].Soma syn_NC_AVAL_AS11_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS11_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS2_FMRFamide
        print("Adding projection: NC_AVAL_AS2_FMRFamide, from AVAL to AS2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 1.0, delay 0.0
        h("a_AS2[0].Soma syn_NC_AVAL_AS2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS3_FMRFamide
        print("Adding projection: NC_AVAL_AS3_FMRFamide, from AVAL to AS3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0, delay 0.0
        h("a_AS3[0].Soma syn_NC_AVAL_AS3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS4_FMRFamide
        print("Adding projection: NC_AVAL_AS4_FMRFamide, from AVAL to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_AVAL_AS4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS5_FMRFamide
        print("Adding projection: NC_AVAL_AS5_FMRFamide, from AVAL to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 3.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AVAL_AS5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS7_FMRFamide
        print("Adding projection: NC_AVAL_AS7_FMRFamide, from AVAL to AS7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 8.0, delay 0.0
        h("a_AS7[0].Soma syn_NC_AVAL_AS7_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS7[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS7_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS8_FMRFamide
        print("Adding projection: NC_AVAL_AS8_FMRFamide, from AVAL to AS8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS8[0].Soma], weight: 5.0, delay 0.0
        h("a_AS8[0].Soma syn_NC_AVAL_AS8_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS8_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVAL_AS9_FMRFamide
        print("Adding projection: NC_AVAL_AS9_FMRFamide, from AVAL to AS9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AS9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma], weight: 8.0, delay 0.0
        h("a_AS9[0].Soma syn_NC_AVAL_AS9_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AS9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AS9_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AVAL_AVAR_FMRFamide
        print("Adding projection: NC_AVAL_AVAR_FMRFamide, from AVAL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVAL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_AVBR_FMRFamide
        print("Adding projection: NC_AVAL_AVBR_FMRFamide, from AVAL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVAL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_AVDL_FMRFamide
        print("Adding projection: NC_AVAL_AVDL_FMRFamide, from AVAL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVAL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_AVHL_FMRFamide
        print("Adding projection: NC_AVAL_AVHL_FMRFamide, from AVAL to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_AVHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_AVHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_AVAL_AVHL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_AVHL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA1_FMRFamide
        print("Adding projection: NC_AVAL_DA1_FMRFamide, from AVAL to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 2.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVAL_DA1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA2_FMRFamide
        print("Adding projection: NC_AVAL_DA2_FMRFamide, from AVAL to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 2.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVAL_DA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA3_FMRFamide
        print("Adding projection: NC_AVAL_DA3_FMRFamide, from AVAL to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 6.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AVAL_DA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA4_FMRFamide
        print("Adding projection: NC_AVAL_DA4_FMRFamide, from AVAL to DA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 7.0, delay 0.0
        h("a_DA4[0].Soma syn_NC_AVAL_DA4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA5_FMRFamide
        print("Adding projection: NC_AVAL_DA5_FMRFamide, from AVAL to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 7.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_AVAL_DA5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA6_FMRFamide
        print("Adding projection: NC_AVAL_DA6_FMRFamide, from AVAL to DA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 11.0, delay 0.0
        h("a_DA6[0].Soma syn_NC_AVAL_DA6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA7_FMRFamide
        print("Adding projection: NC_AVAL_DA7_FMRFamide, from AVAL to DA7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA7[0].Soma], weight: 2.0, delay 0.0
        h("a_DA7[0].Soma syn_NC_AVAL_DA7_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA7[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA7_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA8_FMRFamide
        print("Adding projection: NC_AVAL_DA8_FMRFamide, from AVAL to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 4.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_AVAL_DA8_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA8_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVAL_DA9_FMRFamide
        print("Adding projection: NC_AVAL_DA9_FMRFamide, from AVAL to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 3.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_AVAL_DA9_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DA9_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAL_DB5_FMRFamide
        print("Adding projection: NC_AVAL_DB5_FMRFamide, from AVAL to DB5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DB5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DB5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 2.0, delay 0.0
        h("a_DB5[0].Soma syn_NC_AVAL_DB5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DB5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_DB6_FMRFamide
        print("Adding projection: NC_AVAL_DB6_FMRFamide, from AVAL to DB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_DB6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_DB6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 1.0, delay 0.0
        h("a_DB6[0].Soma syn_NC_AVAL_DB6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_DB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_DB6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_LUAL_FMRFamide
        print("Adding projection: NC_AVAL_LUAL_FMRFamide, from AVAL to LUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_LUAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_LUAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAL[0].Soma syn_NC_AVAL_LUAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_LUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_LUAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_PVCL_FMRFamide
        print("Adding projection: NC_AVAL_PVCL_FMRFamide, from AVAL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_PVCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_PVCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 10.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVAL_PVCL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_PVCL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_AVAL_PVCR_FMRFamide
        print("Adding projection: NC_AVAL_PVCR_FMRFamide, from AVAL to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 6.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AVAL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA10_FMRFamide
        print("Adding projection: NC_AVAL_VA10_FMRFamide, from AVAL to VA10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma], weight: 5.0, delay 0.0
        h("a_VA10[0].Soma syn_NC_AVAL_VA10_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA10_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA11_FMRFamide
        print("Adding projection: NC_AVAL_VA11_FMRFamide, from AVAL to VA11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 6.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_AVAL_VA11_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA11_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA12_FMRFamide
        print("Adding projection: NC_AVAL_VA12_FMRFamide, from AVAL to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA12_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA12_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 2.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_AVAL_VA12_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA12_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA2_FMRFamide
        print("Adding projection: NC_AVAL_VA2_FMRFamide, from AVAL to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_AVAL_VA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA3_FMRFamide
        print("Adding projection: NC_AVAL_VA3_FMRFamide, from AVAL to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_AVAL_VA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA4_FMRFamide
        print("Adding projection: NC_AVAL_VA4_FMRFamide, from AVAL to VA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 2.0, delay 0.0
        h("a_VA4[0].Soma syn_NC_AVAL_VA4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA5_FMRFamide
        print("Adding projection: NC_AVAL_VA5_FMRFamide, from AVAL to VA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 3.0, delay 0.0
        h("a_VA5[0].Soma syn_NC_AVAL_VA5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA6_FMRFamide
        print("Adding projection: NC_AVAL_VA6_FMRFamide, from AVAL to VA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 4.0, delay 0.0
        h("a_VA6[0].Soma syn_NC_AVAL_VA6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA8_FMRFamide
        print("Adding projection: NC_AVAL_VA8_FMRFamide, from AVAL to VA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 9.0, delay 0.0
        h("a_VA8[0].Soma syn_NC_AVAL_VA8_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA8_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AVAL_VA9_FMRFamide
        print("Adding projection: NC_AVAL_VA9_FMRFamide, from AVAL to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAL_VA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 7.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_AVAL_VA9_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAL[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAL_VA9_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVAR_ADER_FMRFamide
        print("Adding projection: NC_AVAR_ADER_FMRFamide, from AVAR to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_ADER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_ADER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_AVAR_ADER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_ADER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS1_FMRFamide
        print("Adding projection: NC_AVAR_AS1_FMRFamide, from AVAR to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_AVAR_AS1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS10_FMRFamide
        print("Adding projection: NC_AVAR_AS10_FMRFamide, from AVAR to AS10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0, delay 0.0
        h("a_AS10[0].Soma syn_NC_AVAR_AS10_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS10_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS11_FMRFamide
        print("Adding projection: NC_AVAR_AS11_FMRFamide, from AVAR to AS11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma], weight: 6.0, delay 0.0
        h("a_AS11[0].Soma syn_NC_AVAR_AS11_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS11_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS2_FMRFamide
        print("Adding projection: NC_AVAR_AS2_FMRFamide, from AVAR to AS2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 2.0, delay 0.0
        h("a_AS2[0].Soma syn_NC_AVAR_AS2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS3_FMRFamide
        print("Adding projection: NC_AVAR_AS3_FMRFamide, from AVAR to AS3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0, delay 0.0
        h("a_AS3[0].Soma syn_NC_AVAR_AS3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS4_FMRFamide
        print("Adding projection: NC_AVAR_AS4_FMRFamide, from AVAR to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_AVAR_AS4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS5_FMRFamide
        print("Adding projection: NC_AVAR_AS5_FMRFamide, from AVAR to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AVAR_AS5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS6_FMRFamide
        print("Adding projection: NC_AVAR_AS6_FMRFamide, from AVAR to AS6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 2.0, delay 0.0
        h("a_AS6[0].Soma syn_NC_AVAR_AS6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS7_FMRFamide
        print("Adding projection: NC_AVAR_AS7_FMRFamide, from AVAR to AS7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 3.0, delay 0.0
        h("a_AS7[0].Soma syn_NC_AVAR_AS7_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS7[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS7_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS8_FMRFamide
        print("Adding projection: NC_AVAR_AS8_FMRFamide, from AVAR to AS8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS8[0].Soma], weight: 6.0, delay 0.0
        h("a_AS8[0].Soma syn_NC_AVAR_AS8_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS8_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAR_AS9_FMRFamide
        print("Adding projection: NC_AVAR_AS9_FMRFamide, from AVAR to AS9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AS9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma], weight: 5.0, delay 0.0
        h("a_AS9[0].Soma syn_NC_AVAR_AS9_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AS9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AS9_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVAR_AVAL_FMRFamide
        print("Adding projection: NC_AVAR_AVAL_FMRFamide, from AVAR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVAR_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AVBL_FMRFamide
        print("Adding projection: NC_AVAR_AVBL_FMRFamide, from AVAR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVAR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AVDL_FMRFamide
        print("Adding projection: NC_AVAR_AVDL_FMRFamide, from AVAR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVAR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_AVDR_FMRFamide
        print("Adding projection: NC_AVAR_AVDR_FMRFamide, from AVAR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AVAR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_AVEL_FMRFamide
        print("Adding projection: NC_AVAR_AVEL_FMRFamide, from AVAR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AVAR_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_AVER_FMRFamide
        print("Adding projection: NC_AVAR_AVER_FMRFamide, from AVAR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AVAR_AVER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_AVER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA1_FMRFamide
        print("Adding projection: NC_AVAR_DA1_FMRFamide, from AVAR to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 2.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVAR_DA1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA2_FMRFamide
        print("Adding projection: NC_AVAR_DA2_FMRFamide, from AVAR to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 2.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVAR_DA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA3_FMRFamide
        print("Adding projection: NC_AVAR_DA3_FMRFamide, from AVAR to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 3.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AVAR_DA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA4_FMRFamide
        print("Adding projection: NC_AVAR_DA4_FMRFamide, from AVAR to DA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 6.0, delay 0.0
        h("a_DA4[0].Soma syn_NC_AVAR_DA4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA5_FMRFamide
        print("Adding projection: NC_AVAR_DA5_FMRFamide, from AVAR to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 2.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_AVAR_DA5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA6_FMRFamide
        print("Adding projection: NC_AVAR_DA6_FMRFamide, from AVAR to DA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 11.0, delay 0.0
        h("a_DA6[0].Soma syn_NC_AVAR_DA6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA7_FMRFamide
        print("Adding projection: NC_AVAR_DA7_FMRFamide, from AVAR to DA7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA7_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA7[0].Soma], weight: 3.0, delay 0.0
        h("a_DA7[0].Soma syn_NC_AVAR_DA7_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA7[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA7_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA8_FMRFamide
        print("Adding projection: NC_AVAR_DA8_FMRFamide, from AVAR to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 8.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_AVAR_DA8_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA8_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AVAR_DA9_FMRFamide
        print("Adding projection: NC_AVAR_DA9_FMRFamide, from AVAR to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 2.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_AVAR_DA9_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DA9_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_DB3_FMRFamide
        print("Adding projection: NC_AVAR_DB3_FMRFamide, from AVAR to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DB3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DB3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_AVAR_DB3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DB3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_DB5_FMRFamide
        print("Adding projection: NC_AVAR_DB5_FMRFamide, from AVAR to DB5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DB5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DB5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 1.0, delay 0.0
        h("a_DB5[0].Soma syn_NC_AVAR_DB5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DB5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_DB6_FMRFamide
        print("Adding projection: NC_AVAR_DB6_FMRFamide, from AVAR to DB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_DB6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_DB6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 5.0, delay 0.0
        h("a_DB6[0].Soma syn_NC_AVAR_DB6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_DB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_DB6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVAR_LUAL_FMRFamide
        print("Adding projection: NC_AVAR_LUAL_FMRFamide, from AVAR to LUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_LUAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_LUAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAL[0].Soma syn_NC_AVAR_LUAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_LUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_LUAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_LUAR_FMRFamide
        print("Adding projection: NC_AVAR_LUAR_FMRFamide, from AVAR to LUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_LUAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_LUAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma], weight: 3.0, delay 0.0
        h("a_LUAR[0].Soma syn_NC_AVAR_LUAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_LUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_LUAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAR_PDEL_FMRFamide
        print("Adding projection: NC_AVAR_PDEL_FMRFamide, from AVAR to PDEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_PDEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_PDEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 1.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_AVAR_PDEL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_PDEL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_PDER_FMRFamide
        print("Adding projection: NC_AVAR_PDER_FMRFamide, from AVAR to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_PDER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_PDER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_AVAR_PDER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_PDER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_PVCL_FMRFamide
        print("Adding projection: NC_AVAR_PVCL_FMRFamide, from AVAR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 7.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVAR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_PVCL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVAR_PVCR_FMRFamide
        print("Adding projection: NC_AVAR_PVCR_FMRFamide, from AVAR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_PVCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_PVCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 5.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AVAR_PVCR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_PVCR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVAR_RIGL_FMRFamide
        print("Adding projection: NC_AVAR_RIGL_FMRFamide, from AVAR to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_RIGL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_RIGL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_AVAR_RIGL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_RIGL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_SABD_FMRFamide
        print("Adding projection: NC_AVAR_SABD_FMRFamide, from AVAR to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_SABD_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_SABD_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_AVAR_SABD_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_SABD_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_SABVL_FMRFamide
        print("Adding projection: NC_AVAR_SABVL_FMRFamide, from AVAR to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_SABVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_SABVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVAR_SABVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_SABVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA10_FMRFamide
        print("Adding projection: NC_AVAR_VA10_FMRFamide, from AVAR to VA10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA10_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma], weight: 4.0, delay 0.0
        h("a_VA10[0].Soma syn_NC_AVAR_VA10_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA10_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA11_FMRFamide
        print("Adding projection: NC_AVAR_VA11_FMRFamide, from AVAR to VA11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA11_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 8.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_AVAR_VA11_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA11_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA2_FMRFamide
        print("Adding projection: NC_AVAR_VA2_FMRFamide, from AVAR to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 2.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_AVAR_VA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA3_FMRFamide
        print("Adding projection: NC_AVAR_VA3_FMRFamide, from AVAR to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 5.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_AVAR_VA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA4_FMRFamide
        print("Adding projection: NC_AVAR_VA4_FMRFamide, from AVAR to VA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 2.0, delay 0.0
        h("a_VA4[0].Soma syn_NC_AVAR_VA4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA5_FMRFamide
        print("Adding projection: NC_AVAR_VA5_FMRFamide, from AVAR to VA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 1.0, delay 0.0
        h("a_VA5[0].Soma syn_NC_AVAR_VA5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA6_FMRFamide
        print("Adding projection: NC_AVAR_VA6_FMRFamide, from AVAR to VA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA6_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 3.0, delay 0.0
        h("a_VA6[0].Soma syn_NC_AVAR_VA6_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA6_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA8_FMRFamide
        print("Adding projection: NC_AVAR_VA8_FMRFamide, from AVAR to VA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA8_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 12.0, delay 0.0
        h("a_VA8[0].Soma syn_NC_AVAR_VA8_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA8_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_AVAR_VA9_FMRFamide
        print("Adding projection: NC_AVAR_VA9_FMRFamide, from AVAR to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VA9_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 6.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_AVAR_VA9_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VA9_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVAR_VD13_FMRFamide
        print("Adding projection: NC_AVAR_VD13_FMRFamide, from AVAR to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVAR_VD13_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVAR_VD13_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 2.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_AVAR_VD13_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVAR[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVAR_VD13_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVBL_AS10_Glutamate
        print("Adding projection: NC_AVBL_AS10_Glutamate, from AVBL to AS10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0, delay 0.0
        h("a_AS10[0].Soma syn_NC_AVBL_AS10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AS10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AS10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AS3_Glutamate
        print("Adding projection: NC_AVBL_AS3_Glutamate, from AVBL to AS3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AS3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0, delay 0.0
        h("a_AS3[0].Soma syn_NC_AVBL_AS3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AS3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AS3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AS4_Glutamate
        print("Adding projection: NC_AVBL_AS4_Glutamate, from AVBL to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AS4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_AVBL_AS4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AS4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AS5_Glutamate
        print("Adding projection: NC_AVBL_AS5_Glutamate, from AVBL to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AVBL_AS5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AS5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AS6_Glutamate
        print("Adding projection: NC_AVBL_AS6_Glutamate, from AVBL to AS6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0, delay 0.0
        h("a_AS6[0].Soma syn_NC_AVBL_AS6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AS6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AS6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AS9_Glutamate
        print("Adding projection: NC_AVBL_AS9_Glutamate, from AVBL to AS9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AS9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma], weight: 1.0, delay 0.0
        h("a_AS9[0].Soma syn_NC_AVBL_AS9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AS9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AS9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVAL_Glutamate
        print("Adding projection: NC_AVBL_AVAL_Glutamate, from AVBL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVAR_Glutamate
        print("Adding projection: NC_AVBL_AVAR_Glutamate, from AVBL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVBL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVBR_Glutamate
        print("Adding projection: NC_AVBL_AVBR_Glutamate, from AVBL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVDL_Glutamate
        print("Adding projection: NC_AVBL_AVDL_Glutamate, from AVBL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVBL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVDR_Glutamate
        print("Adding projection: NC_AVBL_AVDR_Glutamate, from AVBL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AVBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVEL_Glutamate
        print("Adding projection: NC_AVBL_AVEL_Glutamate, from AVBL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AVBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVER_Glutamate
        print("Adding projection: NC_AVBL_AVER_Glutamate, from AVBL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AVBL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVBL_AVL_Glutamate
        print("Adding projection: NC_AVBL_AVL_Glutamate, from AVBL to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_AVBL_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_PVNR_Glutamate
        print("Adding projection: NC_AVBL_PVNR_Glutamate, from AVBL to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_AVBL_PVNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_PVNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_VA10_Glutamate
        print("Adding projection: NC_AVBL_VA10_Glutamate, from AVBL to VA10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_VA10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_VA10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma], weight: 1.0, delay 0.0
        h("a_VA10[0].Soma syn_NC_AVBL_VA10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_VA10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_VA10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_VA2_Glutamate
        print("Adding projection: NC_AVBL_VA2_Glutamate, from AVBL to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_VA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_VA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_AVBL_VA2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_VA2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_VA7_Glutamate
        print("Adding projection: NC_AVBL_VA7_Glutamate, from AVBL to VA7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_VA7_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_VA7_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma], weight: 1.0, delay 0.0
        h("a_VA7[0].Soma syn_NC_AVBL_VA7_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_VA7[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_VA7_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_VB2_Glutamate
        print("Adding projection: NC_AVBL_VB2_Glutamate, from AVBL to VB2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_VB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0, delay 0.0
        h("a_VB2[0].Soma syn_NC_AVBL_VB2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_VB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_VB2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBL_VC3_Glutamate
        print("Adding projection: NC_AVBL_VC3_Glutamate, from AVBL to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBL_VC3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBL_VC3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_AVBL_VC3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBL[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBL_VC3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS1_Glutamate
        print("Adding projection: NC_AVBR_AS1_Glutamate, from AVBR to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_AVBR_AS1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS10_Glutamate
        print("Adding projection: NC_AVBR_AS10_Glutamate, from AVBR to AS10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0, delay 0.0
        h("a_AS10[0].Soma syn_NC_AVBR_AS10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS3_Glutamate
        print("Adding projection: NC_AVBR_AS3_Glutamate, from AVBR to AS3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0, delay 0.0
        h("a_AS3[0].Soma syn_NC_AVBR_AS3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS4_Glutamate
        print("Adding projection: NC_AVBR_AS4_Glutamate, from AVBR to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_AVBR_AS4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS5_Glutamate
        print("Adding projection: NC_AVBR_AS5_Glutamate, from AVBR to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AVBR_AS5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS6_Glutamate
        print("Adding projection: NC_AVBR_AS6_Glutamate, from AVBR to AS6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0, delay 0.0
        h("a_AS6[0].Soma syn_NC_AVBR_AS6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AS7_Glutamate
        print("Adding projection: NC_AVBR_AS7_Glutamate, from AVBR to AS7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS7_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AS7_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 1.0, delay 0.0
        h("a_AS7[0].Soma syn_NC_AVBR_AS7_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AS7[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AS7_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_AVAL_Glutamate
        print("Adding projection: NC_AVBR_AVAL_Glutamate, from AVBR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVBR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVBR_AVAR_Glutamate
        print("Adding projection: NC_AVBR_AVAR_Glutamate, from AVBR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVBR_AVBL_Glutamate
        print("Adding projection: NC_AVBR_AVBL_Glutamate, from AVBR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVBR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_DA5_Glutamate
        print("Adding projection: NC_AVBR_DA5_Glutamate, from AVBR to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 1.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_AVBR_DA5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_DA5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_HSNR_Glutamate
        print("Adding projection: NC_AVBR_HSNR_Glutamate, from AVBR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_AVBR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_VA4_Glutamate
        print("Adding projection: NC_AVBR_VA4_Glutamate, from AVBR to VA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_VA4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_VA4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0, delay 0.0
        h("a_VA4[0].Soma syn_NC_AVBR_VA4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_VA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_VA4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_VA9_Glutamate
        print("Adding projection: NC_AVBR_VA9_Glutamate, from AVBR to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_VA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_VA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_AVBR_VA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_VA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVBR_VD3_Glutamate
        print("Adding projection: NC_AVBR_VD3_Glutamate, from AVBR to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVBR_VD3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVBR_VD3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_AVBR_VD3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVBR[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVBR_VD3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_AS1_Glutamate
        print("Adding projection: NC_AVDL_AS1_Glutamate, from AVDL to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AS1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AS1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_AVDL_AS1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AS1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_AS10_Glutamate
        print("Adding projection: NC_AVDL_AS10_Glutamate, from AVDL to AS10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0, delay 0.0
        h("a_AS10[0].Soma syn_NC_AVDL_AS10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AS10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AS10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_AS11_Glutamate
        print("Adding projection: NC_AVDL_AS11_Glutamate, from AVDL to AS11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AS11_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AS11_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma], weight: 2.0, delay 0.0
        h("a_AS11[0].Soma syn_NC_AVDL_AS11_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AS11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AS11_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVDL_AS4_Glutamate
        print("Adding projection: NC_AVDL_AS4_Glutamate, from AVDL to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AS4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AS4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_AVDL_AS4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AS4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_AS5_Glutamate
        print("Adding projection: NC_AVDL_AS5_Glutamate, from AVDL to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AVDL_AS5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AS5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_AVAL_Glutamate
        print("Adding projection: NC_AVDL_AVAL_Glutamate, from AVDL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 13.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_AVDL_AVAR_Glutamate
        print("Adding projection: NC_AVDL_AVAR_Glutamate, from AVDL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 19.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 19.0))") # *->cell

        # ######################   Projection: NC_AVDL_DA1_Glutamate
        print("Adding projection: NC_AVDL_DA1_Glutamate, from AVDL to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_DA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_DA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 1.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVDL_DA1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_DA1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_DA2_Glutamate
        print("Adding projection: NC_AVDL_DA2_Glutamate, from AVDL to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_DA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_DA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVDL_DA2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_DA2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_DA3_Glutamate
        print("Adding projection: NC_AVDL_DA3_Glutamate, from AVDL to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_DA3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_DA3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 4.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AVDL_DA3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_DA3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVDL_DA4_Glutamate
        print("Adding projection: NC_AVDL_DA4_Glutamate, from AVDL to DA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_DA4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_DA4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 1.0, delay 0.0
        h("a_DA4[0].Soma syn_NC_AVDL_DA4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_DA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_DA4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_DA5_Glutamate
        print("Adding projection: NC_AVDL_DA5_Glutamate, from AVDL to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 1.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_AVDL_DA5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_DA5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_DA8_Glutamate
        print("Adding projection: NC_AVDL_DA8_Glutamate, from AVDL to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_AVDL_DA8_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_DA8_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_LUAL_Glutamate
        print("Adding projection: NC_AVDL_LUAL_Glutamate, from AVDL to LUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_LUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_LUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAL[0].Soma syn_NC_AVDL_LUAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_LUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_LUAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_PVCL_Glutamate
        print("Adding projection: NC_AVDL_PVCL_Glutamate, from AVDL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_SABD_Glutamate
        print("Adding projection: NC_AVDL_SABD_Glutamate, from AVDL to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_SABD_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_SABD_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_AVDL_SABD_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_SABD_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_SABVL_Glutamate
        print("Adding projection: NC_AVDL_SABVL_Glutamate, from AVDL to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_SABVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_SABVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVDL_SABVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_SABVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_SABVR_Glutamate
        print("Adding projection: NC_AVDL_SABVR_Glutamate, from AVDL to SABVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_SABVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_SABVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SABVR[0].Soma syn_NC_AVDL_SABVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_SABVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_SABVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDL_VA5_Glutamate
        print("Adding projection: NC_AVDL_VA5_Glutamate, from AVDL to VA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDL_VA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDL_VA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 1.0, delay 0.0
        h("a_VA5[0].Soma syn_NC_AVDL_VA5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDL[0].Soma a_VA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDL_VA5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_AS10_Glutamate
        print("Adding projection: NC_AVDR_AS10_Glutamate, from AVDR to AS10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_AS10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0, delay 0.0
        h("a_AS10[0].Soma syn_NC_AVDR_AS10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_AS10[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_AS10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_AS5_Glutamate
        print("Adding projection: NC_AVDR_AS5_Glutamate, from AVDR to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_AS5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_AVDR_AS5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_AS5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_AVAL_Glutamate
        print("Adding projection: NC_AVDR_AVAL_Glutamate, from AVDR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 16.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_AVDR_AVAR_Glutamate
        print("Adding projection: NC_AVDR_AVAR_Glutamate, from AVDR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 15.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_AVDR_AVBL_Glutamate
        print("Adding projection: NC_AVDR_AVBL_Glutamate, from AVDR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVDR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_AVDL_Glutamate
        print("Adding projection: NC_AVDR_AVDL_Glutamate, from AVDR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVDR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA1_Glutamate
        print("Adding projection: NC_AVDR_DA1_Glutamate, from AVDR to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 2.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVDR_DA1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA2_Glutamate
        print("Adding projection: NC_AVDR_DA2_Glutamate, from AVDR to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVDR_DA2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA3_Glutamate
        print("Adding projection: NC_AVDR_DA3_Glutamate, from AVDR to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 1.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AVDR_DA3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA4_Glutamate
        print("Adding projection: NC_AVDR_DA4_Glutamate, from AVDR to DA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 1.0, delay 0.0
        h("a_DA4[0].Soma syn_NC_AVDR_DA4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA5_Glutamate
        print("Adding projection: NC_AVDR_DA5_Glutamate, from AVDR to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 2.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_AVDR_DA5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA8_Glutamate
        print("Adding projection: NC_AVDR_DA8_Glutamate, from AVDR to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_AVDR_DA8_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA8_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_DA9_Glutamate
        print("Adding projection: NC_AVDR_DA9_Glutamate, from AVDR to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_AVDR_DA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_DB4_Glutamate
        print("Adding projection: NC_AVDR_DB4_Glutamate, from AVDR to DB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0, delay 0.0
        h("a_DB4[0].Soma syn_NC_AVDR_DB4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DB4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_DVC_Glutamate
        print("Adding projection: NC_AVDR_DVC_Glutamate, from AVDR to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_AVDR_DVC_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_DVC_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_LUAL_Glutamate
        print("Adding projection: NC_AVDR_LUAL_Glutamate, from AVDR to LUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_LUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_LUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 2.0, delay 0.0
        h("a_LUAL[0].Soma syn_NC_AVDR_LUAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_LUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_LUAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVDR_PQR_Glutamate
        print("Adding projection: NC_AVDR_PQR_Glutamate, from AVDR to PQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PQR[0].Soma syn_NC_AVDR_PQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_PQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_PQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_SABD_Glutamate
        print("Adding projection: NC_AVDR_SABD_Glutamate, from AVDR to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_SABD_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_SABD_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_AVDR_SABD_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_SABD_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_SABVL_Glutamate
        print("Adding projection: NC_AVDR_SABVL_Glutamate, from AVDR to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_SABVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_SABVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVDR_SABVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_SABVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVDR_SABVR_Glutamate
        print("Adding projection: NC_AVDR_SABVR_Glutamate, from AVDR to SABVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_SABVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_SABVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SABVR[0].Soma syn_NC_AVDR_SABVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_SABVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_SABVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_VA11_Glutamate
        print("Adding projection: NC_AVDR_VA11_Glutamate, from AVDR to VA11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_VA11_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_VA11_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 1.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_AVDR_VA11_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_VA11_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_VA2_Glutamate
        print("Adding projection: NC_AVDR_VA2_Glutamate, from AVDR to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_VA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_VA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_AVDR_VA2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_VA2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVDR_VA3_Glutamate
        print("Adding projection: NC_AVDR_VA3_Glutamate, from AVDR to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_VA3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_VA3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_AVDR_VA3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_VA3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVDR_VA6_Glutamate
        print("Adding projection: NC_AVDR_VA6_Glutamate, from AVDR to VA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVDR_VA6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVDR_VA6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 1.0, delay 0.0
        h("a_VA6[0].Soma syn_NC_AVDR_VA6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVDR[0].Soma a_VA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVDR_VA6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_AS1_FMRFamide
        print("Adding projection: NC_AVEL_AS1_FMRFamide, from AVEL to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_AS1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_AS1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_AVEL_AS1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_AS1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_AVAL_FMRFamide
        print("Adding projection: NC_AVEL_AVAL_FMRFamide, from AVEL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 12.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVEL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_AVEL_AVAR_FMRFamide
        print("Adding projection: NC_AVEL_AVAR_FMRFamide, from AVEL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVEL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVEL_DA1_FMRFamide
        print("Adding projection: NC_AVEL_DA1_FMRFamide, from AVEL to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 5.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVEL_DA1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_DA1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVEL_DA2_FMRFamide
        print("Adding projection: NC_AVEL_DA2_FMRFamide, from AVEL to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVEL_DA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_DA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_DA3_FMRFamide
        print("Adding projection: NC_AVEL_DA3_FMRFamide, from AVEL to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 3.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AVEL_DA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_DA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVEL_DA4_FMRFamide
        print("Adding projection: NC_AVEL_DA4_FMRFamide, from AVEL to DA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_DA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_DA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 1.0, delay 0.0
        h("a_DA4[0].Soma syn_NC_AVEL_DA4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_DA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_DA4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_PVCR_FMRFamide
        print("Adding projection: NC_AVEL_PVCR_FMRFamide, from AVEL to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AVEL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_PVCR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_PVT_FMRFamide
        print("Adding projection: NC_AVEL_PVT_FMRFamide, from AVEL to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_PVT_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_PVT_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_AVEL_PVT_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_PVT_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_SABD_FMRFamide
        print("Adding projection: NC_AVEL_SABD_FMRFamide, from AVEL to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_SABD_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_SABD_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 6.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_AVEL_SABD_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_SABD_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVEL_SABVL_FMRFamide
        print("Adding projection: NC_AVEL_SABVL_FMRFamide, from AVEL to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_SABVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_SABVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 7.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVEL_SABVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_SABVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVEL_SABVR_FMRFamide
        print("Adding projection: NC_AVEL_SABVR_FMRFamide, from AVEL to SABVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_SABVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_SABVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 3.0, delay 0.0
        h("a_SABVR[0].Soma syn_NC_AVEL_SABVR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_SABVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_SABVR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVEL_VA1_FMRFamide
        print("Adding projection: NC_AVEL_VA1_FMRFamide, from AVEL to VA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_VA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_VA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 5.0, delay 0.0
        h("a_VA1[0].Soma syn_NC_AVEL_VA1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_VA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_VA1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVEL_VA3_FMRFamide
        print("Adding projection: NC_AVEL_VA3_FMRFamide, from AVEL to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 3.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_AVEL_VA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_VA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVEL_VD2_FMRFamide
        print("Adding projection: NC_AVEL_VD2_FMRFamide, from AVEL to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_VD2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_VD2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_AVEL_VD2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_VD2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVEL_VD3_FMRFamide
        print("Adding projection: NC_AVEL_VD3_FMRFamide, from AVEL to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVEL_VD3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVEL_VD3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_AVEL_VD3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVEL[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVEL_VD3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_AS1_FMRFamide
        print("Adding projection: NC_AVER_AS1_FMRFamide, from AVER to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_AS1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_AS1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 3.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_AVER_AS1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_AS1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVER_AS2_FMRFamide
        print("Adding projection: NC_AVER_AS2_FMRFamide, from AVER to AS2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_AS2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_AS2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 2.0, delay 0.0
        h("a_AS2[0].Soma syn_NC_AVER_AS2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_AS2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_AS2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVER_AS3_FMRFamide
        print("Adding projection: NC_AVER_AS3_FMRFamide, from AVER to AS3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_AS3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_AS3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0, delay 0.0
        h("a_AS3[0].Soma syn_NC_AVER_AS3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_AS3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_AS3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_AVAL_FMRFamide
        print("Adding projection: NC_AVER_AVAL_FMRFamide, from AVER to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVER_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVER_AVAR_FMRFamide
        print("Adding projection: NC_AVER_AVAR_FMRFamide, from AVER to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 16.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVER_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_AVER_AVDR_FMRFamide
        print("Adding projection: NC_AVER_AVDR_FMRFamide, from AVER to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_AVDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AVER_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_AVDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_DA1_FMRFamide
        print("Adding projection: NC_AVER_DA1_FMRFamide, from AVER to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_DA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 5.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVER_DA1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_DA1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVER_DA2_FMRFamide
        print("Adding projection: NC_AVER_DA2_FMRFamide, from AVER to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_DA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 3.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVER_DA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_DA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVER_DA3_FMRFamide
        print("Adding projection: NC_AVER_DA3_FMRFamide, from AVER to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_DA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 1.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_AVER_DA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_DA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_DB3_FMRFamide
        print("Adding projection: NC_AVER_DB3_FMRFamide, from AVER to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_DB3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_DB3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_AVER_DB3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_DB3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_SABD_FMRFamide
        print("Adding projection: NC_AVER_SABD_FMRFamide, from AVER to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_SABD_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_SABD_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 2.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_AVER_SABD_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_SABD_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVER_SABVL_FMRFamide
        print("Adding projection: NC_AVER_SABVL_FMRFamide, from AVER to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_SABVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_SABVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVER_SABVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_SABVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVER_SABVR_FMRFamide
        print("Adding projection: NC_AVER_SABVR_FMRFamide, from AVER to SABVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_SABVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_SABVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 3.0, delay 0.0
        h("a_SABVR[0].Soma syn_NC_AVER_SABVR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_SABVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_SABVR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVER_VA1_FMRFamide
        print("Adding projection: NC_AVER_VA1_FMRFamide, from AVER to VA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_VA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_VA1_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 1.0, delay 0.0
        h("a_VA1[0].Soma syn_NC_AVER_VA1_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_VA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_VA1_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_VA2_FMRFamide
        print("Adding projection: NC_AVER_VA2_FMRFamide, from AVER to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_VA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_VA2_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_AVER_VA2_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_VA2_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_VA3_FMRFamide
        print("Adding projection: NC_AVER_VA3_FMRFamide, from AVER to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_VA3_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_AVER_VA3_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_VA3_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVER_VA4_FMRFamide
        print("Adding projection: NC_AVER_VA4_FMRFamide, from AVER to VA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_VA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_VA4_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0, delay 0.0
        h("a_VA4[0].Soma syn_NC_AVER_VA4_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_VA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_VA4_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVER_VA5_FMRFamide
        print("Adding projection: NC_AVER_VA5_FMRFamide, from AVER to VA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVER_VA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVER_VA5_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 1.0, delay 0.0
        h("a_VA5[0].Soma syn_NC_AVER_VA5_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVER[0].Soma a_VA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVER_VA5_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVBL_Glutamate
        print("Adding projection: NC_AVFL_AVBL_Glutamate, from AVFL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVBR_Glutamate
        print("Adding projection: NC_AVFL_AVBR_Glutamate, from AVFL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVFR_Glutamate
        print("Adding projection: NC_AVFL_AVFR_Glutamate, from AVFL to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AVFL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVG_Glutamate
        print("Adding projection: NC_AVFL_AVG_Glutamate, from AVFL to AVG with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 1.0, delay 0.0
        h("a_AVG[0].Soma syn_NC_AVFL_AVG_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVG[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVG_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVHL_Glutamate
        print("Adding projection: NC_AVFL_AVHL_Glutamate, from AVFL to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_AVFL_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVHR_Glutamate
        print("Adding projection: NC_AVFL_AVHR_Glutamate, from AVFL to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_AVFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVJL_Glutamate
        print("Adding projection: NC_AVFL_AVJL_Glutamate, from AVFL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AVFL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVJR_Glutamate
        print("Adding projection: NC_AVFL_AVJR_Glutamate, from AVFL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_AVFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_AVL_Glutamate
        print("Adding projection: NC_AVFL_AVL_Glutamate, from AVFL to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_AVFL_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_HSNL_Glutamate
        print("Adding projection: NC_AVFL_HSNL_Glutamate, from AVFL to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_AVFL_HSNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_HSNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_PDER_Glutamate
        print("Adding projection: NC_AVFL_PDER_Glutamate, from AVFL to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_AVFL_PDER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_PDER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_PVNL_Glutamate
        print("Adding projection: NC_AVFL_PVNL_Glutamate, from AVFL to PVNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_AVFL_PVNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_PVNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVFL_PVQL_Glutamate
        print("Adding projection: NC_AVFL_PVQL_Glutamate, from AVFL to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_AVFL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_PVQR_Glutamate
        print("Adding projection: NC_AVFL_PVQR_Glutamate, from AVFL to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_AVFL_PVQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_PVQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFL_VB1_Glutamate
        print("Adding projection: NC_AVFL_VB1_Glutamate, from AVFL to VB1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFL_VB1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFL_VB1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 1.0, delay 0.0
        h("a_VB1[0].Soma syn_NC_AVFL_VB1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFL[0].Soma a_VB1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFL_VB1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_ASJL_Glutamate
        print("Adding projection: NC_AVFR_ASJL_Glutamate, from AVFR to ASJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_ASJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_ASJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASJL[0].Soma syn_NC_AVFR_ASJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_ASJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_ASJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_ASKL_Glutamate
        print("Adding projection: NC_AVFR_ASKL_Glutamate, from AVFR to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_AVFR_ASKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_ASKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVBL_Glutamate
        print("Adding projection: NC_AVFR_AVBL_Glutamate, from AVFR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVBR_Glutamate
        print("Adding projection: NC_AVFR_AVBR_Glutamate, from AVFR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVFL_Glutamate
        print("Adding projection: NC_AVFR_AVFL_Glutamate, from AVFR to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_AVFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVHL_Glutamate
        print("Adding projection: NC_AVFR_AVHL_Glutamate, from AVFR to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_AVFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVHR_Glutamate
        print("Adding projection: NC_AVFR_AVHR_Glutamate, from AVFR to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_AVFR_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVJL_Glutamate
        print("Adding projection: NC_AVFR_AVJL_Glutamate, from AVFR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AVFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_AVJR_Glutamate
        print("Adding projection: NC_AVFR_AVJR_Glutamate, from AVFR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_AVFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_HSNR_Glutamate
        print("Adding projection: NC_AVFR_HSNR_Glutamate, from AVFR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_AVFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_PVQL_Glutamate
        print("Adding projection: NC_AVFR_PVQL_Glutamate, from AVFR to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_AVFR_PVQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_PVQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVFR_VD11_Glutamate
        print("Adding projection: NC_AVFR_VD11_Glutamate, from AVFR to VD11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVFR_VD11_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVFR_VD11_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD11[0].Soma], weight: 1.0, delay 0.0
        h("a_VD11[0].Soma syn_NC_AVFR_VD11_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVFR[0].Soma a_VD11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVFR_VD11_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVAR_Glutamate
        print("Adding projection: NC_AVG_AVAR_Glutamate, from AVG to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVG_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVG_AVBL_Glutamate
        print("Adding projection: NC_AVG_AVBL_Glutamate, from AVG to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVG_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVBR_Glutamate
        print("Adding projection: NC_AVG_AVBR_Glutamate, from AVG to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVG_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVG_AVDR_Glutamate
        print("Adding projection: NC_AVG_AVDR_Glutamate, from AVG to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AVG_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVEL_Glutamate
        print("Adding projection: NC_AVG_AVEL_Glutamate, from AVG to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AVG_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVER_Glutamate
        print("Adding projection: NC_AVG_AVER_Glutamate, from AVG to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AVG_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVFL_Glutamate
        print("Adding projection: NC_AVG_AVFL_Glutamate, from AVG to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_AVG_AVFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVJL_Glutamate
        print("Adding projection: NC_AVG_AVJL_Glutamate, from AVG to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AVG_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_AVL_Glutamate
        print("Adding projection: NC_AVG_AVL_Glutamate, from AVG to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_AVG_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_DA8_Glutamate
        print("Adding projection: NC_AVG_DA8_Glutamate, from AVG to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_AVG_DA8_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_DA8_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_PHAL_Glutamate
        print("Adding projection: NC_AVG_PHAL_Glutamate, from AVG to PHAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_PHAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_PHAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma], weight: 2.0, delay 0.0
        h("a_PHAL[0].Soma syn_NC_AVG_PHAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_PHAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_PHAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVG_PVCL_Glutamate
        print("Adding projection: NC_AVG_PVCL_Glutamate, from AVG to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVG_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_PVNR_Glutamate
        print("Adding projection: NC_AVG_PVNR_Glutamate, from AVG to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_AVG_PVNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_PVNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_PVPR_Glutamate
        print("Adding projection: NC_AVG_PVPR_Glutamate, from AVG to PVPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_AVG_PVPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_PVPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_PVQR_Glutamate
        print("Adding projection: NC_AVG_PVQR_Glutamate, from AVG to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_AVG_PVQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_PVQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_PVT_Glutamate
        print("Adding projection: NC_AVG_PVT_Glutamate, from AVG to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_AVG_PVT_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_PVT_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVG_VA11_Glutamate
        print("Adding projection: NC_AVG_VA11_Glutamate, from AVG to VA11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVG_VA11_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVG_VA11_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 1.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_AVG_VA11_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVG[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVG_VA11_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_ADFR_Glutamate
        print("Adding projection: NC_AVHL_ADFR_Glutamate, from AVHL to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 3.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_AVHL_ADFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_ADFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVBL_Glutamate
        print("Adding projection: NC_AVHL_AVBL_Glutamate, from AVHL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVBR_Glutamate
        print("Adding projection: NC_AVHL_AVBR_Glutamate, from AVHL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVHL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVDL_Glutamate
        print("Adding projection: NC_AVHL_AVDL_Glutamate, from AVHL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVFL_Glutamate
        print("Adding projection: NC_AVHL_AVFL_Glutamate, from AVHL to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_AVHL_AVFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVFR_Glutamate
        print("Adding projection: NC_AVHL_AVFR_Glutamate, from AVHL to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AVHL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVHR_Glutamate
        print("Adding projection: NC_AVHL_AVHR_Glutamate, from AVHL to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_AVHL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_AVJL_Glutamate
        print("Adding projection: NC_AVHL_AVJL_Glutamate, from AVHL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AVHL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVHL_AWBR_Glutamate
        print("Adding projection: NC_AVHL_AWBR_Glutamate, from AVHL to AWBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_AWBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_AWBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBR[0].Soma syn_NC_AVHL_AWBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_AWBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_AWBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_PVPR_Glutamate
        print("Adding projection: NC_AVHL_PVPR_Glutamate, from AVHL to PVPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_AVHL_PVPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_PVPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHL_PVQL_Glutamate
        print("Adding projection: NC_AVHL_PVQL_Glutamate, from AVHL to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_AVHL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_PVQR_Glutamate
        print("Adding projection: NC_AVHL_PVQR_Glutamate, from AVHL to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_AVHL_PVQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_PVQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHL_RIMR_Glutamate
        print("Adding projection: NC_AVHL_RIMR_Glutamate, from AVHL to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_AVHL_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_RIR_Glutamate
        print("Adding projection: NC_AVHL_RIR_Glutamate, from AVHL to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_RIR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_RIR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_AVHL_RIR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_RIR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVHL_SMBDR_Glutamate
        print("Adding projection: NC_AVHL_SMBDR_Glutamate, from AVHL to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_SMBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_SMBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_AVHL_SMBDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_SMBDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHL_SMBVR_Glutamate
        print("Adding projection: NC_AVHL_SMBVR_Glutamate, from AVHL to SMBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_SMBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_SMBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBVR[0].Soma syn_NC_AVHL_SMBVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_SMBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_SMBVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHL_VD1_Glutamate
        print("Adding projection: NC_AVHL_VD1_Glutamate, from AVHL to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHL_VD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHL_VD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_AVHL_VD1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHL[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHL_VD1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_ADLL_Glutamate
        print("Adding projection: NC_AVHR_ADLL_Glutamate, from AVHR to ADLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_ADLL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_ADLL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADLL[0].Soma syn_NC_AVHR_ADLL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_ADLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_ADLL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_ADLR_Glutamate
        print("Adding projection: NC_AVHR_ADLR_Glutamate, from AVHR to ADLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_ADLR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_ADLR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma], weight: 2.0, delay 0.0
        h("a_ADLR[0].Soma syn_NC_AVHR_ADLR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_ADLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_ADLR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHR_AQR_Glutamate
        print("Adding projection: NC_AVHR_AQR_Glutamate, from AVHR to AQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 2.0, delay 0.0
        h("a_AQR[0].Soma syn_NC_AVHR_AQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVBL_Glutamate
        print("Adding projection: NC_AVHR_AVBL_Glutamate, from AVHR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVHR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVBR_Glutamate
        print("Adding projection: NC_AVHR_AVBR_Glutamate, from AVHR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVDR_Glutamate
        print("Adding projection: NC_AVHR_AVDR_Glutamate, from AVHR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AVHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVFL_Glutamate
        print("Adding projection: NC_AVHR_AVFL_Glutamate, from AVHR to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_AVHR_AVFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVFR_Glutamate
        print("Adding projection: NC_AVHR_AVFR_Glutamate, from AVHR to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AVHR_AVFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVHL_Glutamate
        print("Adding projection: NC_AVHR_AVHL_Glutamate, from AVHR to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_AVHR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_AVJR_Glutamate
        print("Adding projection: NC_AVHR_AVJR_Glutamate, from AVHR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_AVHR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVHR_PVNL_Glutamate
        print("Adding projection: NC_AVHR_PVNL_Glutamate, from AVHR to PVNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_AVHR_PVNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_PVNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_PVPL_Glutamate
        print("Adding projection: NC_AVHR_PVPL_Glutamate, from AVHR to PVPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_PVPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_PVPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 3.0, delay 0.0
        h("a_PVPL[0].Soma syn_NC_AVHR_PVPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_PVPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_PVPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVHR_RIGL_Glutamate
        print("Adding projection: NC_AVHR_RIGL_Glutamate, from AVHR to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_AVHR_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_RIR_Glutamate
        print("Adding projection: NC_AVHR_RIR_Glutamate, from AVHR to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_RIR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_RIR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_AVHR_RIR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_RIR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVHR_SMBDL_Glutamate
        print("Adding projection: NC_AVHR_SMBDL_Glutamate, from AVHR to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_SMBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_SMBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_AVHR_SMBDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_SMBDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVHR_SMBVL_Glutamate
        print("Adding projection: NC_AVHR_SMBVL_Glutamate, from AVHR to SMBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVHR_SMBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVHR_SMBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_AVHR_SMBVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVHR[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVHR_SMBVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVAR_Glutamate
        print("Adding projection: NC_AVJL_AVAR_Glutamate, from AVJL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVJL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVBL_Glutamate
        print("Adding projection: NC_AVJL_AVBL_Glutamate, from AVJL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVJL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVBR_Glutamate
        print("Adding projection: NC_AVJL_AVBR_Glutamate, from AVJL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVJL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVDL_Glutamate
        print("Adding projection: NC_AVJL_AVDL_Glutamate, from AVJL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVJL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVEL_Glutamate
        print("Adding projection: NC_AVJL_AVEL_Glutamate, from AVJL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AVJL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVFR_Glutamate
        print("Adding projection: NC_AVJL_AVFR_Glutamate, from AVJL to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AVJL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_AVHL_Glutamate
        print("Adding projection: NC_AVJL_AVHL_Glutamate, from AVJL to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_AVJL_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVJL_HSNR_Glutamate
        print("Adding projection: NC_AVJL_HSNR_Glutamate, from AVJL to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_AVJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_PLMR_Glutamate
        print("Adding projection: NC_AVJL_PLMR_Glutamate, from AVJL to PLMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_PLMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_PLMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma], weight: 2.0, delay 0.0
        h("a_PLMR[0].Soma syn_NC_AVJL_PLMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_PLMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_PLMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVJL_PVCL_Glutamate
        print("Adding projection: NC_AVJL_PVCL_Glutamate, from AVJL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVJL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_PVCR_Glutamate
        print("Adding projection: NC_AVJL_PVCR_Glutamate, from AVJL to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AVJL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVJL_PVNR_Glutamate
        print("Adding projection: NC_AVJL_PVNR_Glutamate, from AVJL to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_AVJL_PVNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_PVNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_RIFR_Glutamate
        print("Adding projection: NC_AVJL_RIFR_Glutamate, from AVJL to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_RIFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_RIFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_AVJL_RIFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_RIFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJL_RIS_Glutamate
        print("Adding projection: NC_AVJL_RIS_Glutamate, from AVJL to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJL_RIS_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJL_RIS_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_AVJL_RIS_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJL[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJL_RIS_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVAL_Glutamate
        print("Adding projection: NC_AVJR_AVAL_Glutamate, from AVJR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AVJR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVAR_Glutamate
        print("Adding projection: NC_AVJR_AVAR_Glutamate, from AVJR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_AVJR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVBL_Glutamate
        print("Adding projection: NC_AVJR_AVBL_Glutamate, from AVJR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVJR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVBR_Glutamate
        print("Adding projection: NC_AVJR_AVBR_Glutamate, from AVJR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVJR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVDL_Glutamate
        print("Adding projection: NC_AVJR_AVDL_Glutamate, from AVJR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_AVJR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVDR_Glutamate
        print("Adding projection: NC_AVJR_AVDR_Glutamate, from AVJR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_AVJR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVER_Glutamate
        print("Adding projection: NC_AVJR_AVER_Glutamate, from AVJR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 3.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AVJR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVJR_AVJL_Glutamate
        print("Adding projection: NC_AVJR_AVJL_Glutamate, from AVJR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_AVJR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_PVCL_Glutamate
        print("Adding projection: NC_AVJR_PVCL_Glutamate, from AVJR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVJR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVJR_PVCR_Glutamate
        print("Adding projection: NC_AVJR_PVCR_Glutamate, from AVJR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 4.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AVJR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVJR_PVQR_Glutamate
        print("Adding projection: NC_AVJR_PVQR_Glutamate, from AVJR to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_AVJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_PVQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVJR_SABVL_Glutamate
        print("Adding projection: NC_AVJR_SABVL_Glutamate, from AVJR to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVJR_SABVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVJR_SABVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVJR_SABVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVJR[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVJR_SABVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_AVBL_FMRFamide
        print("Adding projection: NC_AVKL_AVBL_FMRFamide, from AVKL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVKL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_AVBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_AVEL_FMRFamide
        print("Adding projection: NC_AVKL_AVEL_FMRFamide, from AVKL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AVKL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVKL_AVER_FMRFamide
        print("Adding projection: NC_AVKL_AVER_FMRFamide, from AVKL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_AVKL_AVER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_AVER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_AVM_FMRFamide
        print("Adding projection: NC_AVKL_AVM_FMRFamide, from AVKL to AVM with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_AVM_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_AVM_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma], weight: 1.0, delay 0.0
        h("a_AVM[0].Soma syn_NC_AVKL_AVM_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_AVM[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_AVM_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_DVA_FMRFamide
        print("Adding projection: NC_AVKL_DVA_FMRFamide, from AVKL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_DVA_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_DVA_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_AVKL_DVA_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_DVA_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_PDEL_FMRFamide
        print("Adding projection: NC_AVKL_PDEL_FMRFamide, from AVKL to PDEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_PDEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_PDEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 3.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_AVKL_PDEL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_PDEL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVKL_PDER_FMRFamide
        print("Adding projection: NC_AVKL_PDER_FMRFamide, from AVKL to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_PDER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_PDER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_AVKL_PDER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_PDER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_PVM_FMRFamide
        print("Adding projection: NC_AVKL_PVM_FMRFamide, from AVKL to PVM with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_PVM_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_PVM_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma], weight: 1.0, delay 0.0
        h("a_PVM[0].Soma syn_NC_AVKL_PVM_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_PVM[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_PVM_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_RIML_FMRFamide
        print("Adding projection: NC_AVKL_RIML_FMRFamide, from AVKL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_RIML_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_RIML_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_AVKL_RIML_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_RIML_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVKL_RIMR_FMRFamide
        print("Adding projection: NC_AVKL_RIMR_FMRFamide, from AVKL to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_RIMR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_RIMR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_AVKL_RIMR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_RIMR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_RMFR_FMRFamide
        print("Adding projection: NC_AVKL_RMFR_FMRFamide, from AVKL to RMFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_RMFR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_RMFR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_AVKL_RMFR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_RMFR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_SAADR_FMRFamide
        print("Adding projection: NC_AVKL_SAADR_FMRFamide, from AVKL to SAADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_SAADR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_SAADR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_AVKL_SAADR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_SAADR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_SIAVR_FMRFamide
        print("Adding projection: NC_AVKL_SIAVR_FMRFamide, from AVKL to SIAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_SIAVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_SIAVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIAVR[0].Soma syn_NC_AVKL_SIAVR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_SIAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_SIAVR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKL_SMDDR_FMRFamide
        print("Adding projection: NC_AVKL_SMDDR_FMRFamide, from AVKL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKL_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKL_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_AVKL_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKL_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_BDUL_FMRFamide
        print("Adding projection: NC_AVKR_BDUL_FMRFamide, from AVKR to BDUL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_BDUL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_BDUL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma], weight: 1.0, delay 0.0
        h("a_BDUL[0].Soma syn_NC_AVKR_BDUL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_BDUL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_BDUL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_PVQL_FMRFamide
        print("Adding projection: NC_AVKR_PVQL_FMRFamide, from AVKR to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_PVQL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_PVQL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_AVKR_PVQL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_PVQL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_RIML_FMRFamide
        print("Adding projection: NC_AVKR_RIML_FMRFamide, from AVKR to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_RIML_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_RIML_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_AVKR_RIML_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_RIML_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVKR_RIMR_FMRFamide
        print("Adding projection: NC_AVKR_RIMR_FMRFamide, from AVKR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_RIMR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_RIMR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_AVKR_RIMR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_RIMR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVKR_RMDR_FMRFamide
        print("Adding projection: NC_AVKR_RMDR_FMRFamide, from AVKR to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_AVKR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_RMFL_FMRFamide
        print("Adding projection: NC_AVKR_RMFL_FMRFamide, from AVKR to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_RMFL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_RMFL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_AVKR_RMFL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_RMFL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_SAADL_FMRFamide
        print("Adding projection: NC_AVKR_SAADL_FMRFamide, from AVKR to SAADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_SAADL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_SAADL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_AVKR_SAADL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_SAADL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_SMBDL_FMRFamide
        print("Adding projection: NC_AVKR_SMBDL_FMRFamide, from AVKR to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_SMBDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_SMBDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_AVKR_SMBDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_SMBDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_SMDDL_FMRFamide
        print("Adding projection: NC_AVKR_SMDDL_FMRFamide, from AVKR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_SMDDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_SMDDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_AVKR_SMDDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_SMDDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVKR_SMDDR_FMRFamide
        print("Adding projection: NC_AVKR_SMDDR_FMRFamide, from AVKR to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVKR_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVKR_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_AVKR_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVKR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVKR_SMDDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVL_AVEL_GABA
        print("Adding projection: NC_AVL_AVEL_GABA, from AVL to AVEL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_AVEL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_AVEL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_AVL_AVEL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_AVEL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_AVFR_GABA
        print("Adding projection: NC_AVL_AVFR_GABA, from AVL to AVFR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_AVFR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_AVFR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_AVL_AVFR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_AVFR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_DA2_GABA
        print("Adding projection: NC_AVL_DA2_GABA, from AVL to DA2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_DA2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_DA2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_AVL_DA2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_DA2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_DD1_GABA
        print("Adding projection: NC_AVL_DD1_GABA, from AVL to DD1 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_AVL_DD1_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_DD1_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_DD6_GABA
        print("Adding projection: NC_AVL_DD6_GABA, from AVL to DD6 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_DD6_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_DD6_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 2.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_AVL_DD6_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_DD6_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVL_HSNR_GABA
        print("Adding projection: NC_AVL_HSNR_GABA, from AVL to HSNR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_HSNR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_HSNR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_AVL_HSNR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_HSNR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_PVPR_GABA
        print("Adding projection: NC_AVL_PVPR_GABA, from AVL to PVPR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_PVPR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_PVPR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_AVL_PVPR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_PVPR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_PVWL_GABA
        print("Adding projection: NC_AVL_PVWL_GABA, from AVL to PVWL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_PVWL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_PVWL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVWL[0].Soma syn_NC_AVL_PVWL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_PVWL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_PVWL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVL_SABD_GABA
        print("Adding projection: NC_AVL_SABD_GABA, from AVL to SABD with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_SABD_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_SABD_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 5.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_AVL_SABD_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_SABD_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVL_SABVL_GABA
        print("Adding projection: NC_AVL_SABVL_GABA, from AVL to SABVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_SABVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_SABVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 4.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_AVL_SABVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_SABVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVL_SABVR_GABA
        print("Adding projection: NC_AVL_SABVR_GABA, from AVL to SABVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_SABVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_SABVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 3.0, delay 0.0
        h("a_SABVR[0].Soma syn_NC_AVL_SABVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_SABVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_SABVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVL_VD12_GABA
        print("Adding projection: NC_AVL_VD12_GABA, from AVL to VD12 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_AVL_VD12_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_AVL_VD12_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma], weight: 4.0, delay 0.0
        h("a_VD12[0].Soma syn_NC_AVL_VD12_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_AVL[0].Soma a_VD12[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVL_VD12_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVM_ADER_Glutamate
        print("Adding projection: NC_AVM_ADER_Glutamate, from AVM to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_ADER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_ADER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_AVM_ADER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_ADER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVM_AVBL_Glutamate
        print("Adding projection: NC_AVM_AVBL_Glutamate, from AVM to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AVM_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVM_AVBR_Glutamate
        print("Adding projection: NC_AVM_AVBR_Glutamate, from AVM to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AVM_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_AVM_AVJR_Glutamate
        print("Adding projection: NC_AVM_AVJR_Glutamate, from AVM to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_AVM_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVM_BDUL_Glutamate
        print("Adding projection: NC_AVM_BDUL_Glutamate, from AVM to BDUL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma], weight: 3.0, delay 0.0
        h("a_BDUL[0].Soma syn_NC_AVM_BDUL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_BDUL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_BDUL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVM_BDUR_Glutamate
        print("Adding projection: NC_AVM_BDUR_Glutamate, from AVM to BDUR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma], weight: 2.0, delay 0.0
        h("a_BDUR[0].Soma syn_NC_AVM_BDUR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_BDUR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_BDUR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AVM_DA1_Glutamate
        print("Adding projection: NC_AVM_DA1_Glutamate, from AVM to DA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_DA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_DA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 1.0, delay 0.0
        h("a_DA1[0].Soma syn_NC_AVM_DA1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_DA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_DA1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVM_PVCL_Glutamate
        print("Adding projection: NC_AVM_PVCL_Glutamate, from AVM to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 4.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_AVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AVM_PVCR_Glutamate
        print("Adding projection: NC_AVM_PVCR_Glutamate, from AVM to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 5.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_AVM_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AVM_PVNL_Glutamate
        print("Adding projection: NC_AVM_PVNL_Glutamate, from AVM to PVNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_AVM_PVNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_PVNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVM_PVR_Glutamate
        print("Adding projection: NC_AVM_PVR_Glutamate, from AVM to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_AVM_PVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_PVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AVM_RID_Glutamate
        print("Adding projection: NC_AVM_RID_Glutamate, from AVM to RID with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0, delay 0.0
        h("a_RID[0].Soma syn_NC_AVM_RID_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_RID[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_RID_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVM_SIBVL_Glutamate
        print("Adding projection: NC_AVM_SIBVL_Glutamate, from AVM to SIBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBVL[0].Soma syn_NC_AVM_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_SIBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AVM_VA1_Glutamate
        print("Adding projection: NC_AVM_VA1_Glutamate, from AVM to VA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AVM_VA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AVM_VA1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 2.0, delay 0.0
        h("a_VA1[0].Soma syn_NC_AVM_VA1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AVM[0].Soma a_VA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_AVM_VA1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWAL_ADAL_Serotonin
        print("Adding projection: NC_AWAL_ADAL_Serotonin, from AWAL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_ADAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_ADAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_AWAL_ADAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_ADAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAL_AFDL_Serotonin
        print("Adding projection: NC_AWAL_AFDL_Serotonin, from AWAL to AFDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_AFDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_AFDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma], weight: 5.0, delay 0.0
        h("a_AFDL[0].Soma syn_NC_AWAL_AFDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_AFDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_AFDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_AWAL_AIYL_Serotonin
        print("Adding projection: NC_AWAL_AIYL_Serotonin, from AWAL to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_AIYL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_AIYL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_AWAL_AIYL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_AIYL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAL_AIZL_Serotonin
        print("Adding projection: NC_AWAL_AIZL_Serotonin, from AWAL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 10.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_AWAL_AIZL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_AIZL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_AWAL_ASEL_Serotonin
        print("Adding projection: NC_AWAL_ASEL_Serotonin, from AWAL to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_ASEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_ASEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 4.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AWAL_ASEL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_ASEL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AWAL_ASGL_Serotonin
        print("Adding projection: NC_AWAL_ASGL_Serotonin, from AWAL to ASGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_ASGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_ASGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGL[0].Soma syn_NC_AWAL_ASGL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_ASGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_ASGL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAL_AWBL_Serotonin
        print("Adding projection: NC_AWAL_AWBL_Serotonin, from AWAL to AWBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAL_AWBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAL_AWBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBL[0].Soma syn_NC_AWAL_AWBL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAL[0].Soma a_AWBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAL_AWBL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAR_ADFR_Serotonin
        print("Adding projection: NC_AWAR_ADFR_Serotonin, from AWAR to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_ADFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_ADFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 3.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_AWAR_ADFR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_ADFR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AWAR_AFDR_Serotonin
        print("Adding projection: NC_AWAR_AFDR_Serotonin, from AWAR to AFDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_AFDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_AFDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 7.0, delay 0.0
        h("a_AFDR[0].Soma syn_NC_AWAR_AFDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_AFDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_AFDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AWAR_AIYR_Serotonin
        print("Adding projection: NC_AWAR_AIYR_Serotonin, from AWAR to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_AIYR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_AIYR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 2.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_AWAR_AIYR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_AIYR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWAR_AIZR_Serotonin
        print("Adding projection: NC_AWAR_AIZR_Serotonin, from AWAR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 7.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_AWAR_AIZR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_AIZR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_AWAR_ASEL_Serotonin
        print("Adding projection: NC_AWAR_ASEL_Serotonin, from AWAR to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_ASEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_ASEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AWAR_ASEL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_ASEL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAR_ASER_Serotonin
        print("Adding projection: NC_AWAR_ASER_Serotonin, from AWAR to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_ASER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_ASER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 2.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_AWAR_ASER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_ASER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWAR_AUAR_Serotonin
        print("Adding projection: NC_AWAR_AUAR_Serotonin, from AWAR to AUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_AUAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_AUAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_AWAR_AUAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_AUAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAR_AWBR_Serotonin
        print("Adding projection: NC_AWAR_AWBR_Serotonin, from AWAR to AWBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_AWBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_AWBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBR[0].Soma syn_NC_AWAR_AWBR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_AWBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_AWBR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAR_RIFR_Serotonin
        print("Adding projection: NC_AWAR_RIFR_Serotonin, from AWAR to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_RIFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_RIFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_AWAR_RIFR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_RIFR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWAR_RIGR_Serotonin
        print("Adding projection: NC_AWAR_RIGR_Serotonin, from AWAR to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_RIGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_RIGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_AWAR_RIGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_RIGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWAR_RIR_Serotonin
        print("Adding projection: NC_AWAR_RIR_Serotonin, from AWAR to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWAR_RIR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWAR_RIR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_AWAR_RIR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWAR[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWAR_RIR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWBL_ADFL_Glutamate
        print("Adding projection: NC_AWBL_ADFL_Glutamate, from AWBL to ADFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBL_ADFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBL_ADFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma], weight: 9.0, delay 0.0
        h("a_ADFL[0].Soma syn_NC_AWBL_ADFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBL[0].Soma a_ADFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBL_ADFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AWBL_AIBR_Glutamate
        print("Adding projection: NC_AWBL_AIBR_Glutamate, from AWBL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_AWBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWBL_AIZL_Glutamate
        print("Adding projection: NC_AWBL_AIZL_Glutamate, from AWBL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBL_AIZL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBL_AIZL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 9.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_AWBL_AIZL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBL_AIZL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AWBL_AVBL_Glutamate
        print("Adding projection: NC_AWBL_AVBL_Glutamate, from AWBL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_AWBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWBL_RIAL_Glutamate
        print("Adding projection: NC_AWBL_RIAL_Glutamate, from AWBL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AWBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AWBL_SMBDL_Glutamate
        print("Adding projection: NC_AWBL_SMBDL_Glutamate, from AWBL to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_AWBL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBL[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBL_SMBDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWBR_ADFR_Glutamate
        print("Adding projection: NC_AWBR_ADFR_Glutamate, from AWBR to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 4.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_AWBR_ADFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_ADFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AWBR_AIZR_Glutamate
        print("Adding projection: NC_AWBR_AIZR_Glutamate, from AWBR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 4.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_AWBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AWBR_ASGR_Glutamate
        print("Adding projection: NC_AWBR_ASGR_Glutamate, from AWBR to ASGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_ASGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_ASGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGR[0].Soma syn_NC_AWBR_ASGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_ASGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_ASGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWBR_ASHR_Glutamate
        print("Adding projection: NC_AWBR_ASHR_Glutamate, from AWBR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 2.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_AWBR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWBR_AVBR_Glutamate
        print("Adding projection: NC_AWBR_AVBR_Glutamate, from AWBR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_AWBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWBR_RIAR_Glutamate
        print("Adding projection: NC_AWBR_RIAR_Glutamate, from AWBR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_AWBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWBR_RIR_Glutamate
        print("Adding projection: NC_AWBR_RIR_Glutamate, from AWBR to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_RIR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_RIR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_AWBR_RIR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_RIR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWBR_SMBVR_Glutamate
        print("Adding projection: NC_AWBR_SMBVR_Glutamate, from AWBR to SMBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWBR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWBR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBVR[0].Soma syn_NC_AWBR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWBR[0].Soma a_SMBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWBR_SMBVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCL_AIAL_Glutamate
        print("Adding projection: NC_AWCL_AIAL_Glutamate, from AWCL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_AWCL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_AWCL_AIAR_Glutamate
        print("Adding projection: NC_AWCL_AIAR_Glutamate, from AWCL to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 4.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_AWCL_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AWCL_AIBL_Glutamate
        print("Adding projection: NC_AWCL_AIBL_Glutamate, from AWCL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_AWCL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCL_AIBR_Glutamate
        print("Adding projection: NC_AWCL_AIBR_Glutamate, from AWCL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_AWCL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCL_AIYL_Glutamate
        print("Adding projection: NC_AWCL_AIYL_Glutamate, from AWCL to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 10.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_AWCL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AIYL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_AWCL_ASEL_Glutamate
        print("Adding projection: NC_AWCL_ASEL_Glutamate, from AWCL to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AWCL_ASEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_ASEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCL_AVAL_Glutamate
        print("Adding projection: NC_AWCL_AVAL_Glutamate, from AWCL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_AWCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCL_AWCR_Glutamate
        print("Adding projection: NC_AWCL_AWCR_Glutamate, from AWCL to AWCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_AWCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_AWCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWCR[0].Soma syn_NC_AWCL_AWCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_AWCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_AWCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCL_RIAL_Glutamate
        print("Adding projection: NC_AWCL_RIAL_Glutamate, from AWCL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_AWCL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_AWCR_AIAR_Glutamate
        print("Adding projection: NC_AWCR_AIAR_Glutamate, from AWCR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_AWCR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCR_AIBR_Glutamate
        print("Adding projection: NC_AWCR_AIBR_Glutamate, from AWCR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 4.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_AWCR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AWCR_AIYL_Glutamate
        print("Adding projection: NC_AWCR_AIYL_Glutamate, from AWCR to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 4.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_AWCR_AIYL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_AIYL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_AWCR_AIYR_Glutamate
        print("Adding projection: NC_AWCR_AIYR_Glutamate, from AWCR to AIYR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_AIYR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 9.0, delay 0.0
        h("a_AIYR[0].Soma syn_NC_AWCR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_AIYR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_AIYR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_AWCR_ASEL_Glutamate
        print("Adding projection: NC_AWCR_ASEL_Glutamate, from AWCR to ASEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_ASEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASEL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASEL[0].Soma syn_NC_AWCR_ASEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_ASEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_ASEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCR_ASGR_Glutamate
        print("Adding projection: NC_AWCR_ASGR_Glutamate, from AWCR to ASGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_ASGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_ASGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGR[0].Soma syn_NC_AWCR_ASGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_ASGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_ASGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_AWCR_AWCL_Glutamate
        print("Adding projection: NC_AWCR_AWCL_Glutamate, from AWCR to AWCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_AWCR_AWCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_AWCR_AWCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWCL[0].Soma], weight: 5.0, delay 0.0
        h("a_AWCL[0].Soma syn_NC_AWCR_AWCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_AWCR[0].Soma a_AWCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_AWCR_AWCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_BAGL_AIBL_Glutamate
        print("Adding projection: NC_BAGL_AIBL_Glutamate, from BAGL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_BAGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGL_AVAR_Glutamate
        print("Adding projection: NC_BAGL_AVAR_Glutamate, from BAGL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_BAGL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGL_AVEL_Glutamate
        print("Adding projection: NC_BAGL_AVEL_Glutamate, from BAGL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_BAGL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGL_AVER_Glutamate
        print("Adding projection: NC_BAGL_AVER_Glutamate, from BAGL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 4.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_BAGL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_BAGL_BAGR_Glutamate
        print("Adding projection: NC_BAGL_BAGR_Glutamate, from BAGL to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_BAGL_BAGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_BAGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGL_RIAR_Glutamate
        print("Adding projection: NC_BAGL_RIAR_Glutamate, from BAGL to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_BAGL_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_BAGL_RIBL_Glutamate
        print("Adding projection: NC_BAGL_RIBL_Glutamate, from BAGL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_BAGL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGL_RIBR_Glutamate
        print("Adding projection: NC_BAGL_RIBR_Glutamate, from BAGL to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 7.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_BAGL_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_BAGL_RIGL_Glutamate
        print("Adding projection: NC_BAGL_RIGL_Glutamate, from BAGL to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_BAGL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGL_RIGR_Glutamate
        print("Adding projection: NC_BAGL_RIGR_Glutamate, from BAGL to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGL_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_BAGL_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGL[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGL_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_BAGR_AIYL_Glutamate
        print("Adding projection: NC_BAGR_AIYL_Glutamate, from BAGR to AIYL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGR_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGR_AIYL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIYL[0].Soma syn_NC_BAGR_AIYL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGR[0].Soma a_AIYL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGR_AIYL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGR_AVAL_Glutamate
        print("Adding projection: NC_BAGR_AVAL_Glutamate, from BAGR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_BAGR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BAGR_AVEL_Glutamate
        print("Adding projection: NC_BAGR_AVEL_Glutamate, from BAGR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_BAGR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_BAGR_RIAL_Glutamate
        print("Adding projection: NC_BAGR_RIAL_Glutamate, from BAGR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGR_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGR_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_BAGR_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGR_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_BAGR_RIBL_Glutamate
        print("Adding projection: NC_BAGR_RIBL_Glutamate, from BAGR to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGR_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGR_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_BAGR_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGR[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGR_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_BAGR_RIGL_Glutamate
        print("Adding projection: NC_BAGR_RIGL_Glutamate, from BAGR to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_BAGR_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_BAGR_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_BAGR_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_BAGR[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BAGR_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_BDUL_ADEL_GABA
        print("Adding projection: NC_BDUL_ADEL_GABA, from BDUL to ADEL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_ADEL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_ADEL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 3.0, delay 0.0
        h("a_ADEL[0].Soma syn_NC_BDUL_ADEL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_ADEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_ADEL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_BDUL_AVHL_GABA
        print("Adding projection: NC_BDUL_AVHL_GABA, from BDUL to AVHL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_AVHL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_AVHL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_BDUL_AVHL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_AVHL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUL_AVJR_GABA
        print("Adding projection: NC_BDUL_AVJR_GABA, from BDUL to AVJR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_AVJR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_AVJR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_BDUL_AVJR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_AVJR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUL_HSNL_GABA
        print("Adding projection: NC_BDUL_HSNL_GABA, from BDUL to HSNL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_HSNL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_HSNL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_BDUL_HSNL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_HSNL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUL_PVNL_GABA
        print("Adding projection: NC_BDUL_PVNL_GABA, from BDUL to PVNL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_PVNL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_PVNL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_BDUL_PVNL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_PVNL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_BDUL_PVNR_GABA
        print("Adding projection: NC_BDUL_PVNR_GABA, from BDUL to PVNR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_PVNR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_PVNR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_BDUL_PVNR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_PVNR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_BDUL_SAADL_GABA
        print("Adding projection: NC_BDUL_SAADL_GABA, from BDUL to SAADL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_SAADL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_SAADL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_BDUL_SAADL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_SAADL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUL_URADL_GABA
        print("Adding projection: NC_BDUL_URADL_GABA, from BDUL to URADL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUL_URADL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUL_URADL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma], weight: 1.0, delay 0.0
        h("a_URADL[0].Soma syn_NC_BDUL_URADL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUL[0].Soma a_URADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUL_URADL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_ADER_GABA
        print("Adding projection: NC_BDUR_ADER_GABA, from BDUR to ADER with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_ADER_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_ADER_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_BDUR_ADER_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_ADER_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_ALMR_GABA
        print("Adding projection: NC_BDUR_ALMR_GABA, from BDUR to ALMR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_ALMR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_ALMR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma], weight: 1.0, delay 0.0
        h("a_ALMR[0].Soma syn_NC_BDUR_ALMR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_ALMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_ALMR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_AVAL_GABA
        print("Adding projection: NC_BDUR_AVAL_GABA, from BDUR to AVAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_BDUR_AVAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_AVAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_BDUR_AVHL_GABA
        print("Adding projection: NC_BDUR_AVHL_GABA, from BDUR to AVHL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_AVHL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_AVHL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_BDUR_AVHL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_AVHL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_AVJL_GABA
        print("Adding projection: NC_BDUR_AVJL_GABA, from BDUR to AVJL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_AVJL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_AVJL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_BDUR_AVJL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_AVJL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_BDUR_HSNR_GABA
        print("Adding projection: NC_BDUR_HSNR_GABA, from BDUR to HSNR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_HSNR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_HSNR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 4.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_BDUR_HSNR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_HSNR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_BDUR_PVCL_GABA
        print("Adding projection: NC_BDUR_PVCL_GABA, from BDUR to PVCL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_PVCL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_PVCL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_BDUR_PVCL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_PVCL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_PVNL_GABA
        print("Adding projection: NC_BDUR_PVNL_GABA, from BDUR to PVNL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_PVNL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_PVNL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_BDUR_PVNL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_PVNL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_BDUR_PVNR_GABA
        print("Adding projection: NC_BDUR_PVNR_GABA, from BDUR to PVNR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_PVNR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_PVNR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_BDUR_PVNR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_PVNR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_SDQL_GABA
        print("Adding projection: NC_BDUR_SDQL_GABA, from BDUR to SDQL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_SDQL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_SDQL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma], weight: 1.0, delay 0.0
        h("a_SDQL[0].Soma syn_NC_BDUR_SDQL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_SDQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_SDQL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_BDUR_URADR_GABA
        print("Adding projection: NC_BDUR_URADR_GABA, from BDUR to URADR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_BDUR_URADR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_BDUR_URADR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma], weight: 1.0, delay 0.0
        h("a_URADR[0].Soma syn_NC_BDUR_URADR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_BDUR[0].Soma a_URADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_BDUR_URADR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDL_AVER_Dopamine
        print("Adding projection: NC_CEPDL_AVER_Dopamine, from CEPDL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_AVER_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_AVER_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 5.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_CEPDL_AVER_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_AVER_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_CEPDL_IL1DL_Dopamine
        print("Adding projection: NC_CEPDL_IL1DL_Dopamine, from CEPDL to IL1DL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_IL1DL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_IL1DL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 4.0, delay 0.0
        h("a_IL1DL[0].Soma syn_NC_CEPDL_IL1DL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_IL1DL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_IL1DL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPDL_OLLL_Dopamine
        print("Adding projection: NC_CEPDL_OLLL_Dopamine, from CEPDL to OLLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_OLLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_OLLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 2.0, delay 0.0
        h("a_OLLL[0].Soma syn_NC_CEPDL_OLLL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_OLLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_OLLL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDL_OLQDL_Dopamine
        print("Adding projection: NC_CEPDL_OLQDL_Dopamine, from CEPDL to OLQDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_OLQDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_OLQDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 6.0, delay 0.0
        h("a_OLQDL[0].Soma syn_NC_CEPDL_OLQDL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_OLQDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_OLQDL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RIBL_Dopamine
        print("Adding projection: NC_CEPDL_RIBL_Dopamine, from CEPDL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RIBL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RIBL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_CEPDL_RIBL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RIBL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RICL_Dopamine
        print("Adding projection: NC_CEPDL_RICL_Dopamine, from CEPDL to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_CEPDL_RICL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RICL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RICR_Dopamine
        print("Adding projection: NC_CEPDL_RICR_Dopamine, from CEPDL to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 2.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_CEPDL_RICR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RICR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RIPL_Dopamine
        print("Adding projection: NC_CEPDL_RIPL_Dopamine, from CEPDL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RIPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RIPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_CEPDL_RIPL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RIPL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RIS_Dopamine
        print("Adding projection: NC_CEPDL_RIS_Dopamine, from CEPDL to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RIS_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RIS_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_CEPDL_RIS_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RIS_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RMDVL_Dopamine
        print("Adding projection: NC_CEPDL_RMDVL_Dopamine, from CEPDL to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RMDVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RMDVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_CEPDL_RMDVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RMDVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RMGL_Dopamine
        print("Adding projection: NC_CEPDL_RMGL_Dopamine, from CEPDL to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RMGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RMGL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_CEPDL_RMGL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RMGL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPDL_RMHR_Dopamine
        print("Adding projection: NC_CEPDL_RMHR_Dopamine, from CEPDL to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RMHR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_RMHR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_CEPDL_RMHR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_RMHR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPDL_SIADR_Dopamine
        print("Adding projection: NC_CEPDL_SIADR_Dopamine, from CEPDL to SIADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_SIADR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_SIADR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIADR[0].Soma syn_NC_CEPDL_SIADR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_SIADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_SIADR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDL_SMBDR_Dopamine
        print("Adding projection: NC_CEPDL_SMBDR_Dopamine, from CEPDL to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_CEPDL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_SMBDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDL_URADL_Dopamine
        print("Adding projection: NC_CEPDL_URADL_Dopamine, from CEPDL to URADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_URADL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_URADL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma], weight: 2.0, delay 0.0
        h("a_URADL[0].Soma syn_NC_CEPDL_URADL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_URADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_URADL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDL_URBL_Dopamine
        print("Adding projection: NC_CEPDL_URBL_Dopamine, from CEPDL to URBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_URBL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_URBL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma], weight: 4.0, delay 0.0
        h("a_URBL[0].Soma syn_NC_CEPDL_URBL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_URBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_URBL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPDL_URYDL_Dopamine
        print("Adding projection: NC_CEPDL_URYDL_Dopamine, from CEPDL to URYDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDL_URYDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDL_URYDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma], weight: 2.0, delay 0.0
        h("a_URYDL[0].Soma syn_NC_CEPDL_URYDL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDL[0].Soma a_URYDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDL_URYDL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDR_AVEL_Dopamine
        print("Adding projection: NC_CEPDR_AVEL_Dopamine, from CEPDR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_AVEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_AVEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_CEPDR_AVEL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_AVEL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_CEPDR_BDUR_Dopamine
        print("Adding projection: NC_CEPDR_BDUR_Dopamine, from CEPDR to BDUR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_BDUR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_BDUR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma], weight: 1.0, delay 0.0
        h("a_BDUR[0].Soma syn_NC_CEPDR_BDUR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_BDUR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_BDUR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_IL1DR_Dopamine
        print("Adding projection: NC_CEPDR_IL1DR_Dopamine, from CEPDR to IL1DR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_IL1DR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_IL1DR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 5.0, delay 0.0
        h("a_IL1DR[0].Soma syn_NC_CEPDR_IL1DR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_IL1DR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_IL1DR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_CEPDR_IL1R_Dopamine
        print("Adding projection: NC_CEPDR_IL1R_Dopamine, from CEPDR to IL1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_IL1R_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_IL1R_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1R[0].Soma syn_NC_CEPDR_IL1R_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_IL1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_IL1R_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_OLLR_Dopamine
        print("Adding projection: NC_CEPDR_OLLR_Dopamine, from CEPDR to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_OLLR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_OLLR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 8.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_CEPDR_OLLR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_OLLR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_CEPDR_OLQDR_Dopamine
        print("Adding projection: NC_CEPDR_OLQDR_Dopamine, from CEPDR to OLQDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_OLQDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_OLQDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 5.0, delay 0.0
        h("a_OLQDR[0].Soma syn_NC_CEPDR_OLQDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_OLQDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_OLQDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RIBR_Dopamine
        print("Adding projection: NC_CEPDR_RIBR_Dopamine, from CEPDR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RIBR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RIBR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_CEPDR_RIBR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RIBR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RICL_Dopamine
        print("Adding projection: NC_CEPDR_RICL_Dopamine, from CEPDR to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 4.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_CEPDR_RICL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RICL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RICR_Dopamine
        print("Adding projection: NC_CEPDR_RICR_Dopamine, from CEPDR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 3.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_CEPDR_RICR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RICR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RIS_Dopamine
        print("Adding projection: NC_CEPDR_RIS_Dopamine, from CEPDR to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RIS_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RIS_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_CEPDR_RIS_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RIS_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RMDDL_Dopamine
        print("Adding projection: NC_CEPDR_RMDDL_Dopamine, from CEPDR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RMDDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RMDDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_CEPDR_RMDDL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RMDDL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RMDVR_Dopamine
        print("Adding projection: NC_CEPDR_RMDVR_Dopamine, from CEPDR to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RMDVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RMDVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_CEPDR_RMDVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RMDVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RMGR_Dopamine
        print("Adding projection: NC_CEPDR_RMGR_Dopamine, from CEPDR to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RMGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RMGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_CEPDR_RMGR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RMGR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RMHL_Dopamine
        print("Adding projection: NC_CEPDR_RMHL_Dopamine, from CEPDR to RMHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RMHL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RMHL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMHL[0].Soma syn_NC_CEPDR_RMHL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RMHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RMHL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPDR_RMHR_Dopamine
        print("Adding projection: NC_CEPDR_RMHR_Dopamine, from CEPDR to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RMHR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_RMHR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_CEPDR_RMHR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_RMHR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_SIADL_Dopamine
        print("Adding projection: NC_CEPDR_SIADL_Dopamine, from CEPDR to SIADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_SIADL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_SIADL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIADL[0].Soma syn_NC_CEPDR_SIADL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_SIADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_SIADL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_SMBDR_Dopamine
        print("Adding projection: NC_CEPDR_SMBDR_Dopamine, from CEPDR to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_SMBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_SMBDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_CEPDR_SMBDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_SMBDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_URADR_Dopamine
        print("Adding projection: NC_CEPDR_URADR_Dopamine, from CEPDR to URADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_URADR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_URADR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma], weight: 1.0, delay 0.0
        h("a_URADR[0].Soma syn_NC_CEPDR_URADR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_URADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_URADR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPDR_URBR_Dopamine
        print("Adding projection: NC_CEPDR_URBR_Dopamine, from CEPDR to URBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_URBR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_URBR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma], weight: 2.0, delay 0.0
        h("a_URBR[0].Soma syn_NC_CEPDR_URBR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_URBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_URBR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPDR_URYDR_Dopamine
        print("Adding projection: NC_CEPDR_URYDR_Dopamine, from CEPDR to URYDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPDR_URYDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPDR_URYDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma], weight: 1.0, delay 0.0
        h("a_URYDR[0].Soma syn_NC_CEPDR_URYDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPDR[0].Soma a_URYDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPDR_URYDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVL_ADLL_Dopamine
        print("Adding projection: NC_CEPVL_ADLL_Dopamine, from CEPVL to ADLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_ADLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_ADLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADLL[0].Soma syn_NC_CEPVL_ADLL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_ADLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_ADLL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVL_AVER_Dopamine
        print("Adding projection: NC_CEPVL_AVER_Dopamine, from CEPVL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_AVER_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_AVER_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 3.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_CEPVL_AVER_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_AVER_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_CEPVL_IL1VL_Dopamine
        print("Adding projection: NC_CEPVL_IL1VL_Dopamine, from CEPVL to IL1VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_IL1VL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_IL1VL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 2.0, delay 0.0
        h("a_IL1VL[0].Soma syn_NC_CEPVL_IL1VL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_IL1VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_IL1VL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVL_OLLL_Dopamine
        print("Adding projection: NC_CEPVL_OLLL_Dopamine, from CEPVL to OLLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_OLLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_OLLL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 4.0, delay 0.0
        h("a_OLLL[0].Soma syn_NC_CEPVL_OLLL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_OLLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_OLLL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPVL_OLQVL_Dopamine
        print("Adding projection: NC_CEPVL_OLQVL_Dopamine, from CEPVL to OLQVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_OLQVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_OLQVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 6.0, delay 0.0
        h("a_OLQVL[0].Soma syn_NC_CEPVL_OLQVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_OLQVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_OLQVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_CEPVL_RICL_Dopamine
        print("Adding projection: NC_CEPVL_RICL_Dopamine, from CEPVL to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 7.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_CEPVL_RICL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_RICL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_CEPVL_RICR_Dopamine
        print("Adding projection: NC_CEPVL_RICR_Dopamine, from CEPVL to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 4.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_CEPVL_RICR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_RICR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPVL_RIPL_Dopamine
        print("Adding projection: NC_CEPVL_RIPL_Dopamine, from CEPVL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_RIPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_RIPL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_CEPVL_RIPL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_RIPL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVL_RMDDL_Dopamine
        print("Adding projection: NC_CEPVL_RMDDL_Dopamine, from CEPVL to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_RMDDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_RMDDL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_CEPVL_RMDDL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_RMDDL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_CEPVL_RMHL_Dopamine
        print("Adding projection: NC_CEPVL_RMHL_Dopamine, from CEPVL to RMHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_RMHL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_RMHL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHL[0].Soma syn_NC_CEPVL_RMHL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_RMHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_RMHL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVL_SIAVL_Dopamine
        print("Adding projection: NC_CEPVL_SIAVL_Dopamine, from CEPVL to SIAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_SIAVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_SIAVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIAVL[0].Soma syn_NC_CEPVL_SIAVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_SIAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_SIAVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVL_URAVL_Dopamine
        print("Adding projection: NC_CEPVL_URAVL_Dopamine, from CEPVL to URAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVL_URAVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVL_URAVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URAVL[0].Soma], weight: 2.0, delay 0.0
        h("a_URAVL[0].Soma syn_NC_CEPVL_URAVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVL[0].Soma a_URAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVL_URAVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_ASGR_Dopamine
        print("Adding projection: NC_CEPVR_ASGR_Dopamine, from CEPVR to ASGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_ASGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_ASGR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASGR[0].Soma syn_NC_CEPVR_ASGR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_ASGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_ASGR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVR_AVEL_Dopamine
        print("Adding projection: NC_CEPVR_AVEL_Dopamine, from CEPVR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_AVEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_AVEL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_CEPVR_AVEL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_AVEL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_CEPVR_IL1VR_Dopamine
        print("Adding projection: NC_CEPVR_IL1VR_Dopamine, from CEPVR to IL1VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_IL1VR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_IL1VR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VR[0].Soma syn_NC_CEPVR_IL1VR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_IL1VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_IL1VR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVR_IL2VR_Dopamine
        print("Adding projection: NC_CEPVR_IL2VR_Dopamine, from CEPVR to IL2VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_IL2VR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_IL2VR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma], weight: 2.0, delay 0.0
        h("a_IL2VR[0].Soma syn_NC_CEPVR_IL2VR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_IL2VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_IL2VR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_OLLR_Dopamine
        print("Adding projection: NC_CEPVR_OLLR_Dopamine, from CEPVR to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_OLLR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_OLLR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 7.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_CEPVR_OLLR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_OLLR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_CEPVR_OLQVR_Dopamine
        print("Adding projection: NC_CEPVR_OLQVR_Dopamine, from CEPVR to OLQVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_OLQVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_OLQVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 3.0, delay 0.0
        h("a_OLQVR[0].Soma syn_NC_CEPVR_OLQVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_OLQVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_OLQVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_CEPVR_RICL_Dopamine
        print("Adding projection: NC_CEPVR_RICL_Dopamine, from CEPVR to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_RICL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 2.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_CEPVR_RICL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_RICL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_RICR_Dopamine
        print("Adding projection: NC_CEPVR_RICR_Dopamine, from CEPVR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_RICR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 2.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_CEPVR_RICR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_RICR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_RIPR_Dopamine
        print("Adding projection: NC_CEPVR_RIPR_Dopamine, from CEPVR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RIPR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_RIPR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_CEPVR_RIPR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_RIPR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVR_RIVL_Dopamine
        print("Adding projection: NC_CEPVR_RIVL_Dopamine, from CEPVR to RIVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RIVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_RIVL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVL[0].Soma syn_NC_CEPVR_RIVL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_RIVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_RIVL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_CEPVR_RMDDR_Dopamine
        print("Adding projection: NC_CEPVR_RMDDR_Dopamine, from CEPVR to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RMDDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_RMDDR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_CEPVR_RMDDR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_RMDDR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_RMHR_Dopamine
        print("Adding projection: NC_CEPVR_RMHR_Dopamine, from CEPVR to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RMHR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_RMHR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_CEPVR_RMHR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_RMHR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_SIAVR_Dopamine
        print("Adding projection: NC_CEPVR_SIAVR_Dopamine, from CEPVR to SIAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_SIAVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_SIAVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SIAVR[0].Soma syn_NC_CEPVR_SIAVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_SIAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_SIAVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_CEPVR_URAVR_Dopamine
        print("Adding projection: NC_CEPVR_URAVR_Dopamine, from CEPVR to URAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_CEPVR_URAVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_CEPVR_URAVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma], weight: 1.0, delay 0.0
        h("a_URAVR[0].Soma syn_NC_CEPVR_URAVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_CEPVR[0].Soma a_URAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_CEPVR_URAVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA1_DD1_Acetylcholine
        print("Adding projection: NC_DA1_DD1_Acetylcholine, from DA1 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 4.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_DA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA1[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_DA1_VD1_Acetylcholine
        print("Adding projection: NC_DA1_VD1_Acetylcholine, from DA1 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 17.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_DA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA1[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 17.0))") # *->cell

        # ######################   Projection: NC_DA1_VD2_Acetylcholine
        print("Adding projection: NC_DA1_VD2_Acetylcholine, from DA1 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_DA1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA1[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA2_DD1_Acetylcholine
        print("Adding projection: NC_DA2_DD1_Acetylcholine, from DA2 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_DA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA2[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA2_VD1_Acetylcholine
        print("Adding projection: NC_DA2_VD1_Acetylcholine, from DA2 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 2.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_DA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA2[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DA2_VD2_Acetylcholine
        print("Adding projection: NC_DA2_VD2_Acetylcholine, from DA2 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 11.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_DA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA2[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_DA2_VD3_Acetylcholine
        print("Adding projection: NC_DA2_VD3_Acetylcholine, from DA2 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 5.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_DA2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA2[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DA3_AS4_Acetylcholine
        print("Adding projection: NC_DA3_AS4_Acetylcholine, from DA3 to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_DA3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA3[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA3_DA4_Acetylcholine
        print("Adding projection: NC_DA3_DA4_Acetylcholine, from DA3 to DA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA3_DA4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA3_DA4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 2.0, delay 0.0
        h("a_DA4[0].Soma syn_NC_DA3_DA4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA3[0].Soma a_DA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA3_DA4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DA3_DB3_Acetylcholine
        print("Adding projection: NC_DA3_DB3_Acetylcholine, from DA3 to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA3_DB3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA3_DB3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_DA3_DB3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA3[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA3_DB3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA3_DD2_Acetylcholine
        print("Adding projection: NC_DA3_DD2_Acetylcholine, from DA3 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 1.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_DA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA3[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA3_VD3_Acetylcholine
        print("Adding projection: NC_DA3_VD3_Acetylcholine, from DA3 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 25.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_DA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA3[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 25.0))") # *->cell

        # ######################   Projection: NC_DA3_VD4_Acetylcholine
        print("Adding projection: NC_DA3_VD4_Acetylcholine, from DA3 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 6.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_DA3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA3[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_DA4_DA3_Acetylcholine
        print("Adding projection: NC_DA4_DA3_Acetylcholine, from DA4 to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA4_DA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA4_DA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 1.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_DA4_DA3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA4[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA4_DA3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA4_DB3_Acetylcholine
        print("Adding projection: NC_DA4_DB3_Acetylcholine, from DA4 to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA4_DB3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA4_DB3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_DA4_DB3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA4[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA4_DB3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA4_DD2_Acetylcholine
        print("Adding projection: NC_DA4_DD2_Acetylcholine, from DA4 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 1.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_DA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA4[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA4_VD4_Acetylcholine
        print("Adding projection: NC_DA4_VD4_Acetylcholine, from DA4 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 12.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_DA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA4[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_DA4_VD5_Acetylcholine
        print("Adding projection: NC_DA4_VD5_Acetylcholine, from DA4 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA4_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA4_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 15.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_DA4_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA4[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA4_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_DA5_DB4_Acetylcholine
        print("Adding projection: NC_DA5_DB4_Acetylcholine, from DA5 to DB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA5_DB4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA5_DB4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0, delay 0.0
        h("a_DB4[0].Soma syn_NC_DA5_DB4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA5[0].Soma a_DB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA5_DB4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA5_VD5_Acetylcholine
        print("Adding projection: NC_DA5_VD5_Acetylcholine, from DA5 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 1.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_DA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA5[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA5_VD6_Acetylcholine
        print("Adding projection: NC_DA5_VD6_Acetylcholine, from DA5 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 16.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_DA5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA5[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_DA6_VD4_Acetylcholine
        print("Adding projection: NC_DA6_VD4_Acetylcholine, from DA6 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA6_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA6_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 4.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_DA6_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA6[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA6_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_DA6_VD5_Acetylcholine
        print("Adding projection: NC_DA6_VD5_Acetylcholine, from DA6 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 3.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_DA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA6[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DA6_VD6_Acetylcholine
        print("Adding projection: NC_DA6_VD6_Acetylcholine, from DA6 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 3.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_DA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA6[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DA9_DD6_Acetylcholine
        print("Adding projection: NC_DA9_DD6_Acetylcholine, from DA9 to DD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA9_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA9_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 1.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_DA9_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA9[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA9_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DA9_VD13_Acetylcholine
        print("Adding projection: NC_DA9_VD13_Acetylcholine, from DA9 to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DA9_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DA9_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 1.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_DA9_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DA9[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_DA9_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB1_AS1_Acetylcholine
        print("Adding projection: NC_DB1_AS1_Acetylcholine, from DB1 to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_AS1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_AS1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_DB1_AS1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_AS1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB1_AS2_Acetylcholine
        print("Adding projection: NC_DB1_AS2_Acetylcholine, from DB1 to AS2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_AS2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_AS2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 1.0, delay 0.0
        h("a_AS2[0].Soma syn_NC_DB1_AS2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_AS2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_AS2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB1_AS3_Acetylcholine
        print("Adding projection: NC_DB1_AS3_Acetylcholine, from DB1 to AS3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_AS3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_AS3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0, delay 0.0
        h("a_AS3[0].Soma syn_NC_DB1_AS3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_AS3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_AS3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB1_DD1_Acetylcholine
        print("Adding projection: NC_DB1_DD1_Acetylcholine, from DB1 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 10.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_DB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_DB1_VD1_Acetylcholine
        print("Adding projection: NC_DB1_VD1_Acetylcholine, from DB1 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 21.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_DB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 21.0))") # *->cell

        # ######################   Projection: NC_DB1_VD2_Acetylcholine
        print("Adding projection: NC_DB1_VD2_Acetylcholine, from DB1 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 15.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_DB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_DB1_VD3_Acetylcholine
        print("Adding projection: NC_DB1_VD3_Acetylcholine, from DB1 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB1_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB1_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_DB1_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB1[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB1_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB2_DA3_Acetylcholine
        print("Adding projection: NC_DB2_DA3_Acetylcholine, from DB2 to DA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB2_DA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB2_DA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 5.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_DB2_DA3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB2[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB2_DA3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DB2_DD2_Acetylcholine
        print("Adding projection: NC_DB2_DD2_Acetylcholine, from DB2 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 2.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_DB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB2[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DB2_VD3_Acetylcholine
        print("Adding projection: NC_DB2_VD3_Acetylcholine, from DB2 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 23.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_DB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB2[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 23.0))") # *->cell

        # ######################   Projection: NC_DB2_VD4_Acetylcholine
        print("Adding projection: NC_DB2_VD4_Acetylcholine, from DB2 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB2_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB2_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 14.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_DB2_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB2[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB2_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 14.0))") # *->cell

        # ######################   Projection: NC_DB2_VD5_Acetylcholine
        print("Adding projection: NC_DB2_VD5_Acetylcholine, from DB2 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB2_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB2_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 1.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_DB2_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB2[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB2_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB3_AS4_Acetylcholine
        print("Adding projection: NC_DB3_AS4_Acetylcholine, from DB3 to AS4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0, delay 0.0
        h("a_AS4[0].Soma syn_NC_DB3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_AS4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_AS4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB3_AS5_Acetylcholine
        print("Adding projection: NC_DB3_AS5_Acetylcholine, from DB3 to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_AS5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_AS5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_DB3_AS5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_AS5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DB3_DD2_Acetylcholine
        print("Adding projection: NC_DB3_DD2_Acetylcholine, from DB3 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 4.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_DB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_DB3_DD3_Acetylcholine
        print("Adding projection: NC_DB3_DD3_Acetylcholine, from DB3 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 10.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_DB3_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_DB3_VD4_Acetylcholine
        print("Adding projection: NC_DB3_VD4_Acetylcholine, from DB3 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 9.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_DB3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_DB3_VD5_Acetylcholine
        print("Adding projection: NC_DB3_VD5_Acetylcholine, from DB3 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 26.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_DB3_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 26.0))") # *->cell

        # ######################   Projection: NC_DB3_VD6_Acetylcholine
        print("Adding projection: NC_DB3_VD6_Acetylcholine, from DB3 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB3_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB3_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 7.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_DB3_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB3[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB3_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_DB4_DD3_Acetylcholine
        print("Adding projection: NC_DB4_DD3_Acetylcholine, from DB4 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 3.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_DB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB4[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DB4_VD6_Acetylcholine
        print("Adding projection: NC_DB4_VD6_Acetylcholine, from DB4 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB4_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB4_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 13.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_DB4_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB4[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB4_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_DB7_VD13_Acetylcholine
        print("Adding projection: NC_DB7_VD13_Acetylcholine, from DB7 to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_DB7_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_DB7_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 2.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_DB7_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_DB7[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_DB7_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DD1_DA2_GABA
        print("Adding projection: NC_DD1_DA2_GABA, from DD1 to DA2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD1_DA2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD1_DA2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 2.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_DD1_DA2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD1[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD1_DA2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DD1_VD2_GABA
        print("Adding projection: NC_DD1_VD2_GABA, from DD1 to VD2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD1_VD2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD1_VD2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_DD1_VD2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD1[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD1_VD2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DD2_DA3_GABA
        print("Adding projection: NC_DD2_DA3_GABA, from DD2 to DA3 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD2_DA3_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD2_DA3_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 1.0, delay 0.0
        h("a_DA3[0].Soma syn_NC_DD2_DA3_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD2[0].Soma a_DA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD2_DA3_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DD2_VD3_GABA
        print("Adding projection: NC_DD2_VD3_GABA, from DD2 to VD3 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD2_VD3_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD2_VD3_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_DD2_VD3_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD2[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD2_VD3_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DD2_VD4_GABA
        print("Adding projection: NC_DD2_VD4_GABA, from DD2 to VD4 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD2_VD4_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD2_VD4_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 1.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_DD2_VD4_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD2[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD2_VD4_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DD5_VB8_GABA
        print("Adding projection: NC_DD5_VB8_GABA, from DD5 to VB8 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD5_VB8_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD5_VB8_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 1.0, delay 0.0
        h("a_VB8[0].Soma syn_NC_DD5_VB8_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD5[0].Soma a_VB8[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD5_VB8_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DD5_VD9_GABA
        print("Adding projection: NC_DD5_VD9_GABA, from DD5 to VD9 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DD5_VD9_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DD5_VD9_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma], weight: 1.0, delay 0.0
        h("a_VD9[0].Soma syn_NC_DD5_VD9_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DD5[0].Soma a_VD9[0].synlist.append(new NetCon(&v(0.5), syn_NC_DD5_VD9_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_AIZL_GABA
        print("Adding projection: NC_DVA_AIZL_GABA, from DVA to AIZL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AIZL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AIZL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 3.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_DVA_AIZL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AIZL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_AQR_GABA
        print("Adding projection: NC_DVA_AQR_GABA, from DVA to AQR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AQR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AQR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 4.0, delay 0.0
        h("a_AQR[0].Soma syn_NC_DVA_AQR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AQR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_DVA_AUAL_GABA
        print("Adding projection: NC_DVA_AUAL_GABA, from DVA to AUAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AUAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AUAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAL[0].Soma syn_NC_DVA_AUAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AUAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_AUAR_GABA
        print("Adding projection: NC_DVA_AUAR_GABA, from DVA to AUAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AUAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AUAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_DVA_AUAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AUAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_AVAL_GABA
        print("Adding projection: NC_DVA_AVAL_GABA, from DVA to AVAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_DVA_AVAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AVAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_AVAR_GABA
        print("Adding projection: NC_DVA_AVAR_GABA, from DVA to AVAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_DVA_AVAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AVAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_AVBL_GABA
        print("Adding projection: NC_DVA_AVBL_GABA, from DVA to AVBL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AVBL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AVBL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_DVA_AVBL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AVBL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_AVEL_GABA
        print("Adding projection: NC_DVA_AVEL_GABA, from DVA to AVEL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AVEL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AVEL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 9.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_DVA_AVEL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AVEL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_DVA_AVER_GABA
        print("Adding projection: NC_DVA_AVER_GABA, from DVA to AVER with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_AVER_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_AVER_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 5.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_DVA_AVER_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_AVER_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DVA_DB2_GABA
        print("Adding projection: NC_DVA_DB2_GABA, from DVA to DB2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_DB2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_DB2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 1.0, delay 0.0
        h("a_DB2[0].Soma syn_NC_DVA_DB2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_DB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_DB2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_DB3_GABA
        print("Adding projection: NC_DVA_DB3_GABA, from DVA to DB3 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_DB3_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_DB3_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 2.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_DVA_DB3_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_DB3_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVA_DB4_GABA
        print("Adding projection: NC_DVA_DB4_GABA, from DVA to DB4 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_DB4_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_DB4_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0, delay 0.0
        h("a_DB4[0].Soma syn_NC_DVA_DB4_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_DB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_DB4_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_DB5_GABA
        print("Adding projection: NC_DVA_DB5_GABA, from DVA to DB5 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_DB5_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_DB5_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 1.0, delay 0.0
        h("a_DB5[0].Soma syn_NC_DVA_DB5_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_DB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_DB5_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_DB6_GABA
        print("Adding projection: NC_DVA_DB6_GABA, from DVA to DB6 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_DB6_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_DB6_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 2.0, delay 0.0
        h("a_DB6[0].Soma syn_NC_DVA_DB6_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_DB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_DB6_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVA_DB7_GABA
        print("Adding projection: NC_DVA_DB7_GABA, from DVA to DB7 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_DB7_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_DB7_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma], weight: 1.0, delay 0.0
        h("a_DB7[0].Soma syn_NC_DVA_DB7_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_DB7[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_DB7_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_PDEL_GABA
        print("Adding projection: NC_DVA_PDEL_GABA, from DVA to PDEL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_PDEL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_PDEL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 3.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_DVA_PDEL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_PDEL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_PVCL_GABA
        print("Adding projection: NC_DVA_PVCL_GABA, from DVA to PVCL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_PVCL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_PVCL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_DVA_PVCL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_PVCL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_PVCR_GABA
        print("Adding projection: NC_DVA_PVCR_GABA, from DVA to PVCR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_PVCR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_PVCR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_DVA_PVCR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_PVCR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_PVR_GABA
        print("Adding projection: NC_DVA_PVR_GABA, from DVA to PVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_PVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_PVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_DVA_PVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_PVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_RIAL_GABA
        print("Adding projection: NC_DVA_RIAL_GABA, from DVA to RIAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_DVA_RIAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_RIAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_RIAR_GABA
        print("Adding projection: NC_DVA_RIAR_GABA, from DVA to RIAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_DVA_RIAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_RIAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_RIMR_GABA
        print("Adding projection: NC_DVA_RIMR_GABA, from DVA to RIMR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_RIMR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_RIMR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_DVA_RIMR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_RIMR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_RIR_GABA
        print("Adding projection: NC_DVA_RIR_GABA, from DVA to RIR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_RIR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_RIR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_DVA_RIR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_RIR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_SAADR_GABA
        print("Adding projection: NC_DVA_SAADR_GABA, from DVA to SAADR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SAADR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SAADR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_DVA_SAADR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SAADR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_SAAVL_GABA
        print("Adding projection: NC_DVA_SAAVL_GABA, from DVA to SAAVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SAAVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SAAVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SAAVL[0].Soma syn_NC_DVA_SAAVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SAAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SAAVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_SAAVR_GABA
        print("Adding projection: NC_DVA_SAAVR_GABA, from DVA to SAAVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SAAVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SAAVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAAVR[0].Soma syn_NC_DVA_SAAVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SAAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SAAVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_SABD_GABA
        print("Adding projection: NC_DVA_SABD_GABA, from DVA to SABD with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SABD_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SABD_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_DVA_SABD_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SABD_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_SMBDL_GABA
        print("Adding projection: NC_DVA_SMBDL_GABA, from DVA to SMBDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SMBDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SMBDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 3.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_DVA_SMBDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SMBDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_SMBDR_GABA
        print("Adding projection: NC_DVA_SMBDR_GABA, from DVA to SMBDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SMBDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SMBDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_DVA_SMBDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SMBDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVA_SMBVL_GABA
        print("Adding projection: NC_DVA_SMBVL_GABA, from DVA to SMBVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SMBVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SMBVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_DVA_SMBVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SMBVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVA_SMBVR_GABA
        print("Adding projection: NC_DVA_SMBVR_GABA, from DVA to SMBVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_SMBVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_SMBVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBVR[0].Soma syn_NC_DVA_SMBVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_SMBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_SMBVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVA_VA12_GABA
        print("Adding projection: NC_DVA_VA12_GABA, from DVA to VA12 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_VA12_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_VA12_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_DVA_VA12_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_VA12_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_VA2_GABA
        print("Adding projection: NC_DVA_VA2_GABA, from DVA to VA2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_VA2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_VA2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_DVA_VA2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_VA2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_VB1_GABA
        print("Adding projection: NC_DVA_VB1_GABA, from DVA to VB1 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_VB1_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_VB1_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 1.0, delay 0.0
        h("a_VB1[0].Soma syn_NC_DVA_VB1_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_VB1[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_VB1_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVA_VB11_GABA
        print("Adding projection: NC_DVA_VB11_GABA, from DVA to VB11 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVA_VB11_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVA_VB11_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma], weight: 2.0, delay 0.0
        h("a_VB11[0].Soma syn_NC_DVA_VB11_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVA[0].Soma a_VB11[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVA_VB11_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVB_AVL_GABA
        print("Adding projection: NC_DVB_AVL_GABA, from DVB to AVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_AVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_AVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_DVB_AVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_AVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DVB_DA8_GABA
        print("Adding projection: NC_DVB_DA8_GABA, from DVB to DA8 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_DA8_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_DA8_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 2.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_DVB_DA8_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_DA8_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVB_DD6_GABA
        print("Adding projection: NC_DVB_DD6_GABA, from DVB to DD6 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_DD6_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_DD6_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 3.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_DVB_DD6_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_DD6_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVB_DVC_GABA
        print("Adding projection: NC_DVB_DVC_GABA, from DVB to DVC with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_DVC_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_DVC_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 3.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_DVB_DVC_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_DVC_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVB_PDA_GABA
        print("Adding projection: NC_DVB_PDA_GABA, from DVB to PDA with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_PDA_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_PDA_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma], weight: 1.0, delay 0.0
        h("a_PDA[0].Soma syn_NC_DVB_PDA_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_PDA[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_PDA_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVB_PHCL_GABA
        print("Adding projection: NC_DVB_PHCL_GABA, from DVB to PHCL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_PHCL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_PHCL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PHCL[0].Soma syn_NC_DVB_PHCL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_PHCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_PHCL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVB_PVPL_GABA
        print("Adding projection: NC_DVB_PVPL_GABA, from DVB to PVPL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVB_PVPL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVB_PVPL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPL[0].Soma syn_NC_DVB_PVPL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVB[0].Soma a_PVPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVB_PVPL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_AIBL_GABA
        print("Adding projection: NC_DVC_AIBL_GABA, from DVC to AIBL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AIBL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AIBL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_DVC_AIBL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AIBL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_AIBR_GABA
        print("Adding projection: NC_DVC_AIBR_GABA, from DVC to AIBR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AIBR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AIBR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 3.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_DVC_AIBR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AIBR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_DVC_AVAL_GABA
        print("Adding projection: NC_DVC_AVAL_GABA, from DVC to AVAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_DVC_AVAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AVAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DVC_AVAR_GABA
        print("Adding projection: NC_DVC_AVAR_GABA, from DVC to AVAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_DVC_AVAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AVAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_DVC_AVBL_GABA
        print("Adding projection: NC_DVC_AVBL_GABA, from DVC to AVBL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AVBL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AVBL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_DVC_AVBL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AVBL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_AVKL_GABA
        print("Adding projection: NC_DVC_AVKL_GABA, from DVC to AVKL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AVKL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AVKL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_DVC_AVKL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AVKL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVC_AVKR_GABA
        print("Adding projection: NC_DVC_AVKR_GABA, from DVC to AVKR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_AVKR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_AVKR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_DVC_AVKR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_AVKR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_PVT_GABA
        print("Adding projection: NC_DVC_PVT_GABA, from DVC to PVT with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_PVT_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_PVT_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_DVC_PVT_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_PVT_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_RIBL_GABA
        print("Adding projection: NC_DVC_RIBL_GABA, from DVC to RIBL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_RIBL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_RIBL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_DVC_RIBL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_RIBL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_RIBR_GABA
        print("Adding projection: NC_DVC_RIBR_GABA, from DVC to RIBR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_RIBR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_RIBR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_DVC_RIBR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_RIBR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_DVC_RIGL_GABA
        print("Adding projection: NC_DVC_RIGL_GABA, from DVC to RIGL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_RIGL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_RIGL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_DVC_RIGL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_RIGL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DVC_RIGR_GABA
        print("Adding projection: NC_DVC_RIGR_GABA, from DVC to RIGR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_RIGR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_RIGR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_DVC_RIGR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_RIGR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_DVC_RMFL_GABA
        print("Adding projection: NC_DVC_RMFL_GABA, from DVC to RMFL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_RMFL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_RMFL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_DVC_RMFL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_RMFL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_DVC_RMFR_GABA
        print("Adding projection: NC_DVC_RMFR_GABA, from DVC to RMFR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_DVC_RMFR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_DVC_RMFR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_DVC_RMFR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_DVC[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_DVC_RMFR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_FLPL_ADEL_Glutamate
        print("Adding projection: NC_FLPL_ADEL_Glutamate, from FLPL to ADEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_ADEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_ADEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 2.0, delay 0.0
        h("a_ADEL[0].Soma syn_NC_FLPL_ADEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_ADEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_ADEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_FLPL_ADER_Glutamate
        print("Adding projection: NC_FLPL_ADER_Glutamate, from FLPL to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_ADER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_ADER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 2.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_FLPL_ADER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_ADER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_FLPL_AIBL_Glutamate
        print("Adding projection: NC_FLPL_AIBL_Glutamate, from FLPL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_FLPL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPL_AIBR_Glutamate
        print("Adding projection: NC_FLPL_AIBR_Glutamate, from FLPL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_FLPL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_FLPL_AVAL_Glutamate
        print("Adding projection: NC_FLPL_AVAL_Glutamate, from FLPL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 14.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_FLPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 14.0))") # *->cell

        # ######################   Projection: NC_FLPL_AVAR_Glutamate
        print("Adding projection: NC_FLPL_AVAR_Glutamate, from FLPL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 17.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_FLPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 17.0))") # *->cell

        # ######################   Projection: NC_FLPL_AVBL_Glutamate
        print("Adding projection: NC_FLPL_AVBL_Glutamate, from FLPL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_FLPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_FLPL_AVBR_Glutamate
        print("Adding projection: NC_FLPL_AVBR_Glutamate, from FLPL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_FLPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_FLPL_AVDL_Glutamate
        print("Adding projection: NC_FLPL_AVDL_Glutamate, from FLPL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_FLPL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_FLPL_AVDR_Glutamate
        print("Adding projection: NC_FLPL_AVDR_Glutamate, from FLPL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 13.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_FLPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_FLPL_DVA_Glutamate
        print("Adding projection: NC_FLPL_DVA_Glutamate, from FLPL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_FLPL_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPL_FLPR_Glutamate
        print("Adding projection: NC_FLPL_FLPR_Glutamate, from FLPL to FLPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPL_FLPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPL_FLPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPR[0].Soma syn_NC_FLPL_FLPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPL[0].Soma a_FLPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPL_FLPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_ADER_Glutamate
        print("Adding projection: NC_FLPR_ADER_Glutamate, from FLPR to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_ADER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_ADER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_FLPR_ADER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_ADER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_AIBR_Glutamate
        print("Adding projection: NC_FLPR_AIBR_Glutamate, from FLPR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_FLPR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVAL_Glutamate
        print("Adding projection: NC_FLPR_AVAL_Glutamate, from FLPR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 12.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_FLPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVAR_Glutamate
        print("Adding projection: NC_FLPR_AVAR_Glutamate, from FLPR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_FLPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVBL_Glutamate
        print("Adding projection: NC_FLPR_AVBL_Glutamate, from FLPR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_FLPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVBR_Glutamate
        print("Adding projection: NC_FLPR_AVBR_Glutamate, from FLPR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_FLPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVDL_Glutamate
        print("Adding projection: NC_FLPR_AVDL_Glutamate, from FLPR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 10.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_FLPR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVDR_Glutamate
        print("Adding projection: NC_FLPR_AVDR_Glutamate, from FLPR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_FLPR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVEL_Glutamate
        print("Adding projection: NC_FLPR_AVEL_Glutamate, from FLPR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_FLPR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVER_Glutamate
        print("Adding projection: NC_FLPR_AVER_Glutamate, from FLPR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_FLPR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_FLPR_AVJR_Glutamate
        print("Adding projection: NC_FLPR_AVJR_Glutamate, from FLPR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_FLPR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_DVA_Glutamate
        print("Adding projection: NC_FLPR_DVA_Glutamate, from FLPR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_FLPR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_FLPR_FLPL_Glutamate
        print("Adding projection: NC_FLPR_FLPL_Glutamate, from FLPR to FLPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_FLPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_FLPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 2.0, delay 0.0
        h("a_FLPL[0].Soma syn_NC_FLPR_FLPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_FLPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_FLPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_FLPR_PVCL_Glutamate
        print("Adding projection: NC_FLPR_PVCL_Glutamate, from FLPR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_FLPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_FLPR_VB1_Glutamate
        print("Adding projection: NC_FLPR_VB1_Glutamate, from FLPR to VB1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_FLPR_VB1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_FLPR_VB1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 1.0, delay 0.0
        h("a_VB1[0].Soma syn_NC_FLPR_VB1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_FLPR[0].Soma a_VB1[0].synlist.append(new NetCon(&v(0.5), syn_NC_FLPR_VB1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_AIAL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AIAL_Serotonin_Acetylcholine, from HSNL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AIAL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AIAL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_HSNL_AIAL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AIAL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_AIZL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AIZL_Serotonin_Acetylcholine, from HSNL to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_HSNL_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNL_AIZR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AIZR_Serotonin_Acetylcholine, from HSNL to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_HSNL_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_ASHL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_ASHL_Serotonin_Acetylcholine, from HSNL to ASHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHL[0].Soma syn_NC_HSNL_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_ASHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_ASHR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_ASHR_Serotonin_Acetylcholine, from HSNL to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_ASHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_ASHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 2.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_HSNL_ASHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_ASHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNL_ASJR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_ASJR_Serotonin_Acetylcholine, from HSNL to ASJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_ASJR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_ASJR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASJR[0].Soma syn_NC_HSNL_ASJR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_ASJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_ASJR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_ASKL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_ASKL_Serotonin_Acetylcholine, from HSNL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_ASKL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_ASKL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_HSNL_ASKL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_ASKL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_AVDR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AVDR_Serotonin_Acetylcholine, from HSNL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_HSNL_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNL_AVFL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AVFL_Serotonin_Acetylcholine, from HSNL to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_HSNL_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_HSNL_AVJL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AVJL_Serotonin_Acetylcholine, from HSNL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_HSNL_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_AWBL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AWBL_Serotonin_Acetylcholine, from HSNL to AWBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBL[0].Soma syn_NC_HSNL_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AWBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNL_AWBR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_AWBR_Serotonin_Acetylcholine, from HSNL to AWBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_AWBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_AWBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AWBR[0].Soma syn_NC_HSNL_AWBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_AWBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_AWBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNL_HSNR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_HSNR_Serotonin_Acetylcholine, from HSNL to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 3.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_HSNL_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_HSNL_RIFL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_RIFL_Serotonin_Acetylcholine, from HSNL to RIFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_RIFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_RIFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIFL[0].Soma syn_NC_HSNL_RIFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_RIFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_RIFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_HSNL_RIML_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_RIML_Serotonin_Acetylcholine, from HSNL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_RIML_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_RIML_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_HSNL_RIML_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_RIML_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNL_SABVL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_SABVL_Serotonin_Acetylcholine, from HSNL to SABVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_SABVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_SABVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SABVL[0].Soma syn_NC_HSNL_SABVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_SABVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_SABVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNL_VC5_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNL_VC5_Serotonin_Acetylcholine, from HSNL to VC5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNL_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNL_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma], weight: 3.0, delay 0.0
        h("a_VC5[0].Soma syn_NC_HSNL_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNL[0].Soma a_VC5[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNL_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_HSNR_AIBL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AIBL_Serotonin_Acetylcholine, from HSNR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AIBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AIBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_HSNR_AIBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AIBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AIBR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AIBR_Serotonin_Acetylcholine, from HSNR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AIBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AIBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_HSNR_AIBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AIBR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AIZL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AIZL_Serotonin_Acetylcholine, from HSNR to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_HSNR_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AIZL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AIZR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AIZR_Serotonin_Acetylcholine, from HSNR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_HSNR_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AIZR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AS5_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AS5_Serotonin_Acetylcholine, from HSNR to AS5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AS5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AS5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0, delay 0.0
        h("a_AS5[0].Soma syn_NC_HSNR_AS5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AS5[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AS5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_ASHL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_ASHL_Serotonin_Acetylcholine, from HSNR to ASHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 2.0, delay 0.0
        h("a_ASHL[0].Soma syn_NC_HSNR_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_ASHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_ASHL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_HSNR_AVDR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AVDR_Serotonin_Acetylcholine, from HSNR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_HSNR_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AVDR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AVFL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AVFL_Serotonin_Acetylcholine, from HSNR to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_HSNR_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AVJL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AVJL_Serotonin_Acetylcholine, from HSNR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_HSNR_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AVJL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AVL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AVL_Serotonin_Acetylcholine, from HSNR to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_HSNR_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_AWBL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_AWBL_Serotonin_Acetylcholine, from HSNR to AWBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBL[0].Soma syn_NC_HSNR_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_AWBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_AWBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_BDUR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_BDUR_Serotonin_Acetylcholine, from HSNR to BDUR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_BDUR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_BDUR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma], weight: 1.0, delay 0.0
        h("a_BDUR[0].Soma syn_NC_HSNR_BDUR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_BDUR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_BDUR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_DA5_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_DA5_Serotonin_Acetylcholine, from HSNR to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_DA5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_DA5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 1.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_HSNR_DA5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_DA5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_DA6_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_DA6_Serotonin_Acetylcholine, from HSNR to DA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_DA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_DA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 1.0, delay 0.0
        h("a_DA6[0].Soma syn_NC_HSNR_DA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_DA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_DA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_HSNL_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_HSNL_Serotonin_Acetylcholine, from HSNR to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_HSNR_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_PVNR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_PVNR_Serotonin_Acetylcholine, from HSNR to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_HSNR_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_PVQR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_PVQR_Serotonin_Acetylcholine, from HSNR to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_HSNR_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_RIFR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_RIFR_Serotonin_Acetylcholine, from HSNR to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_RIFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_RIFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_HSNR_RIFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_RIFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_HSNR_RMGR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_RMGR_Serotonin_Acetylcholine, from HSNR to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_RMGR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_RMGR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_HSNR_RMGR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_RMGR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_SABD_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_SABD_Serotonin_Acetylcholine, from HSNR to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_SABD_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_SABD_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_HSNR_SABD_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_SABD_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_SABVR_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_SABVR_Serotonin_Acetylcholine, from HSNR to SABVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_SABVR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_SABVR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SABVR[0].Soma syn_NC_HSNR_SABVR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_SABVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_SABVR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_VA6_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_VA6_Serotonin_Acetylcholine, from HSNR to VA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_VA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_VA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 1.0, delay 0.0
        h("a_VA6[0].Soma syn_NC_HSNR_VA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_VA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_VA6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_VC2_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_VC2_Serotonin_Acetylcholine, from HSNR to VC2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 3.0, delay 0.0
        h("a_VC2[0].Soma syn_NC_HSNR_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_VC2[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_HSNR_VC3_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_VC3_Serotonin_Acetylcholine, from HSNR to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_HSNR_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_HSNR_VD4_Serotonin_Acetylcholine
        print("Adding projection: NC_HSNR_VD4_Serotonin_Acetylcholine, from HSNR to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_HSNR_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_HSNR_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 2.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_HSNR_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_HSNR[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_HSNR_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I1L_I3_Acetylcholine
        print("Adding projection: NC_I1L_I3_Acetylcholine, from I1L to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I1L_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I1L_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0, delay 0.0
        h("a_I3[0].Soma syn_NC_I1L_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I1L[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_I1L_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I1R_I3_Acetylcholine
        print("Adding projection: NC_I1R_I3_Acetylcholine, from I1R to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I1R_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I1R_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0, delay 0.0
        h("a_I3[0].Soma syn_NC_I1R_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I1R[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_I1R_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I2L_M1_Glutamate
        print("Adding projection: NC_I2L_M1_Glutamate, from I2L to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I2L_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I2L_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 2.0, delay 0.0
        h("a_M1[0].Soma syn_NC_I2L_M1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I2L[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_I2L_M1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I2R_M1_Glutamate
        print("Adding projection: NC_I2R_M1_Glutamate, from I2R to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I2R_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I2R_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 2.0, delay 0.0
        h("a_M1[0].Soma syn_NC_I2R_M1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I2R[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_I2R_M1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I3_M1_Glutamate
        print("Adding projection: NC_I3_M1_Glutamate, from I3 to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I3_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I3_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 2.0, delay 0.0
        h("a_M1[0].Soma syn_NC_I3_M1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I3[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_I3_M1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I3_M2L_Glutamate
        print("Adding projection: NC_I3_M2L_Glutamate, from I3 to M2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I3_M2L_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I3_M2L_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma], weight: 1.0, delay 0.0
        h("a_M2L[0].Soma syn_NC_I3_M2L_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I3[0].Soma a_M2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_I3_M2L_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I3_M2R_Glutamate
        print("Adding projection: NC_I3_M2R_Glutamate, from I3 to M2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I3_M2R_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I3_M2R_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 1.0, delay 0.0
        h("a_M2R[0].Soma syn_NC_I3_M2R_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I3[0].Soma a_M2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_I3_M2R_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I4_I2L_Glutamate
        print("Adding projection: NC_I4_I2L_Glutamate, from I4 to I2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I4_I2L_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I4_I2L_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma], weight: 5.0, delay 0.0
        h("a_I2L[0].Soma syn_NC_I4_I2L_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I4[0].Soma a_I2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_I4_I2L_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_I4_I2R_Glutamate
        print("Adding projection: NC_I4_I2R_Glutamate, from I4 to I2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I4_I2R_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I4_I2R_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma], weight: 5.0, delay 0.0
        h("a_I2R[0].Soma syn_NC_I4_I2R_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I4[0].Soma a_I2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_I4_I2R_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_I4_I5_Glutamate
        print("Adding projection: NC_I4_I5_Glutamate, from I4 to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I4_I5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I4_I5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 2.0, delay 0.0
        h("a_I5[0].Soma syn_NC_I4_I5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I4[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_I4_I5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I4_M1_Glutamate
        print("Adding projection: NC_I4_M1_Glutamate, from I4 to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I4_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I4_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 2.0, delay 0.0
        h("a_M1[0].Soma syn_NC_I4_M1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I4[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_I4_M1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I5_I1L_Serotonin_Glutamate
        print("Adding projection: NC_I5_I1L_Serotonin_Glutamate, from I5 to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I5_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I5_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 3.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_I5_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I5[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_I5_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_I5_I1R_Serotonin_Glutamate
        print("Adding projection: NC_I5_I1R_Serotonin_Glutamate, from I5 to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I5_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I5_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 2.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_I5_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I5[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_I5_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I5_M1_Serotonin_Glutamate
        print("Adding projection: NC_I5_M1_Serotonin_Glutamate, from I5 to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I5_M1_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I5_M1_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0, delay 0.0
        h("a_M1[0].Soma syn_NC_I5_M1_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I5[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_I5_M1_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I5_M5_Serotonin_Glutamate
        print("Adding projection: NC_I5_M5_Serotonin_Glutamate, from I5 to M5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I5_M5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I5_M5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 1.0, delay 0.0
        h("a_M5[0].Soma syn_NC_I5_M5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I5[0].Soma a_M5[0].synlist.append(new NetCon(&v(0.5), syn_NC_I5_M5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I5_MI_Serotonin_Glutamate
        print("Adding projection: NC_I5_MI_Serotonin_Glutamate, from I5 to MI with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I5_MI_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I5_MI_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MI[0].Soma], weight: 2.0, delay 0.0
        h("a_MI[0].Soma syn_NC_I5_MI_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I5[0].Soma a_MI[0].synlist.append(new NetCon(&v(0.5), syn_NC_I5_MI_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I6_I2L_Acetylcholine
        print("Adding projection: NC_I6_I2L_Acetylcholine, from I6 to I2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I6_I2L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I6_I2L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma], weight: 2.0, delay 0.0
        h("a_I2L[0].Soma syn_NC_I6_I2L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I6[0].Soma a_I2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_I6_I2L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I6_I2R_Acetylcholine
        print("Adding projection: NC_I6_I2R_Acetylcholine, from I6 to I2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I6_I2R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I6_I2R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma], weight: 2.0, delay 0.0
        h("a_I2R[0].Soma syn_NC_I6_I2R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I6[0].Soma a_I2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_I6_I2R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I6_I3_Acetylcholine
        print("Adding projection: NC_I6_I3_Acetylcholine, from I6 to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I6_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I6_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0, delay 0.0
        h("a_I3[0].Soma syn_NC_I6_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I6[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_I6_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_I6_NSML_Acetylcholine
        print("Adding projection: NC_I6_NSML_Acetylcholine, from I6 to NSML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I6_NSML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I6_NSML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma], weight: 2.0, delay 0.0
        h("a_NSML[0].Soma syn_NC_I6_NSML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I6[0].Soma a_NSML[0].synlist.append(new NetCon(&v(0.5), syn_NC_I6_NSML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_I6_NSMR_Acetylcholine
        print("Adding projection: NC_I6_NSMR_Acetylcholine, from I6 to NSMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_I6_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_I6_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma], weight: 2.0, delay 0.0
        h("a_NSMR[0].Soma syn_NC_I6_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_I6[0].Soma a_NSMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_I6_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1DL_PVR_Glutamate
        print("Adding projection: NC_IL1DL_PVR_Glutamate, from IL1DL to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DL_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DL_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_IL1DL_PVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DL[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DL_PVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1DL_RIH_Glutamate
        print("Adding projection: NC_IL1DL_RIH_Glutamate, from IL1DL to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DL_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DL_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_IL1DL_RIH_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DL[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DL_RIH_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1DL_RIPL_Glutamate
        print("Adding projection: NC_IL1DL_RIPL_Glutamate, from IL1DL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_IL1DL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1DL_RMDDR_Glutamate
        print("Adding projection: NC_IL1DL_RMDDR_Glutamate, from IL1DL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_IL1DL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1DL_RMDVL_Glutamate
        print("Adding projection: NC_IL1DL_RMDVL_Glutamate, from IL1DL to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_IL1DL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DL[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL1DL_URYDL_Glutamate
        print("Adding projection: NC_IL1DL_URYDL_Glutamate, from IL1DL to URYDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DL_URYDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DL_URYDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma], weight: 1.0, delay 0.0
        h("a_URYDL[0].Soma syn_NC_IL1DL_URYDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DL[0].Soma a_URYDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DL_URYDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1DR_RIPR_Glutamate
        print("Adding projection: NC_IL1DR_RIPR_Glutamate, from IL1DR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_IL1DR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_IL1DR_RMDVR_Glutamate
        print("Adding projection: NC_IL1DR_RMDVR_Glutamate, from IL1DR to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1DR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1DR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 5.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_IL1DR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1DR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1DR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_IL1L_AVER_Glutamate
        print("Adding projection: NC_IL1L_AVER_Glutamate, from IL1L to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_IL1L_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1L_IL1DL_Glutamate
        print("Adding projection: NC_IL1L_IL1DL_Glutamate, from IL1L to IL1DL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_IL1DL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_IL1DL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1DL[0].Soma syn_NC_IL1L_IL1DL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_IL1DL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_IL1DL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1L_RMDDL_Glutamate
        print("Adding projection: NC_IL1L_RMDDL_Glutamate, from IL1L to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 5.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_IL1L_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_IL1L_RMDL_Glutamate
        print("Adding projection: NC_IL1L_RMDL_Glutamate, from IL1L to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_IL1L_RMDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_RMDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1L_RMDR_Glutamate
        print("Adding projection: NC_IL1L_RMDR_Glutamate, from IL1L to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_IL1L_RMDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_RMDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL1L_RMDVL_Glutamate
        print("Adding projection: NC_IL1L_RMDVL_Glutamate, from IL1L to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_IL1L_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL1L_RMDVR_Glutamate
        print("Adding projection: NC_IL1L_RMDVR_Glutamate, from IL1L to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_IL1L_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1L_RMER_Glutamate
        print("Adding projection: NC_IL1L_RMER_Glutamate, from IL1L to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1L_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1L_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL1L_RMER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1L[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1L_RMER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1R_AVEL_Glutamate
        print("Adding projection: NC_IL1R_AVEL_Glutamate, from IL1R to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_IL1R_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1R_AVER_Glutamate
        print("Adding projection: NC_IL1R_AVER_Glutamate, from IL1R to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_IL1R_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1R_IL1DR_Glutamate
        print("Adding projection: NC_IL1R_IL1DR_Glutamate, from IL1R to IL1DR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_IL1DR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_IL1DR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1DR[0].Soma syn_NC_IL1R_IL1DR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_IL1DR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_IL1DR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMDDL_Glutamate
        print("Adding projection: NC_IL1R_RMDDL_Glutamate, from IL1R to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_IL1R_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMDDR_Glutamate
        print("Adding projection: NC_IL1R_RMDDR_Glutamate, from IL1R to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_IL1R_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMDL_Glutamate
        print("Adding projection: NC_IL1R_RMDL_Glutamate, from IL1R to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_IL1R_RMDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMDR_Glutamate
        print("Adding projection: NC_IL1R_RMDR_Glutamate, from IL1R to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_IL1R_RMDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMDVL_Glutamate
        print("Adding projection: NC_IL1R_RMDVL_Glutamate, from IL1R to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_IL1R_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMDVR_Glutamate
        print("Adding projection: NC_IL1R_RMDVR_Glutamate, from IL1R to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_IL1R_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMEL_Glutamate
        print("Adding projection: NC_IL1R_RMEL_Glutamate, from IL1R to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_IL1R_RMEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1R_RMHL_Glutamate
        print("Adding projection: NC_IL1R_RMHL_Glutamate, from IL1R to RMHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_RMHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_RMHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHL[0].Soma syn_NC_IL1R_RMHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_RMHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_RMHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1R_URXR_Glutamate
        print("Adding projection: NC_IL1R_URXR_Glutamate, from IL1R to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1R_URXR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1R_URXR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 2.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_IL1R_URXR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1R[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1R_URXR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL1VL_IL1L_Glutamate
        print("Adding projection: NC_IL1VL_IL1L_Glutamate, from IL1VL to IL1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VL_IL1L_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VL_IL1L_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1L[0].Soma syn_NC_IL1VL_IL1L_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VL[0].Soma a_IL1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VL_IL1L_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1VL_RIPL_Glutamate
        print("Adding projection: NC_IL1VL_RIPL_Glutamate, from IL1VL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_IL1VL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL1VL_RMDDL_Glutamate
        print("Adding projection: NC_IL1VL_RMDDL_Glutamate, from IL1VL to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 5.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_IL1VL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VL[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_IL1VL_URYVL_Glutamate
        print("Adding projection: NC_IL1VL_URYVL_Glutamate, from IL1VL to URYVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VL_URYVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VL_URYVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma], weight: 1.0, delay 0.0
        h("a_URYVL[0].Soma syn_NC_IL1VL_URYVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VL[0].Soma a_URYVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VL_URYVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1VR_IL1R_Glutamate
        print("Adding projection: NC_IL1VR_IL1R_Glutamate, from IL1VR to IL1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VR_IL1R_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VR_IL1R_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1R[0].Soma syn_NC_IL1VR_IL1R_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VR[0].Soma a_IL1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VR_IL1R_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1VR_IL2VR_Glutamate
        print("Adding projection: NC_IL1VR_IL2VR_Glutamate, from IL1VR to IL2VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VR_IL2VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VR_IL2VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2VR[0].Soma syn_NC_IL1VR_IL2VR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VR[0].Soma a_IL2VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VR_IL2VR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL1VR_RIPR_Glutamate
        print("Adding projection: NC_IL1VR_RIPR_Glutamate, from IL1VR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 6.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_IL1VR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_IL1VR_RMDDR_Glutamate
        print("Adding projection: NC_IL1VR_RMDDR_Glutamate, from IL1VR to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 10.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_IL1VR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VR[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_IL1VR_RMER_Glutamate
        print("Adding projection: NC_IL1VR_RMER_Glutamate, from IL1VR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL1VR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL1VR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL1VR_RMER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL1VR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL1VR_RMER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DL_AUAL_Serotonin
        print("Adding projection: NC_IL2DL_AUAL_Serotonin, from IL2DL to AUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_AUAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_AUAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAL[0].Soma syn_NC_IL2DL_AUAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_AUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_AUAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DL_IL1DL_Serotonin
        print("Adding projection: NC_IL2DL_IL1DL_Serotonin, from IL2DL to IL1DL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_IL1DL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_IL1DL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 7.0, delay 0.0
        h("a_IL1DL[0].Soma syn_NC_IL2DL_IL1DL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_IL1DL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_IL1DL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_IL2DL_OLQDL_Serotonin
        print("Adding projection: NC_IL2DL_OLQDL_Serotonin, from IL2DL to OLQDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 2.0, delay 0.0
        h("a_OLQDL[0].Soma syn_NC_IL2DL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_OLQDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2DL_RIBL_Serotonin
        print("Adding projection: NC_IL2DL_RIBL_Serotonin, from IL2DL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_RIBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_RIBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_IL2DL_RIBL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_RIBL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DL_RIPL_Serotonin
        print("Adding projection: NC_IL2DL_RIPL_Serotonin, from IL2DL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_RIPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_RIPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 10.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_IL2DL_RIPL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_RIPL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_IL2DL_RMEL_Serotonin
        print("Adding projection: NC_IL2DL_RMEL_Serotonin, from IL2DL to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_IL2DL_RMEL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_RMEL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL2DL_RMER_Serotonin
        print("Adding projection: NC_IL2DL_RMER_Serotonin, from IL2DL to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 3.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL2DL_RMER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_RMER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2DL_URADL_Serotonin
        print("Adding projection: NC_IL2DL_URADL_Serotonin, from IL2DL to URADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DL_URADL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DL_URADL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma], weight: 3.0, delay 0.0
        h("a_URADL[0].Soma syn_NC_IL2DL_URADL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DL[0].Soma a_URADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DL_URADL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2DR_CEPDR_Serotonin
        print("Adding projection: NC_IL2DR_CEPDR_Serotonin, from IL2DR to CEPDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_CEPDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_CEPDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_IL2DR_CEPDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_CEPDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DR_IL1DR_Serotonin
        print("Adding projection: NC_IL2DR_IL1DR_Serotonin, from IL2DR to IL1DR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_IL1DR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_IL1DR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 7.0, delay 0.0
        h("a_IL1DR[0].Soma syn_NC_IL2DR_IL1DR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_IL1DR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_IL1DR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_IL2DR_RICR_Serotonin
        print("Adding projection: NC_IL2DR_RICR_Serotonin, from IL2DR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_RICR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_RICR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_IL2DR_RICR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_RICR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DR_RIPR_Serotonin
        print("Adding projection: NC_IL2DR_RIPR_Serotonin, from IL2DR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_RIPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_RIPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 11.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_IL2DR_RIPR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_RIPR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_IL2DR_RMED_Serotonin
        print("Adding projection: NC_IL2DR_RMED_Serotonin, from IL2DR to RMED with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_RMED_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_RMED_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 1.0, delay 0.0
        h("a_RMED[0].Soma syn_NC_IL2DR_RMED_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_RMED[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_RMED_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DR_RMEL_Serotonin
        print("Adding projection: NC_IL2DR_RMEL_Serotonin, from IL2DR to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_IL2DR_RMEL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_RMEL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2DR_RMER_Serotonin
        print("Adding projection: NC_IL2DR_RMER_Serotonin, from IL2DR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 2.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL2DR_RMER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_RMER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2DR_RMEV_Serotonin
        print("Adding projection: NC_IL2DR_RMEV_Serotonin, from IL2DR to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_IL2DR_RMEV_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_RMEV_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2DR_URADR_Serotonin
        print("Adding projection: NC_IL2DR_URADR_Serotonin, from IL2DR to URADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2DR_URADR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2DR_URADR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma], weight: 3.0, delay 0.0
        h("a_URADR[0].Soma syn_NC_IL2DR_URADR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2DR[0].Soma a_URADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2DR_URADR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2L_ADEL_Acetylcholine
        print("Adding projection: NC_IL2L_ADEL_Acetylcholine, from IL2L to ADEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_ADEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_ADEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 2.0, delay 0.0
        h("a_ADEL[0].Soma syn_NC_IL2L_ADEL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_ADEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_ADEL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2L_AVEL_Acetylcholine
        print("Adding projection: NC_IL2L_AVEL_Acetylcholine, from IL2L to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_IL2L_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2L_IL1L_Acetylcholine
        print("Adding projection: NC_IL2L_IL1L_Acetylcholine, from IL2L to IL1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1L[0].Soma syn_NC_IL2L_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_IL1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2L_OLQDL_Acetylcholine
        print("Adding projection: NC_IL2L_OLQDL_Acetylcholine, from IL2L to OLQDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_OLQDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_OLQDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 5.0, delay 0.0
        h("a_OLQDL[0].Soma syn_NC_IL2L_OLQDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_OLQDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_OLQDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_IL2L_OLQVL_Acetylcholine
        print("Adding projection: NC_IL2L_OLQVL_Acetylcholine, from IL2L to OLQVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_OLQVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_OLQVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 8.0, delay 0.0
        h("a_OLQVL[0].Soma syn_NC_IL2L_OLQVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_OLQVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_OLQVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_IL2L_RICL_Acetylcholine
        print("Adding projection: NC_IL2L_RICL_Acetylcholine, from IL2L to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_RICL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_RICL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_IL2L_RICL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_RICL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2L_RIH_Acetylcholine
        print("Adding projection: NC_IL2L_RIH_Acetylcholine, from IL2L to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_RIH_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_RIH_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 7.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_IL2L_RIH_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_RIH_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_IL2L_RMDL_Acetylcholine
        print("Adding projection: NC_IL2L_RMDL_Acetylcholine, from IL2L to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_IL2L_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2L_RMDR_Acetylcholine
        print("Adding projection: NC_IL2L_RMDR_Acetylcholine, from IL2L to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_IL2L_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2L_RMER_Acetylcholine
        print("Adding projection: NC_IL2L_RMER_Acetylcholine, from IL2L to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 2.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL2L_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2L_RMEV_Acetylcholine
        print("Adding projection: NC_IL2L_RMEV_Acetylcholine, from IL2L to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_IL2L_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2L_URXL_Acetylcholine
        print("Adding projection: NC_IL2L_URXL_Acetylcholine, from IL2L to URXL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2L_URXL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2L_URXL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma], weight: 2.0, delay 0.0
        h("a_URXL[0].Soma syn_NC_IL2L_URXL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2L[0].Soma a_URXL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2L_URXL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2R_ADER_Acetylcholine
        print("Adding projection: NC_IL2R_ADER_Acetylcholine, from IL2R to ADER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_ADER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_ADER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0, delay 0.0
        h("a_ADER[0].Soma syn_NC_IL2R_ADER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_ADER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_ADER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2R_IL1R_Acetylcholine
        print("Adding projection: NC_IL2R_IL1R_Acetylcholine, from IL2R to IL1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1R[0].Soma syn_NC_IL2R_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_IL1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2R_OLLR_Acetylcholine
        print("Adding projection: NC_IL2R_OLLR_Acetylcholine, from IL2R to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_IL2R_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2R_OLQDR_Acetylcholine
        print("Adding projection: NC_IL2R_OLQDR_Acetylcholine, from IL2R to OLQDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_OLQDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_OLQDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 2.0, delay 0.0
        h("a_OLQDR[0].Soma syn_NC_IL2R_OLQDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_OLQDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_OLQDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2R_OLQVR_Acetylcholine
        print("Adding projection: NC_IL2R_OLQVR_Acetylcholine, from IL2R to OLQVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_OLQVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_OLQVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 7.0, delay 0.0
        h("a_OLQVR[0].Soma syn_NC_IL2R_OLQVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_OLQVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_OLQVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_VC1_VD1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VD1_Serotonin_Acetylcholine, from VC1 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 4.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_VC1_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC1_VD2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VD2_Serotonin_Acetylcholine, from VC1 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VC1_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC1_VD3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VD3_Serotonin_Acetylcholine, from VC1 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_VC1_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC1_VD4_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VD4_Serotonin_Acetylcholine, from VC1 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 2.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_VC1_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC1_VD5_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VD5_Serotonin_Acetylcholine, from VC1 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 5.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_VC1_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VC1_VD6_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VD6_Serotonin_Acetylcholine, from VC1 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 1.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_VC1_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC2_DB4_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_DB4_Serotonin_Acetylcholine, from VC2 to DB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_DB4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_DB4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0, delay 0.0
        h("a_DB4[0].Soma syn_NC_VC2_DB4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_DB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_DB4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC2_DD1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_DD1_Serotonin_Acetylcholine, from VC2 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 6.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VC2_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_VC2_DD2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_DD2_Serotonin_Acetylcholine, from VC2 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 4.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VC2_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC2_DD3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_DD3_Serotonin_Acetylcholine, from VC2 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 9.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VC2_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VC2_DVC_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_DVC_Serotonin_Acetylcholine, from VC2 to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_VC2_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC2_PVCR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_PVCR_Serotonin_Acetylcholine, from VC2 to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_PVCR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_PVCR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_VC2_PVCR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_PVCR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC2_PVQR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_PVQR_Serotonin_Acetylcholine, from VC2 to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_VC2_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC2_PVT_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_PVT_Serotonin_Acetylcholine, from VC2 to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 2.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_VC2_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC2_VC1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VC1_Serotonin_Acetylcholine, from VC2 to VC1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma], weight: 4.0, delay 0.0
        h("a_VC1[0].Soma syn_NC_VC2_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VC1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC2_VC3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VC3_Serotonin_Acetylcholine, from VC2 to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 4.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_VC2_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC2_VD1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VD1_Serotonin_Acetylcholine, from VC2 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 2.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_VC2_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC2_VD2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VD2_Serotonin_Acetylcholine, from VC2 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 2.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VC2_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC2_VD4_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VD4_Serotonin_Acetylcholine, from VC2 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 5.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_VC2_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VC2_VD5_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VD5_Serotonin_Acetylcholine, from VC2 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 5.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_VC2_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VC2_VD6_Serotonin_Acetylcholine
        print("Adding projection: NC_VC2_VD6_Serotonin_Acetylcholine, from VC2 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC2_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC2_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 1.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_VC2_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC2[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC2_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_AVL_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_AVL_Serotonin_Acetylcholine, from VC3 to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_VC3_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_DD1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_DD1_Serotonin_Acetylcholine, from VC3 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 2.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VC3_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC3_DD2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_DD2_Serotonin_Acetylcholine, from VC3 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 4.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VC3_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC3_DD3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_DD3_Serotonin_Acetylcholine, from VC3 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 5.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VC3_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VC3_DD4_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_DD4_Serotonin_Acetylcholine, from VC3 to DD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_DD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_DD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 12.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VC3_DD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_DD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_VC3_DVC_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_DVC_Serotonin_Acetylcholine, from VC3 to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_VC3_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_HSNR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_HSNR_Serotonin_Acetylcholine, from VC3 to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_VC3_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_HSNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_PVNR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_PVNR_Serotonin_Acetylcholine, from VC3 to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_VC3_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_PVNR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_PVPR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_PVPR_Serotonin_Acetylcholine, from VC3 to PVPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_PVPR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_PVPR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_VC3_PVPR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_PVPR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_PVQR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_PVQR_Serotonin_Acetylcholine, from VC3 to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 4.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_VC3_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_PVQR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC3_VC1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VC1_Serotonin_Acetylcholine, from VC3 to VC1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma], weight: 2.0, delay 0.0
        h("a_VC1[0].Soma syn_NC_VC3_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VC1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC3_VC2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VC2_Serotonin_Acetylcholine, from VC3 to VC2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 1.0, delay 0.0
        h("a_VC2[0].Soma syn_NC_VC3_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VC2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_VD1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD1_Serotonin_Acetylcholine, from VC3 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_VC3_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_VD2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD2_Serotonin_Acetylcholine, from VC3 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VC3_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_VD3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD3_Serotonin_Acetylcholine, from VC3 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_VC3_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC3_VD4_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD4_Serotonin_Acetylcholine, from VC3 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 2.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_VC3_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC3_VD5_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD5_Serotonin_Acetylcholine, from VC3 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 4.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_VC3_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC3_VD6_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD6_Serotonin_Acetylcholine, from VC3 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 4.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_VC3_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD6_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC3_VD7_Serotonin_Acetylcholine
        print("Adding projection: NC_VC3_VD7_Serotonin_Acetylcholine, from VC3 to VD7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC3_VD7_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC3_VD7_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 5.0, delay 0.0
        h("a_VD7[0].Soma syn_NC_VC3_VD7_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC3[0].Soma a_VD7[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC3_VD7_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VC4_AVBL_Serotonin_Acetylcholine
        print("Adding projection: NC_VC4_AVBL_Serotonin_Acetylcholine, from VC4 to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC4_AVBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC4_AVBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_VC4_AVBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC4[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC4_AVBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC4_AVHR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC4_AVHR_Serotonin_Acetylcholine, from VC4 to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC4_AVHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC4_AVHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_VC4_AVHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC4[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC4_AVHR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC4_VC1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC4_VC1_Serotonin_Acetylcholine, from VC4 to VC1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC4_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC4_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma], weight: 1.0, delay 0.0
        h("a_VC1[0].Soma syn_NC_VC4_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC4[0].Soma a_VC1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC4_VC1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC4_VC3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC4_VC3_Serotonin_Acetylcholine, from VC4 to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC4_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC4_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 4.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_VC4_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC4[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC4_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VC4_VC5_Serotonin_Acetylcholine
        print("Adding projection: NC_VC4_VC5_Serotonin_Acetylcholine, from VC4 to VC5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC4_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC4_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma], weight: 1.0, delay 0.0
        h("a_VC5[0].Soma syn_NC_VC4_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC4[0].Soma a_VC5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC4_VC5_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_AVFL_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_AVFL_Serotonin_Acetylcholine, from VC5 to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_VC5_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_AVFL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_AVFR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_AVFR_Serotonin_Acetylcholine, from VC5 to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_AVFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_AVFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_VC5_AVFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_AVFR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_DVC_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_DVC_Serotonin_Acetylcholine, from VC5 to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 2.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_VC5_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC5_HSNL_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_HSNL_Serotonin_Acetylcholine, from VC5 to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_VC5_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_HSNL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_OLLR_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_OLLR_Serotonin_Acetylcholine, from VC5 to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_OLLR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_OLLR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_VC5_OLLR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_OLLR_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_PVT_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_PVT_Serotonin_Acetylcholine, from VC5 to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_VC5_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_URBL_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_URBL_Serotonin_Acetylcholine, from VC5 to URBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_URBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_URBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma], weight: 3.0, delay 0.0
        h("a_URBL[0].Soma syn_NC_VC5_URBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_URBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_URBL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VC5_VC3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_VC3_Serotonin_Acetylcholine, from VC5 to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_VC5_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC5_VC4_Serotonin_Acetylcholine
        print("Adding projection: NC_VC5_VC4_Serotonin_Acetylcholine, from VC5 to VC4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC5_VC4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC5_VC4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma], weight: 1.0, delay 0.0
        h("a_VC4[0].Soma syn_NC_VC5_VC4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC5[0].Soma a_VC4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC5_VC4_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD1_DD1_GABA
        print("Adding projection: NC_VD1_DD1_GABA, from VD1 to DD1 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD1_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD1_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VD1_DD1_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD1[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD1_DD1_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD1_VA1_GABA
        print("Adding projection: NC_VD1_VA1_GABA, from VD1 to VA1 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD1_VA1_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD1_VA1_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 2.0, delay 0.0
        h("a_VA1[0].Soma syn_NC_VD1_VA1_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD1[0].Soma a_VA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD1_VA1_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD10_DD5_GABA
        print("Adding projection: NC_VD10_DD5_GABA, from VD10 to DD5 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD10_DD5_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD10_DD5_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma], weight: 1.0, delay 0.0
        h("a_DD5[0].Soma syn_NC_VD10_DD5_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD10[0].Soma a_DD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD10_DD5_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD10_VB9_GABA
        print("Adding projection: NC_VD10_VB9_GABA, from VD10 to VB9 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD10_VB9_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD10_VB9_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 2.0, delay 0.0
        h("a_VB9[0].Soma syn_NC_VD10_VB9_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD10[0].Soma a_VB9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD10_VB9_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD11_AVAR_GABA
        print("Adding projection: NC_VD11_AVAR_GABA, from VD11 to AVAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD11_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD11_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_VD11_AVAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD11[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD11_AVAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD11_VA11_GABA
        print("Adding projection: NC_VD11_VA11_GABA, from VD11 to VA11 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD11_VA11_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD11_VA11_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 1.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_VD11_VA11_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD11[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD11_VA11_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD11_VB10_GABA
        print("Adding projection: NC_VD11_VB10_GABA, from VD11 to VB10 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD11_VB10_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD11_VB10_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0, delay 0.0
        h("a_VB10[0].Soma syn_NC_VD11_VB10_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD11[0].Soma a_VB10[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD11_VB10_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD12_VA11_GABA
        print("Adding projection: NC_VD12_VA11_GABA, from VD12 to VA11 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD12_VA11_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD12_VA11_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 3.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_VD12_VA11_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD12[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD12_VA11_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VD12_VA12_GABA
        print("Adding projection: NC_VD12_VA12_GABA, from VD12 to VA12 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD12_VA12_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD12_VA12_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 2.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_VD12_VA12_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD12[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD12_VA12_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD12_VB10_GABA
        print("Adding projection: NC_VD12_VB10_GABA, from VD12 to VB10 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD12_VB10_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD12_VB10_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0, delay 0.0
        h("a_VB10[0].Soma syn_NC_VD12_VB10_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD12[0].Soma a_VB10[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD12_VB10_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD12_VB11_GABA
        print("Adding projection: NC_VD12_VB11_GABA, from VD12 to VB11 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD12_VB11_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD12_VB11_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma], weight: 1.0, delay 0.0
        h("a_VB11[0].Soma syn_NC_VD12_VB11_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD12[0].Soma a_VB11[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD12_VB11_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD13_AVAR_GABA
        print("Adding projection: NC_VD13_AVAR_GABA, from VD13 to AVAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD13_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD13_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_VD13_AVAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD13[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD13_AVAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD13_PVCL_GABA
        print("Adding projection: NC_VD13_PVCL_GABA, from VD13 to PVCL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD13_PVCL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD13_PVCL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_VD13_PVCL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD13[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD13_PVCL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD13_PVCR_GABA
        print("Adding projection: NC_VD13_PVCR_GABA, from VD13 to PVCR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD13_PVCR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD13_PVCR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_VD13_PVCR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD13[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD13_PVCR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD13_VA12_GABA
        print("Adding projection: NC_VD13_VA12_GABA, from VD13 to VA12 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD13_VA12_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD13_VA12_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_VD13_VA12_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD13[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD13_VA12_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD2_DD1_GABA
        print("Adding projection: NC_VD2_DD1_GABA, from VD2 to DD1 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD2_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD2_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VD2_DD1_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD2[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD2_DD1_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD2_VA2_GABA
        print("Adding projection: NC_VD2_VA2_GABA, from VD2 to VA2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD2_VA2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD2_VA2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 6.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_VD2_VA2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD2[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD2_VA2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_VD2_VB2_GABA
        print("Adding projection: NC_VD2_VB2_GABA, from VD2 to VB2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD2_VB2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD2_VB2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 3.0, delay 0.0
        h("a_VB2[0].Soma syn_NC_VD2_VB2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD2[0].Soma a_VB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD2_VB2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VD3_VA3_GABA
        print("Adding projection: NC_VD3_VA3_GABA, from VD3 to VA3 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD3_VA3_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD3_VA3_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_VD3_VA3_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD3[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD3_VA3_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD3_VB2_GABA
        print("Adding projection: NC_VD3_VB2_GABA, from VD3 to VB2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD3_VB2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD3_VB2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 2.0, delay 0.0
        h("a_VB2[0].Soma syn_NC_VD3_VB2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD3[0].Soma a_VB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD3_VB2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD5_AVAR_GABA
        print("Adding projection: NC_VD5_AVAR_GABA, from VD5 to AVAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD5_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD5_AVAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_VD5_AVAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD5[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD5_AVAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD5_VA5_GABA
        print("Adding projection: NC_VD5_VA5_GABA, from VD5 to VA5 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD5_VA5_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD5_VA5_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 2.0, delay 0.0
        h("a_VA5[0].Soma syn_NC_VD5_VA5_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD5[0].Soma a_VA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD5_VA5_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD5_VB4_GABA
        print("Adding projection: NC_VD5_VB4_GABA, from VD5 to VB4 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD5_VB4_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD5_VB4_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 2.0, delay 0.0
        h("a_VB4[0].Soma syn_NC_VD5_VB4_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD5[0].Soma a_VB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD5_VB4_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD6_AVAL_GABA
        print("Adding projection: NC_VD6_AVAL_GABA, from VD6 to AVAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD6_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD6_AVAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_VD6_AVAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD6[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD6_AVAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD6_VA6_GABA
        print("Adding projection: NC_VD6_VA6_GABA, from VD6 to VA6 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD6_VA6_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD6_VA6_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 1.0, delay 0.0
        h("a_VA6[0].Soma syn_NC_VD6_VA6_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD6[0].Soma a_VA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD6_VA6_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD6_VB5_GABA
        print("Adding projection: NC_VD6_VB5_GABA, from VD6 to VB5 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD6_VB5_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD6_VB5_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 2.0, delay 0.0
        h("a_VB5[0].Soma syn_NC_VD6_VB5_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD6[0].Soma a_VB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD6_VB5_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VD8_DD4_GABA
        print("Adding projection: NC_VD8_DD4_GABA, from VD8 to DD4 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD8_DD4_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD8_DD4_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 1.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VD8_DD4_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD8[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD8_DD4_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VD8_VA8_GABA
        print("Adding projection: NC_VD8_VA8_GABA, from VD8 to VA8 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_VD8_VA8_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_VD8_VA8_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 4.0, delay 0.0
        h("a_VA8[0].Soma syn_NC_VD8_VA8_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_VD8[0].Soma a_VA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VD8_VA8_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL2R_RIH_Acetylcholine
        print("Adding projection: NC_IL2R_RIH_Acetylcholine, from IL2R to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_RIH_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_RIH_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 6.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_IL2R_RIH_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_RIH_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_IL2R_RMDL_Acetylcholine
        print("Adding projection: NC_IL2R_RMDL_Acetylcholine, from IL2R to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_IL2R_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2R_RMEL_Acetylcholine
        print("Adding projection: NC_IL2R_RMEL_Acetylcholine, from IL2R to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_IL2R_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2R_RMEV_Acetylcholine
        print("Adding projection: NC_IL2R_RMEV_Acetylcholine, from IL2R to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_IL2R_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2R_URBR_Acetylcholine
        print("Adding projection: NC_IL2R_URBR_Acetylcholine, from IL2R to URBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2R_URBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2R_URBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma], weight: 1.0, delay 0.0
        h("a_URBR[0].Soma syn_NC_IL2R_URBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2R[0].Soma a_URBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2R_URBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_BAGR_Serotonin
        print("Adding projection: NC_IL2VL_BAGR_Serotonin, from IL2VL to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_BAGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_BAGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_IL2VL_BAGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_BAGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_IL1VL_Serotonin
        print("Adding projection: NC_IL2VL_IL1VL_Serotonin, from IL2VL to IL1VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_IL1VL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_IL1VL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 7.0, delay 0.0
        h("a_IL1VL[0].Soma syn_NC_IL2VL_IL1VL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_IL1VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_IL1VL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_IL2VL_IL2L_Serotonin
        print("Adding projection: NC_IL2VL_IL2L_Serotonin, from IL2VL to IL2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_IL2L_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_IL2L_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2L[0].Soma syn_NC_IL2VL_IL2L_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_IL2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_IL2L_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_OLQVL_Serotonin
        print("Adding projection: NC_IL2VL_OLQVL_Serotonin, from IL2VL to OLQVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQVL[0].Soma syn_NC_IL2VL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_OLQVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_OLQVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_RIAL_Serotonin
        print("Adding projection: NC_IL2VL_RIAL_Serotonin, from IL2VL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_IL2VL_RIAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_RIAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_RIH_Serotonin
        print("Adding projection: NC_IL2VL_RIH_Serotonin, from IL2VL to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_RIH_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_RIH_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 2.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_IL2VL_RIH_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_RIH_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2VL_RIPL_Serotonin
        print("Adding projection: NC_IL2VL_RIPL_Serotonin, from IL2VL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_RIPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_RIPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 11.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_IL2VL_RIPL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_RIPL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_IL2VL_RMEL_Serotonin
        print("Adding projection: NC_IL2VL_RMEL_Serotonin, from IL2VL to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_IL2VL_RMEL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_RMEL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_RMER_Serotonin
        print("Adding projection: NC_IL2VL_RMER_Serotonin, from IL2VL to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 4.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL2VL_RMER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_RMER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL2VL_RMEV_Serotonin
        print("Adding projection: NC_IL2VL_RMEV_Serotonin, from IL2VL to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_IL2VL_RMEV_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_RMEV_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VL_URAVL_Serotonin
        print("Adding projection: NC_IL2VL_URAVL_Serotonin, from IL2VL to URAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VL_URAVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VL_URAVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URAVL[0].Soma], weight: 3.0, delay 0.0
        h("a_URAVL[0].Soma syn_NC_IL2VL_URAVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VL[0].Soma a_URAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VL_URAVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2VR_IL1VR_Serotonin
        print("Adding projection: NC_IL2VR_IL1VR_Serotonin, from IL2VR to IL1VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_IL1VR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_IL1VR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 6.0, delay 0.0
        h("a_IL1VR[0].Soma syn_NC_IL2VR_IL1VR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_IL1VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_IL1VR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_IL2VR_OLQVR_Serotonin
        print("Adding projection: NC_IL2VR_OLQVR_Serotonin, from IL2VR to OLQVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_OLQVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_OLQVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQVR[0].Soma syn_NC_IL2VR_OLQVR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_OLQVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_OLQVR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_IL2VR_RIAR_Serotonin
        print("Adding projection: NC_IL2VR_RIAR_Serotonin, from IL2VR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_IL2VR_RIAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_RIAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2VR_RIH_Serotonin
        print("Adding projection: NC_IL2VR_RIH_Serotonin, from IL2VR to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_RIH_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_RIH_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 3.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_IL2VR_RIH_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_RIH_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2VR_RIPR_Serotonin
        print("Adding projection: NC_IL2VR_RIPR_Serotonin, from IL2VR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_RIPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_RIPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 15.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_IL2VR_RIPR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_RIPR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_IL2VR_RMEL_Serotonin
        print("Adding projection: NC_IL2VR_RMEL_Serotonin, from IL2VR to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_RMEL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_IL2VR_RMEL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_RMEL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2VR_RMER_Serotonin
        print("Adding projection: NC_IL2VR_RMER_Serotonin, from IL2VR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 2.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_IL2VR_RMER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_RMER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_IL2VR_RMEV_Serotonin
        print("Adding projection: NC_IL2VR_RMEV_Serotonin, from IL2VR to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 3.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_IL2VR_RMEV_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_RMEV_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_IL2VR_URAVR_Serotonin
        print("Adding projection: NC_IL2VR_URAVR_Serotonin, from IL2VR to URAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_URAVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_URAVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma], weight: 4.0, delay 0.0
        h("a_URAVR[0].Soma syn_NC_IL2VR_URAVR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_URAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_URAVR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_IL2VR_URXR_Serotonin
        print("Adding projection: NC_IL2VR_URXR_Serotonin, from IL2VR to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_IL2VR_URXR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_IL2VR_URXR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_IL2VR_URXR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_IL2VR[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_IL2VR_URXR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAL_AVAL_Glutamate
        print("Adding projection: NC_LUAL_AVAL_Glutamate, from LUAL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_LUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_LUAL_AVAR_Glutamate
        print("Adding projection: NC_LUAL_AVAR_Glutamate, from LUAL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_LUAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_LUAL_AVDL_Glutamate
        print("Adding projection: NC_LUAL_AVDL_Glutamate, from LUAL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_LUAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_LUAL_AVDR_Glutamate
        print("Adding projection: NC_LUAL_AVDR_Glutamate, from LUAL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_LUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_LUAL_AVJL_Glutamate
        print("Adding projection: NC_LUAL_AVJL_Glutamate, from LUAL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_LUAL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAL_PHBL_Glutamate
        print("Adding projection: NC_LUAL_PHBL_Glutamate, from LUAL to PHBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma], weight: 1.0, delay 0.0
        h("a_PHBL[0].Soma syn_NC_LUAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_PHBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAL_PVNL_Glutamate
        print("Adding projection: NC_LUAL_PVNL_Glutamate, from LUAL to PVNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_LUAL_PVNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_PVNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAL_PVWL_Glutamate
        print("Adding projection: NC_LUAL_PVWL_Glutamate, from LUAL to PVWL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAL_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAL_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVWL[0].Soma syn_NC_LUAL_PVWL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAL[0].Soma a_PVWL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAL_PVWL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAR_AVAL_Glutamate
        print("Adding projection: NC_LUAR_AVAL_Glutamate, from LUAR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_LUAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_LUAR_AVAR_Glutamate
        print("Adding projection: NC_LUAR_AVAR_Glutamate, from LUAR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_LUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_LUAR_AVDL_Glutamate
        print("Adding projection: NC_LUAR_AVDL_Glutamate, from LUAR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_LUAR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAR_AVDR_Glutamate
        print("Adding projection: NC_LUAR_AVDR_Glutamate, from LUAR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_LUAR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_LUAR_AVJR_Glutamate
        print("Adding projection: NC_LUAR_AVJR_Glutamate, from LUAR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_LUAR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAR_PQR_Glutamate
        print("Adding projection: NC_LUAR_PQR_Glutamate, from LUAR to PQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PQR[0].Soma syn_NC_LUAR_PQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_PQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_PQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAR_PVCR_Glutamate
        print("Adding projection: NC_LUAR_PVCR_Glutamate, from LUAR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_LUAR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_LUAR_PVR_Glutamate
        print("Adding projection: NC_LUAR_PVR_Glutamate, from LUAR to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_LUAR_PVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_PVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_LUAR_PVWL_Glutamate
        print("Adding projection: NC_LUAR_PVWL_Glutamate, from LUAR to PVWL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_LUAR_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_LUAR_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVWL[0].Soma syn_NC_LUAR_PVWL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_LUAR[0].Soma a_PVWL[0].synlist.append(new NetCon(&v(0.5), syn_NC_LUAR_PVWL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M2L_I1R_Acetylcholine
        print("Adding projection: NC_M2L_I1R_Acetylcholine, from M2L to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2L_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2L_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 3.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_M2L_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2L[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2L_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M2L_I1L_Acetylcholine
        print("Adding projection: NC_M2L_I1L_Acetylcholine, from M2L to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2L_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2L_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 3.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_M2L_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2L[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2L_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M2L_I3_Acetylcholine
        print("Adding projection: NC_M2L_I3_Acetylcholine, from M2L to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2L_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2L_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 2.0, delay 0.0
        h("a_I3[0].Soma syn_NC_M2L_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2L[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2L_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M2L_MI_Acetylcholine
        print("Adding projection: NC_M2L_MI_Acetylcholine, from M2L to MI with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2L_MI_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2L_MI_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MI[0].Soma], weight: 2.0, delay 0.0
        h("a_MI[0].Soma syn_NC_M2L_MI_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2L[0].Soma a_MI[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2L_MI_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M2R_I1L_Acetylcholine
        print("Adding projection: NC_M2R_I1L_Acetylcholine, from M2R to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2R_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2R_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 3.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_M2R_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2R[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2R_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M2R_I1R_Acetylcholine
        print("Adding projection: NC_M2R_I1R_Acetylcholine, from M2R to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2R_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2R_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 3.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_M2R_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2R[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2R_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M2R_I3_Acetylcholine
        print("Adding projection: NC_M2R_I3_Acetylcholine, from M2R to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2R_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2R_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 2.0, delay 0.0
        h("a_I3[0].Soma syn_NC_M2R_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2R[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2R_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M2R_MI_Acetylcholine
        print("Adding projection: NC_M2R_MI_Acetylcholine, from M2R to MI with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M2R_MI_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M2R_MI_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MI[0].Soma], weight: 2.0, delay 0.0
        h("a_MI[0].Soma syn_NC_M2R_MI_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M2R[0].Soma a_MI[0].synlist.append(new NetCon(&v(0.5), syn_NC_M2R_MI_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M3L_I1L_Glutamate
        print("Adding projection: NC_M3L_I1L_Glutamate, from M3L to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_I1L_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_I1L_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 4.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_M3L_I1L_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_I1L_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_M3L_I1R_Glutamate
        print("Adding projection: NC_M3L_I1R_Glutamate, from M3L to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_I1R_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_I1R_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 4.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_M3L_I1R_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_I1R_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_M3L_I4_Glutamate
        print("Adding projection: NC_M3L_I4_Glutamate, from M3L to I4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_I4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_I4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma], weight: 2.0, delay 0.0
        h("a_I4[0].Soma syn_NC_M3L_I4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_I4[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_I4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M3L_I5_Glutamate
        print("Adding projection: NC_M3L_I5_Glutamate, from M3L to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_I5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_I5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 3.0, delay 0.0
        h("a_I5[0].Soma syn_NC_M3L_I5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_I5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M3L_I6_Glutamate
        print("Adding projection: NC_M3L_I6_Glutamate, from M3L to I6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_I6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_I6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 1.0, delay 0.0
        h("a_I6[0].Soma syn_NC_M3L_I6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_I6[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_I6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M3L_M1_Glutamate
        print("Adding projection: NC_M3L_M1_Glutamate, from M3L to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0, delay 0.0
        h("a_M1[0].Soma syn_NC_M3L_M1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_M1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M3L_MI_Glutamate
        print("Adding projection: NC_M3L_MI_Glutamate, from M3L to MI with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_MI_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_MI_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MI[0].Soma], weight: 1.0, delay 0.0
        h("a_MI[0].Soma syn_NC_M3L_MI_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_MI[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_MI_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M3L_NSML_Glutamate
        print("Adding projection: NC_M3L_NSML_Glutamate, from M3L to NSML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_NSML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_NSML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma], weight: 2.0, delay 0.0
        h("a_NSML[0].Soma syn_NC_M3L_NSML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_NSML[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_NSML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M3L_NSMR_Glutamate
        print("Adding projection: NC_M3L_NSMR_Glutamate, from M3L to NSMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3L_NSMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3L_NSMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma], weight: 3.0, delay 0.0
        h("a_NSMR[0].Soma syn_NC_M3L_NSMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3L[0].Soma a_NSMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3L_NSMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M3R_I1L_Glutamate
        print("Adding projection: NC_M3R_I1L_Glutamate, from M3R to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_I1L_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_I1L_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 4.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_M3R_I1L_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_I1L_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_M3R_I1R_Glutamate
        print("Adding projection: NC_M3R_I1R_Glutamate, from M3R to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_I1R_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_I1R_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 4.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_M3R_I1R_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_I1R_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_M3R_I3_Glutamate
        print("Adding projection: NC_M3R_I3_Glutamate, from M3R to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_I3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_I3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 2.0, delay 0.0
        h("a_I3[0].Soma syn_NC_M3R_I3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_I3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M3R_I4_Glutamate
        print("Adding projection: NC_M3R_I4_Glutamate, from M3R to I4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_I4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_I4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma], weight: 6.0, delay 0.0
        h("a_I4[0].Soma syn_NC_M3R_I4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_I4[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_I4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_M3R_I5_Glutamate
        print("Adding projection: NC_M3R_I5_Glutamate, from M3R to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_I5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_I5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 3.0, delay 0.0
        h("a_I5[0].Soma syn_NC_M3R_I5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_I5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M3R_I6_Glutamate
        print("Adding projection: NC_M3R_I6_Glutamate, from M3R to I6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_I6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_I6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 1.0, delay 0.0
        h("a_I6[0].Soma syn_NC_M3R_I6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_I6[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_I6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M3R_M1_Glutamate
        print("Adding projection: NC_M3R_M1_Glutamate, from M3R to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_M1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0, delay 0.0
        h("a_M1[0].Soma syn_NC_M3R_M1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_M1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M3R_MI_Glutamate
        print("Adding projection: NC_M3R_MI_Glutamate, from M3R to MI with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_MI_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_MI_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MI[0].Soma], weight: 1.0, delay 0.0
        h("a_MI[0].Soma syn_NC_M3R_MI_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_MI[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_MI_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M3R_NSML_Glutamate
        print("Adding projection: NC_M3R_NSML_Glutamate, from M3R to NSML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_NSML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_NSML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma], weight: 2.0, delay 0.0
        h("a_NSML[0].Soma syn_NC_M3R_NSML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_NSML[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_NSML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M3R_NSMR_Glutamate
        print("Adding projection: NC_M3R_NSMR_Glutamate, from M3R to NSMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M3R_NSMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M3R_NSMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma], weight: 3.0, delay 0.0
        h("a_NSMR[0].Soma syn_NC_M3R_NSMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M3R[0].Soma a_NSMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_M3R_NSMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M4_I3_Acetylcholine
        print("Adding projection: NC_M4_I3_Acetylcholine, from M4 to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M4_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M4_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0, delay 0.0
        h("a_I3[0].Soma syn_NC_M4_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M4[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_M4_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M4_I5_Acetylcholine
        print("Adding projection: NC_M4_I5_Acetylcholine, from M4 to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M4_I5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M4_I5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 13.0, delay 0.0
        h("a_I5[0].Soma syn_NC_M4_I5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M4[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_M4_I5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_M4_I6_Acetylcholine
        print("Adding projection: NC_M4_I6_Acetylcholine, from M4 to I6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M4_I6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M4_I6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 2.0, delay 0.0
        h("a_I6[0].Soma syn_NC_M4_I6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M4[0].Soma a_I6[0].synlist.append(new NetCon(&v(0.5), syn_NC_M4_I6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_M4_NSML_Acetylcholine
        print("Adding projection: NC_M4_NSML_Acetylcholine, from M4 to NSML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M4_NSML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M4_NSML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma], weight: 1.0, delay 0.0
        h("a_NSML[0].Soma syn_NC_M4_NSML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M4[0].Soma a_NSML[0].synlist.append(new NetCon(&v(0.5), syn_NC_M4_NSML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M4_NSMR_Acetylcholine
        print("Adding projection: NC_M4_NSMR_Acetylcholine, from M4 to NSMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M4_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M4_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma], weight: 1.0, delay 0.0
        h("a_NSMR[0].Soma syn_NC_M4_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M4[0].Soma a_NSMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_M4_NSMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_M5_I5_Acetylcholine
        print("Adding projection: NC_M5_I5_Acetylcholine, from M5 to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M5_I5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M5_I5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 3.0, delay 0.0
        h("a_I5[0].Soma syn_NC_M5_I5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M5[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_M5_I5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_M5_M1_Acetylcholine
        print("Adding projection: NC_M5_M1_Acetylcholine, from M5 to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_M5_M1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_M5_M1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0, delay 0.0
        h("a_M1[0].Soma syn_NC_M5_M1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_M5[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_M5_M1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_MCL_I1L_Acetylcholine
        print("Adding projection: NC_MCL_I1L_Acetylcholine, from MCL to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCL_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCL_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 3.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_MCL_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCL[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCL_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_MCL_I1R_Acetylcholine
        print("Adding projection: NC_MCL_I1R_Acetylcholine, from MCL to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCL_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCL_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 3.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_MCL_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCL[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCL_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_MCL_I2L_Acetylcholine
        print("Adding projection: NC_MCL_I2L_Acetylcholine, from MCL to I2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCL_I2L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCL_I2L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma], weight: 1.0, delay 0.0
        h("a_I2L[0].Soma syn_NC_MCL_I2L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCL[0].Soma a_I2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCL_I2L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_MCL_I2R_Acetylcholine
        print("Adding projection: NC_MCL_I2R_Acetylcholine, from MCL to I2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCL_I2R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCL_I2R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma], weight: 1.0, delay 0.0
        h("a_I2R[0].Soma syn_NC_MCL_I2R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCL[0].Soma a_I2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCL_I2R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_MCL_I3_Acetylcholine
        print("Adding projection: NC_MCL_I3_Acetylcholine, from MCL to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCL_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCL_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0, delay 0.0
        h("a_I3[0].Soma syn_NC_MCL_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCL[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCL_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_MCL_M1_Acetylcholine
        print("Adding projection: NC_MCL_M1_Acetylcholine, from MCL to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCL_M1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCL_M1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0, delay 0.0
        h("a_M1[0].Soma syn_NC_MCL_M1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCL[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCL_M1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_MCR_I1L_Acetylcholine
        print("Adding projection: NC_MCR_I1L_Acetylcholine, from MCR to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCR_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCR_I1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 3.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_MCR_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCR[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCR_I1L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_MCR_I1R_Acetylcholine
        print("Adding projection: NC_MCR_I1R_Acetylcholine, from MCR to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCR_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCR_I1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 3.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_MCR_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCR[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCR_I1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_MCR_I3_Acetylcholine
        print("Adding projection: NC_MCR_I3_Acetylcholine, from MCR to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCR_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCR_I3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0, delay 0.0
        h("a_I3[0].Soma syn_NC_MCR_I3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCR[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCR_I3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_MCR_M1_Acetylcholine
        print("Adding projection: NC_MCR_M1_Acetylcholine, from MCR to M1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_MCR_M1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_MCR_M1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0, delay 0.0
        h("a_M1[0].Soma syn_NC_MCR_M1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_MCR[0].Soma a_M1[0].synlist.append(new NetCon(&v(0.5), syn_NC_MCR_M1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_NSML_I1L_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I1L_Serotonin_Glutamate, from NSML to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 1.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_NSML_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_NSML_I1R_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I1R_Serotonin_Glutamate, from NSML to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 2.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_NSML_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSML_I2L_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I2L_Serotonin_Glutamate, from NSML to I2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma], weight: 6.0, delay 0.0
        h("a_I2L[0].Soma syn_NC_NSML_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_NSML_I2R_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I2R_Serotonin_Glutamate, from NSML to I2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma], weight: 6.0, delay 0.0
        h("a_I2R[0].Soma syn_NC_NSML_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_NSML_I3_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I3_Serotonin_Glutamate, from NSML to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 2.0, delay 0.0
        h("a_I3[0].Soma syn_NC_NSML_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSML_I4_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I4_Serotonin_Glutamate, from NSML to I4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma], weight: 3.0, delay 0.0
        h("a_I4[0].Soma syn_NC_NSML_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I4[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_NSML_I5_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I5_Serotonin_Glutamate, from NSML to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 2.0, delay 0.0
        h("a_I5[0].Soma syn_NC_NSML_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSML_I6_Serotonin_Glutamate
        print("Adding projection: NC_NSML_I6_Serotonin_Glutamate, from NSML to I6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 2.0, delay 0.0
        h("a_I6[0].Soma syn_NC_NSML_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_I6[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSML_M3L_Serotonin_Glutamate
        print("Adding projection: NC_NSML_M3L_Serotonin_Glutamate, from NSML to M3L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma], weight: 1.0, delay 0.0
        h("a_M3L[0].Soma syn_NC_NSML_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_M3L[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_NSML_M3R_Serotonin_Glutamate
        print("Adding projection: NC_NSML_M3R_Serotonin_Glutamate, from NSML to M3R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSML_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSML_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma], weight: 1.0, delay 0.0
        h("a_M3R[0].Soma syn_NC_NSML_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSML[0].Soma a_M3R[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSML_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_NSMR_I1L_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I1L_Serotonin_Glutamate, from NSMR to I1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 2.0, delay 0.0
        h("a_I1L[0].Soma syn_NC_NSMR_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I1L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSMR_I1R_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I1R_Serotonin_Glutamate, from NSMR to I1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 2.0, delay 0.0
        h("a_I1R[0].Soma syn_NC_NSMR_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I1R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSMR_I2L_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I2L_Serotonin_Glutamate, from NSMR to I2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma], weight: 6.0, delay 0.0
        h("a_I2L[0].Soma syn_NC_NSMR_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I2L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_NSMR_I2R_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I2R_Serotonin_Glutamate, from NSMR to I2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma], weight: 6.0, delay 0.0
        h("a_I2R[0].Soma syn_NC_NSMR_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I2R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_NSMR_I3_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I3_Serotonin_Glutamate, from NSMR to I3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 2.0, delay 0.0
        h("a_I3[0].Soma syn_NC_NSMR_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I3[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I3_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSMR_I4_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I4_Serotonin_Glutamate, from NSMR to I4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma], weight: 3.0, delay 0.0
        h("a_I4[0].Soma syn_NC_NSMR_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I4[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I4_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_NSMR_I5_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I5_Serotonin_Glutamate, from NSMR to I5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 2.0, delay 0.0
        h("a_I5[0].Soma syn_NC_NSMR_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I5[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I5_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSMR_I6_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_I6_Serotonin_Glutamate, from NSMR to I6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 2.0, delay 0.0
        h("a_I6[0].Soma syn_NC_NSMR_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_I6[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_I6_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_NSMR_M3L_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_M3L_Serotonin_Glutamate, from NSMR to M3L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma], weight: 1.0, delay 0.0
        h("a_M3L[0].Soma syn_NC_NSMR_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_M3L[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_M3L_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_NSMR_M3R_Serotonin_Glutamate
        print("Adding projection: NC_NSMR_M3R_Serotonin_Glutamate, from NSMR to M3R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_NSMR_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_NSMR_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_NSMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma], weight: 1.0, delay 0.0
        h("a_M3R[0].Soma syn_NC_NSMR_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_NSMR[0].Soma a_M3R[0].synlist.append(new NetCon(&v(0.5), syn_NC_NSMR_M3R_Serotonin_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLL_AVER_Glutamate
        print("Adding projection: NC_OLLL_AVER_Glutamate, from OLLL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 21.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_OLLL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 21.0))") # *->cell

        # ######################   Projection: NC_OLLL_CEPDL_Glutamate
        print("Adding projection: NC_OLLL_CEPDL_Glutamate, from OLLL to CEPDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_CEPDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_CEPDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 3.0, delay 0.0
        h("a_CEPDL[0].Soma syn_NC_OLLL_CEPDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_CEPDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_CEPDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLLL_CEPVL_Glutamate
        print("Adding projection: NC_OLLL_CEPVL_Glutamate, from OLLL to CEPVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_CEPVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_CEPVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 4.0, delay 0.0
        h("a_CEPVL[0].Soma syn_NC_OLLL_CEPVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_CEPVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_CEPVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLLL_IL1VL_Glutamate
        print("Adding projection: NC_OLLL_IL1VL_Glutamate, from OLLL to IL1VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 2.0, delay 0.0
        h("a_IL1VL[0].Soma syn_NC_OLLL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_IL1VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLLL_RIBL_Glutamate
        print("Adding projection: NC_OLLL_RIBL_Glutamate, from OLLL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 8.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_OLLL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_OLLL_RMDDL_Glutamate
        print("Adding projection: NC_OLLL_RMDDL_Glutamate, from OLLL to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 7.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_OLLL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_OLLL_RMDL_Glutamate
        print("Adding projection: NC_OLLL_RMDL_Glutamate, from OLLL to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_OLLL_RMDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_RMDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLLL_RMDVL_Glutamate
        print("Adding projection: NC_OLLL_RMDVL_Glutamate, from OLLL to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_OLLL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLL_RMEL_Glutamate
        print("Adding projection: NC_OLLL_RMEL_Glutamate, from OLLL to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_RMEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_RMEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_OLLL_RMEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_RMEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLLL_SMDDL_Glutamate
        print("Adding projection: NC_OLLL_SMDDL_Glutamate, from OLLL to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_OLLL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLLL_SMDDR_Glutamate
        print("Adding projection: NC_OLLL_SMDDR_Glutamate, from OLLL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_OLLL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLLL_SMDVR_Glutamate
        print("Adding projection: NC_OLLL_SMDVR_Glutamate, from OLLL to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_OLLL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLLL_URYDL_Glutamate
        print("Adding projection: NC_OLLL_URYDL_Glutamate, from OLLL to URYDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLL_URYDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLL_URYDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma], weight: 1.0, delay 0.0
        h("a_URYDL[0].Soma syn_NC_OLLL_URYDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLL[0].Soma a_URYDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLL_URYDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLR_AVEL_Glutamate
        print("Adding projection: NC_OLLR_AVEL_Glutamate, from OLLR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 16.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_OLLR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_OLLR_CEPDR_Glutamate
        print("Adding projection: NC_OLLR_CEPDR_Glutamate, from OLLR to CEPDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_OLLR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_CEPDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLR_CEPVR_Glutamate
        print("Adding projection: NC_OLLR_CEPVR_Glutamate, from OLLR to CEPVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 6.0, delay 0.0
        h("a_CEPVR[0].Soma syn_NC_OLLR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_CEPVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_CEPVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_OLLR_IL1DR_Glutamate
        print("Adding projection: NC_OLLR_IL1DR_Glutamate, from OLLR to IL1DR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 2.0, delay 0.0
        h("a_IL1DR[0].Soma syn_NC_OLLR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_IL1DR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLLR_IL1VR_Glutamate
        print("Adding projection: NC_OLLR_IL1VR_Glutamate, from OLLR to IL1VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VR[0].Soma syn_NC_OLLR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_IL1VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLR_IL2R_Glutamate
        print("Adding projection: NC_OLLR_IL2R_Glutamate, from OLLR to IL2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_IL2R_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_IL2R_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2R[0].Soma syn_NC_OLLR_IL2R_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_IL2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_IL2R_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLR_RIBR_Glutamate
        print("Adding projection: NC_OLLR_RIBR_Glutamate, from OLLR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 10.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_OLLR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_OLLR_RMDDR_Glutamate
        print("Adding projection: NC_OLLR_RMDDR_Glutamate, from OLLR to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 10.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_OLLR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_OLLR_RMDL_Glutamate
        print("Adding projection: NC_OLLR_RMDL_Glutamate, from OLLR to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_OLLR_RMDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_RMDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLLR_RMDVR_Glutamate
        print("Adding projection: NC_OLLR_RMDVR_Glutamate, from OLLR to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_OLLR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLLR_RMER_Glutamate
        print("Adding projection: NC_OLLR_RMER_Glutamate, from OLLR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 2.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_OLLR_RMER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_RMER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLLR_SMDDR_Glutamate
        print("Adding projection: NC_OLLR_SMDDR_Glutamate, from OLLR to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_OLLR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLLR_SMDVL_Glutamate
        print("Adding projection: NC_OLLR_SMDVL_Glutamate, from OLLR to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_OLLR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLLR_SMDVR_Glutamate
        print("Adding projection: NC_OLLR_SMDVR_Glutamate, from OLLR to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLLR_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLLR_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_OLLR_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLLR[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLLR_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLQDL_RICR_Glutamate
        print("Adding projection: NC_OLQDL_RICR_Glutamate, from OLQDL to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDL_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDL_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_OLQDL_RICR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDL[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDL_RICR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQDL_RMDDR_Glutamate
        print("Adding projection: NC_OLQDL_RMDDR_Glutamate, from OLQDL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_OLQDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLQDL_SIBVL_Glutamate
        print("Adding projection: NC_OLQDL_SIBVL_Glutamate, from OLQDL to SIBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SIBVL[0].Soma syn_NC_OLQDL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDL[0].Soma a_SIBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLQDR_RICL_Glutamate
        print("Adding projection: NC_OLQDR_RICL_Glutamate, from OLQDR to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDR_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_OLQDR_RICL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDR[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDR_RICL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQDR_RICR_Glutamate
        print("Adding projection: NC_OLQDR_RICR_Glutamate, from OLQDR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDR_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_OLQDR_RICR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDR_RICR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQDR_RMDDL_Glutamate
        print("Adding projection: NC_OLQDR_RMDDL_Glutamate, from OLQDR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_OLQDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLQDR_RMHR_Glutamate
        print("Adding projection: NC_OLQDR_RMHR_Glutamate, from OLQDR to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RMHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDR_RMHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_OLQDR_RMHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDR[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDR_RMHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQDR_SIBVR_Glutamate
        print("Adding projection: NC_OLQDR_SIBVR_Glutamate, from OLQDR to SIBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQDR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQDR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SIBVR[0].Soma syn_NC_OLQDR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQDR[0].Soma a_SIBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQDR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLQVL_IL1VL_Glutamate
        print("Adding projection: NC_OLQVL_IL1VL_Glutamate, from OLQVL to IL1VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VL[0].Soma syn_NC_OLQVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_IL1VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVL_IL2VL_Glutamate
        print("Adding projection: NC_OLQVL_IL2VL_Glutamate, from OLQVL to IL2VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_IL2VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_IL2VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2VL[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2VL[0].Soma syn_NC_OLQVL_IL2VL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_IL2VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_IL2VL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVL_RICL_Glutamate
        print("Adding projection: NC_OLQVL_RICL_Glutamate, from OLQVL to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_OLQVL_RICL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_RICL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVL_RIH_Glutamate
        print("Adding projection: NC_OLQVL_RIH_Glutamate, from OLQVL to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_OLQVL_RIH_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_RIH_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVL_RIPL_Glutamate
        print("Adding projection: NC_OLQVL_RIPL_Glutamate, from OLQVL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_OLQVL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_RIPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVL_RMDVR_Glutamate
        print("Adding projection: NC_OLQVL_RMDVR_Glutamate, from OLQVL to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_OLQVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLQVL_SIBDL_Glutamate
        print("Adding projection: NC_OLQVL_SIBDL_Glutamate, from OLQVL to SIBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVL_SIBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVL_SIBDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDL[0].Soma], weight: 3.0, delay 0.0
        h("a_SIBDL[0].Soma syn_NC_OLQVL_SIBDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVL[0].Soma a_SIBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVL_SIBDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_OLQVR_IL1VR_Glutamate
        print("Adding projection: NC_OLQVR_IL1VR_Glutamate, from OLQVR to IL1VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VR[0].Soma syn_NC_OLQVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_IL1VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVR_RICR_Glutamate
        print("Adding projection: NC_OLQVR_RICR_Glutamate, from OLQVR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_RICR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_OLQVR_RICR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_RICR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVR_RIH_Glutamate
        print("Adding projection: NC_OLQVR_RIH_Glutamate, from OLQVR to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 2.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_OLQVR_RIH_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_RIH_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLQVR_RIPR_Glutamate
        print("Adding projection: NC_OLQVR_RIPR_Glutamate, from OLQVR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_OLQVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_OLQVR_RMDVL_Glutamate
        print("Adding projection: NC_OLQVR_RMDVL_Glutamate, from OLQVR to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_OLQVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_OLQVR_RMER_Glutamate
        print("Adding projection: NC_OLQVR_RMER_Glutamate, from OLQVR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_OLQVR_RMER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_RMER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_OLQVR_SIBDR_Glutamate
        print("Adding projection: NC_OLQVR_SIBDR_Glutamate, from OLQVR to SIBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_OLQVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_OLQVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 4.0, delay 0.0
        h("a_SIBDR[0].Soma syn_NC_OLQVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_OLQVR[0].Soma a_SIBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_OLQVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PDA_AS11_Serotonin
        print("Adding projection: NC_PDA_AS11_Serotonin, from PDA to AS11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDA_AS11_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDA_AS11_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma], weight: 1.0, delay 0.0
        h("a_AS11[0].Soma syn_NC_PDA_AS11_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDA[0].Soma a_AS11[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDA_AS11_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDA_DA9_Serotonin
        print("Adding projection: NC_PDA_DA9_Serotonin, from PDA to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDA_DA9_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDA_DA9_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_PDA_DA9_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDA[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDA_DA9_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDA_DD6_Serotonin
        print("Adding projection: NC_PDA_DD6_Serotonin, from PDA to DD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDA_DD6_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDA_DD6_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 1.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_PDA_DD6_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDA[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDA_DD6_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDA_PVNR_Serotonin
        print("Adding projection: NC_PDA_PVNR_Serotonin, from PDA to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDA_PVNR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDA_PVNR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_PDA_PVNR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDA[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDA_PVNR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDA_VD13_Serotonin
        print("Adding projection: NC_PDA_VD13_Serotonin, from PDA to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDA_VD13_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDA_VD13_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 3.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_PDA_VD13_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDA[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDA_VD13_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PDB_VD13_FMRFamide
        print("Adding projection: NC_PDB_VD13_FMRFamide, from PDB to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDB_VD13_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDB_VD13_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 2.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_PDB_VD13_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDB[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDB_VD13_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PDEL_AVKL_Dopamine
        print("Adding projection: NC_PDEL_AVKL_Dopamine, from PDEL to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_AVKL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_AVKL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_PDEL_AVKL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_AVKL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PDEL_DVA_Dopamine
        print("Adding projection: NC_PDEL_DVA_Dopamine, from PDEL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_DVA_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_DVA_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 24.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PDEL_DVA_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_DVA_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 24.0))") # *->cell

        # ######################   Projection: NC_PDEL_PDER_Dopamine
        print("Adding projection: NC_PDEL_PDER_Dopamine, from PDEL to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_PDER_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_PDER_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_PDEL_PDER_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_PDER_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDEL_PVM_Dopamine
        print("Adding projection: NC_PDEL_PVM_Dopamine, from PDEL to PVM with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_PVM_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_PVM_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma], weight: 2.0, delay 0.0
        h("a_PVM[0].Soma syn_NC_PDEL_PVM_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_PVM[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_PVM_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PDEL_PVR_Dopamine
        print("Adding projection: NC_PDEL_PVR_Dopamine, from PDEL to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_PVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_PVR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_PDEL_PVR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_PVR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PDEL_VA9_Dopamine
        print("Adding projection: NC_PDEL_VA9_Dopamine, from PDEL to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_VA9_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_VA9_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_PDEL_VA9_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_VA9_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDEL_VD11_Dopamine
        print("Adding projection: NC_PDEL_VD11_Dopamine, from PDEL to VD11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDEL_VD11_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDEL_VD11_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD11[0].Soma], weight: 1.0, delay 0.0
        h("a_VD11[0].Soma syn_NC_PDEL_VD11_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDEL[0].Soma a_VD11[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDEL_VD11_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDER_AVKL_Dopamine
        print("Adding projection: NC_PDER_AVKL_Dopamine, from PDER to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDER_AVKL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDER_AVKL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 16.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_PDER_AVKL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDER[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDER_AVKL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_PDER_DVA_Dopamine
        print("Adding projection: NC_PDER_DVA_Dopamine, from PDER to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDER_DVA_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDER_DVA_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 35.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PDER_DVA_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDER[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDER_DVA_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 35.0))") # *->cell

        # ######################   Projection: NC_PDER_PVCL_Dopamine
        print("Adding projection: NC_PDER_PVCL_Dopamine, from PDER to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDER_PVCL_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDER_PVCL_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PDER_PVCL_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDER[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDER_PVCL_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PDER_PVCR_Dopamine
        print("Adding projection: NC_PDER_PVCR_Dopamine, from PDER to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PDER_PVCR_Dopamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PDER_PVCR_Dopamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PDER_PVCR_Dopamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PDER[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PDER_PVCR_Dopamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAL_AVDR_Glutamate
        print("Adding projection: NC_PHAL_AVDR_Glutamate, from PHAL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PHAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAL_AVFL_Glutamate
        print("Adding projection: NC_PHAL_AVFL_Glutamate, from PHAL to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_PHAL_AVFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_AVFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PHAL_AVG_Glutamate
        print("Adding projection: NC_PHAL_AVG_Glutamate, from PHAL to AVG with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 5.0, delay 0.0
        h("a_AVG[0].Soma syn_NC_PHAL_AVG_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_AVG[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_AVG_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PHAL_AVHL_Glutamate
        print("Adding projection: NC_PHAL_AVHL_Glutamate, from PHAL to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_PHAL_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAL_AVHR_Glutamate
        print("Adding projection: NC_PHAL_AVHR_Glutamate, from PHAL to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_PHAL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAL_DVA_Glutamate
        print("Adding projection: NC_PHAL_DVA_Glutamate, from PHAL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 2.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PHAL_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHAL_PHAR_Glutamate
        print("Adding projection: NC_PHAL_PHAR_Glutamate, from PHAL to PHAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_PHAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_PHAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma], weight: 5.0, delay 0.0
        h("a_PHAR[0].Soma syn_NC_PHAL_PHAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_PHAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_PHAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PHAL_PHBL_Glutamate
        print("Adding projection: NC_PHAL_PHBL_Glutamate, from PHAL to PHBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma], weight: 5.0, delay 0.0
        h("a_PHBL[0].Soma syn_NC_PHAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_PHBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_PHBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PHAL_PHBR_Glutamate
        print("Adding projection: NC_PHAL_PHBR_Glutamate, from PHAL to PHBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_PHBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_PHBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma], weight: 5.0, delay 0.0
        h("a_PHBR[0].Soma syn_NC_PHAL_PHBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_PHBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_PHBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PHAL_PVQL_Glutamate
        print("Adding projection: NC_PHAL_PVQL_Glutamate, from PHAL to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAL_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_PHAL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAL[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAL_PVQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHAR_AVG_Glutamate
        print("Adding projection: NC_PHAR_AVG_Glutamate, from PHAR to AVG with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 3.0, delay 0.0
        h("a_AVG[0].Soma syn_NC_PHAR_AVG_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_AVG[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_AVG_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PHAR_AVHR_Glutamate
        print("Adding projection: NC_PHAR_AVHR_Glutamate, from PHAR to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_PHAR_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAR_DA8_Glutamate
        print("Adding projection: NC_PHAR_DA8_Glutamate, from PHAR to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_DA8_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_PHAR_DA8_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_DA8_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAR_DVA_Glutamate
        print("Adding projection: NC_PHAR_DVA_Glutamate, from PHAR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PHAR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAR_PHAL_Glutamate
        print("Adding projection: NC_PHAR_PHAL_Glutamate, from PHAR to PHAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_PHAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_PHAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma], weight: 6.0, delay 0.0
        h("a_PHAL[0].Soma syn_NC_PHAR_PHAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_PHAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_PHAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PHAR_PHBL_Glutamate
        print("Adding projection: NC_PHAR_PHBL_Glutamate, from PHAR to PHBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_PHBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_PHBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma], weight: 1.0, delay 0.0
        h("a_PHBL[0].Soma syn_NC_PHAR_PHBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_PHBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_PHBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHAR_PHBR_Glutamate
        print("Adding projection: NC_PHAR_PHBR_Glutamate, from PHAR to PHBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_PHBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_PHBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma], weight: 5.0, delay 0.0
        h("a_PHBR[0].Soma syn_NC_PHAR_PHBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_PHBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_PHBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PHAR_PVQL_Glutamate
        print("Adding projection: NC_PHAR_PVQL_Glutamate, from PHAR to PVQL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHAR_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHAR_PVQL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVQL[0].Soma syn_NC_PHAR_PVQL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHAR[0].Soma a_PVQL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHAR_PVQL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHBL_AVAL_Serotonin
        print("Adding projection: NC_PHBL_AVAL_Serotonin, from PHBL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBL_AVAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBL_AVAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 9.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PHBL_AVAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBL_AVAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_PHBL_AVAR_Serotonin
        print("Adding projection: NC_PHBL_AVAR_Serotonin, from PHBL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBL_AVAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBL_AVAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PHBL_AVAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBL_AVAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PHBL_AVDL_Serotonin
        print("Adding projection: NC_PHBL_AVDL_Serotonin, from PHBL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBL_AVDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBL_AVDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PHBL_AVDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBL_AVDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBL_PHBR_Serotonin
        print("Adding projection: NC_PHBL_PHBR_Serotonin, from PHBL to PHBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBL_PHBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBL_PHBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma], weight: 1.0, delay 0.0
        h("a_PHBR[0].Soma syn_NC_PHBL_PHBR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBL[0].Soma a_PHBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBL_PHBR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBL_PVCL_Serotonin
        print("Adding projection: NC_PHBL_PVCL_Serotonin, from PHBL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBL_PVCL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBL_PVCL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 13.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PHBL_PVCL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBL_PVCL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_PHBL_VA12_Serotonin
        print("Adding projection: NC_PHBL_VA12_Serotonin, from PHBL to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBL_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBL_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_PHBL_VA12_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBL[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBL_VA12_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBR_AVAL_Serotonin
        print("Adding projection: NC_PHBR_AVAL_Serotonin, from PHBR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_AVAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_AVAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PHBR_AVAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_AVAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PHBR_AVAR_Serotonin
        print("Adding projection: NC_PHBR_AVAR_Serotonin, from PHBR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_AVAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_AVAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PHBR_AVAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_AVAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PHBR_AVDL_Serotonin
        print("Adding projection: NC_PHBR_AVDL_Serotonin, from PHBR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_AVDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_AVDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PHBR_AVDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_AVDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBR_AVDR_Serotonin
        print("Adding projection: NC_PHBR_AVDR_Serotonin, from PHBR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PHBR_AVDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_AVDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBR_AVFL_Serotonin
        print("Adding projection: NC_PHBR_AVFL_Serotonin, from PHBR to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_AVFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_AVFL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_PHBR_AVFL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_AVFL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBR_DA8_Serotonin
        print("Adding projection: NC_PHBR_DA8_Serotonin, from PHBR to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_DA8_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_DA8_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_PHBR_DA8_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_DA8_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBR_PHBL_Serotonin
        print("Adding projection: NC_PHBR_PHBL_Serotonin, from PHBR to PHBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_PHBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_PHBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma], weight: 1.0, delay 0.0
        h("a_PHBL[0].Soma syn_NC_PHBR_PHBL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_PHBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_PHBL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHBR_PVCL_Serotonin
        print("Adding projection: NC_PHBR_PVCL_Serotonin, from PHBR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_PVCL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_PVCL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 6.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PHBR_PVCL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_PVCL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PHBR_PVCR_Serotonin
        print("Adding projection: NC_PHBR_PVCR_Serotonin, from PHBR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_PVCR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_PVCR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PHBR_PVCR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_PVCR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PHBR_VA12_Serotonin
        print("Adding projection: NC_PHBR_VA12_Serotonin, from PHBR to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHBR_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHBR_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 2.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_PHBR_VA12_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHBR[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHBR_VA12_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHCL_AVAL_Glutamate
        print("Adding projection: NC_PHCL_AVAL_Glutamate, from PHCL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PHCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHCL_DA9_Glutamate
        print("Adding projection: NC_PHCL_DA9_Glutamate, from PHCL to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCL_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCL_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 7.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_PHCL_DA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCL[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCL_DA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PHCL_DVA_Glutamate
        print("Adding projection: NC_PHCL_DVA_Glutamate, from PHCL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 6.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PHCL_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCL_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PHCL_LUAL_Glutamate
        print("Adding projection: NC_PHCL_LUAL_Glutamate, from PHCL to LUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCL_LUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCL_LUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAL[0].Soma syn_NC_PHCL_LUAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCL[0].Soma a_LUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCL_LUAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHCL_PVCL_Glutamate
        print("Adding projection: NC_PHCL_PVCL_Glutamate, from PHCL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PHCL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHCL_VA12_Glutamate
        print("Adding projection: NC_PHCL_VA12_Glutamate, from PHCL to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCL_VA12_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCL_VA12_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 2.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_PHCL_VA12_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCL[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCL_VA12_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHCR_AVHR_Glutamate
        print("Adding projection: NC_PHCR_AVHR_Glutamate, from PHCR to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_PHCR_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHCR_DA9_Glutamate
        print("Adding projection: NC_PHCR_DA9_Glutamate, from PHCR to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 2.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_PHCR_DA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_DA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PHCR_DVA_Glutamate
        print("Adding projection: NC_PHCR_DVA_Glutamate, from PHCR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 8.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PHCR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_PHCR_LUAR_Glutamate
        print("Adding projection: NC_PHCR_LUAR_Glutamate, from PHCR to LUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAR[0].Soma syn_NC_PHCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_LUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHCR_PHCL_Glutamate
        print("Adding projection: NC_PHCR_PHCL_Glutamate, from PHCR to PHCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_PHCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_PHCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PHCL[0].Soma syn_NC_PHCR_PHCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_PHCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_PHCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PHCR_PVCR_Glutamate
        print("Adding projection: NC_PHCR_PVCR_Glutamate, from PHCR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 8.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PHCR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_PHCR_VA12_Glutamate
        print("Adding projection: NC_PHCR_VA12_Glutamate, from PHCR to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PHCR_VA12_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PHCR_VA12_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_PHCR_VA12_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PHCR[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PHCR_VA12_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PLML_HSNL_Glutamate
        print("Adding projection: NC_PLML_HSNL_Glutamate, from PLML to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLML_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLML_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_PLML_HSNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLML[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLML_HSNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PLMR_AS6_Glutamate
        print("Adding projection: NC_PLMR_AS6_Glutamate, from PLMR to AS6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0, delay 0.0
        h("a_AS6[0].Soma syn_NC_PLMR_AS6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_AS6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_AS6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PLMR_AVAL_Glutamate
        print("Adding projection: NC_PLMR_AVAL_Glutamate, from PLMR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PLMR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PLMR_AVAR_Glutamate
        print("Adding projection: NC_PLMR_AVAR_Glutamate, from PLMR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PLMR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PLMR_AVDL_Glutamate
        print("Adding projection: NC_PLMR_AVDL_Glutamate, from PLMR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PLMR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PLMR_AVDR_Glutamate
        print("Adding projection: NC_PLMR_AVDR_Glutamate, from PLMR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PLMR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PLMR_DVA_Glutamate
        print("Adding projection: NC_PLMR_DVA_Glutamate, from PLMR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 5.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PLMR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PLMR_HSNR_Glutamate
        print("Adding projection: NC_PLMR_HSNR_Glutamate, from PLMR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_PLMR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PLMR_PDEL_Glutamate
        print("Adding projection: NC_PLMR_PDEL_Glutamate, from PLMR to PDEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 2.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_PLMR_PDEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_PDEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PLMR_PDER_Glutamate
        print("Adding projection: NC_PLMR_PDER_Glutamate, from PLMR to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 3.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_PLMR_PDER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_PDER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PLMR_PVCL_Glutamate
        print("Adding projection: NC_PLMR_PVCL_Glutamate, from PLMR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLMR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLMR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PLMR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLMR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLMR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PLNL_SAADL_Acetylcholine
        print("Adding projection: NC_PLNL_SAADL_Acetylcholine, from PLNL to SAADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLNL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLNL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 5.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_PLNL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLNL[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLNL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PLNL_SMBVL_Acetylcholine
        print("Adding projection: NC_PLNL_SMBVL_Acetylcholine, from PLNL to SMBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLNL_SMBVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLNL_SMBVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 6.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_PLNL_SMBVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLNL[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLNL_SMBVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PLNR_SAADR_Acetylcholine
        print("Adding projection: NC_PLNR_SAADR_Acetylcholine, from PLNR to SAADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLNR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLNR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 4.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_PLNR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLNR[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLNR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PLNR_SMBVR_Acetylcholine
        print("Adding projection: NC_PLNR_SMBVR_Acetylcholine, from PLNR to SMBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PLNR_SMBVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PLNR_SMBVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 6.0, delay 0.0
        h("a_SMBVR[0].Soma syn_NC_PLNR_SMBVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PLNR[0].Soma a_SMBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PLNR_SMBVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PQR_AVAL_Glutamate
        print("Adding projection: NC_PQR_AVAL_Glutamate, from PQR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 8.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_PQR_AVAR_Glutamate
        print("Adding projection: NC_PQR_AVAR_Glutamate, from PQR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 11.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_PQR_AVDL_Glutamate
        print("Adding projection: NC_PQR_AVDL_Glutamate, from PQR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PQR_AVDR_Glutamate
        print("Adding projection: NC_PQR_AVDR_Glutamate, from PQR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PQR_AVG_Glutamate
        print("Adding projection: NC_PQR_AVG_Glutamate, from PQR to AVG with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 1.0, delay 0.0
        h("a_AVG[0].Soma syn_NC_PQR_AVG_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_AVG[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_AVG_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PQR_LUAR_Glutamate
        print("Adding projection: NC_PQR_LUAR_Glutamate, from PQR to LUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_LUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_LUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAR[0].Soma syn_NC_PQR_LUAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_LUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_LUAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PQR_PVNL_Glutamate
        print("Adding projection: NC_PQR_PVNL_Glutamate, from PQR to PVNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PQR_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PQR_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_PQR_PVNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PQR[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PQR_PVNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_AS1_Glutamate
        print("Adding projection: NC_PVCL_AS1_Glutamate, from PVCL to AS1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AS1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AS1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0, delay 0.0
        h("a_AS1[0].Soma syn_NC_PVCL_AS1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AS1[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AS1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVAL_Glutamate
        print("Adding projection: NC_PVCL_AVAL_Glutamate, from PVCL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVAR_Glutamate
        print("Adding projection: NC_PVCL_AVAR_Glutamate, from PVCL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVCL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVBL_Glutamate
        print("Adding projection: NC_PVCL_AVBL_Glutamate, from PVCL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVCL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVBR_Glutamate
        print("Adding projection: NC_PVCL_AVBR_Glutamate, from PVCL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 12.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVCL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVDL_Glutamate
        print("Adding projection: NC_PVCL_AVDL_Glutamate, from PVCL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PVCL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVDR_Glutamate
        print("Adding projection: NC_PVCL_AVDR_Glutamate, from PVCL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PVCL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVEL_Glutamate
        print("Adding projection: NC_PVCL_AVEL_Glutamate, from PVCL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_PVCL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVER_Glutamate
        print("Adding projection: NC_PVCL_AVER_Glutamate, from PVCL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_PVCL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVJL_Glutamate
        print("Adding projection: NC_PVCL_AVJL_Glutamate, from PVCL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_PVCL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCL_AVJR_Glutamate
        print("Adding projection: NC_PVCL_AVJR_Glutamate, from PVCL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_PVCL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_DA2_Glutamate
        print("Adding projection: NC_PVCL_DA2_Glutamate, from PVCL to DA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DA2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0, delay 0.0
        h("a_DA2[0].Soma syn_NC_PVCL_DA2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DA2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_DA5_Glutamate
        print("Adding projection: NC_PVCL_DA5_Glutamate, from PVCL to DA5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DA5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 1.0, delay 0.0
        h("a_DA5[0].Soma syn_NC_PVCL_DA5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DA5[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DA5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_DA6_Glutamate
        print("Adding projection: NC_PVCL_DA6_Glutamate, from PVCL to DA6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DA6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DA6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 1.0, delay 0.0
        h("a_DA6[0].Soma syn_NC_PVCL_DA6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DA6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_DB2_Glutamate
        print("Adding projection: NC_PVCL_DB2_Glutamate, from PVCL to DB2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 3.0, delay 0.0
        h("a_DB2[0].Soma syn_NC_PVCL_DB2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DB2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCL_DB3_Glutamate
        print("Adding projection: NC_PVCL_DB3_Glutamate, from PVCL to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 4.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_PVCL_DB3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DB3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVCL_DB4_Glutamate
        print("Adding projection: NC_PVCL_DB4_Glutamate, from PVCL to DB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 3.0, delay 0.0
        h("a_DB4[0].Soma syn_NC_PVCL_DB4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DB4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCL_DB5_Glutamate
        print("Adding projection: NC_PVCL_DB5_Glutamate, from PVCL to DB5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DB5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DB5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 2.0, delay 0.0
        h("a_DB5[0].Soma syn_NC_PVCL_DB5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DB5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_DB6_Glutamate
        print("Adding projection: NC_PVCL_DB6_Glutamate, from PVCL to DB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 2.0, delay 0.0
        h("a_DB6[0].Soma syn_NC_PVCL_DB6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DB6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_DB7_Glutamate
        print("Adding projection: NC_PVCL_DB7_Glutamate, from PVCL to DB7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DB7_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DB7_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma], weight: 3.0, delay 0.0
        h("a_DB7[0].Soma syn_NC_PVCL_DB7_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DB7[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DB7_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCL_DVA_Glutamate
        print("Adding projection: NC_PVCL_DVA_Glutamate, from PVCL to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 4.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PVCL_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVCL_PVCR_Glutamate
        print("Adding projection: NC_PVCL_PVCR_Glutamate, from PVCL to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVCL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_RID_Glutamate
        print("Adding projection: NC_PVCL_RID_Glutamate, from PVCL to RID with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 5.0, delay 0.0
        h("a_RID[0].Soma syn_NC_PVCL_RID_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_RID[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_RID_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVCL_RIS_Glutamate
        print("Adding projection: NC_PVCL_RIS_Glutamate, from PVCL to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_RIS_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_RIS_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 2.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_PVCL_RIS_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_RIS_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_SIBVL_Glutamate
        print("Adding projection: NC_PVCL_SIBVL_Glutamate, from PVCL to SIBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SIBVL[0].Soma syn_NC_PVCL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_SIBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB10_Glutamate
        print("Adding projection: NC_PVCL_VB10_Glutamate, from PVCL to VB10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 2.0, delay 0.0
        h("a_VB10[0].Soma syn_NC_PVCL_VB10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB10[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB11_Glutamate
        print("Adding projection: NC_PVCL_VB11_Glutamate, from PVCL to VB11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB11_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB11_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma], weight: 1.0, delay 0.0
        h("a_VB11[0].Soma syn_NC_PVCL_VB11_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB11[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB11_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB3_Glutamate
        print("Adding projection: NC_PVCL_VB3_Glutamate, from PVCL to VB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma], weight: 1.0, delay 0.0
        h("a_VB3[0].Soma syn_NC_PVCL_VB3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB4_Glutamate
        print("Adding projection: NC_PVCL_VB4_Glutamate, from PVCL to VB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 1.0, delay 0.0
        h("a_VB4[0].Soma syn_NC_PVCL_VB4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB5_Glutamate
        print("Adding projection: NC_PVCL_VB5_Glutamate, from PVCL to VB5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 1.0, delay 0.0
        h("a_VB5[0].Soma syn_NC_PVCL_VB5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB6_Glutamate
        print("Adding projection: NC_PVCL_VB6_Glutamate, from PVCL to VB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 2.0, delay 0.0
        h("a_VB6[0].Soma syn_NC_PVCL_VB6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCL_VB8_Glutamate
        print("Adding projection: NC_PVCL_VB8_Glutamate, from PVCL to VB8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB8_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCL_VB8_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 1.0, delay 0.0
        h("a_VB8[0].Soma syn_NC_PVCL_VB8_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCL[0].Soma a_VB8[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCL_VB8_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_AQR_Glutamate
        print("Adding projection: NC_PVCR_AQR_Glutamate, from PVCR to AQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 1.0, delay 0.0
        h("a_AQR[0].Soma syn_NC_PVCR_AQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_AS2_Glutamate
        print("Adding projection: NC_PVCR_AS2_Glutamate, from PVCR to AS2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AS2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AS2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 1.0, delay 0.0
        h("a_AS2[0].Soma syn_NC_PVCR_AS2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AS2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AS2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVAL_Glutamate
        print("Adding projection: NC_PVCR_AVAL_Glutamate, from PVCR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVCR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVAR_Glutamate
        print("Adding projection: NC_PVCR_AVAR_Glutamate, from PVCR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVCR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVBL_Glutamate
        print("Adding projection: NC_PVCR_AVBL_Glutamate, from PVCR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 8.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVCR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVBR_Glutamate
        print("Adding projection: NC_PVCR_AVBR_Glutamate, from PVCR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVCR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVDL_Glutamate
        print("Adding projection: NC_PVCR_AVDL_Glutamate, from PVCR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PVCR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVDR_Glutamate
        print("Adding projection: NC_PVCR_AVDR_Glutamate, from PVCR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PVCR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVEL_Glutamate
        print("Adding projection: NC_PVCR_AVEL_Glutamate, from PVCR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_PVCR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVER_Glutamate
        print("Adding projection: NC_PVCR_AVER_Glutamate, from PVCR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_PVCR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_AVL_Glutamate
        print("Adding projection: NC_PVCR_AVL_Glutamate, from PVCR to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_PVCR_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_DA9_Glutamate
        print("Adding projection: NC_PVCR_DA9_Glutamate, from PVCR to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_PVCR_DA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_DB2_Glutamate
        print("Adding projection: NC_PVCR_DB2_Glutamate, from PVCR to DB2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 1.0, delay 0.0
        h("a_DB2[0].Soma syn_NC_PVCR_DB2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DB2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_DB3_Glutamate
        print("Adding projection: NC_PVCR_DB3_Glutamate, from PVCR to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 3.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_PVCR_DB3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DB3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCR_DB4_Glutamate
        print("Adding projection: NC_PVCR_DB4_Glutamate, from PVCR to DB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 4.0, delay 0.0
        h("a_DB4[0].Soma syn_NC_PVCR_DB4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DB4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVCR_DB5_Glutamate
        print("Adding projection: NC_PVCR_DB5_Glutamate, from PVCR to DB5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DB5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DB5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 1.0, delay 0.0
        h("a_DB5[0].Soma syn_NC_PVCR_DB5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DB5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_DB6_Glutamate
        print("Adding projection: NC_PVCR_DB6_Glutamate, from PVCR to DB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 2.0, delay 0.0
        h("a_DB6[0].Soma syn_NC_PVCR_DB6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DB6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCR_DB7_Glutamate
        print("Adding projection: NC_PVCR_DB7_Glutamate, from PVCR to DB7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_DB7_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_DB7_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma], weight: 1.0, delay 0.0
        h("a_DB7[0].Soma syn_NC_PVCR_DB7_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_DB7[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_DB7_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_FLPL_Glutamate
        print("Adding projection: NC_PVCR_FLPL_Glutamate, from PVCR to FLPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_FLPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_FLPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPL[0].Soma syn_NC_PVCR_FLPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_FLPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_FLPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_LUAR_Glutamate
        print("Adding projection: NC_PVCR_LUAR_Glutamate, from PVCR to LUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_LUAR[0].Soma syn_NC_PVCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_LUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_LUAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_PDEL_Glutamate
        print("Adding projection: NC_PVCR_PDEL_Glutamate, from PVCR to PDEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 1.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_PVCR_PDEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_PDEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_PVCL_Glutamate
        print("Adding projection: NC_PVCR_PVCL_Glutamate, from PVCR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVCR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCR_PVDL_Glutamate
        print("Adding projection: NC_PVCR_PVDL_Glutamate, from PVCR to PVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_PVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVDL[0].Soma syn_NC_PVCR_PVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_PVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_PVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_PVR_Glutamate
        print("Adding projection: NC_PVCR_PVR_Glutamate, from PVCR to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_PVCR_PVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_PVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_PVWR_Glutamate
        print("Adding projection: NC_PVCR_PVWR_Glutamate, from PVCR to PVWR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVWR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_PVWR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVWR[0].Soma syn_NC_PVCR_PVWR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_PVWR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_PVWR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_RID_Glutamate
        print("Adding projection: NC_PVCR_RID_Glutamate, from PVCR to RID with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_RID_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 5.0, delay 0.0
        h("a_RID[0].Soma syn_NC_PVCR_RID_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_RID[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_RID_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVCR_SIBVR_Glutamate
        print("Adding projection: NC_PVCR_SIBVR_Glutamate, from PVCR to SIBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SIBVR[0].Soma syn_NC_PVCR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_SIBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_SIBVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCR_VB10_Glutamate
        print("Adding projection: NC_PVCR_VB10_Glutamate, from PVCR to VB10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_VB10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_VB10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0, delay 0.0
        h("a_VB10[0].Soma syn_NC_PVCR_VB10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_VB10[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_VB10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVCR_VB4_Glutamate
        print("Adding projection: NC_PVCR_VB4_Glutamate, from PVCR to VB4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_VB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_VB4_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 3.0, delay 0.0
        h("a_VB4[0].Soma syn_NC_PVCR_VB4_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_VB4[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_VB4_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCR_VB6_Glutamate
        print("Adding projection: NC_PVCR_VB6_Glutamate, from PVCR to VB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_VB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_VB6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 2.0, delay 0.0
        h("a_VB6[0].Soma syn_NC_PVCR_VB6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_VB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_VB6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVCR_VB7_Glutamate
        print("Adding projection: NC_PVCR_VB7_Glutamate, from PVCR to VB7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_VB7_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_VB7_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma], weight: 3.0, delay 0.0
        h("a_VB7[0].Soma syn_NC_PVCR_VB7_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_VB7[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_VB7_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVCR_VB8_Glutamate
        print("Adding projection: NC_PVCR_VB8_Glutamate, from PVCR to VB8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVCR_VB8_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVCR_VB8_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 1.0, delay 0.0
        h("a_VB8[0].Soma syn_NC_PVCR_VB8_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVCR[0].Soma a_VB8[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVCR_VB8_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVDL_AVAL_Glutamate
        print("Adding projection: NC_PVDL_AVAL_Glutamate, from PVDL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PVDL_AVAR_Glutamate
        print("Adding projection: NC_PVDL_AVAR_Glutamate, from PVDL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PVDL_DD5_Glutamate
        print("Adding projection: NC_PVDL_DD5_Glutamate, from PVDL to DD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDL_DD5_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDL_DD5_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma], weight: 1.0, delay 0.0
        h("a_DD5[0].Soma syn_NC_PVDL_DD5_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDL[0].Soma a_DD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDL_DD5_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVDL_PVCL_Glutamate
        print("Adding projection: NC_PVDL_PVCL_Glutamate, from PVDL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVDL_PVCR_Glutamate
        print("Adding projection: NC_PVDL_PVCR_Glutamate, from PVDL to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 6.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVDL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDL[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PVDL_VD10_Glutamate
        print("Adding projection: NC_PVDL_VD10_Glutamate, from PVDL to VD10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDL_VD10_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDL_VD10_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 1.0, delay 0.0
        h("a_VD10[0].Soma syn_NC_PVDL_VD10_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDL[0].Soma a_VD10[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDL_VD10_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVDR_AVAL_Glutamate
        print("Adding projection: NC_PVDR_AVAL_Glutamate, from PVDR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PVDR_AVAR_Glutamate
        print("Adding projection: NC_PVDR_AVAR_Glutamate, from PVDR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 9.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_PVDR_DVA_Glutamate
        print("Adding projection: NC_PVDR_DVA_Glutamate, from PVDR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 3.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PVDR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVDR_PVCL_Glutamate
        print("Adding projection: NC_PVDR_PVCL_Glutamate, from PVDR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 13.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVDR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_PVDR_PVCR_Glutamate
        print("Adding projection: NC_PVDR_PVCR_Glutamate, from PVDR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 10.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVDR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_PVDR_PVDL_Glutamate
        print("Adding projection: NC_PVDR_PVDL_Glutamate, from PVDR to PVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_PVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_PVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVDL[0].Soma syn_NC_PVDR_PVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_PVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_PVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVDR_VA9_Glutamate
        print("Adding projection: NC_PVDR_VA9_Glutamate, from PVDR to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVDR_VA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVDR_VA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_PVDR_VA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVDR[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVDR_VA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVM_AVKL_Glutamate
        print("Adding projection: NC_PVM_AVKL_Glutamate, from PVM to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 11.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_PVM_AVKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_AVKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_PVM_AVM_Glutamate
        print("Adding projection: NC_PVM_AVM_Glutamate, from PVM to AVM with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_AVM_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_AVM_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma], weight: 1.0, delay 0.0
        h("a_AVM[0].Soma syn_NC_PVM_AVM_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_AVM[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_AVM_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVM_DVA_Glutamate
        print("Adding projection: NC_PVM_DVA_Glutamate, from PVM to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 3.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PVM_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVM_PDEL_Glutamate
        print("Adding projection: NC_PVM_PDEL_Glutamate, from PVM to PDEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 7.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_PVM_PDEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_PDEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVM_PDER_Glutamate
        print("Adding projection: NC_PVM_PDER_Glutamate, from PVM to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 8.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_PVM_PDER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_PDER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_PVM_PVCL_Glutamate
        print("Adding projection: NC_PVM_PVCL_Glutamate, from PVM to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVM_PVR_Glutamate
        print("Adding projection: NC_PVM_PVR_Glutamate, from PVM to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVM_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVM_PVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_PVM_PVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVM[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVM_PVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVAL_Glutamate
        print("Adding projection: NC_PVNL_AVAL_Glutamate, from PVNL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVNL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVBR_Glutamate
        print("Adding projection: NC_PVNL_AVBR_Glutamate, from PVNL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVNL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVDL_Glutamate
        print("Adding projection: NC_PVNL_AVDL_Glutamate, from PVNL to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_PVNL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVDR_Glutamate
        print("Adding projection: NC_PVNL_AVDR_Glutamate, from PVNL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PVNL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVEL_Glutamate
        print("Adding projection: NC_PVNL_AVEL_Glutamate, from PVNL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_PVNL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVFR_Glutamate
        print("Adding projection: NC_PVNL_AVFR_Glutamate, from PVNL to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_PVNL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVG_Glutamate
        print("Adding projection: NC_PVNL_AVG_Glutamate, from PVNL to AVG with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVG_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 1.0, delay 0.0
        h("a_AVG[0].Soma syn_NC_PVNL_AVG_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVG[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVG_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVJL_Glutamate
        print("Adding projection: NC_PVNL_AVJL_Glutamate, from PVNL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_PVNL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVJR_Glutamate
        print("Adding projection: NC_PVNL_AVJR_Glutamate, from PVNL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_PVNL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVNL_AVL_Glutamate
        print("Adding projection: NC_PVNL_AVL_Glutamate, from PVNL to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_PVNL_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNL_BDUL_Glutamate
        print("Adding projection: NC_PVNL_BDUL_Glutamate, from PVNL to BDUL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma], weight: 1.0, delay 0.0
        h("a_BDUL[0].Soma syn_NC_PVNL_BDUL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_BDUL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_BDUL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_BDUR_Glutamate
        print("Adding projection: NC_PVNL_BDUR_Glutamate, from PVNL to BDUR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma], weight: 2.0, delay 0.0
        h("a_BDUR[0].Soma syn_NC_PVNL_BDUR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_BDUR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_BDUR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNL_DD1_Glutamate
        print("Adding projection: NC_PVNL_DD1_Glutamate, from PVNL to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_DD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_DD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 2.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_PVNL_DD1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_DD1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNL_PQR_Glutamate
        print("Adding projection: NC_PVNL_PQR_Glutamate, from PVNL to PQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PQR[0].Soma syn_NC_PVNL_PQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_PQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_PQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_PVCL_Glutamate
        print("Adding projection: NC_PVNL_PVCL_Glutamate, from PVNL to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVNL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_PVNR_Glutamate
        print("Adding projection: NC_PVNL_PVNR_Glutamate, from PVNL to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_PVNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 5.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_PVNL_PVNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_PVNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVNL_PVT_Glutamate
        print("Adding projection: NC_PVNL_PVT_Glutamate, from PVNL to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_PVNL_PVT_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_PVT_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_PVWL_Glutamate
        print("Adding projection: NC_PVNL_PVWL_Glutamate, from PVNL to PVWL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVWL[0].Soma syn_NC_PVNL_PVWL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_PVWL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_PVWL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNL_RIFL_Glutamate
        print("Adding projection: NC_PVNL_RIFL_Glutamate, from PVNL to RIFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNL_RIFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNL_RIFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFL[0].Soma syn_NC_PVNL_RIFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNL[0].Soma a_RIFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNL_RIFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVAL_Glutamate
        print("Adding projection: NC_PVNR_AVAL_Glutamate, from PVNR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVNR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVBL_Glutamate
        print("Adding projection: NC_PVNR_AVBL_Glutamate, from PVNR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVNR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVBR_Glutamate
        print("Adding projection: NC_PVNR_AVBR_Glutamate, from PVNR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVNR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVDR_Glutamate
        print("Adding projection: NC_PVNR_AVDR_Glutamate, from PVNR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PVNR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVEL_Glutamate
        print("Adding projection: NC_PVNR_AVEL_Glutamate, from PVNR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_PVNR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVJL_Glutamate
        print("Adding projection: NC_PVNR_AVJL_Glutamate, from PVNR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_PVNR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVJR_Glutamate
        print("Adding projection: NC_PVNR_AVJR_Glutamate, from PVNR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_PVNR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_AVL_Glutamate
        print("Adding projection: NC_PVNR_AVL_Glutamate, from PVNR to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_PVNR_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_BDUL_Glutamate
        print("Adding projection: NC_PVNR_BDUL_Glutamate, from PVNR to BDUL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_BDUL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUL[0].Soma], weight: 1.0, delay 0.0
        h("a_BDUL[0].Soma syn_NC_PVNR_BDUL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_BDUL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_BDUL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_BDUR_Glutamate
        print("Adding projection: NC_PVNR_BDUR_Glutamate, from PVNR to BDUR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_BDUR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BDUR[0].Soma], weight: 2.0, delay 0.0
        h("a_BDUR[0].Soma syn_NC_PVNR_BDUR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_BDUR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_BDUR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_DD3_Glutamate
        print("Adding projection: NC_PVNR_DD3_Glutamate, from PVNR to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_DD3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_DD3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 1.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_PVNR_DD3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_DD3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_HSNR_Glutamate
        print("Adding projection: NC_PVNR_HSNR_Glutamate, from PVNR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_PVNR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_PQR_Glutamate
        print("Adding projection: NC_PVNR_PQR_Glutamate, from PVNR to PQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_PQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma], weight: 2.0, delay 0.0
        h("a_PQR[0].Soma syn_NC_PVNR_PQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_PQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_PQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_PVCL_Glutamate
        print("Adding projection: NC_PVNR_PVCL_Glutamate, from PVNR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVNR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_PVNL_Glutamate
        print("Adding projection: NC_PVNR_PVNL_Glutamate, from PVNR to PVNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_PVNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVNL[0].Soma syn_NC_PVNR_PVNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_PVNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_PVNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_PVT_Glutamate
        print("Adding projection: NC_PVNR_PVT_Glutamate, from PVNR to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 2.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_PVNR_PVT_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_PVT_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_PVWL_Glutamate
        print("Adding projection: NC_PVNR_PVWL_Glutamate, from PVNR to PVWL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_PVWL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVWL[0].Soma syn_NC_PVNR_PVWL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_PVWL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_PVWL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVNR_VC2_Glutamate
        print("Adding projection: NC_PVNR_VC2_Glutamate, from PVNR to VC2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_VC2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_VC2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 1.0, delay 0.0
        h("a_VC2[0].Soma syn_NC_PVNR_VC2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_VC2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_VC2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_VC3_Glutamate
        print("Adding projection: NC_PVNR_VC3_Glutamate, from PVNR to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_VC3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_VC3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_PVNR_VC3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_VC3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_VD12_Glutamate
        print("Adding projection: NC_PVNR_VD12_Glutamate, from PVNR to VD12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_VD12_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_VD12_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma], weight: 1.0, delay 0.0
        h("a_VD12[0].Soma syn_NC_PVNR_VD12_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_VD12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_VD12_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_VD6_Glutamate
        print("Adding projection: NC_PVNR_VD6_Glutamate, from PVNR to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_VD6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_VD6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 1.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_PVNR_VD6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_VD6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVNR_VD7_Glutamate
        print("Adding projection: NC_PVNR_VD7_Glutamate, from PVNR to VD7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVNR_VD7_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVNR_VD7_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 1.0, delay 0.0
        h("a_VD7[0].Soma syn_NC_PVNR_VD7_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVNR[0].Soma a_VD7[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVNR_VD7_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_ADAL_Glutamate
        print("Adding projection: NC_PVPL_ADAL_Glutamate, from PVPL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_ADAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_ADAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_PVPL_ADAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_ADAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_AQR_Glutamate
        print("Adding projection: NC_PVPL_AQR_Glutamate, from PVPL to AQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 1.0, delay 0.0
        h("a_AQR[0].Soma syn_NC_PVPL_AQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVAL_Glutamate
        print("Adding projection: NC_PVPL_AVAL_Glutamate, from PVPL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVAR_Glutamate
        print("Adding projection: NC_PVPL_AVAR_Glutamate, from PVPL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVBL_Glutamate
        print("Adding projection: NC_PVPL_AVBL_Glutamate, from PVPL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVBR_Glutamate
        print("Adding projection: NC_PVPL_AVBR_Glutamate, from PVPL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVDR_Glutamate
        print("Adding projection: NC_PVPL_AVDR_Glutamate, from PVPL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PVPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVER_Glutamate
        print("Adding projection: NC_PVPL_AVER_Glutamate, from PVPL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_PVPL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_AVHR_Glutamate
        print("Adding projection: NC_PVPL_AVHR_Glutamate, from PVPL to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_PVPL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPL_PVCR_Glutamate
        print("Adding projection: NC_PVPL_PVCR_Glutamate, from PVPL to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVPL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVPL_RIGL_Glutamate
        print("Adding projection: NC_PVPL_RIGL_Glutamate, from PVPL to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_PVPL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPL[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVPR_ADFR_Glutamate
        print("Adding projection: NC_PVPR_ADFR_Glutamate, from PVPR to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_ADFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_PVPR_ADFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_ADFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_AQR_Glutamate
        print("Adding projection: NC_PVPR_AQR_Glutamate, from PVPR to AQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 2.0, delay 0.0
        h("a_AQR[0].Soma syn_NC_PVPR_AQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVPR_ASHR_Glutamate
        print("Adding projection: NC_PVPR_ASHR_Glutamate, from PVPR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_PVPR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_AVAL_Glutamate
        print("Adding projection: NC_PVPR_AVAL_Glutamate, from PVPR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_PVPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_AVAR_Glutamate
        print("Adding projection: NC_PVPR_AVAR_Glutamate, from PVPR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVPR_AVBL_Glutamate
        print("Adding projection: NC_PVPR_AVBL_Glutamate, from PVPR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVPR_AVBR_Glutamate
        print("Adding projection: NC_PVPR_AVBR_Glutamate, from PVPR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_PVPR_AVHL_Glutamate
        print("Adding projection: NC_PVPR_AVHL_Glutamate, from PVPR to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_PVPR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVPR_AVL_Glutamate
        print("Adding projection: NC_PVPR_AVL_Glutamate, from PVPR to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_PVPR_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVPR_DD2_Glutamate
        print("Adding projection: NC_PVPR_DD2_Glutamate, from PVPR to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_DD2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_DD2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 1.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_PVPR_DD2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_DD2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_DVC_Glutamate
        print("Adding projection: NC_PVPR_DVC_Glutamate, from PVPR to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_PVPR_DVC_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_DVC_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_PVCL_Glutamate
        print("Adding projection: NC_PVPR_PVCL_Glutamate, from PVPR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 4.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_PVPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVPR_PVCR_Glutamate
        print("Adding projection: NC_PVPR_PVCR_Glutamate, from PVPR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 7.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVPR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVPR_PVQR_Glutamate
        print("Adding projection: NC_PVPR_PVQR_Glutamate, from PVPR to PVQR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_PVQR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVQR[0].Soma syn_NC_PVPR_PVQR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_PVQR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_PVQR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_RIAR_Glutamate
        print("Adding projection: NC_PVPR_RIAR_Glutamate, from PVPR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_PVPR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVPR_RIGR_Glutamate
        print("Adding projection: NC_PVPR_RIGR_Glutamate, from PVPR to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_PVPR_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_RIMR_Glutamate
        print("Adding projection: NC_PVPR_RIMR_Glutamate, from PVPR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_PVPR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVPR_RMGR_Glutamate
        print("Adding projection: NC_PVPR_RMGR_Glutamate, from PVPR to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVPR_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVPR_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_PVPR_RMGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVPR[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVPR_RMGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQL_AIAL_Glutamate
        print("Adding projection: NC_PVQL_AIAL_Glutamate, from PVQL to AIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQL_AIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_AIAL[0].Soma syn_NC_PVQL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQL[0].Soma a_AIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQL_AIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVQL_ASJL_Glutamate
        print("Adding projection: NC_PVQL_ASJL_Glutamate, from PVQL to ASJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQL_ASJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQL_ASJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASJL[0].Soma syn_NC_PVQL_ASJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQL[0].Soma a_ASJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQL_ASJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQL_ASKL_Glutamate
        print("Adding projection: NC_PVQL_ASKL_Glutamate, from PVQL to ASKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQL_ASKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 4.0, delay 0.0
        h("a_ASKL[0].Soma syn_NC_PVQL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQL[0].Soma a_ASKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQL_ASKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVQL_HSNL_Glutamate
        print("Adding projection: NC_PVQL_HSNL_Glutamate, from PVQL to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQL_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQL_HSNL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 2.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_PVQL_HSNL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQL[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQL_HSNL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVQL_RMGL_Glutamate
        print("Adding projection: NC_PVQL_RMGL_Glutamate, from PVQL to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQL_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQL_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_PVQL_RMGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQL[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQL_RMGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_AIAR_Glutamate
        print("Adding projection: NC_PVQR_AIAR_Glutamate, from PVQR to AIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_AIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 7.0, delay 0.0
        h("a_AIAR[0].Soma syn_NC_PVQR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_AIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_AIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVQR_ASER_Glutamate
        print("Adding projection: NC_PVQR_ASER_Glutamate, from PVQR to ASER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_ASER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASER[0].Soma], weight: 1.0, delay 0.0
        h("a_ASER[0].Soma syn_NC_PVQR_ASER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_ASER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_ASER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_ASKR_Glutamate
        print("Adding projection: NC_PVQR_ASKR_Glutamate, from PVQR to ASKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_ASKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_ASKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 4.0, delay 0.0
        h("a_ASKR[0].Soma syn_NC_PVQR_ASKR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_ASKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_ASKR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVQR_AVBL_Glutamate
        print("Adding projection: NC_PVQR_AVBL_Glutamate, from PVQR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_AVFR_Glutamate
        print("Adding projection: NC_PVQR_AVFR_Glutamate, from PVQR to AVFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_AVFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFR[0].Soma syn_NC_PVQR_AVFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_AVFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_AVFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_AVL_Glutamate
        print("Adding projection: NC_PVQR_AVL_Glutamate, from PVQR to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_PVQR_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_AWAR_Glutamate
        print("Adding projection: NC_PVQR_AWAR_Glutamate, from PVQR to AWAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_AWAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_AWAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AWAR[0].Soma syn_NC_PVQR_AWAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_AWAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_AWAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVQR_DD1_Glutamate
        print("Adding projection: NC_PVQR_DD1_Glutamate, from PVQR to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_DD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_DD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_PVQR_DD1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_DD1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_DVC_Glutamate
        print("Adding projection: NC_PVQR_DVC_Glutamate, from PVQR to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_PVQR_DVC_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_DVC_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_HSNR_Glutamate
        print("Adding projection: NC_PVQR_HSNR_Glutamate, from PVQR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_PVQR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_PVT_Glutamate
        print("Adding projection: NC_PVQR_PVT_Glutamate, from PVQR to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_PVQR_PVT_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_PVT_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_RIFR_Glutamate
        print("Adding projection: NC_PVQR_RIFR_Glutamate, from PVQR to RIFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_RIFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_RIFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIFR[0].Soma syn_NC_PVQR_RIFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_RIFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_RIFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVQR_VD1_Glutamate
        print("Adding projection: NC_PVQR_VD1_Glutamate, from PVQR to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVQR_VD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVQR_VD1_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_PVQR_VD1_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVQR[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVQR_VD1_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_ADAL_Glutamate
        print("Adding projection: NC_PVR_ADAL_Glutamate, from PVR to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_ADAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_ADAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_PVR_ADAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_ADAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_AS6_Glutamate
        print("Adding projection: NC_PVR_AS6_Glutamate, from PVR to AS6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_AS6_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0, delay 0.0
        h("a_AS6[0].Soma syn_NC_PVR_AS6_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_AS6[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_AS6_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_AVBL_Glutamate
        print("Adding projection: NC_PVR_AVBL_Glutamate, from PVR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_PVR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVR_AVBR_Glutamate
        print("Adding projection: NC_PVR_AVBR_Glutamate, from PVR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_PVR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVR_AVJL_Glutamate
        print("Adding projection: NC_PVR_AVJL_Glutamate, from PVR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_PVR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVR_AVJR_Glutamate
        print("Adding projection: NC_PVR_AVJR_Glutamate, from PVR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_PVR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVR_AVKL_Glutamate
        print("Adding projection: NC_PVR_AVKL_Glutamate, from PVR to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_PVR_AVKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_AVKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_DA9_Glutamate
        print("Adding projection: NC_PVR_DA9_Glutamate, from PVR to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_DA9_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_PVR_DA9_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_DA9_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_DB2_Glutamate
        print("Adding projection: NC_PVR_DB2_Glutamate, from PVR to DB2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_DB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_DB2_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 1.0, delay 0.0
        h("a_DB2[0].Soma syn_NC_PVR_DB2_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_DB2[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_DB2_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_DB3_Glutamate
        print("Adding projection: NC_PVR_DB3_Glutamate, from PVR to DB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_DB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_DB3_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0, delay 0.0
        h("a_DB3[0].Soma syn_NC_PVR_DB3_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_DB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_DB3_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_DVA_Glutamate
        print("Adding projection: NC_PVR_DVA_Glutamate, from PVR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_DVA_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_PVR_DVA_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_DVA_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_IL1DL_Glutamate
        print("Adding projection: NC_PVR_IL1DL_Glutamate, from PVR to IL1DL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_IL1DL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_IL1DL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1DL[0].Soma syn_NC_PVR_IL1DL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_IL1DL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_IL1DL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_IL1DR_Glutamate
        print("Adding projection: NC_PVR_IL1DR_Glutamate, from PVR to IL1DR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1DR[0].Soma syn_NC_PVR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_IL1DR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_IL1DR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_IL1VL_Glutamate
        print("Adding projection: NC_PVR_IL1VL_Glutamate, from PVR to IL1VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VL[0].Soma syn_NC_PVR_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_IL1VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_IL1VR_Glutamate
        print("Adding projection: NC_PVR_IL1VR_Glutamate, from PVR to IL1VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VR[0].Soma syn_NC_PVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_IL1VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_PDEL_Glutamate
        print("Adding projection: NC_PVR_PDEL_Glutamate, from PVR to PDEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_PDEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 1.0, delay 0.0
        h("a_PDEL[0].Soma syn_NC_PVR_PDEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_PDEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_PDEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_PDER_Glutamate
        print("Adding projection: NC_PVR_PDER_Glutamate, from PVR to PDER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_PDER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0, delay 0.0
        h("a_PDER[0].Soma syn_NC_PVR_PDER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_PDER[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_PDER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_PVCR_Glutamate
        print("Adding projection: NC_PVR_PVCR_Glutamate, from PVR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_RIPL_Glutamate
        print("Adding projection: NC_PVR_RIPL_Glutamate, from PVR to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_RIPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_PVR_RIPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_RIPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVR_RIPR_Glutamate
        print("Adding projection: NC_PVR_RIPR_Glutamate, from PVR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_PVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVR_SABD_Glutamate
        print("Adding projection: NC_PVR_SABD_Glutamate, from PVR to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_SABD_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_SABD_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_PVR_SABD_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_SABD_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVR_URADL_Glutamate
        print("Adding projection: NC_PVR_URADL_Glutamate, from PVR to URADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVR_URADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVR_URADL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma], weight: 1.0, delay 0.0
        h("a_URADL[0].Soma syn_NC_PVR_URADL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVR[0].Soma a_URADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVR_URADL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVT_AIBL_Glutamate
        print("Adding projection: NC_PVT_AIBL_Glutamate, from PVT to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_PVT_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVT_AIBR_Glutamate
        print("Adding projection: NC_PVT_AIBR_Glutamate, from PVT to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 4.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_PVT_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_PVT_AVKL_Glutamate
        print("Adding projection: NC_PVT_AVKL_Glutamate, from PVT to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_PVT_AVKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_AVKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVT_AVKR_Glutamate
        print("Adding projection: NC_PVT_AVKR_Glutamate, from PVT to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_AVKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_AVKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 7.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_PVT_AVKR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_AVKR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_PVT_AVL_Glutamate
        print("Adding projection: NC_PVT_AVL_Glutamate, from PVT to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_AVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_PVT_AVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_AVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVT_DVC_Glutamate
        print("Adding projection: NC_PVT_DVC_Glutamate, from PVT to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_DVC_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 2.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_PVT_DVC_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_DVC_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVT_RIGL_Glutamate
        print("Adding projection: NC_PVT_RIGL_Glutamate, from PVT to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_PVT_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVT_RIGR_Glutamate
        print("Adding projection: NC_PVT_RIGR_Glutamate, from PVT to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_PVT_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVT_RIH_Glutamate
        print("Adding projection: NC_PVT_RIH_Glutamate, from PVT to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_PVT_RIH_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_RIH_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVT_RMEV_Glutamate
        print("Adding projection: NC_PVT_RMEV_Glutamate, from PVT to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_RMEV_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_RMEV_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_PVT_RMEV_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_RMEV_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVT_RMFL_Glutamate
        print("Adding projection: NC_PVT_RMFL_Glutamate, from PVT to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_RMFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_RMFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_PVT_RMFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_RMFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVT_RMFR_Glutamate
        print("Adding projection: NC_PVT_RMFR_Glutamate, from PVT to RMFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_RMFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_RMFR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_PVT_RMFR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_RMFR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_PVT_SMBDR_Glutamate
        print("Adding projection: NC_PVT_SMBDR_Glutamate, from PVT to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVT_SMBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVT_SMBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_PVT_SMBDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVT[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVT_SMBDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWL_AVJL_Serotonin
        print("Adding projection: NC_PVWL_AVJL_Serotonin, from PVWL to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWL_AVJL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWL_AVJL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_PVWL_AVJL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWL[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWL_AVJL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWL_PVT_Serotonin
        print("Adding projection: NC_PVWL_PVT_Serotonin, from PVWL to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWL_PVT_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWL_PVT_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 2.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_PVWL_PVT_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWL[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWL_PVT_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_PVWL_PVWR_Serotonin
        print("Adding projection: NC_PVWL_PVWR_Serotonin, from PVWL to PVWR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWL_PVWR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWL_PVWR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVWR[0].Soma syn_NC_PVWL_PVWR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWL[0].Soma a_PVWR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWL_PVWR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWL_VA12_Serotonin
        print("Adding projection: NC_PVWL_VA12_Serotonin, from PVWL to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWL_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWL_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_PVWL_VA12_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWL[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWL_VA12_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWR_AVAR_Serotonin
        print("Adding projection: NC_PVWR_AVAR_Serotonin, from PVWR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWR_AVAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWR_AVAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_PVWR_AVAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWR_AVAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWR_AVDR_Serotonin
        print("Adding projection: NC_PVWR_AVDR_Serotonin, from PVWR to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWR_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWR_AVDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_PVWR_AVDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWR[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWR_AVDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWR_PVCR_Serotonin
        print("Adding projection: NC_PVWR_PVCR_Serotonin, from PVWR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWR_PVCR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWR_PVCR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_PVWR_PVCR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWR_PVCR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWR_PVT_Serotonin
        print("Adding projection: NC_PVWR_PVT_Serotonin, from PVWR to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWR_PVT_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWR_PVT_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_PVWR_PVT_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWR[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWR_PVT_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_PVWR_VA12_Serotonin
        print("Adding projection: NC_PVWR_VA12_Serotonin, from PVWR to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_PVWR_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_PVWR_VA12_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_PVWR_VA12_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_PVWR[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_PVWR_VA12_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAL_CEPVL_GABA
        print("Adding projection: NC_RIAL_CEPVL_GABA, from RIAL to CEPVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_CEPVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_CEPVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVL[0].Soma syn_NC_RIAL_CEPVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_CEPVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_CEPVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAL_RIAR_GABA
        print("Adding projection: NC_RIAL_RIAR_GABA, from RIAL to RIAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RIAL_RIAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RIAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAL_RIVL_GABA
        print("Adding projection: NC_RIAL_RIVL_GABA, from RIAL to RIVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RIVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RIVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIVL[0].Soma syn_NC_RIAL_RIVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RIVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RIVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIAL_RIVR_GABA
        print("Adding projection: NC_RIAL_RIVR_GABA, from RIAL to RIVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RIVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RIVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIVR[0].Soma syn_NC_RIAL_RIVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RIVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RIVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIAL_RMDDL_GABA
        print("Adding projection: NC_RIAL_RMDDL_GABA, from RIAL to RMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 12.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_RIAL_RMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_RIAL_RMDDR_GABA
        print("Adding projection: NC_RIAL_RMDDR_GABA, from RIAL to RMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 7.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_RIAL_RMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RIAL_RMDL_GABA
        print("Adding projection: NC_RIAL_RMDL_GABA, from RIAL to RMDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 6.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RIAL_RMDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RMDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_RIAL_RMDR_GABA
        print("Adding projection: NC_RIAL_RMDR_GABA, from RIAL to RMDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 6.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RIAL_RMDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RMDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_RIAL_RMDVL_GABA
        print("Adding projection: NC_RIAL_RMDVL_GABA, from RIAL to RMDVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 9.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_RIAL_RMDVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RMDVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_RIAL_RMDVR_GABA
        print("Adding projection: NC_RIAL_RMDVR_GABA, from RIAL to RMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_RMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_RMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 11.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_RIAL_RMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_RMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_RIAL_SIADL_GABA
        print("Adding projection: NC_RIAL_SIADL_GABA, from RIAL to SIADL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_SIADL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_SIADL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADL[0].Soma], weight: 2.0, delay 0.0
        h("a_SIADL[0].Soma syn_NC_RIAL_SIADL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_SIADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_SIADL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIAL_SMDDL_GABA
        print("Adding projection: NC_RIAL_SMDDL_GABA, from RIAL to SMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_SMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_SMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 8.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RIAL_SMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_SMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_RIAL_SMDDR_GABA
        print("Adding projection: NC_RIAL_SMDDR_GABA, from RIAL to SMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 10.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RIAL_SMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_SMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_RIAL_SMDVL_GABA
        print("Adding projection: NC_RIAL_SMDVL_GABA, from RIAL to SMDVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_SMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_SMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 6.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_RIAL_SMDVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_SMDVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_RIAL_SMDVR_GABA
        print("Adding projection: NC_RIAL_SMDVR_GABA, from RIAL to SMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAL_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAL_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 11.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RIAL_SMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAL_SMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_RIAR_CEPVR_GABA
        print("Adding projection: NC_RIAR_CEPVR_GABA, from RIAR to CEPVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_CEPVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_CEPVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVR[0].Soma syn_NC_RIAR_CEPVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_CEPVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_CEPVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_IL1R_GABA
        print("Adding projection: NC_RIAR_IL1R_GABA, from RIAR to IL1R with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_IL1R_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_IL1R_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1R[0].Soma syn_NC_RIAR_IL1R_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_IL1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_IL1R_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_RIAL_GABA
        print("Adding projection: NC_RIAR_RIAL_GABA, from RIAR to RIAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RIAR_RIAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RIAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIAR_RIVL_GABA
        print("Adding projection: NC_RIAR_RIVL_GABA, from RIAR to RIVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RIVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RIVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVL[0].Soma syn_NC_RIAR_RIVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RIVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RIVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_RMDDL_GABA
        print("Adding projection: NC_RIAR_RMDDL_GABA, from RIAR to RMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 10.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_RIAR_RMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_RIAR_RMDDR_GABA
        print("Adding projection: NC_RIAR_RMDDR_GABA, from RIAR to RMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 11.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_RIAR_RMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_RIAR_RMDL_GABA
        print("Adding projection: NC_RIAR_RMDL_GABA, from RIAR to RMDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RIAR_RMDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RMDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIAR_RMDR_GABA
        print("Adding projection: NC_RIAR_RMDR_GABA, from RIAR to RMDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 8.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RIAR_RMDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RMDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_RIAR_RMDVL_GABA
        print("Adding projection: NC_RIAR_RMDVL_GABA, from RIAR to RMDVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 12.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_RIAR_RMDVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RMDVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_RIAR_RMDVR_GABA
        print("Adding projection: NC_RIAR_RMDVR_GABA, from RIAR to RMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_RMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_RMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 10.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_RIAR_RMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_RMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_RIAR_SAADR_GABA
        print("Adding projection: NC_RIAR_SAADR_GABA, from RIAR to SAADR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SAADR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SAADR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_RIAR_SAADR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SAADR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_SIADL_GABA
        print("Adding projection: NC_RIAR_SIADL_GABA, from RIAR to SIADL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SIADL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SIADL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIADL[0].Soma syn_NC_RIAR_SIADL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SIADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SIADL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_SIADR_GABA
        print("Adding projection: NC_RIAR_SIADR_GABA, from RIAR to SIADR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SIADR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SIADR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIADR[0].Soma syn_NC_RIAR_SIADR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SIADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SIADR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_SIAVL_GABA
        print("Adding projection: NC_RIAR_SIAVL_GABA, from RIAR to SIAVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SIAVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SIAVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIAVL[0].Soma syn_NC_RIAR_SIAVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SIAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SIAVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIAR_SMDDL_GABA
        print("Adding projection: NC_RIAR_SMDDL_GABA, from RIAR to SMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 7.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RIAR_SMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RIAR_SMDDR_GABA
        print("Adding projection: NC_RIAR_SMDDR_GABA, from RIAR to SMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 7.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RIAR_SMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RIAR_SMDVL_GABA
        print("Adding projection: NC_RIAR_SMDVL_GABA, from RIAR to SMDVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SMDVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 13.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_RIAR_SMDVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SMDVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_RIAR_SMDVR_GABA
        print("Adding projection: NC_RIAR_SMDVR_GABA, from RIAR to SMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIAR_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIAR_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 7.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RIAR_SMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIAR[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIAR_SMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RIBL_AIBR_Glutamate
        print("Adding projection: NC_RIBL_AIBR_Glutamate, from RIBL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_RIBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIBL_AUAL_Glutamate
        print("Adding projection: NC_RIBL_AUAL_Glutamate, from RIBL to AUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAL[0].Soma syn_NC_RIBL_AUAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AUAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBL_AVAL_Glutamate
        print("Adding projection: NC_RIBL_AVAL_Glutamate, from RIBL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_RIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBL_AVBR_Glutamate
        print("Adding projection: NC_RIBL_AVBR_Glutamate, from RIBL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RIBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBL_AVDR_Glutamate
        print("Adding projection: NC_RIBL_AVDR_Glutamate, from RIBL to AVDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDR[0].Soma syn_NC_RIBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AVDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AVDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBL_AVEL_Glutamate
        print("Adding projection: NC_RIBL_AVEL_Glutamate, from RIBL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_RIBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBL_AVER_Glutamate
        print("Adding projection: NC_RIBL_AVER_Glutamate, from RIBL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 5.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_RIBL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIBL_BAGR_Glutamate
        print("Adding projection: NC_RIBL_BAGR_Glutamate, from RIBL to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_BAGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_RIBL_BAGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_BAGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBL_RIAL_Glutamate
        print("Adding projection: NC_RIBL_RIAL_Glutamate, from RIBL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RIBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIBL_SMDVR_Glutamate
        print("Adding projection: NC_RIBL_SMDVR_Glutamate, from RIBL to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RIBL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIBR_AIBL_Glutamate
        print("Adding projection: NC_RIBR_AIBL_Glutamate, from RIBR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_AIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_RIBR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_AIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBR_AIZR_Glutamate
        print("Adding projection: NC_RIBR_AIZR_Glutamate, from RIBR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_RIBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_AIZR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBR_AVAR_Glutamate
        print("Adding projection: NC_RIBR_AVAR_Glutamate, from RIBR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_RIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_AVAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIBR_AVEL_Glutamate
        print("Adding projection: NC_RIBR_AVEL_Glutamate, from RIBR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_RIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIBR_AVER_Glutamate
        print("Adding projection: NC_RIBR_AVER_Glutamate, from RIBR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_RIBR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBR_BAGL_Glutamate
        print("Adding projection: NC_RIBR_BAGL_Glutamate, from RIBR to BAGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_BAGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_BAGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGL[0].Soma syn_NC_RIBR_BAGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_BAGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_BAGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBR_RIAR_Glutamate
        print("Adding projection: NC_RIBR_RIAR_Glutamate, from RIBR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RIBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIBR_RIGR_Glutamate
        print("Adding projection: NC_RIBR_RIGR_Glutamate, from RIBR to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_RIBR_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBR_RIH_Glutamate
        print("Adding projection: NC_RIBR_RIH_Glutamate, from RIBR to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_RIBR_RIH_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_RIH_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIBR_SMDDL_Glutamate
        print("Adding projection: NC_RIBR_SMDDL_Glutamate, from RIBR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIBR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIBR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICL_ADAR_Octapamine
        print("Adding projection: NC_RICL_ADAR_Octapamine, from RICL to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_ADAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_ADAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_RICL_ADAR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_ADAR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICL_AVAL_Octapamine
        print("Adding projection: NC_RICL_AVAL_Octapamine, from RICL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_AVAL_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_AVAL_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_RICL_AVAL_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_AVAL_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RICL_AVAR_Octapamine
        print("Adding projection: NC_RICL_AVAR_Octapamine, from RICL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_AVAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_AVAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_RICL_AVAR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_AVAR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_RICL_AVKR_Octapamine
        print("Adding projection: NC_RICL_AVKR_Octapamine, from RICL to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_AVKR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_AVKR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_RICL_AVKR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_AVKR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICL_RIML_Octapamine
        print("Adding projection: NC_RICL_RIML_Octapamine, from RICL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_RIML_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_RIML_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 1.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_RICL_RIML_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_RIML_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICL_RIMR_Octapamine
        print("Adding projection: NC_RICL_RIMR_Octapamine, from RICL to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_RIMR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_RIMR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_RICL_RIMR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_RIMR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RICL_RIVR_Octapamine
        print("Adding projection: NC_RICL_RIVR_Octapamine, from RICL to RIVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_RIVR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_RIVR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVR[0].Soma syn_NC_RICL_RIVR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_RIVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_RIVR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICL_RMFR_Octapamine
        print("Adding projection: NC_RICL_RMFR_Octapamine, from RICL to RMFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_RMFR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_RMFR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_RICL_RMFR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_RMFR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICL_SMBDL_Octapamine
        print("Adding projection: NC_RICL_SMBDL_Octapamine, from RICL to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_SMBDL_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_SMBDL_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_RICL_SMBDL_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_SMBDL_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RICL_SMDDL_Octapamine
        print("Adding projection: NC_RICL_SMDDL_Octapamine, from RICL to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_SMDDL_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_SMDDL_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RICL_SMDDL_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_SMDDL_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RICL_SMDDR_Octapamine
        print("Adding projection: NC_RICL_SMDDR_Octapamine, from RICL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_SMDDR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_SMDDR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RICL_SMDDR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_SMDDR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RICL_SMDVR_Octapamine
        print("Adding projection: NC_RICL_SMDVR_Octapamine, from RICL to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICL_SMDVR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICL_SMDVR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RICL_SMDVR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICL_SMDVR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICR_ADAR_Octapamine
        print("Adding projection: NC_RICR_ADAR_Octapamine, from RICR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_ADAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_ADAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_RICR_ADAR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_ADAR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICR_AVAL_Octapamine
        print("Adding projection: NC_RICR_AVAL_Octapamine, from RICR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_AVAL_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_AVAL_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_RICR_AVAL_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_AVAL_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RICR_AVAR_Octapamine
        print("Adding projection: NC_RICR_AVAR_Octapamine, from RICR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_AVAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_AVAR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_RICR_AVAR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_AVAR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RICR_SMBDR_Octapamine
        print("Adding projection: NC_RICR_SMBDR_Octapamine, from RICR to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_SMBDR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_SMBDR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_RICR_SMBDR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_SMBDR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RICR_SMDDL_Octapamine
        print("Adding projection: NC_RICR_SMDDL_Octapamine, from RICR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_SMDDL_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_SMDDL_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RICR_SMDDL_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_SMDDL_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RICR_SMDDR_Octapamine
        print("Adding projection: NC_RICR_SMDDR_Octapamine, from RICR to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_SMDDR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_SMDDR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RICR_SMDDR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_SMDDR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RICR_SMDVL_Octapamine
        print("Adding projection: NC_RICR_SMDVL_Octapamine, from RICR to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_SMDVL_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_SMDVL_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_RICR_SMDVL_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_SMDVL_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RICR_SMDVR_Octapamine
        print("Adding projection: NC_RICR_SMDVR_Octapamine, from RICR to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RICR_SMDVR_Octapamine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RICR_SMDVR_Octapamine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RICR_SMDVR_Octapamine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RICR[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RICR_SMDVR_Octapamine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RID_AS2_GABA
        print("Adding projection: NC_RID_AS2_GABA, from RID to AS2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_AS2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_AS2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 1.0, delay 0.0
        h("a_AS2[0].Soma syn_NC_RID_AS2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_AS2[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_AS2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RID_DA6_GABA
        print("Adding projection: NC_RID_DA6_GABA, from RID to DA6 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_DA6_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_DA6_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 3.0, delay 0.0
        h("a_DA6[0].Soma syn_NC_RID_DA6_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_DA6[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_DA6_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RID_DD1_GABA
        print("Adding projection: NC_RID_DD1_GABA, from RID to DD1 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_DD1_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 4.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_RID_DD1_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_DD1_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RID_DD2_GABA
        print("Adding projection: NC_RID_DD2_GABA, from RID to DD2 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_DD2_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_DD2_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 4.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_RID_DD2_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_DD2_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RID_DD3_GABA
        print("Adding projection: NC_RID_DD3_GABA, from RID to DD3 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_DD3_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_DD3_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 3.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_RID_DD3_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_DD3_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RID_VD13_GABA
        print("Adding projection: NC_RID_VD13_GABA, from RID to VD13 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_VD13_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_VD13_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 1.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_RID_VD13_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_VD13_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RID_VD5_GABA
        print("Adding projection: NC_RID_VD5_GABA, from RID to VD5 with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RID_VD5_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RID_VD5_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 1.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_RID_VD5_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RID[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_RID_VD5_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFL_ALML_Glutamate
        print("Adding projection: NC_RIFL_ALML_Glutamate, from RIFL to ALML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_ALML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_ALML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma], weight: 2.0, delay 0.0
        h("a_ALML[0].Soma syn_NC_RIFL_ALML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_ALML[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_ALML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIFL_AVBL_Glutamate
        print("Adding projection: NC_RIFL_AVBL_Glutamate, from RIFL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 10.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_RIFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_RIFL_AVBR_Glutamate
        print("Adding projection: NC_RIFL_AVBR_Glutamate, from RIFL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RIFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFL_AVHR_Glutamate
        print("Adding projection: NC_RIFL_AVHR_Glutamate, from RIFL to AVHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHR[0].Soma syn_NC_RIFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_AVHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_AVHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFL_AVJR_Glutamate
        print("Adding projection: NC_RIFL_AVJR_Glutamate, from RIFL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_RIFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIFL_PVPL_Glutamate
        print("Adding projection: NC_RIFL_PVPL_Glutamate, from RIFL to PVPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_PVPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_PVPL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 3.0, delay 0.0
        h("a_PVPL[0].Soma syn_NC_RIFL_PVPL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_PVPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_PVPL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIFL_RIML_Glutamate
        print("Adding projection: NC_RIFL_RIML_Glutamate, from RIFL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFL_RIML_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 4.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_RIFL_RIML_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFL_RIML_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIFR_ASHR_Glutamate
        print("Adding projection: NC_RIFR_ASHR_Glutamate, from RIFR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_ASHR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 2.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_RIFR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_ASHR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIFR_AVBL_Glutamate
        print("Adding projection: NC_RIFR_AVBL_Glutamate, from RIFR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_RIFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_AVBR_Glutamate
        print("Adding projection: NC_RIFR_AVBR_Glutamate, from RIFR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 17.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RIFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 17.0))") # *->cell

        # ######################   Projection: NC_RIFR_AVFL_Glutamate
        print("Adding projection: NC_RIFR_AVFL_Glutamate, from RIFR to AVFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVFL[0].Soma syn_NC_RIFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_AVFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_AVFL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_AVHL_Glutamate
        print("Adding projection: NC_RIFR_AVHL_Glutamate, from RIFR to AVHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVHL[0].Soma syn_NC_RIFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_AVHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_AVHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_AVJL_Glutamate
        print("Adding projection: NC_RIFR_AVJL_Glutamate, from RIFR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_RIFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_AVJL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_AVJR_Glutamate
        print("Adding projection: NC_RIFR_AVJR_Glutamate, from RIFR to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_RIFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIFR_HSNR_Glutamate
        print("Adding projection: NC_RIFR_HSNR_Glutamate, from RIFR to HSNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNR[0].Soma syn_NC_RIFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_HSNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_HSNR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_PVCL_Glutamate
        print("Adding projection: NC_RIFR_PVCL_Glutamate, from RIFR to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_PVCL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_RIFR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_PVCL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_PVCR_Glutamate
        print("Adding projection: NC_RIFR_PVCR_Glutamate, from RIFR to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_PVCR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_RIFR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_PVCR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIFR_PVPR_Glutamate
        print("Adding projection: NC_RIFR_PVPR_Glutamate, from RIFR to PVPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_PVPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 4.0, delay 0.0
        h("a_PVPR[0].Soma syn_NC_RIFR_PVPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_PVPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_PVPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIFR_RIMR_Glutamate
        print("Adding projection: NC_RIFR_RIMR_Glutamate, from RIFR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_RIMR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_RIFR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_RIMR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIFR_RIPR_Glutamate
        print("Adding projection: NC_RIFR_RIPR_Glutamate, from RIFR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIFR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIFR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_RIFR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIFR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIFR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_AIZR_FMRFamide
        print("Adding projection: NC_RIGL_AIZR_FMRFamide, from RIGL to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_AIZR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_AIZR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_RIGL_AIZR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_AIZR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_ALNL_FMRFamide
        print("Adding projection: NC_RIGL_ALNL_FMRFamide, from RIGL to ALNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma], weight: 1.0, delay 0.0
        h("a_ALNL[0].Soma syn_NC_RIGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_ALNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_AVEL_FMRFamide
        print("Adding projection: NC_RIGL_AVEL_FMRFamide, from RIGL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_RIGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_AVER_FMRFamide
        print("Adding projection: NC_RIGL_AVER_FMRFamide, from RIGL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_RIGL_AVER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_AVER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_AVKR_FMRFamide
        print("Adding projection: NC_RIGL_AVKR_FMRFamide, from RIGL to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_AVKR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_AVKR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_RIGL_AVKR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_AVKR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIGL_BAGR_FMRFamide
        print("Adding projection: NC_RIGL_BAGR_FMRFamide, from RIGL to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_BAGR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_BAGR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_RIGL_BAGR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_BAGR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_DVC_FMRFamide
        print("Adding projection: NC_RIGL_DVC_FMRFamide, from RIGL to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_DVC_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_DVC_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_RIGL_DVC_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_DVC_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_RIBL_FMRFamide
        print("Adding projection: NC_RIGL_RIBL_FMRFamide, from RIGL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_RIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_RIBL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_RIGL_RIBL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_RIBL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_RIR_FMRFamide
        print("Adding projection: NC_RIGL_RIR_FMRFamide, from RIGL to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_RIR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_RIR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_RIGL_RIR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_RIR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIGL_RMFL_FMRFamide
        print("Adding projection: NC_RIGL_RMFL_FMRFamide, from RIGL to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_RMFL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_RMFL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_RIGL_RMFL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_RMFL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGL_RMHR_FMRFamide
        print("Adding projection: NC_RIGL_RMHR_FMRFamide, from RIGL to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_RIGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGL[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIGR_ALNR_FMRFamide
        print("Adding projection: NC_RIGR_ALNR_FMRFamide, from RIGR to ALNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma], weight: 1.0, delay 0.0
        h("a_ALNR[0].Soma syn_NC_RIGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_ALNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGR_AVER_FMRFamide
        print("Adding projection: NC_RIGR_AVER_FMRFamide, from RIGR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_RIGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIGR_AVKL_FMRFamide
        print("Adding projection: NC_RIGR_AVKL_FMRFamide, from RIGR to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_AVKL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_AVKL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_RIGR_AVKL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_AVKL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIGR_AVKR_FMRFamide
        print("Adding projection: NC_RIGR_AVKR_FMRFamide, from RIGR to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_AVKR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_AVKR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_RIGR_AVKR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_AVKR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGR_RIBR_FMRFamide
        print("Adding projection: NC_RIGR_RIBR_FMRFamide, from RIGR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_RIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_RIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_RIGR_RIBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_RIBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGR_RIR_FMRFamide
        print("Adding projection: NC_RIGR_RIR_FMRFamide, from RIGR to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_RIGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIGR_RMHL_FMRFamide
        print("Adding projection: NC_RIGR_RMHL_FMRFamide, from RIGR to RMHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIGR_RMHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIGR_RMHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMHL[0].Soma syn_NC_RIGR_RMHL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIGR[0].Soma a_RMHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIGR_RMHL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIH_ADFR_Serotonin
        print("Adding projection: NC_RIH_ADFR_Serotonin, from RIH to ADFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_ADFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_ADFR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADFR[0].Soma syn_NC_RIH_ADFR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_ADFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_ADFR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_AIZL_Serotonin
        print("Adding projection: NC_RIH_AIZL_Serotonin, from RIH to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 4.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_RIH_AIZL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_AIZL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIH_AIZR_Serotonin
        print("Adding projection: NC_RIH_AIZR_Serotonin, from RIH to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 4.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_RIH_AIZR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_AIZR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIH_AUAR_Serotonin
        print("Adding projection: NC_RIH_AUAR_Serotonin, from RIH to AUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_AUAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_AUAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_RIH_AUAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_AUAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_BAGR_Serotonin
        print("Adding projection: NC_RIH_BAGR_Serotonin, from RIH to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_BAGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_BAGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_RIH_BAGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_BAGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_CEPDL_Serotonin
        print("Adding projection: NC_RIH_CEPDL_Serotonin, from RIH to CEPDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_CEPDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDL[0].Soma syn_NC_RIH_CEPDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_CEPDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_CEPDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_CEPDR_Serotonin
        print("Adding projection: NC_RIH_CEPDR_Serotonin, from RIH to CEPDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_CEPDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_RIH_CEPDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_CEPDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_CEPVL_Serotonin
        print("Adding projection: NC_RIH_CEPVL_Serotonin, from RIH to CEPVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_CEPVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVL[0].Soma syn_NC_RIH_CEPVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_CEPVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_CEPVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_CEPVR_Serotonin
        print("Adding projection: NC_RIH_CEPVR_Serotonin, from RIH to CEPVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_CEPVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVR[0].Soma syn_NC_RIH_CEPVR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_CEPVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_CEPVR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_IL2L_Serotonin
        print("Adding projection: NC_RIH_IL2L_Serotonin, from RIH to IL2L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_IL2L_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_IL2L_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma], weight: 2.0, delay 0.0
        h("a_IL2L[0].Soma syn_NC_RIH_IL2L_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_IL2L[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_IL2L_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIH_IL2R_Serotonin
        print("Adding projection: NC_RIH_IL2R_Serotonin, from RIH to IL2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_IL2R_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_IL2R_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2R[0].Soma syn_NC_RIH_IL2R_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_IL2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_IL2R_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_OLQDL_Serotonin
        print("Adding projection: NC_RIH_OLQDL_Serotonin, from RIH to OLQDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 2.0, delay 0.0
        h("a_OLQDL[0].Soma syn_NC_RIH_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_OLQDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIH_OLQDR_Serotonin
        print("Adding projection: NC_RIH_OLQDR_Serotonin, from RIH to OLQDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 2.0, delay 0.0
        h("a_OLQDR[0].Soma syn_NC_RIH_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_OLQDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIH_OLQVL_Serotonin
        print("Adding projection: NC_RIH_OLQVL_Serotonin, from RIH to OLQVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_OLQVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_OLQVL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQVL[0].Soma syn_NC_RIH_OLQVL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_OLQVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_OLQVL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_OLQVR_Serotonin
        print("Adding projection: NC_RIH_OLQVR_Serotonin, from RIH to OLQVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_OLQVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_OLQVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 6.0, delay 0.0
        h("a_OLQVR[0].Soma syn_NC_RIH_OLQVR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_OLQVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_OLQVR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_RIH_RIAL_Serotonin
        print("Adding projection: NC_RIH_RIAL_Serotonin, from RIH to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 11.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RIH_RIAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RIAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_RIH_RIAR_Serotonin
        print("Adding projection: NC_RIH_RIAR_Serotonin, from RIH to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 8.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RIH_RIAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RIAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_RIH_RIBL_Serotonin
        print("Adding projection: NC_RIH_RIBL_Serotonin, from RIH to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RIBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RIBL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_RIH_RIBL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RIBL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIH_RIBR_Serotonin
        print("Adding projection: NC_RIH_RIBR_Serotonin, from RIH to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RIBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RIBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_RIH_RIBR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RIBR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIH_RIPL_Serotonin
        print("Adding projection: NC_RIH_RIPL_Serotonin, from RIH to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RIPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RIPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_RIH_RIPL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RIPL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIH_RIPR_Serotonin
        print("Adding projection: NC_RIH_RIPR_Serotonin, from RIH to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RIPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RIPR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_RIH_RIPR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RIPR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIH_RMER_Serotonin
        print("Adding projection: NC_RIH_RMER_Serotonin, from RIH to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RMER_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 2.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_RIH_RMER_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RMER_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIH_RMEV_Serotonin
        print("Adding projection: NC_RIH_RMEV_Serotonin, from RIH to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_RMEV_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_RIH_RMEV_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_RMEV_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIH_URYVR_Serotonin
        print("Adding projection: NC_RIH_URYVR_Serotonin, from RIH to URYVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIH_URYVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIH_URYVR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma], weight: 1.0, delay 0.0
        h("a_URYVR[0].Soma syn_NC_RIH_URYVR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIH[0].Soma a_URYVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIH_URYVR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_AVAL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_AVAL_Acetylcholine_Tyramine, from RIML to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_RIML_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_AVBL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_AVBL_Acetylcholine_Tyramine, from RIML to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_RIML_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIML_AVBR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_AVBR_Acetylcholine_Tyramine, from RIML to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RIML_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIML_RIBL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_RIBL_Acetylcholine_Tyramine, from RIML to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_RIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_RIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_RIML_RIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_RIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_RMDL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_RMDL_Acetylcholine_Tyramine, from RIML to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RIML_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_RMDR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_RMDR_Acetylcholine_Tyramine, from RIML to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RIML_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_RMFR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_RMFR_Acetylcholine_Tyramine, from RIML to RMFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_RIML_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_SAADR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_SAADR_Acetylcholine_Tyramine, from RIML to SAADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_SAADR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_SAADR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_RIML_SAADR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_SAADR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIML_SAAVL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_SAAVL_Acetylcholine_Tyramine, from RIML to SAAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SAAVL[0].Soma syn_NC_RIML_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_SAAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIML_SAAVR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_SAAVR_Acetylcholine_Tyramine, from RIML to SAAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SAAVR[0].Soma syn_NC_RIML_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_SAAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIML_SMDDR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_SMDDR_Acetylcholine_Tyramine, from RIML to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 5.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RIML_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIML_SMDVL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIML_SMDVL_Acetylcholine_Tyramine, from RIML to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIML_SMDVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIML_SMDVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_RIML_SMDVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIML[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIML_SMDVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_ADAR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_ADAR_Acetylcholine_Tyramine, from RIMR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_ADAR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_ADAR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_RIMR_ADAR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_ADAR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_AIBL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_AIBL_Acetylcholine_Tyramine, from RIMR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_AIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_AIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 4.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_RIMR_AIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_AIBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIMR_AVAL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_AVAL_Acetylcholine_Tyramine, from RIMR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_RIMR_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_AVAL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIMR_AVBL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_AVBL_Acetylcholine_Tyramine, from RIMR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_RIMR_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_AVBL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIMR_AVBR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_AVBR_Acetylcholine_Tyramine, from RIMR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 5.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RIMR_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_AVBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIMR_AVJL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_AVJL_Acetylcholine_Tyramine, from RIMR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVJL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_AVJL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_RIMR_AVJL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_AVJL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_AVKL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_AVKL_Acetylcholine_Tyramine, from RIMR to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVKL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_AVKL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_RIMR_AVKL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_AVKL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_RIBR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_RIBR_Acetylcholine_Tyramine, from RIMR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_RIBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_RIBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_RIMR_RIBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_RIBR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_RIS_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_RIS_Acetylcholine_Tyramine, from RIMR to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_RIS_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_RIS_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_RIMR_RIS_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_RIS_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_RMDL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_RMDL_Acetylcholine_Tyramine, from RIMR to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RIMR_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_RMDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIMR_RMDR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_RMDR_Acetylcholine_Tyramine, from RIMR to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RIMR_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_RMDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_RMFL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_RMFL_Acetylcholine_Tyramine, from RIMR to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_RMFL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_RMFL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_RIMR_RMFL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_RMFL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_RMFR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_RMFR_Acetylcholine_Tyramine, from RIMR to RMFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_RIMR_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_RMFR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIMR_SAAVL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_SAAVL_Acetylcholine_Tyramine, from RIMR to SAAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SAAVL[0].Soma syn_NC_RIMR_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_SAAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_SAAVL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIMR_SAAVR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_SAAVR_Acetylcholine_Tyramine, from RIMR to SAAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 3.0, delay 0.0
        h("a_SAAVR[0].Soma syn_NC_RIMR_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_SAAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_SAAVR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIMR_SMDDL_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_SMDDL_Acetylcholine_Tyramine, from RIMR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_SMDDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_SMDDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RIMR_SMDDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_SMDDL_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIMR_SMDDR_Acetylcholine_Tyramine
        print("Adding projection: NC_RIMR_SMDDR_Acetylcholine_Tyramine, from RIMR to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIMR_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIMR_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RIMR_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIMR[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIMR_SMDDR_Acetylcholine_Tyramine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIPL_OLQDL_Serotonin
        print("Adding projection: NC_RIPL_OLQDL_Serotonin, from RIPL to OLQDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIPL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIPL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQDL[0].Soma syn_NC_RIPL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIPL[0].Soma a_OLQDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIPL_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIPL_OLQDR_Serotonin
        print("Adding projection: NC_RIPL_OLQDR_Serotonin, from RIPL to OLQDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIPL_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIPL_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQDR[0].Soma syn_NC_RIPL_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIPL[0].Soma a_OLQDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIPL_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIPR_OLQDL_Serotonin
        print("Adding projection: NC_RIPR_OLQDL_Serotonin, from RIPR to OLQDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIPR_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIPR_OLQDL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQDL[0].Soma syn_NC_RIPR_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIPR[0].Soma a_OLQDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIPR_OLQDL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIPR_OLQDR_Serotonin
        print("Adding projection: NC_RIPR_OLQDR_Serotonin, from RIPR to OLQDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIPR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIPR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQDR[0].Soma syn_NC_RIPR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIPR[0].Soma a_OLQDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIPR_OLQDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_AFDR_Serotonin
        print("Adding projection: NC_RIR_AFDR_Serotonin, from RIR to AFDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_AFDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_AFDR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 1.0, delay 0.0
        h("a_AFDR[0].Soma syn_NC_RIR_AFDR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_AFDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_AFDR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_AIZL_Serotonin
        print("Adding projection: NC_RIR_AIZL_Serotonin, from RIR to AIZL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_AIZL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 3.0, delay 0.0
        h("a_AIZL[0].Soma syn_NC_RIR_AIZL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_AIZL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_AIZL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIR_AIZR_Serotonin
        print("Adding projection: NC_RIR_AIZR_Serotonin, from RIR to AIZR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_AIZR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 5.0, delay 0.0
        h("a_AIZR[0].Soma syn_NC_RIR_AIZR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_AIZR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_AIZR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIR_AUAL_Serotonin
        print("Adding projection: NC_RIR_AUAL_Serotonin, from RIR to AUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_AUAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_AUAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AUAL[0].Soma syn_NC_RIR_AUAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_AUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_AUAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_AWBR_Serotonin
        print("Adding projection: NC_RIR_AWBR_Serotonin, from RIR to AWBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_AWBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_AWBR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AWBR[0].Soma syn_NC_RIR_AWBR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_AWBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_AWBR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_BAGR_Serotonin
        print("Adding projection: NC_RIR_BAGR_Serotonin, from RIR to BAGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_BAGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_BAGR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0, delay 0.0
        h("a_BAGR[0].Soma syn_NC_RIR_BAGR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_BAGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_BAGR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_DVA_Serotonin
        print("Adding projection: NC_RIR_DVA_Serotonin, from RIR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_DVA_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_DVA_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 2.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_RIR_DVA_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_DVA_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIR_HSNL_Serotonin
        print("Adding projection: NC_RIR_HSNL_Serotonin, from RIR to HSNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_HSNL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_HSNL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0, delay 0.0
        h("a_HSNL[0].Soma syn_NC_RIR_HSNL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_HSNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_HSNL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_PVPL_Serotonin
        print("Adding projection: NC_RIR_PVPL_Serotonin, from RIR to PVPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_PVPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_PVPL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0, delay 0.0
        h("a_PVPL[0].Soma syn_NC_RIR_PVPL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_PVPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_PVPL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_RIAL_Serotonin
        print("Adding projection: NC_RIR_RIAL_Serotonin, from RIR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_RIAL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 5.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RIR_RIAL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_RIAL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIR_RIAR_Serotonin
        print("Adding projection: NC_RIR_RIAR_Serotonin, from RIR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_RIAR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RIR_RIAR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_RIAR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_RIGL_Serotonin
        print("Adding projection: NC_RIR_RIGL_Serotonin, from RIR to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_RIGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_RIGL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_RIR_RIGL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_RIGL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIR_URXL_Serotonin
        print("Adding projection: NC_RIR_URXL_Serotonin, from RIR to URXL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_URXL_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_URXL_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma], weight: 5.0, delay 0.0
        h("a_URXL[0].Soma syn_NC_RIR_URXL_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_URXL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_URXL_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIR_URXR_Serotonin
        print("Adding projection: NC_RIR_URXR_Serotonin, from RIR to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RIR_URXR_Serotonin_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RIR_URXR_Serotonin_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_RIR_URXR_Serotonin_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RIR[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIR_URXR_Serotonin_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_AVEL_GABA
        print("Adding projection: NC_RIS_AVEL_GABA, from RIS to AVEL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_AVEL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_AVEL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 7.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_RIS_AVEL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_AVEL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RIS_AVER_GABA
        print("Adding projection: NC_RIS_AVER_GABA, from RIS to AVER with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_AVER_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_AVER_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 7.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_RIS_AVER_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_AVER_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RIS_AVKL_GABA
        print("Adding projection: NC_RIS_AVKL_GABA, from RIS to AVKL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_AVKL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_AVKL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_RIS_AVKL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_AVKL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_AVKR_GABA
        print("Adding projection: NC_RIS_AVKR_GABA, from RIS to AVKR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_AVKR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_AVKR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_RIS_AVKR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_AVKR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIS_AVL_GABA
        print("Adding projection: NC_RIS_AVL_GABA, from RIS to AVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_AVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_AVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_RIS_AVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_AVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIS_CEPDR_GABA
        print("Adding projection: NC_RIS_CEPDR_GABA, from RIS to CEPDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_CEPDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_CEPDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_RIS_CEPDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_CEPDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_CEPVL_GABA
        print("Adding projection: NC_RIS_CEPVL_GABA, from RIS to CEPVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_CEPVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_CEPVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 2.0, delay 0.0
        h("a_CEPVL[0].Soma syn_NC_RIS_CEPVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_CEPVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_CEPVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIS_CEPVR_GABA
        print("Adding projection: NC_RIS_CEPVR_GABA, from RIS to CEPVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_CEPVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_CEPVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPVR[0].Soma syn_NC_RIS_CEPVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_CEPVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_CEPVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_OLLR_GABA
        print("Adding projection: NC_RIS_OLLR_GABA, from RIS to OLLR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_OLLR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_OLLR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_RIS_OLLR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_OLLR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_RIBL_GABA
        print("Adding projection: NC_RIS_RIBL_GABA, from RIS to RIBL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RIBL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RIBL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_RIS_RIBL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RIBL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIS_RIBR_GABA
        print("Adding projection: NC_RIS_RIBR_GABA, from RIS to RIBR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RIBR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RIBR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_RIS_RIBR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RIBR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RIS_RIML_GABA
        print("Adding projection: NC_RIS_RIML_GABA, from RIS to RIML with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RIML_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RIML_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 1.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_RIS_RIML_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RIML_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_RIMR_GABA
        print("Adding projection: NC_RIS_RIMR_GABA, from RIS to RIMR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RIMR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RIMR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 4.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_RIS_RIMR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RIMR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIS_RMDDL_GABA
        print("Adding projection: NC_RIS_RMDDL_GABA, from RIS to RMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_RIS_RMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_RMDL_GABA
        print("Adding projection: NC_RIS_RMDL_GABA, from RIS to RMDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RIS_RMDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RMDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIS_RMDR_GABA
        print("Adding projection: NC_RIS_RMDR_GABA, from RIS to RMDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RIS_RMDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_RMDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RIS_SMDDR_GABA
        print("Adding projection: NC_RIS_SMDDR_GABA, from RIS to SMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RIS_SMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_SMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIS_SMDVR_GABA
        print("Adding projection: NC_RIS_SMDVR_GABA, from RIS to SMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RIS_SMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_SMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIS_URYVR_GABA
        print("Adding projection: NC_RIS_URYVR_GABA, from RIS to URYVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIS_URYVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIS_URYVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma], weight: 1.0, delay 0.0
        h("a_URYVR[0].Soma syn_NC_RIS_URYVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIS[0].Soma a_URYVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIS_URYVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVL_RIAL_GABA
        print("Adding projection: NC_RIVL_RIAL_GABA, from RIVL to RIAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVL_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVL_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RIVL_RIAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVL_RIAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVL_RIAR_GABA
        print("Adding projection: NC_RIVL_RIAR_GABA, from RIVL to RIAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVL_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVL_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RIVL_RIAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVL_RIAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVL_RMDL_GABA
        print("Adding projection: NC_RIVL_RMDL_GABA, from RIVL to RMDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVL_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVL_RMDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RIVL_RMDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVL[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVL_RMDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIVL_SAADR_GABA
        print("Adding projection: NC_RIVL_SAADR_GABA, from RIVL to SAADR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVL_SAADR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVL_SAADR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 3.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_RIVL_SAADR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVL[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVL_SAADR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RIVL_SIAVR_GABA
        print("Adding projection: NC_RIVL_SIAVR_GABA, from RIVL to SIAVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVL_SIAVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVL_SIAVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SIAVR[0].Soma syn_NC_RIVL_SIAVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVL[0].Soma a_SIAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVL_SIAVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIVL_SMDDR_GABA
        print("Adding projection: NC_RIVL_SMDDR_GABA, from RIVL to SMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVL_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVL_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RIVL_SMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVL_SMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVR_RIAL_GABA
        print("Adding projection: NC_RIVR_RIAL_GABA, from RIVR to RIAL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_RIAL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RIVR_RIAL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_RIAL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIVR_RIAR_GABA
        print("Adding projection: NC_RIVR_RIAR_GABA, from RIVR to RIAR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_RIAR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RIVR_RIAR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_RIAR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVR_RMDDL_GABA
        print("Adding projection: NC_RIVR_RMDDL_GABA, from RIVR to RMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_RMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_RIVR_RMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_RMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVR_RMDR_GABA
        print("Adding projection: NC_RIVR_RMDR_GABA, from RIVR to RMDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_RMDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RIVR_RMDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_RMDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVR_RMDVR_GABA
        print("Adding projection: NC_RIVR_RMDVR_GABA, from RIVR to RMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_RMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_RMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_RIVR_RMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_RMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVR_RMEV_GABA
        print("Adding projection: NC_RIVR_RMEV_GABA, from RIVR to RMEV with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_RMEV_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_RMEV_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_RIVR_RMEV_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_RMEV_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RIVR_SAADL_GABA
        print("Adding projection: NC_RIVR_SAADL_GABA, from RIVR to SAADL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_SAADL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_SAADL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 2.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_RIVR_SAADL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_SAADL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIVR_SIAVL_GABA
        print("Adding projection: NC_RIVR_SIAVL_GABA, from RIVR to SIAVL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_SIAVL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_SIAVL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SIAVL[0].Soma syn_NC_RIVR_SIAVL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_SIAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_SIAVL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIVR_SMDDL_GABA
        print("Adding projection: NC_RIVR_SMDDL_GABA, from RIVR to SMDDL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_SMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_SMDDL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_RIVR_SMDDL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_SMDDL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RIVR_SMDVR_GABA
        print("Adding projection: NC_RIVR_SMDVR_GABA, from RIVR to SMDVR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RIVR_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RIVR_SMDVR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_RIVR_SMDVR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RIVR[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RIVR_SMDVR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMDDL_RMDVR_Acetylcholine
        print("Adding projection: NC_RMDDL_RMDVR_Acetylcholine, from RMDDL to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDDL_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDDL_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 7.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_RMDDL_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDDL[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDDL_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RMDDR_RMDVL_Acetylcholine
        print("Adding projection: NC_RMDDR_RMDVL_Acetylcholine, from RMDDR to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDDR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDDR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 12.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_RMDDR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDDR[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDDR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_RMDDR_URYDL_Acetylcholine
        print("Adding projection: NC_RMDDR_URYDL_Acetylcholine, from RMDDR to URYDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDDR_URYDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDDR_URYDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma], weight: 1.0, delay 0.0
        h("a_URYDL[0].Soma syn_NC_RMDDR_URYDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDDR[0].Soma a_URYDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDDR_URYDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDL_OLLR_Acetylcholine
        print("Adding projection: NC_RMDL_OLLR_Acetylcholine, from RMDL to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 2.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_RMDL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMDL_RIAL_Acetylcholine
        print("Adding projection: NC_RMDL_RIAL_Acetylcholine, from RMDL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 4.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RMDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RMDL_RIAR_Acetylcholine
        print("Adding projection: NC_RMDL_RIAR_Acetylcholine, from RMDL to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RMDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMDL_RMDDR_Acetylcholine
        print("Adding projection: NC_RMDL_RMDDR_Acetylcholine, from RMDL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_RMDL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDL_RMDR_Acetylcholine
        print("Adding projection: NC_RMDL_RMDR_Acetylcholine, from RMDL to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RMDL_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMDL_RMER_Acetylcholine
        print("Adding projection: NC_RMDL_RMER_Acetylcholine, from RMDL to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_RMDL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDL_RMFL_Acetylcholine
        print("Adding projection: NC_RMDL_RMFL_Acetylcholine, from RMDL to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_RMDL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDL[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDR_AVKL_Acetylcholine
        print("Adding projection: NC_RMDR_AVKL_Acetylcholine, from RMDR to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_AVKL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_AVKL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_RMDR_AVKL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_AVKL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDR_RIAL_Acetylcholine
        print("Adding projection: NC_RMDR_RIAL_Acetylcholine, from RMDR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_RMDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMDR_RIAR_Acetylcholine
        print("Adding projection: NC_RMDR_RIAR_Acetylcholine, from RMDR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 7.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_RMDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_RMDR_RIMR_Acetylcholine
        print("Adding projection: NC_RMDR_RIMR_Acetylcholine, from RMDR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_RMDR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMDR_RIS_Acetylcholine
        print("Adding projection: NC_RMDR_RIS_Acetylcholine, from RMDR to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_RIS_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_RIS_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_RMDR_RIS_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_RIS_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDR_RMDDL_Acetylcholine
        print("Adding projection: NC_RMDR_RMDDL_Acetylcholine, from RMDR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_RMDR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDR_RMDL_Acetylcholine
        print("Adding projection: NC_RMDR_RMDL_Acetylcholine, from RMDR to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RMDR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDVL_RMDDR_Acetylcholine
        print("Adding projection: NC_RMDVL_RMDDR_Acetylcholine, from RMDVL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 6.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_RMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDVL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_RMDVR_RMDDL_Acetylcholine
        print("Adding projection: NC_RMDVR_RMDDL_Acetylcholine, from RMDVR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_RMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDVR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RMDVR_SIBDR_Acetylcholine
        print("Adding projection: NC_RMDVR_SIBDR_Acetylcholine, from RMDVR to SIBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDVR_SIBDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDVR_SIBDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBDR[0].Soma syn_NC_RMDVR_SIBDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDVR[0].Soma a_SIBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDVR_SIBDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMDVR_SIBVR_Acetylcholine
        print("Adding projection: NC_RMDVR_SIBVR_Acetylcholine, from RMDVR to SIBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMDVR_SIBVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMDVR_SIBVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBVR[0].Soma syn_NC_RMDVR_SIBVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMDVR[0].Soma a_SIBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMDVR_SIBVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMED_RIBL_GABA
        print("Adding projection: NC_RMED_RIBL_GABA, from RMED to RIBL with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RMED_RIBL_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RMED_RIBL_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_RMED_RIBL_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RMED[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMED_RIBL_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMED_RIBR_GABA
        print("Adding projection: NC_RMED_RIBR_GABA, from RMED to RIBR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RMED_RIBR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RMED_RIBR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_RMED_RIBR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RMED[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMED_RIBR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMEV_SMDDR_GABA
        print("Adding projection: NC_RMEV_SMDDR_GABA, from RMEV to SMDDR with synapse neuron_to_neuron_inh_syn, 1 connection(s)")

        h("objectvar syn_NC_RMEV_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        h("objectvar netConn_NC_RMEV_SMDDR_GABA_neuron_to_neuron_inh_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_RMEV_SMDDR_GABA_neuron_to_neuron_inh_syn[0] = new neuron_to_neuron_inh_syn(0.5)")
        h("a_RMEV[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMEV_SMDDR_GABA_neuron_to_neuron_inh_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMFL_AVKL_Glutamate
        print("Adding projection: NC_RMFL_AVKL_Glutamate, from RMFL to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFL_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFL_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_RMFL_AVKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFL[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFL_AVKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RMFL_AVKR_Glutamate
        print("Adding projection: NC_RMFL_AVKR_Glutamate, from RMFL to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFL_AVKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFL_AVKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_RMFL_AVKR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFL[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFL_AVKR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RMFL_PVT_Glutamate
        print("Adding projection: NC_RMFL_PVT_Glutamate, from RMFL to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFL_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFL_PVT_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_RMFL_PVT_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFL[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFL_PVT_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMFL_RIGR_Glutamate
        print("Adding projection: NC_RMFL_RIGR_Glutamate, from RMFL to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFL_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFL_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_RMFL_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFL[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFL_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMFL_RMDR_Glutamate
        print("Adding projection: NC_RMFL_RMDR_Glutamate, from RMFL to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFL_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFL_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RMFL_RMDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFL[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFL_RMDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMFL_RMGR_Glutamate
        print("Adding projection: NC_RMFL_RMGR_Glutamate, from RMFL to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFL_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFL_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_RMFL_RMGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFL[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFL_RMGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMFR_AVKL_Glutamate
        print("Adding projection: NC_RMFR_AVKL_Glutamate, from RMFR to AVKL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFR_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFR_AVKL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 3.0, delay 0.0
        h("a_AVKL[0].Soma syn_NC_RMFR_AVKL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFR[0].Soma a_AVKL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFR_AVKL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMFR_AVKR_Glutamate
        print("Adding projection: NC_RMFR_AVKR_Glutamate, from RMFR to AVKR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFR_AVKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFR_AVKR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVKR[0].Soma syn_NC_RMFR_AVKR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFR[0].Soma a_AVKR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFR_AVKR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMFR_RMDL_Glutamate
        print("Adding projection: NC_RMFR_RMDL_Glutamate, from RMFR to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMFR_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMFR_RMDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RMFR_RMDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMFR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMFR_RMDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMGL_ADAL_FMRFamide
        print("Adding projection: NC_RMGL_ADAL_FMRFamide, from RMGL to ADAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_ADAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_ADAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAL[0].Soma syn_NC_RMGL_ADAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_ADAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_ADAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_AIBR_FMRFamide
        print("Adding projection: NC_RMGL_AIBR_FMRFamide, from RMGL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_RMGL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_AIBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_ALML_FMRFamide
        print("Adding projection: NC_RMGL_ALML_FMRFamide, from RMGL to ALML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_ALML_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_ALML_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma], weight: 1.0, delay 0.0
        h("a_ALML[0].Soma syn_NC_RMGL_ALML_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_ALML[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_ALML_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_ALNL_FMRFamide
        print("Adding projection: NC_RMGL_ALNL_FMRFamide, from RMGL to ALNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma], weight: 1.0, delay 0.0
        h("a_ALNL[0].Soma syn_NC_RMGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_ALNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_ALNL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_ASHL_FMRFamide
        print("Adding projection: NC_RMGL_ASHL_FMRFamide, from RMGL to ASHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHL[0].Soma syn_NC_RMGL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_ASHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_ASHL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_AVAL_FMRFamide
        print("Adding projection: NC_RMGL_AVAL_FMRFamide, from RMGL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_RMGL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_AVAL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_AVBR_FMRFamide
        print("Adding projection: NC_RMGL_AVBR_FMRFamide, from RMGL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RMGL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMGL_AVEL_FMRFamide
        print("Adding projection: NC_RMGL_AVEL_FMRFamide, from RMGL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_RMGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_AVEL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMGL_CEPDL_FMRFamide
        print("Adding projection: NC_RMGL_CEPDL_FMRFamide, from RMGL to CEPDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_CEPDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_CEPDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDL[0].Soma syn_NC_RMGL_CEPDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_CEPDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_CEPDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_RID_FMRFamide
        print("Adding projection: NC_RMGL_RID_FMRFamide, from RMGL to RID with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_RID_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_RID_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0, delay 0.0
        h("a_RID[0].Soma syn_NC_RMGL_RID_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_RID[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_RID_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_RMDL_FMRFamide
        print("Adding projection: NC_RMGL_RMDL_FMRFamide, from RMGL to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_RMDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_RMDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RMGL_RMDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_RMDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_RMDR_FMRFamide
        print("Adding projection: NC_RMGL_RMDR_FMRFamide, from RMGL to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_RMDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_RMDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RMGL_RMDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_RMDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMGL_RMDVL_FMRFamide
        print("Adding projection: NC_RMGL_RMDVL_FMRFamide, from RMGL to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_RMDVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_RMDVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_RMGL_RMDVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_RMDVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMGL_RMHR_FMRFamide
        print("Adding projection: NC_RMGL_RMHR_FMRFamide, from RMGL to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_RMGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_RMHR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_SIAVL_FMRFamide
        print("Adding projection: NC_RMGL_SIAVL_FMRFamide, from RMGL to SIAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_SIAVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_SIAVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIAVL[0].Soma syn_NC_RMGL_SIAVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_SIAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_SIAVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_SIBVL_FMRFamide
        print("Adding projection: NC_RMGL_SIBVL_FMRFamide, from RMGL to SIBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_SIBVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_SIBVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 2.0, delay 0.0
        h("a_SIBVL[0].Soma syn_NC_RMGL_SIBVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_SIBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_SIBVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMGL_SIBVR_FMRFamide
        print("Adding projection: NC_RMGL_SIBVR_FMRFamide, from RMGL to SIBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_SIBVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_SIBVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBVR[0].Soma syn_NC_RMGL_SIBVR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_SIBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_SIBVR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_SMBVL_FMRFamide
        print("Adding projection: NC_RMGL_SMBVL_FMRFamide, from RMGL to SMBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_SMBVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_SMBVL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBVL[0].Soma syn_NC_RMGL_SMBVL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_SMBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_SMBVL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGL_URXL_FMRFamide
        print("Adding projection: NC_RMGL_URXL_FMRFamide, from RMGL to URXL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGL_URXL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGL_URXL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma], weight: 1.0, delay 0.0
        h("a_URXL[0].Soma syn_NC_RMGL_URXL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGL[0].Soma a_URXL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGL_URXL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_ADAR_FMRFamide
        print("Adding projection: NC_RMGR_ADAR_FMRFamide, from RMGR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_ADAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_ADAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_RMGR_ADAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_ADAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_AIMR_FMRFamide
        print("Adding projection: NC_RMGR_AIMR_FMRFamide, from RMGR to AIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_AIMR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_AIMR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIMR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIMR[0].Soma syn_NC_RMGR_AIMR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_AIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_AIMR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_ALNR_FMRFamide
        print("Adding projection: NC_RMGR_ALNR_FMRFamide, from RMGR to ALNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALNR[0].Soma], weight: 1.0, delay 0.0
        h("a_ALNR[0].Soma syn_NC_RMGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_ALNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_ALNR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_ASHR_FMRFamide
        print("Adding projection: NC_RMGR_ASHR_FMRFamide, from RMGR to ASHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHR[0].Soma syn_NC_RMGR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_ASHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_ASHR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_AVAR_FMRFamide
        print("Adding projection: NC_RMGR_AVAR_FMRFamide, from RMGR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_RMGR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_AVAR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_AVBR_FMRFamide
        print("Adding projection: NC_RMGR_AVBR_FMRFamide, from RMGR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_RMGR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_AVBR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_AVDL_FMRFamide
        print("Adding projection: NC_RMGR_AVDL_FMRFamide, from RMGR to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_RMGR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_AVDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_AVER_FMRFamide
        print("Adding projection: NC_RMGR_AVER_FMRFamide, from RMGR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 3.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_RMGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_AVER_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_RMGR_AVJL_FMRFamide
        print("Adding projection: NC_RMGR_AVJL_FMRFamide, from RMGR to AVJL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_AVJL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_AVJL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJL[0].Soma syn_NC_RMGR_AVJL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_AVJL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_AVJL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_RIR_FMRFamide
        print("Adding projection: NC_RMGR_RIR_FMRFamide, from RMGR to RIR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIR[0].Soma syn_NC_RMGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_RIR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_RIR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMGR_RMDL_FMRFamide
        print("Adding projection: NC_RMGR_RMDL_FMRFamide, from RMGR to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_RMDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_RMDL_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_RMGR_RMDL_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_RMDL_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_RMGR_RMDR_FMRFamide
        print("Adding projection: NC_RMGR_RMDR_FMRFamide, from RMGR to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RMGR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_RMDR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_RMGR_RMDVR_FMRFamide
        print("Adding projection: NC_RMGR_RMDVR_FMRFamide, from RMGR to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_RMDVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_RMDVR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 5.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_RMGR_RMDVR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_RMDVR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_RMGR_URXR_FMRFamide
        print("Adding projection: NC_RMGR_URXR_FMRFamide, from RMGR to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMGR_URXR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMGR_URXR_FMRFamide_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_RMGR_URXR_FMRFamide_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMGR[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMGR_URXR_FMRFamide_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMHL_RMDR_Glutamate
        print("Adding projection: NC_RMHL_RMDR_Glutamate, from RMHL to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMHL_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMHL_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_RMHL_RMDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMHL[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMHL_RMDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMHR_RMER_Glutamate
        print("Adding projection: NC_RMHR_RMER_Glutamate, from RMHR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMHR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMHR_RMER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_RMHR_RMER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMHR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMHR_RMER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_RMHR_RMGL_Glutamate
        print("Adding projection: NC_RMHR_RMGL_Glutamate, from RMHR to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_RMHR_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_RMHR_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_RMHR_RMGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_RMHR[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_RMHR_RMGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAADL_AIBL_Acetylcholine
        print("Adding projection: NC_SAADL_AIBL_Acetylcholine, from SAADL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_SAADL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAADL_AVAL_Acetylcholine
        print("Adding projection: NC_SAADL_AVAL_Acetylcholine, from SAADL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_SAADL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_SAADL_RIML_Acetylcholine
        print("Adding projection: NC_SAADL_RIML_Acetylcholine, from SAADL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 3.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_SAADL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SAADL_RIMR_Acetylcholine
        print("Adding projection: NC_SAADL_RIMR_Acetylcholine, from SAADL to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 6.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_SAADL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADL[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_SAADL_RMGR_Acetylcholine
        print("Adding projection: NC_SAADL_RMGR_Acetylcholine, from SAADL to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADL_RMGR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADL_RMGR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_SAADL_RMGR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADL[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADL_RMGR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAADR_AIBR_Acetylcholine
        print("Adding projection: NC_SAADR_AIBR_Acetylcholine, from SAADR to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_SAADR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAADR_AVAR_Acetylcholine
        print("Adding projection: NC_SAADR_AVAR_Acetylcholine, from SAADR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_SAADR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SAADR_OLLL_Acetylcholine
        print("Adding projection: NC_SAADR_OLLL_Acetylcholine, from SAADR to OLLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_OLLL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_OLLL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLL[0].Soma syn_NC_SAADR_OLLL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_OLLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_OLLL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAADR_RIML_Acetylcholine
        print("Adding projection: NC_SAADR_RIML_Acetylcholine, from SAADR to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 4.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_SAADR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_SAADR_RIMR_Acetylcholine
        print("Adding projection: NC_SAADR_RIMR_Acetylcholine, from SAADR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_SAADR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_SAADR_RMFL_Acetylcholine
        print("Adding projection: NC_SAADR_RMFL_Acetylcholine, from SAADR to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_SAADR_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAADR_RMGL_Acetylcholine
        print("Adding projection: NC_SAADR_RMGL_Acetylcholine, from SAADR to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAADR_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAADR_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_SAADR_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAADR[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAADR_RMGL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAAVL_AIBL_Acetylcholine
        print("Adding projection: NC_SAAVL_AIBL_Acetylcholine, from SAAVL to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_SAAVL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAAVL_ALNL_Acetylcholine
        print("Adding projection: NC_SAAVL_ALNL_Acetylcholine, from SAAVL to ALNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_ALNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_ALNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma], weight: 1.0, delay 0.0
        h("a_ALNL[0].Soma syn_NC_SAAVL_ALNL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_ALNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_ALNL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAAVL_AVAL_Acetylcholine
        print("Adding projection: NC_SAAVL_AVAL_Acetylcholine, from SAAVL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 17.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_SAAVL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 17.0))") # *->cell

        # ######################   Projection: NC_SAAVL_OLLR_Acetylcholine
        print("Adding projection: NC_SAAVL_OLLR_Acetylcholine, from SAAVL to OLLR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLLR[0].Soma syn_NC_SAAVL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_OLLR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_OLLR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SAAVL_RIML_Acetylcholine
        print("Adding projection: NC_SAAVL_RIML_Acetylcholine, from SAAVL to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_SAAVL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SAAVL_RIMR_Acetylcholine
        print("Adding projection: NC_SAAVL_RIMR_Acetylcholine, from SAAVL to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 12.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_SAAVL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_SAAVL_RMFR_Acetylcholine
        print("Adding projection: NC_SAAVL_RMFR_Acetylcholine, from SAAVL to RMFR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_RMFR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_RMFR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMFR[0].Soma syn_NC_SAAVL_RMFR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_RMFR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_RMFR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SAAVL_SMDDR_Acetylcholine
        print("Adding projection: NC_SAAVL_SMDDR_Acetylcholine, from SAAVL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 8.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_SAAVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_SAAVR_AVAR_Acetylcholine
        print("Adding projection: NC_SAAVR_AVAR_Acetylcholine, from SAAVR to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 13.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_SAAVR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVR[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVR_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_SAAVR_RIML_Acetylcholine
        print("Adding projection: NC_SAAVR_RIML_Acetylcholine, from SAAVR to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 5.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_SAAVR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVR[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVR_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_SAAVR_RIMR_Acetylcholine
        print("Adding projection: NC_SAAVR_RIMR_Acetylcholine, from SAAVR to RIMR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIMR[0].Soma syn_NC_SAAVR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVR[0].Soma a_RIMR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVR_RIMR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SAAVR_SMDDL_Acetylcholine
        print("Adding projection: NC_SAAVR_SMDDL_Acetylcholine, from SAAVR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SAAVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SAAVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 6.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_SAAVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SAAVR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SAAVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_SABD_VA2_Acetylcholine
        print("Adding projection: NC_SABD_VA2_Acetylcholine, from SABD to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SABD_VA2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SABD_VA2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_SABD_VA2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SABD[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_SABD_VA2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_AIBR_Acetylcholine
        print("Adding projection: NC_SDQL_AIBR_Acetylcholine, from SDQL to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_SDQL_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_ALML_Acetylcholine
        print("Adding projection: NC_SDQL_ALML_Acetylcholine, from SDQL to ALML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_ALML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_ALML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma], weight: 1.0, delay 0.0
        h("a_ALML[0].Soma syn_NC_SDQL_ALML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_ALML[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_ALML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_AVAL_Acetylcholine
        print("Adding projection: NC_SDQL_AVAL_Acetylcholine, from SDQL to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_SDQL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_AVAR_Acetylcholine
        print("Adding projection: NC_SDQL_AVAR_Acetylcholine, from SDQL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_SDQL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SDQL_AVEL_Acetylcholine
        print("Adding projection: NC_SDQL_AVEL_Acetylcholine, from SDQL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_SDQL_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_AVEL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_FLPL_Acetylcholine
        print("Adding projection: NC_SDQL_FLPL_Acetylcholine, from SDQL to FLPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_FLPL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_FLPL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0, delay 0.0
        h("a_FLPL[0].Soma syn_NC_SDQL_FLPL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_FLPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_FLPL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_RICR_Acetylcholine
        print("Adding projection: NC_SDQL_RICR_Acetylcholine, from SDQL to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_SDQL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQL_RIS_Acetylcholine
        print("Adding projection: NC_SDQL_RIS_Acetylcholine, from SDQL to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_RIS_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_RIS_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 3.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_SDQL_RIS_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_RIS_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SDQL_RMFL_Acetylcholine
        print("Adding projection: NC_SDQL_RMFL_Acetylcholine, from SDQL to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_SDQL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQL[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQL_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQR_ADLL_Acetylcholine
        print("Adding projection: NC_SDQR_ADLL_Acetylcholine, from SDQR to ADLL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_ADLL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_ADLL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0, delay 0.0
        h("a_ADLL[0].Soma syn_NC_SDQR_ADLL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_ADLL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_ADLL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQR_AIBL_Acetylcholine
        print("Adding projection: NC_SDQR_AIBL_Acetylcholine, from SDQR to AIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_AIBL[0].Soma syn_NC_SDQR_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_AIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_AIBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SDQR_AVAL_Acetylcholine
        print("Adding projection: NC_SDQR_AVAL_Acetylcholine, from SDQR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_SDQR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SDQR_AVBL_Acetylcholine
        print("Adding projection: NC_SDQR_AVBL_Acetylcholine, from SDQR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_SDQR_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_SDQR_AVBR_Acetylcholine
        print("Adding projection: NC_SDQR_AVBR_Acetylcholine, from SDQR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 4.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_SDQR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_SDQR_DVA_Acetylcholine
        print("Adding projection: NC_SDQR_DVA_Acetylcholine, from SDQR to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_DVA_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_DVA_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 3.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_SDQR_DVA_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_DVA_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SDQR_RICR_Acetylcholine
        print("Adding projection: NC_SDQR_RICR_Acetylcholine, from SDQR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_SDQR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SDQR_RMHL_Acetylcholine
        print("Adding projection: NC_SDQR_RMHL_Acetylcholine, from SDQR to RMHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_RMHL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_RMHL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMHL[0].Soma syn_NC_SDQR_RMHL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_RMHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_RMHL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SDQR_RMHR_Acetylcholine
        print("Adding projection: NC_SDQR_RMHR_Acetylcholine, from SDQR to RMHR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SDQR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SDQR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMHR[0].Soma syn_NC_SDQR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SDQR[0].Soma a_RMHR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SDQR_RMHR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBDL_AVAR_Acetylcholine
        print("Adding projection: NC_SMBDL_AVAR_Acetylcholine, from SMBDL to AVAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBDL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBDL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAR[0].Soma syn_NC_SMBDL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBDL[0].Soma a_AVAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBDL_AVAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBDL_RMED_Acetylcholine
        print("Adding projection: NC_SMBDL_RMED_Acetylcholine, from SMBDL to RMED with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBDL_RMED_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBDL_RMED_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 3.0, delay 0.0
        h("a_RMED[0].Soma syn_NC_SMBDL_RMED_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBDL[0].Soma a_RMED[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBDL_RMED_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SMBDL_SAAVR_Acetylcholine
        print("Adding projection: NC_SMBDL_SAAVR_Acetylcholine, from SMBDL to SAAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBDL_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBDL_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SAAVR[0].Soma syn_NC_SMBDL_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBDL[0].Soma a_SAAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBDL_SAAVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBDR_AVAL_Acetylcholine
        print("Adding projection: NC_SMBDR_AVAL_Acetylcholine, from SMBDR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBDR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBDR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_SMBDR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBDR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBDR_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBDR_RMED_Acetylcholine
        print("Adding projection: NC_SMBDR_RMED_Acetylcholine, from SMBDR to RMED with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBDR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBDR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 4.0, delay 0.0
        h("a_RMED[0].Soma syn_NC_SMBDR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBDR[0].Soma a_RMED[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBDR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_SMBDR_SAAVL_Acetylcholine
        print("Adding projection: NC_SMBDR_SAAVL_Acetylcholine, from SMBDR to SAAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBDR_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBDR_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SAAVL[0].Soma syn_NC_SMBDR_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBDR[0].Soma a_SAAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBDR_SAAVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SMBVL_PLNL_Acetylcholine
        print("Adding projection: NC_SMBVL_PLNL_Acetylcholine, from SMBVL to PLNL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBVL_PLNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBVL_PLNL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLNL[0].Soma], weight: 1.0, delay 0.0
        h("a_PLNL[0].Soma syn_NC_SMBVL_PLNL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBVL[0].Soma a_PLNL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBVL_PLNL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMBVL_RMEV_Acetylcholine
        print("Adding projection: NC_SMBVL_RMEV_Acetylcholine, from SMBVL to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 5.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_SMBVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBVL[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_SMBVL_SAADL_Acetylcholine
        print("Adding projection: NC_SMBVL_SAADL_Acetylcholine, from SMBVL to SAADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBVL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBVL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 3.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_SMBVL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBVL[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBVL_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SMBVR_RMEV_Acetylcholine
        print("Adding projection: NC_SMBVR_RMEV_Acetylcholine, from SMBVR to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 3.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_SMBVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBVR[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SMBVR_SAADR_Acetylcholine
        print("Adding projection: NC_SMBVR_SAADR_Acetylcholine, from SMBVR to SAADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMBVR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMBVR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 4.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_SMBVR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMBVR[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMBVR_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_SMDDL_RIAL_Acetylcholine
        print("Adding projection: NC_SMDDL_RIAL_Acetylcholine, from SMDDL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_SMDDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDDL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDDL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDDL_RIAR_Acetylcholine
        print("Adding projection: NC_SMDDL_RIAR_Acetylcholine, from SMDDL to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_SMDDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDDL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDDL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDDL_SMDVR_Acetylcholine
        print("Adding projection: NC_SMDDL_SMDVR_Acetylcholine, from SMDDL to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDDL_SMDVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDDL_SMDVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_SMDDL_SMDVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDDL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDDL_SMDVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SMDDR_RIAL_Acetylcholine
        print("Adding projection: NC_SMDDR_RIAL_Acetylcholine, from SMDDR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_SMDDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDDR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDDR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_SMDDR_RIAR_Acetylcholine
        print("Adding projection: NC_SMDDR_RIAR_Acetylcholine, from SMDDR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_SMDDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDDR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDDR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDVL_PVR_Acetylcholine
        print("Adding projection: NC_SMDVL_PVR_Acetylcholine, from SMDVL to PVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVL_PVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVL_PVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVR[0].Soma syn_NC_SMDVL_PVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVL[0].Soma a_PVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVL_PVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDVL_RIAL_Acetylcholine
        print("Adding projection: NC_SMDVL_RIAL_Acetylcholine, from SMDVL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_SMDVL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVL_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_SMDVL_RIAR_Acetylcholine
        print("Adding projection: NC_SMDVL_RIAR_Acetylcholine, from SMDVL to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 8.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_SMDVL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVL[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVL_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_SMDVL_RIVL_Acetylcholine
        print("Adding projection: NC_SMDVL_RIVL_Acetylcholine, from SMDVL to RIVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RIVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVL_RIVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVL[0].Soma syn_NC_SMDVL_RIVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVL[0].Soma a_RIVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVL_RIVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDVL_RMDDR_Acetylcholine
        print("Adding projection: NC_SMDVL_RMDDR_Acetylcholine, from SMDVL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_SMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDVL_SMDDR_Acetylcholine
        print("Adding projection: NC_SMDVL_SMDDR_Acetylcholine, from SMDVL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_SMDVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVL_SMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_SMDVR_RIAL_Acetylcholine
        print("Adding projection: NC_SMDVR_RIAL_Acetylcholine, from SMDVR to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 7.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_SMDVR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVR[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVR_RIAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_SMDVR_RIAR_Acetylcholine
        print("Adding projection: NC_SMDVR_RIAR_Acetylcholine, from SMDVR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 5.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_SMDVR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVR_RIAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_SMDVR_RIVR_Acetylcholine
        print("Adding projection: NC_SMDVR_RIVR_Acetylcholine, from SMDVR to RIVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RIVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVR_RIVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIVR[0].Soma syn_NC_SMDVR_RIVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVR[0].Soma a_RIVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVR_RIVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDVR_RMDDL_Acetylcholine
        print("Adding projection: NC_SMDVR_RMDDL_Acetylcholine, from SMDVR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_SMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVR_RMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_SMDVR_SMDDL_Acetylcholine
        print("Adding projection: NC_SMDVR_SMDDL_Acetylcholine, from SMDVR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_SMDVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_SMDVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 2.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_SMDVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_SMDVR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_SMDVR_SMDDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URADL_IL1DL_Acetylcholine
        print("Adding projection: NC_URADL_IL1DL_Acetylcholine, from URADL to IL1DL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADL_IL1DL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADL_IL1DL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 2.0, delay 0.0
        h("a_IL1DL[0].Soma syn_NC_URADL_IL1DL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADL[0].Soma a_IL1DL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADL_IL1DL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URADL_RIPL_Acetylcholine
        print("Adding projection: NC_URADL_RIPL_Acetylcholine, from URADL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_URADL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URADL_RMEL_Acetylcholine
        print("Adding projection: NC_URADL_RMEL_Acetylcholine, from URADL to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_URADL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADL[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URADR_IL1DR_Acetylcholine
        print("Adding projection: NC_URADR_IL1DR_Acetylcholine, from URADR to IL1DR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADR_IL1DR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADR_IL1DR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1DR[0].Soma syn_NC_URADR_IL1DR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADR[0].Soma a_IL1DR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADR_IL1DR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URADR_RIPR_Acetylcholine
        print("Adding projection: NC_URADR_RIPR_Acetylcholine, from URADR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_URADR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URADR_RMDVR_Acetylcholine
        print("Adding projection: NC_URADR_RMDVR_Acetylcholine, from URADR to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADR_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADR_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_URADR_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADR_RMDVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URADR_RMED_Acetylcholine
        print("Adding projection: NC_URADR_RMED_Acetylcholine, from URADR to RMED with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 1.0, delay 0.0
        h("a_RMED[0].Soma syn_NC_URADR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADR[0].Soma a_RMED[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADR_RMED_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URADR_RMER_Acetylcholine
        print("Adding projection: NC_URADR_RMER_Acetylcholine, from URADR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_URADR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URADR_URYDR_Acetylcholine
        print("Adding projection: NC_URADR_URYDR_Acetylcholine, from URADR to URYDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URADR_URYDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URADR_URYDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma], weight: 1.0, delay 0.0
        h("a_URYDR[0].Soma syn_NC_URADR_URYDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URADR[0].Soma a_URYDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URADR_URYDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URAVL_RIPL_Acetylcholine
        print("Adding projection: NC_URAVL_RIPL_Acetylcholine, from URAVL to RIPL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPL[0].Soma syn_NC_URAVL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVL[0].Soma a_RIPL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVL_RIPL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URAVL_RMEL_Acetylcholine
        print("Adding projection: NC_URAVL_RMEL_Acetylcholine, from URAVL to RMEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMEL[0].Soma syn_NC_URAVL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVL[0].Soma a_RMEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVL_RMEL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URAVL_RMER_Acetylcholine
        print("Adding projection: NC_URAVL_RMER_Acetylcholine, from URAVL to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_URAVL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVL[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVL_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URAVL_RMEV_Acetylcholine
        print("Adding projection: NC_URAVL_RMEV_Acetylcholine, from URAVL to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_URAVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVL[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVL_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URAVR_IL1R_Acetylcholine
        print("Adding projection: NC_URAVR_IL1R_Acetylcholine, from URAVR to IL1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1R[0].Soma syn_NC_URAVR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVR[0].Soma a_IL1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URAVR_RIPR_Acetylcholine
        print("Adding projection: NC_URAVR_RIPR_Acetylcholine, from URAVR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_URAVR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVR_RIPR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URAVR_RMDVL_Acetylcholine
        print("Adding projection: NC_URAVR_RMDVL_Acetylcholine, from URAVR to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_URAVR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVR[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVR_RMDVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URAVR_RMER_Acetylcholine
        print("Adding projection: NC_URAVR_RMER_Acetylcholine, from URAVR to RMER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 2.0, delay 0.0
        h("a_RMER[0].Soma syn_NC_URAVR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVR[0].Soma a_RMER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVR_RMER_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URAVR_RMEV_Acetylcholine
        print("Adding projection: NC_URAVR_RMEV_Acetylcholine, from URAVR to RMEV with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URAVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URAVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 2.0, delay 0.0
        h("a_RMEV[0].Soma syn_NC_URAVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URAVR[0].Soma a_RMEV[0].synlist.append(new NetCon(&v(0.5), syn_NC_URAVR_RMEV_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URBL_AVBL_Acetylcholine
        print("Adding projection: NC_URBL_AVBL_Acetylcholine, from URBL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_URBL_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_AVBL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_CEPDL_Acetylcholine
        print("Adding projection: NC_URBL_CEPDL_Acetylcholine, from URBL to CEPDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_CEPDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_CEPDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDL[0].Soma syn_NC_URBL_CEPDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_CEPDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_CEPDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_IL1L_Acetylcholine
        print("Adding projection: NC_URBL_IL1L_Acetylcholine, from URBL to IL1L with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1L[0].Soma syn_NC_URBL_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_IL1L[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_IL1L_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_RICR_Acetylcholine
        print("Adding projection: NC_URBL_RICR_Acetylcholine, from URBL to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_URBL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_RMDDR_Acetylcholine
        print("Adding projection: NC_URBL_RMDDR_Acetylcholine, from URBL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_URBL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_RMDDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_SIAVL_Acetylcholine
        print("Adding projection: NC_URBL_SIAVL_Acetylcholine, from URBL to SIAVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_SIAVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_SIAVL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIAVL[0].Soma syn_NC_URBL_SIAVL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_SIAVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_SIAVL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_SMBDR_Acetylcholine
        print("Adding projection: NC_URBL_SMBDR_Acetylcholine, from URBL to SMBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDR[0].Soma syn_NC_URBL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_SMBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_SMBDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBL_URXL_Acetylcholine
        print("Adding projection: NC_URBL_URXL_Acetylcholine, from URBL to URXL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBL_URXL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBL_URXL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma], weight: 2.0, delay 0.0
        h("a_URXL[0].Soma syn_NC_URBL_URXL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBL[0].Soma a_URXL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBL_URXL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URBR_ADAR_Acetylcholine
        print("Adding projection: NC_URBR_ADAR_Acetylcholine, from URBR to ADAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0, delay 0.0
        h("a_ADAR[0].Soma syn_NC_URBR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_ADAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_ADAR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_AVBR_Acetylcholine
        print("Adding projection: NC_URBR_AVBR_Acetylcholine, from URBR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_URBR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_AVBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_CEPDR_Acetylcholine
        print("Adding projection: NC_URBR_CEPDR_Acetylcholine, from URBR to CEPDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_CEPDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_CEPDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0, delay 0.0
        h("a_CEPDR[0].Soma syn_NC_URBR_CEPDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_CEPDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_CEPDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_IL1R_Acetylcholine
        print("Adding projection: NC_URBR_IL1R_Acetylcholine, from URBR to IL1R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 3.0, delay 0.0
        h("a_IL1R[0].Soma syn_NC_URBR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_IL1R[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_IL1R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URBR_IL2R_Acetylcholine
        print("Adding projection: NC_URBR_IL2R_Acetylcholine, from URBR to IL2R with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_IL2R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_IL2R_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma], weight: 1.0, delay 0.0
        h("a_IL2R[0].Soma syn_NC_URBR_IL2R_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_IL2R[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_IL2R_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_RICR_Acetylcholine
        print("Adding projection: NC_URBR_RICR_Acetylcholine, from URBR to RICR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0, delay 0.0
        h("a_RICR[0].Soma syn_NC_URBR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_RICR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_RICR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_RMDL_Acetylcholine
        print("Adding projection: NC_URBR_RMDL_Acetylcholine, from URBR to RMDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDL[0].Soma syn_NC_URBR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_RMDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_RMDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_RMDR_Acetylcholine
        print("Adding projection: NC_URBR_RMDR_Acetylcholine, from URBR to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_URBR_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_RMDR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_SIAVR_Acetylcholine
        print("Adding projection: NC_URBR_SIAVR_Acetylcholine, from URBR to SIAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_SIAVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_SIAVR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma], weight: 2.0, delay 0.0
        h("a_SIAVR[0].Soma syn_NC_URBR_SIAVR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_SIAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_SIAVR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URBR_SMBDL_Acetylcholine
        print("Adding projection: NC_URBR_SMBDL_Acetylcholine, from URBR to SMBDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMBDL[0].Soma syn_NC_URBR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_SMBDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_SMBDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URBR_URXR_Acetylcholine
        print("Adding projection: NC_URBR_URXR_Acetylcholine, from URBR to URXR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URBR_URXR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URBR_URXR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 6.0, delay 0.0
        h("a_URXR[0].Soma syn_NC_URBR_URXR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URBR[0].Soma a_URXR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URBR_URXR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_URXL_ASHL_Glutamate
        print("Adding projection: NC_URXL_ASHL_Glutamate, from URXL to ASHL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_ASHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_ASHL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0, delay 0.0
        h("a_ASHL[0].Soma syn_NC_URXL_ASHL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_ASHL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_ASHL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXL_AUAL_Glutamate
        print("Adding projection: NC_URXL_AUAL_Glutamate, from URXL to AUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_AUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_AUAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 5.0, delay 0.0
        h("a_AUAL[0].Soma syn_NC_URXL_AUAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_AUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_AUAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_URXL_AVBL_Glutamate
        print("Adding projection: NC_URXL_AVBL_Glutamate, from URXL to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_URXL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXL_AVEL_Glutamate
        print("Adding projection: NC_URXL_AVEL_Glutamate, from URXL to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 4.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_URXL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URXL_AVJR_Glutamate
        print("Adding projection: NC_URXL_AVJR_Glutamate, from URXL to AVJR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_AVJR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVJR[0].Soma syn_NC_URXL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_AVJR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_AVJR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXL_RIAL_Glutamate
        print("Adding projection: NC_URXL_RIAL_Glutamate, from URXL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 8.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_URXL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_URXL_RICL_Glutamate
        print("Adding projection: NC_URXL_RICL_Glutamate, from URXL to RICL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_RICL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0, delay 0.0
        h("a_RICL[0].Soma syn_NC_URXL_RICL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_RICL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_RICL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXL_RIGL_Glutamate
        print("Adding projection: NC_URXL_RIGL_Glutamate, from URXL to RIGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_RIGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 3.0, delay 0.0
        h("a_RIGL[0].Soma syn_NC_URXL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_RIGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_RIGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URXL_RMGL_Glutamate
        print("Adding projection: NC_URXL_RMGL_Glutamate, from URXL to RMGL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXL_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXL_RMGL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMGL[0].Soma syn_NC_URXL_RMGL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXL[0].Soma a_RMGL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXL_RMGL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URXR_AUAR_Glutamate
        print("Adding projection: NC_URXR_AUAR_Glutamate, from URXR to AUAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_AUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_AUAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 4.0, delay 0.0
        h("a_AUAR[0].Soma syn_NC_URXR_AUAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_AUAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_AUAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URXR_AVBL_Glutamate
        print("Adding projection: NC_URXR_AVBL_Glutamate, from URXR to AVBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_AVBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBL[0].Soma syn_NC_URXR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_AVBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_AVBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXR_AVBR_Glutamate
        print("Adding projection: NC_URXR_AVBR_Glutamate, from URXR to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_URXR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URXR_AVER_Glutamate
        print("Adding projection: NC_URXR_AVER_Glutamate, from URXR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_URXR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URXR_OLQVR_Glutamate
        print("Adding projection: NC_URXR_OLQVR_Glutamate, from URXR to OLQVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_OLQVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_OLQVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0, delay 0.0
        h("a_OLQVR[0].Soma syn_NC_URXR_OLQVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_OLQVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_OLQVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXR_RIAR_Glutamate
        print("Adding projection: NC_URXR_RIAR_Glutamate, from URXR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_URXR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URXR_RIGR_Glutamate
        print("Adding projection: NC_URXR_RIGR_Glutamate, from URXR to RIGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_RIGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 2.0, delay 0.0
        h("a_RIGR[0].Soma syn_NC_URXR_RIGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_RIGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_RIGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URXR_RIPR_Glutamate
        print("Adding projection: NC_URXR_RIPR_Glutamate, from URXR to RIPR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_RIPR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 3.0, delay 0.0
        h("a_RIPR[0].Soma syn_NC_URXR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_RIPR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_RIPR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URXR_RMDR_Glutamate
        print("Adding projection: NC_URXR_RMDR_Glutamate, from URXR to RMDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_RMDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMDR[0].Soma syn_NC_URXR_RMDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_RMDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_RMDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXR_RMGR_Glutamate
        print("Adding projection: NC_URXR_RMGR_Glutamate, from URXR to RMGR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_RMGR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0, delay 0.0
        h("a_RMGR[0].Soma syn_NC_URXR_RMGR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_RMGR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_RMGR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URXR_SIAVR_Glutamate
        print("Adding projection: NC_URXR_SIAVR_Glutamate, from URXR to SIAVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URXR_SIAVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URXR_SIAVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIAVR[0].Soma syn_NC_URXR_SIAVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URXR[0].Soma a_SIAVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URXR_SIAVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYDL_AVER_Glutamate
        print("Adding projection: NC_URYDL_AVER_Glutamate, from URYDL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_URYDL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URYDL_RIBL_Glutamate
        print("Adding projection: NC_URYDL_RIBL_Glutamate, from URYDL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_URYDL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYDL_RMDDR_Glutamate
        print("Adding projection: NC_URYDL_RMDDR_Glutamate, from URYDL to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_URYDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDL[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDL_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URYDL_RMDVL_Glutamate
        print("Adding projection: NC_URYDL_RMDVL_Glutamate, from URYDL to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 6.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_URYDL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDL[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDL_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_URYDL_SMDDL_Glutamate
        print("Adding projection: NC_URYDL_SMDDL_Glutamate, from URYDL to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_URYDL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDL[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDL_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYDL_SMDDR_Glutamate
        print("Adding projection: NC_URYDL_SMDDR_Glutamate, from URYDL to SMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SMDDR[0].Soma syn_NC_URYDL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDL[0].Soma a_SMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDL_SMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYDR_AVEL_Glutamate
        print("Adding projection: NC_URYDR_AVEL_Glutamate, from URYDR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_URYDR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URYDR_AVER_Glutamate
        print("Adding projection: NC_URYDR_AVER_Glutamate, from URYDR to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDR_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_URYDR_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDR[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDR_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URYDR_RIBR_Glutamate
        print("Adding projection: NC_URYDR_RIBR_Glutamate, from URYDR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_URYDR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYDR_RMDDL_Glutamate
        print("Adding projection: NC_URYDR_RMDDL_Glutamate, from URYDR to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 3.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_URYDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDR[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDR_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_URYDR_RMDVR_Glutamate
        print("Adding projection: NC_URYDR_RMDVR_Glutamate, from URYDR to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 5.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_URYDR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDR[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDR_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_URYDR_SMDDL_Glutamate
        print("Adding projection: NC_URYDR_SMDDL_Glutamate, from URYDR to SMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYDR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYDR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDDL[0].Soma syn_NC_URYDR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYDR[0].Soma a_SMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYDR_SMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URYVL_AVBR_Glutamate
        print("Adding projection: NC_URYVL_AVBR_Glutamate, from URYVL to AVBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_AVBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AVBR[0].Soma syn_NC_URYVL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_AVBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_AVBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVL_AVER_Glutamate
        print("Adding projection: NC_URYVL_AVER_Glutamate, from URYVL to AVER with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_AVER_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 5.0, delay 0.0
        h("a_AVER[0].Soma syn_NC_URYVL_AVER_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_AVER[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_AVER_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_URYVL_IL1VL_Glutamate
        print("Adding projection: NC_URYVL_IL1VL_Glutamate, from URYVL to IL1VL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VL[0].Soma syn_NC_URYVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_IL1VL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_IL1VL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVL_RIAL_Glutamate
        print("Adding projection: NC_URYVL_RIAL_Glutamate, from URYVL to RIAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_RIAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAL[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAL[0].Soma syn_NC_URYVL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_RIAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_RIAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVL_RIBL_Glutamate
        print("Adding projection: NC_URYVL_RIBL_Glutamate, from URYVL to RIBL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_RIBL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 2.0, delay 0.0
        h("a_RIBL[0].Soma syn_NC_URYVL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_RIBL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_RIBL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URYVL_RIH_Glutamate
        print("Adding projection: NC_URYVL_RIH_Glutamate, from URYVL to RIH with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_RIH_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0, delay 0.0
        h("a_RIH[0].Soma syn_NC_URYVL_RIH_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_RIH[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_RIH_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVL_RIS_Glutamate
        print("Adding projection: NC_URYVL_RIS_Glutamate, from URYVL to RIS with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_RIS_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_RIS_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0, delay 0.0
        h("a_RIS[0].Soma syn_NC_URYVL_RIS_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_RIS[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_RIS_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVL_RMDDL_Glutamate
        print("Adding projection: NC_URYVL_RMDDL_Glutamate, from URYVL to RMDDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDDL[0].Soma syn_NC_URYVL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_RMDDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_RMDDL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URYVL_RMDVR_Glutamate
        print("Adding projection: NC_URYVL_RMDVR_Glutamate, from URYVL to RMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 2.0, delay 0.0
        h("a_RMDVR[0].Soma syn_NC_URYVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_RMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_RMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_URYVL_SIBVR_Glutamate
        print("Adding projection: NC_URYVL_SIBVR_Glutamate, from URYVL to SIBVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_SIBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_SIBVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBVR[0].Soma syn_NC_URYVL_SIBVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_SIBVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_SIBVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVL_SMDVR_Glutamate
        print("Adding projection: NC_URYVL_SMDVR_Glutamate, from URYVL to SMDVR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 4.0, delay 0.0
        h("a_SMDVR[0].Soma syn_NC_URYVL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVL[0].Soma a_SMDVR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVL_SMDVR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URYVR_AVAL_Glutamate
        print("Adding projection: NC_URYVR_AVAL_Glutamate, from URYVR to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_AVAL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_URYVR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_AVAL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVR_AVEL_Glutamate
        print("Adding projection: NC_URYVR_AVEL_Glutamate, from URYVR to AVEL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_AVEL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 6.0, delay 0.0
        h("a_AVEL[0].Soma syn_NC_URYVR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_AVEL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_AVEL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_URYVR_IL1VR_Glutamate
        print("Adding projection: NC_URYVR_IL1VR_Glutamate, from URYVR to IL1VR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0, delay 0.0
        h("a_IL1VR[0].Soma syn_NC_URYVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_IL1VR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_IL1VR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVR_RIAR_Glutamate
        print("Adding projection: NC_URYVR_RIAR_Glutamate, from URYVR to RIAR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_RIAR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIAR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIAR[0].Soma syn_NC_URYVR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_RIAR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_RIAR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVR_RIBR_Glutamate
        print("Adding projection: NC_URYVR_RIBR_Glutamate, from URYVR to RIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_RIBR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_RIBR[0].Soma syn_NC_URYVR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_RIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_RIBR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVR_RMDDR_Glutamate
        print("Adding projection: NC_URYVR_RMDDR_Glutamate, from URYVR to RMDDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 6.0, delay 0.0
        h("a_RMDDR[0].Soma syn_NC_URYVR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_RMDDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_RMDDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_URYVR_RMDVL_Glutamate
        print("Adding projection: NC_URYVR_RMDVL_Glutamate, from URYVR to RMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 4.0, delay 0.0
        h("a_RMDVL[0].Soma syn_NC_URYVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_RMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_RMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_URYVR_SIBDR_Glutamate
        print("Adding projection: NC_URYVR_SIBDR_Glutamate, from URYVR to SIBDR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBDR[0].Soma syn_NC_URYVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_SIBDR[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_SIBDR_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVR_SIBVL_Glutamate
        print("Adding projection: NC_URYVR_SIBVL_Glutamate, from URYVR to SIBVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_SIBVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0, delay 0.0
        h("a_SIBVL[0].Soma syn_NC_URYVR_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_SIBVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_SIBVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_URYVR_SMDVL_Glutamate
        print("Adding projection: NC_URYVR_SMDVL_Glutamate, from URYVR to SMDVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_URYVR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_URYVR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 3.0, delay 0.0
        h("a_SMDVL[0].Soma syn_NC_URYVR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_URYVR[0].Soma a_SMDVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_URYVR_SMDVL_Glutamate_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA1_DD1_Acetylcholine
        print("Adding projection: NC_VA1_DD1_Acetylcholine, from VA1 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 9.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA1[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VA1_VD1_Acetylcholine
        print("Adding projection: NC_VA1_VD1_Acetylcholine, from VA1 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 2.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_VA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA1[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA11_DD6_Acetylcholine
        print("Adding projection: NC_VA11_DD6_Acetylcholine, from VA11 to DD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 10.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_VA11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA11[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_VA11_PVNR_Acetylcholine
        print("Adding projection: NC_VA11_PVNR_Acetylcholine, from VA11 to PVNR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA11_PVNR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA11_PVNR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 2.0, delay 0.0
        h("a_PVNR[0].Soma syn_NC_VA11_PVNR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA11[0].Soma a_PVNR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA11_PVNR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA11_VB10_Acetylcholine
        print("Adding projection: NC_VA11_VB10_Acetylcholine, from VA11 to VB10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA11_VB10_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA11_VB10_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0, delay 0.0
        h("a_VB10[0].Soma syn_NC_VA11_VB10_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA11[0].Soma a_VB10[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA11_VB10_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA11_VD12_Acetylcholine
        print("Adding projection: NC_VA11_VD12_Acetylcholine, from VA11 to VD12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA11_VD12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA11_VD12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma], weight: 4.0, delay 0.0
        h("a_VD12[0].Soma syn_NC_VA11_VD12_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA11[0].Soma a_VD12[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA11_VD12_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VA12_AS11_Acetylcholine
        print("Adding projection: NC_VA12_AS11_Acetylcholine, from VA12 to AS11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_AS11_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_AS11_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma], weight: 2.0, delay 0.0
        h("a_AS11[0].Soma syn_NC_VA12_AS11_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_AS11[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_AS11_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA12_DA8_Acetylcholine
        print("Adding projection: NC_VA12_DA8_Acetylcholine, from VA12 to DA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_DA8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_DA8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 3.0, delay 0.0
        h("a_DA8[0].Soma syn_NC_VA12_DA8_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_DA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_DA8_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA12_DA9_Acetylcholine
        print("Adding projection: NC_VA12_DA9_Acetylcholine, from VA12 to DA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_DA9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_DA9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 5.0, delay 0.0
        h("a_DA9[0].Soma syn_NC_VA12_DA9_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_DA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_DA9_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VA12_DB7_Acetylcholine
        print("Adding projection: NC_VA12_DB7_Acetylcholine, from VA12 to DB7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_DB7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_DB7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma], weight: 4.0, delay 0.0
        h("a_DB7[0].Soma syn_NC_VA12_DB7_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_DB7[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_DB7_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 4.0))") # *->cell

        # ######################   Projection: NC_VA12_DD6_Acetylcholine
        print("Adding projection: NC_VA12_DD6_Acetylcholine, from VA12 to DD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 2.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_VA12_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA12_LUAL_Acetylcholine
        print("Adding projection: NC_VA12_LUAL_Acetylcholine, from VA12 to LUAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_LUAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_LUAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 2.0, delay 0.0
        h("a_LUAL[0].Soma syn_NC_VA12_LUAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_LUAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_LUAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA12_PVCL_Acetylcholine
        print("Adding projection: NC_VA12_PVCL_Acetylcholine, from VA12 to PVCL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_PVCL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_PVCL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0, delay 0.0
        h("a_PVCL[0].Soma syn_NC_VA12_PVCL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_PVCL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_PVCL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA12_PVCR_Acetylcholine
        print("Adding projection: NC_VA12_PVCR_Acetylcholine, from VA12 to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_VA12_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA12_VA11_Acetylcholine
        print("Adding projection: NC_VA12_VA11_Acetylcholine, from VA12 to VA11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_VA11_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_VA11_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 1.0, delay 0.0
        h("a_VA11[0].Soma syn_NC_VA12_VA11_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_VA11[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_VA11_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA12_VD12_Acetylcholine
        print("Adding projection: NC_VA12_VD12_Acetylcholine, from VA12 to VD12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_VD12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_VD12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma], weight: 3.0, delay 0.0
        h("a_VD12[0].Soma syn_NC_VA12_VD12_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_VD12[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_VD12_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA12_VD13_Acetylcholine
        print("Adding projection: NC_VA12_VD13_Acetylcholine, from VA12 to VD13 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA12_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA12_VD13_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 11.0, delay 0.0
        h("a_VD13[0].Soma syn_NC_VA12_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA12[0].Soma a_VD13[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA12_VD13_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_VA2_AVAL_Acetylcholine
        print("Adding projection: NC_VA2_AVAL_Acetylcholine, from VA2 to AVAL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA2_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA2_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVAL[0].Soma syn_NC_VA2_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA2[0].Soma a_AVAL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA2_AVAL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA2_DD1_Acetylcholine
        print("Adding projection: NC_VA2_DD1_Acetylcholine, from VA2 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 13.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA2[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_VA2_VA3_Acetylcholine
        print("Adding projection: NC_VA2_VA3_Acetylcholine, from VA2 to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA2_VA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA2_VA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_VA2_VA3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA2[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA2_VA3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA2_VB1_Acetylcholine
        print("Adding projection: NC_VA2_VB1_Acetylcholine, from VA2 to VB1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA2_VB1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA2_VB1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 2.0, delay 0.0
        h("a_VB1[0].Soma syn_NC_VA2_VB1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA2[0].Soma a_VB1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA2_VB1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA2_VD1_Acetylcholine
        print("Adding projection: NC_VA2_VD1_Acetylcholine, from VA2 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 2.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_VA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA2[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA2_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA2_VD2_Acetylcholine
        print("Adding projection: NC_VA2_VD2_Acetylcholine, from VA2 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 8.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA2[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_VA3_DD1_Acetylcholine
        print("Adding projection: NC_VA3_DD1_Acetylcholine, from VA3 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 18.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VA3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA3[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA3_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 18.0))") # *->cell

        # ######################   Projection: NC_VA3_DD2_Acetylcholine
        print("Adding projection: NC_VA3_DD2_Acetylcholine, from VA3 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 11.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA3[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 11.0))") # *->cell

        # ######################   Projection: NC_VA3_VA4_Acetylcholine
        print("Adding projection: NC_VA3_VA4_Acetylcholine, from VA3 to VA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0, delay 0.0
        h("a_VA4[0].Soma syn_NC_VA3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA3[0].Soma a_VA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA3_VD2_Acetylcholine
        print("Adding projection: NC_VA3_VD2_Acetylcholine, from VA3 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 3.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VA3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA3[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA3_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA3_VD3_Acetylcholine
        print("Adding projection: NC_VA3_VD3_Acetylcholine, from VA3 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 3.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_VA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA3[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA3_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA4_AVDL_Acetylcholine
        print("Adding projection: NC_VA4_AVDL_Acetylcholine, from VA4 to AVDL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA4_AVDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA4_AVDL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0, delay 0.0
        h("a_AVDL[0].Soma syn_NC_VA4_AVDL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA4[0].Soma a_AVDL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA4_AVDL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA4_DD2_Acetylcholine
        print("Adding projection: NC_VA4_DD2_Acetylcholine, from VA4 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 21.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA4[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 21.0))") # *->cell

        # ######################   Projection: NC_VA4_VB3_Acetylcholine
        print("Adding projection: NC_VA4_VB3_Acetylcholine, from VA4 to VB3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA4_VB3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA4_VB3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma], weight: 2.0, delay 0.0
        h("a_VB3[0].Soma syn_NC_VA4_VB3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA4[0].Soma a_VB3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA4_VB3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA4_VD4_Acetylcholine
        print("Adding projection: NC_VA4_VD4_Acetylcholine, from VA4 to VD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 3.0, delay 0.0
        h("a_VD4[0].Soma syn_NC_VA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA4[0].Soma a_VD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA4_VD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA5_DD2_Acetylcholine
        print("Adding projection: NC_VA5_DD2_Acetylcholine, from VA5 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 5.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VA5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA5[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA5_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VA5_DD3_Acetylcholine
        print("Adding projection: NC_VA5_DD3_Acetylcholine, from VA5 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 13.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VA5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA5[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 13.0))") # *->cell

        # ######################   Projection: NC_VA5_VD5_Acetylcholine
        print("Adding projection: NC_VA5_VD5_Acetylcholine, from VA5 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 2.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_VA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA5[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA5_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA6_DD3_Acetylcholine
        print("Adding projection: NC_VA6_DD3_Acetylcholine, from VA6 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA6_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA6_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 24.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VA6_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA6[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA6_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 24.0))") # *->cell

        # ######################   Projection: NC_VA6_VB5_Acetylcholine
        print("Adding projection: NC_VA6_VB5_Acetylcholine, from VA6 to VB5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA6_VB5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA6_VB5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 2.0, delay 0.0
        h("a_VB5[0].Soma syn_NC_VA6_VB5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA6[0].Soma a_VB5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA6_VB5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA6_VD5_Acetylcholine
        print("Adding projection: NC_VA6_VD5_Acetylcholine, from VA6 to VD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 1.0, delay 0.0
        h("a_VD5[0].Soma syn_NC_VA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA6[0].Soma a_VD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA6_VD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA6_VD6_Acetylcholine
        print("Adding projection: NC_VA6_VD6_Acetylcholine, from VA6 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 2.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_VA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA6[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VA7_DD3_Acetylcholine
        print("Adding projection: NC_VA7_DD3_Acetylcholine, from VA7 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA7_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA7_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 3.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VA7_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA7[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA7_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA7_DD4_Acetylcholine
        print("Adding projection: NC_VA7_DD4_Acetylcholine, from VA7 to DD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 12.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VA7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA7[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 12.0))") # *->cell

        # ######################   Projection: NC_VA7_VD7_Acetylcholine
        print("Adding projection: NC_VA7_VD7_Acetylcholine, from VA7 to VD7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA7_VD7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA7_VD7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 9.0, delay 0.0
        h("a_VD7[0].Soma syn_NC_VA7_VD7_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA7[0].Soma a_VD7[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA7_VD7_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VA8_DD4_Acetylcholine
        print("Adding projection: NC_VA8_DD4_Acetylcholine, from VA8 to DD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA8_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA8_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 21.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VA8_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA8[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA8_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 21.0))") # *->cell

        # ######################   Projection: NC_VA8_VA9_Acetylcholine
        print("Adding projection: NC_VA8_VA9_Acetylcholine, from VA8 to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_VA8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA8[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA8_VB6_Acetylcholine
        print("Adding projection: NC_VA8_VB6_Acetylcholine, from VA8 to VB6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA8_VB6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA8_VB6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 1.0, delay 0.0
        h("a_VB6[0].Soma syn_NC_VA8_VB6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA8[0].Soma a_VB6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA8_VB6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA8_VB8_Acetylcholine
        print("Adding projection: NC_VA8_VB8_Acetylcholine, from VA8 to VB8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA8_VB8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA8_VB8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 1.0, delay 0.0
        h("a_VB8[0].Soma syn_NC_VA8_VB8_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA8[0].Soma a_VB8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA8_VB8_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA8_VD7_Acetylcholine
        print("Adding projection: NC_VA8_VD7_Acetylcholine, from VA8 to VD7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA8_VD7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA8_VD7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 5.0, delay 0.0
        h("a_VD7[0].Soma syn_NC_VA8_VD7_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA8[0].Soma a_VD7[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA8_VD7_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VA8_VD8_Acetylcholine
        print("Adding projection: NC_VA8_VD8_Acetylcholine, from VA8 to VD8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA8_VD8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA8_VD8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma], weight: 5.0, delay 0.0
        h("a_VD8[0].Soma syn_NC_VA8_VD8_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA8[0].Soma a_VD8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA8_VD8_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VA9_DD4_Acetylcholine
        print("Adding projection: NC_VA9_DD4_Acetylcholine, from VA9 to DD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA9_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA9_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 3.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VA9_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA9[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA9_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VA9_DD5_Acetylcholine
        print("Adding projection: NC_VA9_DD5_Acetylcholine, from VA9 to DD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma], weight: 15.0, delay 0.0
        h("a_DD5[0].Soma syn_NC_VA9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA9[0].Soma a_DD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 15.0))") # *->cell

        # ######################   Projection: NC_VA9_PVT_Acetylcholine
        print("Adding projection: NC_VA9_PVT_Acetylcholine, from VA9 to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA9_PVT_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA9_PVT_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_VA9_PVT_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA9[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA9_PVT_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VA9_VB8_Acetylcholine
        print("Adding projection: NC_VA9_VB8_Acetylcholine, from VA9 to VB8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 6.0, delay 0.0
        h("a_VB8[0].Soma syn_NC_VA9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA9[0].Soma a_VB8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_VA9_VD9_Acetylcholine
        print("Adding projection: NC_VA9_VD9_Acetylcholine, from VA9 to VD9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VA9_VD9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VA9_VD9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma], weight: 10.0, delay 0.0
        h("a_VD9[0].Soma syn_NC_VA9_VD9_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VA9[0].Soma a_VD9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VA9_VD9_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_VB1_AIBR_Acetylcholine
        print("Adding projection: NC_VB1_AIBR_Acetylcholine, from VB1 to AIBR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0, delay 0.0
        h("a_AIBR[0].Soma syn_NC_VB1_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_AIBR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_AIBR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB1_DD1_Acetylcholine
        print("Adding projection: NC_VB1_DD1_Acetylcholine, from VB1 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB1_DVA_Acetylcholine
        print("Adding projection: NC_VB1_DVA_Acetylcholine, from VB1 to DVA with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_DVA_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_DVA_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0, delay 0.0
        h("a_DVA[0].Soma syn_NC_VB1_DVA_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_DVA[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_DVA_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB1_RIML_Acetylcholine
        print("Adding projection: NC_VB1_RIML_Acetylcholine, from VB1 to RIML with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_RIML_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0, delay 0.0
        h("a_RIML[0].Soma syn_NC_VB1_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_RIML[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_RIML_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VB1_RMFL_Acetylcholine
        print("Adding projection: NC_VB1_RMFL_Acetylcholine, from VB1 to RMFL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 2.0, delay 0.0
        h("a_RMFL[0].Soma syn_NC_VB1_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_RMFL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_RMFL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VB1_SAADL_Acetylcholine
        print("Adding projection: NC_VB1_SAADL_Acetylcholine, from VB1 to SAADL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 9.0, delay 0.0
        h("a_SAADL[0].Soma syn_NC_VB1_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_SAADL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_SAADL_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VB1_SAADR_Acetylcholine
        print("Adding projection: NC_VB1_SAADR_Acetylcholine, from VB1 to SAADR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 2.0, delay 0.0
        h("a_SAADR[0].Soma syn_NC_VB1_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_SAADR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_SAADR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VB1_SABD_Acetylcholine
        print("Adding projection: NC_VB1_SABD_Acetylcholine, from VB1 to SABD with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_SABD_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_SABD_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0, delay 0.0
        h("a_SABD[0].Soma syn_NC_VB1_SABD_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_SABD[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_SABD_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB1_VA1_Acetylcholine
        print("Adding projection: NC_VB1_VA1_Acetylcholine, from VB1 to VA1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_VA1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_VA1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 3.0, delay 0.0
        h("a_VA1[0].Soma syn_NC_VB1_VA1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_VA1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_VA1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VB1_VA3_Acetylcholine
        print("Adding projection: NC_VB1_VA3_Acetylcholine, from VB1 to VA3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_VA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_VA3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 1.0, delay 0.0
        h("a_VA3[0].Soma syn_NC_VB1_VA3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_VA3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_VA3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB1_VD1_Acetylcholine
        print("Adding projection: NC_VB1_VD1_Acetylcholine, from VB1 to VD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 3.0, delay 0.0
        h("a_VD1[0].Soma syn_NC_VB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_VD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_VD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VB1_VD2_Acetylcholine
        print("Adding projection: NC_VB1_VD2_Acetylcholine, from VB1 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB1[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB1_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB10_DD6_Acetylcholine
        print("Adding projection: NC_VB10_DD6_Acetylcholine, from VB10 to DD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB10_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB10_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 9.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_VB10_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB10[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB10_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VB10_PVT_Acetylcholine
        print("Adding projection: NC_VB10_PVT_Acetylcholine, from VB10 to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB10_PVT_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB10_PVT_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_VB10_PVT_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB10[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB10_PVT_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB10_VD11_Acetylcholine
        print("Adding projection: NC_VB10_VD11_Acetylcholine, from VB10 to VD11 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB10_VD11_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB10_VD11_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD11[0].Soma], weight: 1.0, delay 0.0
        h("a_VD11[0].Soma syn_NC_VB10_VD11_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB10[0].Soma a_VD11[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB10_VD11_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB10_VD12_Acetylcholine
        print("Adding projection: NC_VB10_VD12_Acetylcholine, from VB10 to VD12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB10_VD12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB10_VD12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD12[0].Soma], weight: 2.0, delay 0.0
        h("a_VD12[0].Soma syn_NC_VB10_VD12_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB10[0].Soma a_VD12[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB10_VD12_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VB11_DD6_Acetylcholine
        print("Adding projection: NC_VB11_DD6_Acetylcholine, from VB11 to DD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD6[0].Soma], weight: 7.0, delay 0.0
        h("a_DD6[0].Soma syn_NC_VB11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB11[0].Soma a_DD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB11_DD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_VB11_PVCR_Acetylcholine
        print("Adding projection: NC_VB11_PVCR_Acetylcholine, from VB11 to PVCR with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB11_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB11_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0, delay 0.0
        h("a_PVCR[0].Soma syn_NC_VB11_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB11[0].Soma a_PVCR[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB11_PVCR_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB11_VA12_Acetylcholine
        print("Adding projection: NC_VB11_VA12_Acetylcholine, from VB11 to VA12 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB11_VA12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB11_VA12_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0, delay 0.0
        h("a_VA12[0].Soma syn_NC_VB11_VA12_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB11[0].Soma a_VA12[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB11_VA12_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB2_DD1_Acetylcholine
        print("Adding projection: NC_VB2_DD1_Acetylcholine, from VB2 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 20.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VB2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB2[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB2_DD1_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 20.0))") # *->cell

        # ######################   Projection: NC_VB2_DD2_Acetylcholine
        print("Adding projection: NC_VB2_DD2_Acetylcholine, from VB2 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 1.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB2[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB2_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB2_VA2_Acetylcholine
        print("Adding projection: NC_VB2_VA2_Acetylcholine, from VB2 to VA2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB2_VA2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB2_VA2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0, delay 0.0
        h("a_VA2[0].Soma syn_NC_VB2_VA2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB2[0].Soma a_VA2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB2_VA2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB2_VC2_Acetylcholine
        print("Adding projection: NC_VB2_VC2_Acetylcholine, from VB2 to VC2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB2_VC2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB2_VC2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 1.0, delay 0.0
        h("a_VC2[0].Soma syn_NC_VB2_VC2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB2[0].Soma a_VC2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB2_VC2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB2_VD2_Acetylcholine
        print("Adding projection: NC_VB2_VD2_Acetylcholine, from VB2 to VD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 9.0, delay 0.0
        h("a_VD2[0].Soma syn_NC_VB2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB2[0].Soma a_VD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB2_VD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VB2_VD3_Acetylcholine
        print("Adding projection: NC_VB2_VD3_Acetylcholine, from VB2 to VD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 3.0, delay 0.0
        h("a_VD3[0].Soma syn_NC_VB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB2[0].Soma a_VD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB2_VD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VB3_DD2_Acetylcholine
        print("Adding projection: NC_VB3_DD2_Acetylcholine, from VB3 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 37.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB3[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB3_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 37.0))") # *->cell

        # ######################   Projection: NC_VB3_VA4_Acetylcholine
        print("Adding projection: NC_VB3_VA4_Acetylcholine, from VB3 to VA4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0, delay 0.0
        h("a_VA4[0].Soma syn_NC_VB3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB3[0].Soma a_VA4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB3_VA4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB4_DD2_Acetylcholine
        print("Adding projection: NC_VB4_DD2_Acetylcholine, from VB4 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 6.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VB4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB4[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB4_DD2_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_VB4_DD3_Acetylcholine
        print("Adding projection: NC_VB4_DD3_Acetylcholine, from VB4 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 16.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB4[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB4_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 16.0))") # *->cell

        # ######################   Projection: NC_VB5_DD3_Acetylcholine
        print("Adding projection: NC_VB5_DD3_Acetylcholine, from VB5 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 27.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VB5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB5[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB5_DD3_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 27.0))") # *->cell

        # ######################   Projection: NC_VB5_VD6_Acetylcholine
        print("Adding projection: NC_VB5_VD6_Acetylcholine, from VB5 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 7.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_VB5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB5[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB5_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_VB6_DD4_Acetylcholine
        print("Adding projection: NC_VB6_DD4_Acetylcholine, from VB6 to DD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB6_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB6_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 30.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VB6_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB6[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB6_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 30.0))") # *->cell

        # ######################   Projection: NC_VB6_VA8_Acetylcholine
        print("Adding projection: NC_VB6_VA8_Acetylcholine, from VB6 to VA8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB6_VA8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB6_VA8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 1.0, delay 0.0
        h("a_VA8[0].Soma syn_NC_VB6_VA8_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB6[0].Soma a_VA8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB6_VA8_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB6_VB7_Acetylcholine
        print("Adding projection: NC_VB6_VB7_Acetylcholine, from VB6 to VB7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB6_VB7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB6_VB7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma], weight: 1.0, delay 0.0
        h("a_VB7[0].Soma syn_NC_VB6_VB7_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB6[0].Soma a_VB7[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB6_VB7_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB6_VD6_Acetylcholine
        print("Adding projection: NC_VB6_VD6_Acetylcholine, from VB6 to VD6 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 1.0, delay 0.0
        h("a_VD6[0].Soma syn_NC_VB6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB6[0].Soma a_VD6[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB6_VD6_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB6_VD7_Acetylcholine
        print("Adding projection: NC_VB6_VD7_Acetylcholine, from VB6 to VD7 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB6_VD7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB6_VD7_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 8.0, delay 0.0
        h("a_VD7[0].Soma syn_NC_VB6_VD7_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB6[0].Soma a_VD7[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB6_VD7_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_VB7_DD4_Acetylcholine
        print("Adding projection: NC_VB7_DD4_Acetylcholine, from VB7 to DD4 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 2.0, delay 0.0
        h("a_DD4[0].Soma syn_NC_VB7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB7[0].Soma a_DD4[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB7_DD4_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VB8_DD5_Acetylcholine
        print("Adding projection: NC_VB8_DD5_Acetylcholine, from VB8 to DD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB8_DD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB8_DD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma], weight: 30.0, delay 0.0
        h("a_DD5[0].Soma syn_NC_VB8_DD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB8[0].Soma a_DD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB8_DD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 30.0))") # *->cell

        # ######################   Projection: NC_VB8_VA9_Acetylcholine
        print("Adding projection: NC_VB8_VA9_Acetylcholine, from VB8 to VA9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 9.0, delay 0.0
        h("a_VA9[0].Soma syn_NC_VB8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB8[0].Soma a_VA9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB8_VA9_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 9.0))") # *->cell

        # ######################   Projection: NC_VB8_VB9_Acetylcholine
        print("Adding projection: NC_VB8_VB9_Acetylcholine, from VB8 to VB9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB8_VB9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB8_VB9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 3.0, delay 0.0
        h("a_VB9[0].Soma syn_NC_VB8_VB9_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB8[0].Soma a_VB9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB8_VB9_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VB8_VD10_Acetylcholine
        print("Adding projection: NC_VB8_VD10_Acetylcholine, from VB8 to VD10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB8_VD10_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB8_VD10_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 1.0, delay 0.0
        h("a_VD10[0].Soma syn_NC_VB8_VD10_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB8[0].Soma a_VD10[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB8_VD10_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB8_VD9_Acetylcholine
        print("Adding projection: NC_VB8_VD9_Acetylcholine, from VB8 to VD9 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB8_VD9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB8_VD9_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma], weight: 10.0, delay 0.0
        h("a_VD9[0].Soma syn_NC_VB8_VD9_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB8[0].Soma a_VD9[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB8_VD9_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 10.0))") # *->cell

        # ######################   Projection: NC_VB9_DD5_Acetylcholine
        print("Adding projection: NC_VB9_DD5_Acetylcholine, from VB9 to DD5 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma], weight: 8.0, delay 0.0
        h("a_DD5[0].Soma syn_NC_VB9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB9[0].Soma a_DD5[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB9_DD5_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 8.0))") # *->cell

        # ######################   Projection: NC_VB9_VB8_Acetylcholine
        print("Adding projection: NC_VB9_VB8_Acetylcholine, from VB9 to VB8 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 1.0, delay 0.0
        h("a_VB8[0].Soma syn_NC_VB9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB9[0].Soma a_VB8[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB9_VB8_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VB9_VD10_Acetylcholine
        print("Adding projection: NC_VB9_VD10_Acetylcholine, from VB9 to VD10 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VB9_VD10_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VB9_VD10_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 5.0, delay 0.0
        h("a_VD10[0].Soma syn_NC_VB9_VD10_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VB9[0].Soma a_VD10[0].synlist.append(new NetCon(&v(0.5), syn_NC_VB9_VD10_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 5.0))") # *->cell

        # ######################   Projection: NC_VC1_AVL_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_AVL_Serotonin_Acetylcholine, from VC1 to AVL with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 2.0, delay 0.0
        h("a_AVL[0].Soma syn_NC_VC1_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_AVL[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_AVL_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC1_DD1_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_DD1_Serotonin_Acetylcholine, from VC1 to DD1 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 7.0, delay 0.0
        h("a_DD1[0].Soma syn_NC_VC1_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_DD1[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_DD1_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 7.0))") # *->cell

        # ######################   Projection: NC_VC1_DD2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_DD2_Serotonin_Acetylcholine, from VC1 to DD2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 6.0, delay 0.0
        h("a_DD2[0].Soma syn_NC_VC1_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_DD2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_DD2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_VC1_DD3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_DD3_Serotonin_Acetylcholine, from VC1 to DD3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 6.0, delay 0.0
        h("a_DD3[0].Soma syn_NC_VC1_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_DD3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_DD3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 6.0))") # *->cell

        # ######################   Projection: NC_VC1_DVC_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_DVC_Serotonin_Acetylcholine, from VC1 to DVC with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0, delay 0.0
        h("a_DVC[0].Soma syn_NC_VC1_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_DVC[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_DVC_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Projection: NC_VC1_PVT_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_PVT_Serotonin_Acetylcholine, from VC1 to PVT with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 2.0, delay 0.0
        h("a_PVT[0].Soma syn_NC_VC1_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_PVT[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_PVT_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 2.0))") # *->cell

        # ######################   Projection: NC_VC1_VC2_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VC2_Serotonin_Acetylcholine, from VC1 to VC2 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 3.0, delay 0.0
        h("a_VC2[0].Soma syn_NC_VC1_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VC2[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VC2_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 3.0))") # *->cell

        # ######################   Projection: NC_VC1_VC3_Serotonin_Acetylcholine
        print("Adding projection: NC_VC1_VC3_Serotonin_Acetylcholine, from VC1 to VC3 with synapse neuron_to_neuron_exc_syn, 1 connection(s)")

        h("objectvar syn_NC_VC1_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        h("objectvar netConn_NC_VC1_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[1]")

        # Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0, delay 0.0
        h("a_VC3[0].Soma syn_NC_VC1_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0] = new neuron_to_neuron_exc_syn(0.5)")
        h("a_VC1[0].Soma a_VC3[0].synlist.append(new NetCon(&v(0.5), syn_NC_VC1_VC3_Serotonin_Acetylcholine_neuron_to_neuron_exc_syn[0], -26.0, 0.0, 1.0))") # *->cell

        # ######################   Electrical Projection: NC_ADAL_ADAR_Generic_GJ
        print("Adding electrical projection: NC_ADAL_ADAR_Generic_GJ from ADAL to ADAR, with 1 connection(s)")

        h("objectvar syn_NC_ADAL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0
        h("a_ADAL[0].Soma { syn_NC_ADAL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAR[0].Soma { syn_NC_ADAL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAL_ADFL_Generic_GJ
        print("Adding electrical projection: NC_ADAL_ADFL_Generic_GJ from ADAL to ADFL, with 1 connection(s)")

        h("objectvar syn_NC_ADAL_ADFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAL_ADFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma], weight: 1.0
        h("a_ADAL[0].Soma { syn_NC_ADAL_ADFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADFL[0].Soma { syn_NC_ADAL_ADFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAL_ADFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAL_ADFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAL_ASHL_Generic_GJ
        print("Adding electrical projection: NC_ADAL_ASHL_Generic_GJ from ADAL to ASHL, with 1 connection(s)")

        h("objectvar syn_NC_ADAL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0
        h("a_ADAL[0].Soma { syn_NC_ADAL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHL[0].Soma { syn_NC_ADAL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAL_AVDR_Generic_GJ
        print("Adding electrical projection: NC_ADAL_AVDR_Generic_GJ from ADAL to AVDR, with 1 connection(s)")

        h("objectvar syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0
        h("a_ADAL[0].Soma { syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDR[0].Soma { syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAL[0].Soma { syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVDR[0].Soma { syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAL_PVQL_Generic_GJ
        print("Adding electrical projection: NC_ADAL_PVQL_Generic_GJ from ADAL to PVQL, with 1 connection(s)")

        h("objectvar syn_NC_ADAL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 1.0
        h("a_ADAL[0].Soma { syn_NC_ADAL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQL[0].Soma { syn_NC_ADAL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAR_ADAL_Generic_GJ
        print("Adding electrical projection: NC_ADAR_ADAL_Generic_GJ from ADAR to ADAL, with 1 connection(s)")

        h("objectvar syn_NC_ADAR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0
        h("a_ADAR[0].Soma { syn_NC_ADAR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAL[0].Soma { syn_NC_ADAR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAR_ADFR_Generic_GJ
        print("Adding electrical projection: NC_ADAR_ADFR_Generic_GJ from ADAR to ADFR, with 1 connection(s)")

        h("objectvar syn_NC_ADAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 1.0
        h("a_ADAR[0].Soma { syn_NC_ADAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADFR[0].Soma { syn_NC_ADAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAR_ASHR_Generic_GJ
        print("Adding electrical projection: NC_ADAR_ASHR_Generic_GJ from ADAR to ASHR, with 1 connection(s)")

        h("objectvar syn_NC_ADAR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0
        h("a_ADAR[0].Soma { syn_NC_ADAR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_ADAR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAR_AVDL_Generic_GJ
        print("Adding electrical projection: NC_ADAR_AVDL_Generic_GJ from ADAR to AVDL, with 1 connection(s)")

        h("objectvar syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 2.0
        h("a_ADAR[0].Soma { syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDL[0].Soma { syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAR[0].Soma { syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVDL[0].Soma { syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADAR_PVQR_Generic_GJ
        print("Adding electrical projection: NC_ADAR_PVQR_Generic_GJ from ADAR to PVQR, with 1 connection(s)")

        h("objectvar syn_NC_ADAR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADAR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0
        h("a_ADAR[0].Soma { syn_NC_ADAR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_ADAR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADAR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADAR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADEL_AINL_Generic_GJ
        print("Adding electrical projection: NC_ADEL_AINL_Generic_GJ from ADEL to AINL, with 1 connection(s)")

        h("objectvar syn_NC_ADEL_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADEL_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma], weight: 1.0
        h("a_ADEL[0].Soma { syn_NC_ADEL_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINL[0].Soma { syn_NC_ADEL_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADEL_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADEL_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADEL_AVKR_Generic_GJ
        print("Adding electrical projection: NC_ADEL_AVKR_Generic_GJ from ADEL to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_ADEL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADEL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0
        h("a_ADEL[0].Soma { syn_NC_ADEL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_ADEL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADEL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADEL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADER_AVKL_Generic_GJ
        print("Adding electrical projection: NC_ADER_AVKL_Generic_GJ from ADER to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_ADER_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADER_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_ADER[0].Soma { syn_NC_ADER_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_ADER_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADER_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADER_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADFL_ADAL_Generic_GJ
        print("Adding electrical projection: NC_ADFL_ADAL_Generic_GJ from ADFL to ADAL, with 1 connection(s)")

        h("objectvar syn_NC_ADFL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADFL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0
        h("a_ADFL[0].Soma { syn_NC_ADFL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAL[0].Soma { syn_NC_ADFL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADFL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADFL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADFR_ADAR_Generic_GJ
        print("Adding electrical projection: NC_ADFR_ADAR_Generic_GJ from ADFR to ADAR, with 1 connection(s)")

        h("objectvar syn_NC_ADFR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADFR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0
        h("a_ADFR[0].Soma { syn_NC_ADFR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAR[0].Soma { syn_NC_ADFR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADFR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADFR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADFR_AIAR_Generic_GJ
        print("Adding electrical projection: NC_ADFR_AIAR_Generic_GJ from ADFR to AIAR, with 1 connection(s)")

        h("objectvar syn_NC_ADFR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADFR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 1.0
        h("a_ADFR[0].Soma { syn_NC_ADFR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAR[0].Soma { syn_NC_ADFR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADFR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADFR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADLL_ADLR_Generic_GJ
        print("Adding electrical projection: NC_ADLL_ADLR_Generic_GJ from ADLL to ADLR, with 1 connection(s)")

        h("objectvar syn_NC_ADLL_ADLR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADLL_ADLR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma], weight: 1.0
        h("a_ADLL[0].Soma { syn_NC_ADLL_ADLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADLR[0].Soma { syn_NC_ADLL_ADLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADLL_ADLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADLR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADLL_ADLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADLL_AVDR_Generic_GJ
        print("Adding electrical projection: NC_ADLL_AVDR_Generic_GJ from ADLL to AVDR, with 1 connection(s)")

        h("objectvar syn_NC_ADLL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADLL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0
        h("a_ADLL[0].Soma { syn_NC_ADLL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDR[0].Soma { syn_NC_ADLL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADLL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADLL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADLL_OLQVL_Generic_GJ
        print("Adding electrical projection: NC_ADLL_OLQVL_Generic_GJ from ADLL to OLQVL, with 1 connection(s)")

        h("objectvar syn_NC_ADLL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADLL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0
        h("a_ADLL[0].Soma { syn_NC_ADLL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVL[0].Soma { syn_NC_ADLL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADLL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADLL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADLL_RMGL_Generic_GJ
        print("Adding electrical projection: NC_ADLL_RMGL_Generic_GJ from ADLL to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_ADLL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADLL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0
        h("a_ADLL[0].Soma { syn_NC_ADLL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_ADLL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADLL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADLL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ADLR_ADLL_Generic_GJ
        print("Adding electrical projection: NC_ADLR_ADLL_Generic_GJ from ADLR to ADLL, with 1 connection(s)")

        h("objectvar syn_NC_ADLR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ADLR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ADLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0
        h("a_ADLR[0].Soma { syn_NC_ADLR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADLL[0].Soma { syn_NC_ADLR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ADLR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ADLR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ADLR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AFDL_AFDR_Generic_GJ
        print("Adding electrical projection: NC_AFDL_AFDR_Generic_GJ from AFDL to AFDR, with 1 connection(s)")

        h("objectvar syn_NC_AFDL_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AFDL_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 1.0
        h("a_AFDL[0].Soma { syn_NC_AFDL_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AFDR[0].Soma { syn_NC_AFDL_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AFDL_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AFDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AFDL_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AFDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AFDL_AIBL_Generic_GJ
        print("Adding electrical projection: NC_AFDL_AIBL_Generic_GJ from AFDL to AIBL, with 1 connection(s)")

        h("objectvar syn_NC_AFDL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AFDL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0
        h("a_AFDL[0].Soma { syn_NC_AFDL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_AFDL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AFDL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AFDL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AFDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AFDR_AFDL_Generic_GJ
        print("Adding electrical projection: NC_AFDR_AFDL_Generic_GJ from AFDR to AFDL, with 1 connection(s)")

        h("objectvar syn_NC_AFDR_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AFDR_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma], weight: 1.0
        h("a_AFDR[0].Soma { syn_NC_AFDR_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AFDL[0].Soma { syn_NC_AFDR_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AFDR_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AFDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AFDR_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AFDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AFDR_AIBR_Generic_GJ
        print("Adding electrical projection: NC_AFDR_AIBR_Generic_GJ from AFDR to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_AFDR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AFDR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0
        h("a_AFDR[0].Soma { syn_NC_AFDR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_AFDR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AFDR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AFDR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AFDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAL_AIAR_Generic_GJ
        print("Adding electrical projection: NC_AIAL_AIAR_Generic_GJ from AIAL to AIAR, with 1 connection(s)")

        h("objectvar syn_NC_AIAL_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAL_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 1.0
        h("a_AIAL[0].Soma { syn_NC_AIAL_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAR[0].Soma { syn_NC_AIAL_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIAL_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAL_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAL_ASIL_Generic_GJ
        print("Adding electrical projection: NC_AIAL_ASIL_Generic_GJ from AIAL to ASIL, with 1 connection(s)")

        h("objectvar syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma], weight: 2.0
        h("a_AIAL[0].Soma { syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASIL[0].Soma { syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAL[0].Soma { syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_ASIL[0].Soma { syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASIL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAL_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAL_AWAL_Generic_GJ
        print("Adding electrical projection: NC_AIAL_AWAL_Generic_GJ from AIAL to AWAL, with 1 connection(s)")

        h("objectvar syn_NC_AIAL_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAL_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma], weight: 1.0
        h("a_AIAL[0].Soma { syn_NC_AIAL_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWAL[0].Soma { syn_NC_AIAL_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIAL_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAL_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAR_ADFR_Generic_GJ
        print("Adding electrical projection: NC_AIAR_ADFR_Generic_GJ from AIAR to ADFR, with 1 connection(s)")

        h("objectvar syn_NC_AIAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADFR[0].Soma], weight: 1.0
        h("a_AIAR[0].Soma { syn_NC_AIAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADFR[0].Soma { syn_NC_AIAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAR_ADFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAR_AIAL_Generic_GJ
        print("Adding electrical projection: NC_AIAR_AIAL_Generic_GJ from AIAR to AIAL, with 1 connection(s)")

        h("objectvar syn_NC_AIAR_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAR_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 1.0
        h("a_AIAR[0].Soma { syn_NC_AIAR_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAL[0].Soma { syn_NC_AIAR_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIAR_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAR_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAR_ASIR_Generic_GJ
        print("Adding electrical projection: NC_AIAR_ASIR_Generic_GJ from AIAR to ASIR, with 1 connection(s)")

        h("objectvar syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma], weight: 2.0
        h("a_AIAR[0].Soma { syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASIR[0].Soma { syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAR[0].Soma { syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_ASIR[0].Soma { syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASIR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAR_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIAR_AWAR_Generic_GJ
        print("Adding electrical projection: NC_AIAR_AWAR_Generic_GJ from AIAR to AWAR, with 1 connection(s)")

        h("objectvar syn_NC_AIAR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIAR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0
        h("a_AIAR[0].Soma { syn_NC_AIAR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWAR[0].Soma { syn_NC_AIAR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIAR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIAR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBL_AFDL_Generic_GJ
        print("Adding electrical projection: NC_AIBL_AFDL_Generic_GJ from AIBL to AFDL, with 1 connection(s)")

        h("objectvar syn_NC_AIBL_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBL_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDL[0].Soma], weight: 1.0
        h("a_AIBL[0].Soma { syn_NC_AIBL_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AFDL[0].Soma { syn_NC_AIBL_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBL_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AFDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBL_AFDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBL_DVC_Generic_GJ
        print("Adding electrical projection: NC_AIBL_DVC_Generic_GJ from AIBL to DVC, with 1 connection(s)")

        h("objectvar syn_NC_AIBL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0
        h("a_AIBL[0].Soma { syn_NC_AIBL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_AIBL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBL_PVT_Generic_GJ
        print("Adding electrical projection: NC_AIBL_PVT_Generic_GJ from AIBL to PVT, with 1 connection(s)")

        h("objectvar syn_NC_AIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0
        h("a_AIBL[0].Soma { syn_NC_AIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_AIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVT[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBL_RIGR_Generic_GJ
        print("Adding electrical projection: NC_AIBL_RIGR_Generic_GJ from AIBL to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 3.0
        h("a_AIBL[0].Soma { syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIGR[0].Soma { syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBL_RIMR_Generic_GJ
        print("Adding electrical projection: NC_AIBL_RIMR_Generic_GJ from AIBL to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0
        h("a_AIBL[0].Soma { syn_NC_AIBL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_AIBL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBL_RIVL_Generic_GJ
        print("Adding electrical projection: NC_AIBL_RIVL_Generic_GJ from AIBL to RIVL, with 1 connection(s)")

        h("objectvar syn_NC_AIBL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 1.0
        h("a_AIBL[0].Soma { syn_NC_AIBL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVL[0].Soma { syn_NC_AIBL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_AFDR_Generic_GJ
        print("Adding electrical projection: NC_AIBR_AFDR_Generic_GJ from AIBR to AFDR, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AFDR[0].Soma], weight: 1.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AFDR[0].Soma { syn_NC_AIBR_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBR_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AFDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_AFDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_DB1_Generic_GJ
        print("Adding electrical projection: NC_AIBR_DB1_Generic_GJ from AIBR to DB1, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_AIBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_DVC_Generic_GJ
        print("Adding electrical projection: NC_AIBR_DVC_Generic_GJ from AIBR to DVC, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 2.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DVC[0].Soma { syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_PVT_Generic_GJ
        print("Adding electrical projection: NC_AIBR_PVT_Generic_GJ from AIBR to PVT, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_AIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVT[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_RIGL_Generic_GJ
        print("Adding electrical projection: NC_AIBR_RIGL_Generic_GJ from AIBR to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 3.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIGL[0].Soma { syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_RIML_Generic_GJ
        print("Adding electrical projection: NC_AIBR_RIML_Generic_GJ from AIBR to RIML, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 1.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_AIBR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_RIS_Generic_GJ
        print("Adding electrical projection: NC_AIBR_RIS_Generic_GJ from AIBR to RIS, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_AIBR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIBR_RIVR_Generic_GJ
        print("Adding electrical projection: NC_AIBR_RIVR_Generic_GJ from AIBR to RIVR, with 1 connection(s)")

        h("objectvar syn_NC_AIBR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIBR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 1.0
        h("a_AIBR[0].Soma { syn_NC_AIBR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_AIBR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIBR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIBR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIML_SIBDR_Generic_GJ
        print("Adding electrical projection: NC_AIML_SIBDR_Generic_GJ from AIML to SIBDR, with 1 connection(s)")

        h("objectvar syn_NC_AIML_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIML_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 1.0
        h("a_AIML[0].Soma { syn_NC_AIML_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBDR[0].Soma { syn_NC_AIML_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIML_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIML_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINL_ADEL_Generic_GJ
        print("Adding electrical projection: NC_AINL_ADEL_Generic_GJ from AINL to ADEL, with 1 connection(s)")

        h("objectvar syn_NC_AINL_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINL_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 1.0
        h("a_AINL[0].Soma { syn_NC_AINL_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADEL[0].Soma { syn_NC_AINL_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AINL_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINL_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINL_AINR_Generic_GJ
        print("Adding electrical projection: NC_AINL_AINR_Generic_GJ from AINL to AINR, with 1 connection(s)")

        h("objectvar syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma], weight: 2.0
        h("a_AINL[0].Soma { syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINR[0].Soma { syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINL[0].Soma { syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AINR[0].Soma { syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINL_ASGR_Generic_GJ
        print("Adding electrical projection: NC_AINL_ASGR_Generic_GJ from AINL to ASGR, with 1 connection(s)")

        h("objectvar syn_NC_AINL_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINL_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0
        h("a_AINL[0].Soma { syn_NC_AINL_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASGR[0].Soma { syn_NC_AINL_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AINL_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINL_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINL_AUAR_Generic_GJ
        print("Adding electrical projection: NC_AINL_AUAR_Generic_GJ from AINL to AUAR, with 1 connection(s)")

        h("objectvar syn_NC_AINL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0
        h("a_AINL[0].Soma { syn_NC_AINL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AUAR[0].Soma { syn_NC_AINL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AINL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AUAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINR_AINL_Generic_GJ
        print("Adding electrical projection: NC_AINR_AINL_Generic_GJ from AINR to AINL, with 1 connection(s)")

        h("objectvar syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma], weight: 2.0
        h("a_AINR[0].Soma { syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINL[0].Soma { syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINR[0].Soma { syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AINL[0].Soma { syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINR_ASGL_Generic_GJ
        print("Adding electrical projection: NC_AINR_ASGL_Generic_GJ from AINR to ASGL, with 1 connection(s)")

        h("objectvar syn_NC_AINR_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINR_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma], weight: 1.0
        h("a_AINR[0].Soma { syn_NC_AINR_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASGL[0].Soma { syn_NC_AINR_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AINR_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINR_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AINR_AUAL_Generic_GJ
        print("Adding electrical projection: NC_AINR_AUAL_Generic_GJ from AINR to AUAL, with 1 connection(s)")

        h("objectvar syn_NC_AINR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AINR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0
        h("a_AINR[0].Soma { syn_NC_AINR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AUAL[0].Soma { syn_NC_AINR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AINR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AUAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AINR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AINR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIYL_AIYR_Generic_GJ
        print("Adding electrical projection: NC_AIYL_AIYR_Generic_GJ from AIYL to AIYR, with 1 connection(s)")

        h("objectvar syn_NC_AIYL_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIYL_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 1.0
        h("a_AIYL[0].Soma { syn_NC_AIYL_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIYR[0].Soma { syn_NC_AIYL_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIYL_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIYR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIYL_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIYL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIYL_RIML_Generic_GJ
        print("Adding electrical projection: NC_AIYL_RIML_Generic_GJ from AIYL to RIML, with 1 connection(s)")

        h("objectvar syn_NC_AIYL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIYL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 1.0
        h("a_AIYL[0].Soma { syn_NC_AIYL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_AIYL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIYL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIYL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIYL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIYR_AIYL_Generic_GJ
        print("Adding electrical projection: NC_AIYR_AIYL_Generic_GJ from AIYR to AIYL, with 1 connection(s)")

        h("objectvar syn_NC_AIYR_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIYR_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 1.0
        h("a_AIYR[0].Soma { syn_NC_AIYR_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIYL[0].Soma { syn_NC_AIYR_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIYR_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIYL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIYR_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIYR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIYR_RIMR_Generic_GJ
        print("Adding electrical projection: NC_AIYR_RIMR_Generic_GJ from AIYR to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_AIYR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIYR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0
        h("a_AIYR[0].Soma { syn_NC_AIYR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_AIYR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIYR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIYR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIYR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZL_AIZR_Generic_GJ
        print("Adding electrical projection: NC_AIZL_AIZR_Generic_GJ from AIZL to AIZR, with 1 connection(s)")

        h("objectvar syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 2.0
        h("a_AIZL[0].Soma { syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZR[0].Soma { syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZL[0].Soma { syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AIZR[0].Soma { syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZL_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZL_ASGL_Generic_GJ
        print("Adding electrical projection: NC_AIZL_ASGL_Generic_GJ from AIZL to ASGL, with 1 connection(s)")

        h("objectvar syn_NC_AIZL_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZL_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma], weight: 1.0
        h("a_AIZL[0].Soma { syn_NC_AIZL_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASGL[0].Soma { syn_NC_AIZL_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIZL_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZL_ASGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZL_ASHL_Generic_GJ
        print("Adding electrical projection: NC_AIZL_ASHL_Generic_GJ from AIZL to ASHL, with 1 connection(s)")

        h("objectvar syn_NC_AIZL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0
        h("a_AIZL[0].Soma { syn_NC_AIZL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHL[0].Soma { syn_NC_AIZL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIZL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZR_AIZL_Generic_GJ
        print("Adding electrical projection: NC_AIZR_AIZL_Generic_GJ from AIZR to AIZL, with 1 connection(s)")

        h("objectvar syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 2.0
        h("a_AIZR[0].Soma { syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZL[0].Soma { syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZR[0].Soma { syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AIZL[0].Soma { syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZR_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZR_ASGR_Generic_GJ
        print("Adding electrical projection: NC_AIZR_ASGR_Generic_GJ from AIZR to ASGR, with 1 connection(s)")

        h("objectvar syn_NC_AIZR_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZR_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma], weight: 1.0
        h("a_AIZR[0].Soma { syn_NC_AIZR_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASGR[0].Soma { syn_NC_AIZR_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIZR_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZR_ASGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZR_ASHR_Generic_GJ
        print("Adding electrical projection: NC_AIZR_ASHR_Generic_GJ from AIZR to ASHR, with 1 connection(s)")

        h("objectvar syn_NC_AIZR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0
        h("a_AIZR[0].Soma { syn_NC_AIZR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_AIZR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIZR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AIZR_AWAR_Generic_GJ
        print("Adding electrical projection: NC_AIZR_AWAR_Generic_GJ from AIZR to AWAR, with 1 connection(s)")

        h("objectvar syn_NC_AIZR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AIZR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0
        h("a_AIZR[0].Soma { syn_NC_AIZR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWAR[0].Soma { syn_NC_AIZR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AIZR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AIZR_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AIZR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ALA_RID_Generic_GJ
        print("Adding electrical projection: NC_ALA_RID_Generic_GJ from ALA to RID, with 1 connection(s)")

        h("objectvar syn_NC_ALA_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ALA_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0
        h("a_ALA[0].Soma { syn_NC_ALA_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_ALA_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ALA_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RID[0].Soma.v(0.5)")
        h("setpointer syn_NC_ALA_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ALA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ALML_AVM_Generic_GJ
        print("Adding electrical projection: NC_ALML_AVM_Generic_GJ from ALML to AVM, with 1 connection(s)")

        h("objectvar syn_NC_ALML_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ALML_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma], weight: 1.0
        h("a_ALML[0].Soma { syn_NC_ALML_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVM[0].Soma { syn_NC_ALML_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ALML_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVM[0].Soma.v(0.5)")
        h("setpointer syn_NC_ALML_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ALML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ALML_PVR_Generic_GJ
        print("Adding electrical projection: NC_ALML_PVR_Generic_GJ from ALML to PVR, with 1 connection(s)")

        h("objectvar syn_NC_ALML_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ALML_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0
        h("a_ALML[0].Soma { syn_NC_ALML_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_ALML_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ALML_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ALML_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ALML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ALMR_AVM_Generic_GJ
        print("Adding electrical projection: NC_ALMR_AVM_Generic_GJ from ALMR to AVM, with 1 connection(s)")

        h("objectvar syn_NC_ALMR_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ALMR_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma], weight: 1.0
        h("a_ALMR[0].Soma { syn_NC_ALMR_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVM[0].Soma { syn_NC_ALMR_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ALMR_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVM[0].Soma.v(0.5)")
        h("setpointer syn_NC_ALMR_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ALMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ALNL_SMBDR_Generic_GJ
        print("Adding electrical projection: NC_ALNL_SMBDR_Generic_GJ from ALNL to SMBDR, with 1 connection(s)")

        h("objectvar syn_NC_ALNL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ALNL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0
        h("a_ALNL[0].Soma { syn_NC_ALNL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDR[0].Soma { syn_NC_ALNL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ALNL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ALNL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ALNL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_AVBL_Generic_GJ
        print("Adding electrical projection: NC_AQR_AVBL_Generic_GJ from AQR to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_AQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_AQR[0].Soma { syn_NC_AQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_AVKL_Generic_GJ
        print("Adding electrical projection: NC_AQR_AVKL_Generic_GJ from AQR to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 2.0
        h("a_AQR[0].Soma { syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVKL[0].Soma { syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_AVKR_Generic_GJ
        print("Adding electrical projection: NC_AQR_AVKR_Generic_GJ from AQR to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_AQR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0
        h("a_AQR[0].Soma { syn_NC_AQR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_AQR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AQR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_PVPL_Generic_GJ
        print("Adding electrical projection: NC_AQR_PVPL_Generic_GJ from AQR to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 7.0
        h("a_AQR[0].Soma { syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_PVPL[0].Soma { syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_PVPR_Generic_GJ
        print("Adding electrical projection: NC_AQR_PVPR_Generic_GJ from AQR to PVPR, with 1 connection(s)")

        h("objectvar syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 9.0
        h("a_AQR[0].Soma { syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 9.0 }")
        h("a_PVPR[0].Soma { syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 9.0 }")
        h("setpointer syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_RIGL_Generic_GJ
        print("Adding electrical projection: NC_AQR_RIGL_Generic_GJ from AQR to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 2.0
        h("a_AQR[0].Soma { syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIGL[0].Soma { syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AQR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_AQR_RIGR_Generic_GJ from AQR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_AQR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AQR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_AQR[0].Soma { syn_NC_AQR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_AQR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AQR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AQR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS1_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS1_AVAL_Generic_GJ from AS1 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0
        h("a_AS1[0].Soma { syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS1[0].Soma { syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAL[0].Soma { syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS1_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS1_AVAR_Generic_GJ from AS1 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_AS1[0].Soma { syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS1[0].Soma { syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS1_VA3_Generic_GJ
        print("Adding electrical projection: NC_AS1_VA3_Generic_GJ from AS1 to VA3, with 1 connection(s)")

        h("objectvar syn_NC_AS1_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS1_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 1.0
        h("a_AS1[0].Soma { syn_NC_AS1_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA3[0].Soma { syn_NC_AS1_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS1_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS1_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS1_VD2_Generic_GJ
        print("Adding electrical projection: NC_AS1_VD2_Generic_GJ from AS1 to VD2, with 1 connection(s)")

        h("objectvar syn_NC_AS1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 1.0
        h("a_AS1[0].Soma { syn_NC_AS1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_AS1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS10_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS10_AVAL_Generic_GJ from AS10 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_AS10[0].Soma { syn_NC_AS10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS10_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS10_AVAR_Generic_GJ from AS10 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_AS10[0].Soma { syn_NC_AS10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS11_PDB_Generic_GJ
        print("Adding electrical projection: NC_AS11_PDB_Generic_GJ from AS11 to PDB, with 1 connection(s)")

        h("objectvar syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDB[0].Soma], weight: 2.0
        h("a_AS11[0].Soma { syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDB[0].Soma { syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS11[0].Soma { syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PDB[0].Soma { syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDB[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS11_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS11[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS2_DA2_Generic_GJ
        print("Adding electrical projection: NC_AS2_DA2_Generic_GJ from AS2 to DA2, with 1 connection(s)")

        h("objectvar syn_NC_AS2_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS2_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0
        h("a_AS2[0].Soma { syn_NC_AS2_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_AS2_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS2_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS2_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS2_VA4_Generic_GJ
        print("Adding electrical projection: NC_AS2_VA4_Generic_GJ from AS2 to VA4, with 1 connection(s)")

        h("objectvar syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 2.0
        h("a_AS2[0].Soma { syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS2[0].Soma { syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA4[0].Soma { syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS2_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS3_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS3_AVAL_Generic_GJ from AS3 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_AS3[0].Soma { syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS3[0].Soma { syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS3_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS3_AVAR_Generic_GJ from AS3 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_AS3[0].Soma { syn_NC_AS3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS3_DA2_Generic_GJ
        print("Adding electrical projection: NC_AS3_DA2_Generic_GJ from AS3 to DA2, with 1 connection(s)")

        h("objectvar syn_NC_AS3_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS3_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0
        h("a_AS3[0].Soma { syn_NC_AS3_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_AS3_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS3_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS3_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS3_VA5_Generic_GJ
        print("Adding electrical projection: NC_AS3_VA5_Generic_GJ from AS3 to VA5, with 1 connection(s)")

        h("objectvar syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 2.0
        h("a_AS3[0].Soma { syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS3[0].Soma { syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA5[0].Soma { syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS3_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS4_DA3_Generic_GJ
        print("Adding electrical projection: NC_AS4_DA3_Generic_GJ from AS4 to DA3, with 1 connection(s)")

        h("objectvar syn_NC_AS4_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS4_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 1.0
        h("a_AS4[0].Soma { syn_NC_AS4_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA3[0].Soma { syn_NC_AS4_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS4_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS4_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS5_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS5_AVAL_Generic_GJ from AS5 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_AS5[0].Soma { syn_NC_AS5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS5_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS5_AVAR_Generic_GJ from AS5 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_AS5[0].Soma { syn_NC_AS5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS5_VA7_Generic_GJ
        print("Adding electrical projection: NC_AS5_VA7_Generic_GJ from AS5 to VA7, with 1 connection(s)")

        h("objectvar syn_NC_AS5_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS5_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma], weight: 1.0
        h("a_AS5[0].Soma { syn_NC_AS5_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA7[0].Soma { syn_NC_AS5_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS5_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS5_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS6_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS6_AVAL_Generic_GJ from AS6 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_AS6[0].Soma { syn_NC_AS6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS6_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS6_AVAR_Generic_GJ from AS6 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_AS6[0].Soma { syn_NC_AS6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS6_AVBR_Generic_GJ
        print("Adding electrical projection: NC_AS6_AVBR_Generic_GJ from AS6 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_AS6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_AS6[0].Soma { syn_NC_AS6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AS6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS6_DA5_Generic_GJ
        print("Adding electrical projection: NC_AS6_DA5_Generic_GJ from AS6 to DA5, with 1 connection(s)")

        h("objectvar syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 2.0
        h("a_AS6[0].Soma { syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS6[0].Soma { syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA5[0].Soma { syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS6_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS6_VA8_Generic_GJ
        print("Adding electrical projection: NC_AS6_VA8_Generic_GJ from AS6 to VA8, with 1 connection(s)")

        h("objectvar syn_NC_AS6_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS6_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 1.0
        h("a_AS6[0].Soma { syn_NC_AS6_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_AS6_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS6_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS6_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS7_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS7_AVAL_Generic_GJ from AS7 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 6.0
        h("a_AS7[0].Soma { syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_AVAL[0].Soma { syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS7_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS7_AVAR_Generic_GJ from AS7 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 5.0
        h("a_AS7[0].Soma { syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAR[0].Soma { syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS7_AVBL_Generic_GJ
        print("Adding electrical projection: NC_AS7_AVBL_Generic_GJ from AS7 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0
        h("a_AS7[0].Soma { syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBL[0].Soma { syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS7_AVBR_Generic_GJ
        print("Adding electrical projection: NC_AS7_AVBR_Generic_GJ from AS7 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0
        h("a_AS7[0].Soma { syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBR[0].Soma { syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS8_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS8_AVAL_Generic_GJ from AS8 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 4.0
        h("a_AS8[0].Soma { syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS8[0].Soma { syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAL[0].Soma { syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS8_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS8_AVAR_Generic_GJ from AS8 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0
        h("a_AS8[0].Soma { syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS8[0].Soma { syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAR[0].Soma { syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS9_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AS9_AVAL_Generic_GJ from AS9 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 4.0
        h("a_AS9[0].Soma { syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS9[0].Soma { syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAL[0].Soma { syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS9_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AS9_AVAR_Generic_GJ from AS9 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AS9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_AS9[0].Soma { syn_NC_AS9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AS9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AS9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AS9_DVB_Generic_GJ
        print("Adding electrical projection: NC_AS9_DVB_Generic_GJ from AS9 to DVB, with 1 connection(s)")

        h("objectvar syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma], weight: 7.0
        h("a_AS9[0].Soma { syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVB[0].Soma { syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS9[0].Soma { syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_DVB[0].Soma { syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVB[0].Soma.v(0.5)")
        h("setpointer syn_NC_AS9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AS9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASGL_AINR_Generic_GJ
        print("Adding electrical projection: NC_ASGL_AINR_Generic_GJ from ASGL to AINR, with 1 connection(s)")

        h("objectvar syn_NC_ASGL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASGL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma], weight: 1.0
        h("a_ASGL[0].Soma { syn_NC_ASGL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINR[0].Soma { syn_NC_ASGL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASGL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASGL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASGL_AIZL_Generic_GJ
        print("Adding electrical projection: NC_ASGL_AIZL_Generic_GJ from ASGL to AIZL, with 1 connection(s)")

        h("objectvar syn_NC_ASGL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASGL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 1.0
        h("a_ASGL[0].Soma { syn_NC_ASGL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZL[0].Soma { syn_NC_ASGL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASGL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASGL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASGR_AINL_Generic_GJ
        print("Adding electrical projection: NC_ASGR_AINL_Generic_GJ from ASGR to AINL, with 1 connection(s)")

        h("objectvar syn_NC_ASGR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASGR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma], weight: 1.0
        h("a_ASGR[0].Soma { syn_NC_ASGR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINL[0].Soma { syn_NC_ASGR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASGR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASGR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASGR_AIZR_Generic_GJ
        print("Adding electrical projection: NC_ASGR_AIZR_Generic_GJ from ASGR to AIZR, with 1 connection(s)")

        h("objectvar syn_NC_ASGR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASGR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0
        h("a_ASGR[0].Soma { syn_NC_ASGR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZR[0].Soma { syn_NC_ASGR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASGR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASGR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHL_ADAL_Generic_GJ
        print("Adding electrical projection: NC_ASHL_ADAL_Generic_GJ from ASHL to ADAL, with 1 connection(s)")

        h("objectvar syn_NC_ASHL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0
        h("a_ASHL[0].Soma { syn_NC_ASHL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAL[0].Soma { syn_NC_ASHL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHL_AIZL_Generic_GJ
        print("Adding electrical projection: NC_ASHL_AIZL_Generic_GJ from ASHL to AIZL, with 1 connection(s)")

        h("objectvar syn_NC_ASHL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZL[0].Soma], weight: 1.0
        h("a_ASHL[0].Soma { syn_NC_ASHL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZL[0].Soma { syn_NC_ASHL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHL_AIZL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHL_ASHR_Generic_GJ
        print("Adding electrical projection: NC_ASHL_ASHR_Generic_GJ from ASHL to ASHR, with 1 connection(s)")

        h("objectvar syn_NC_ASHL_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHL_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0
        h("a_ASHL[0].Soma { syn_NC_ASHL_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_ASHL_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHL_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHL_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHL_RICL_Generic_GJ
        print("Adding electrical projection: NC_ASHL_RICL_Generic_GJ from ASHL to RICL, with 1 connection(s)")

        h("objectvar syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 2.0
        h("a_ASHL[0].Soma { syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICL[0].Soma { syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHL[0].Soma { syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RICL[0].Soma { syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RICL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHL_RMGL_Generic_GJ
        print("Adding electrical projection: NC_ASHL_RMGL_Generic_GJ from ASHL to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_ASHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0
        h("a_ASHL[0].Soma { syn_NC_ASHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_ASHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHR_ADAR_Generic_GJ
        print("Adding electrical projection: NC_ASHR_ADAR_Generic_GJ from ASHR to ADAR, with 1 connection(s)")

        h("objectvar syn_NC_ASHR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0
        h("a_ASHR[0].Soma { syn_NC_ASHR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAR[0].Soma { syn_NC_ASHR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHR_AIZR_Generic_GJ
        print("Adding electrical projection: NC_ASHR_AIZR_Generic_GJ from ASHR to AIZR, with 1 connection(s)")

        h("objectvar syn_NC_ASHR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0
        h("a_ASHR[0].Soma { syn_NC_ASHR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZR[0].Soma { syn_NC_ASHR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHR_ASHL_Generic_GJ
        print("Adding electrical projection: NC_ASHR_ASHL_Generic_GJ from ASHR to ASHL, with 1 connection(s)")

        h("objectvar syn_NC_ASHR_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHR_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0
        h("a_ASHR[0].Soma { syn_NC_ASHR_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHL[0].Soma { syn_NC_ASHR_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHR_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHR_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHR_ASKR_Generic_GJ
        print("Adding electrical projection: NC_ASHR_ASKR_Generic_GJ from ASHR to ASKR, with 1 connection(s)")

        h("objectvar syn_NC_ASHR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 1.0
        h("a_ASHR[0].Soma { syn_NC_ASHR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKR[0].Soma { syn_NC_ASHR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHR_RICR_Generic_GJ
        print("Adding electrical projection: NC_ASHR_RICR_Generic_GJ from ASHR to RICR, with 1 connection(s)")

        h("objectvar syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 2.0
        h("a_ASHR[0].Soma { syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICR[0].Soma { syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RICR[0].Soma { syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RICR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHR_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASHR_RMGR_Generic_GJ
        print("Adding electrical projection: NC_ASHR_RMGR_Generic_GJ from ASHR to RMGR, with 1 connection(s)")

        h("objectvar syn_NC_ASHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0
        h("a_ASHR[0].Soma { syn_NC_ASHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGR[0].Soma { syn_NC_ASHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASIL_AIAL_Generic_GJ
        print("Adding electrical projection: NC_ASIL_AIAL_Generic_GJ from ASIL to AIAL, with 1 connection(s)")

        h("objectvar syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 2.0
        h("a_ASIL[0].Soma { syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAL[0].Soma { syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASIL[0].Soma { syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AIAL[0].Soma { syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASIL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASIL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASIL_ASIR_Generic_GJ
        print("Adding electrical projection: NC_ASIL_ASIR_Generic_GJ from ASIL to ASIR, with 1 connection(s)")

        h("objectvar syn_NC_ASIL_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASIL_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma], weight: 1.0
        h("a_ASIL[0].Soma { syn_NC_ASIL_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASIR[0].Soma { syn_NC_ASIL_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASIL_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASIR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASIL_ASIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASIL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASIR_AIAR_Generic_GJ
        print("Adding electrical projection: NC_ASIR_AIAR_Generic_GJ from ASIR to AIAR, with 1 connection(s)")

        h("objectvar syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 2.0
        h("a_ASIR[0].Soma { syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAR[0].Soma { syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASIR[0].Soma { syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AIAR[0].Soma { syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASIR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASIR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASIR_ASIL_Generic_GJ
        print("Adding electrical projection: NC_ASIR_ASIL_Generic_GJ from ASIR to ASIL, with 1 connection(s)")

        h("objectvar syn_NC_ASIR_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASIR_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASIL[0].Soma], weight: 1.0
        h("a_ASIR[0].Soma { syn_NC_ASIR_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASIL[0].Soma { syn_NC_ASIR_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASIR_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASIL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASIR_ASIL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASIR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASJL_ASJR_Generic_GJ
        print("Adding electrical projection: NC_ASJL_ASJR_Generic_GJ from ASJL to ASJR, with 1 connection(s)")

        h("objectvar syn_NC_ASJL_ASJR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASJL_ASJR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma], weight: 1.0
        h("a_ASJL[0].Soma { syn_NC_ASJL_ASJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASJR[0].Soma { syn_NC_ASJL_ASJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASJL_ASJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASJR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASJL_ASJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASJR_ASJL_Generic_GJ
        print("Adding electrical projection: NC_ASJR_ASJL_Generic_GJ from ASJR to ASJL, with 1 connection(s)")

        h("objectvar syn_NC_ASJR_ASJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASJR_ASJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASJL[0].Soma], weight: 1.0
        h("a_ASJR[0].Soma { syn_NC_ASJR_ASJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASJL[0].Soma { syn_NC_ASJR_ASJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASJR_ASJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASJR_ASJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASJR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKL_ASKR_Generic_GJ
        print("Adding electrical projection: NC_ASKL_ASKR_Generic_GJ from ASKL to ASKR, with 1 connection(s)")

        h("objectvar syn_NC_ASKL_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKL_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 1.0
        h("a_ASKL[0].Soma { syn_NC_ASKL_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKR[0].Soma { syn_NC_ASKL_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASKL_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKL_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKL_PVQL_Generic_GJ
        print("Adding electrical projection: NC_ASKL_PVQL_Generic_GJ from ASKL to PVQL, with 1 connection(s)")

        h("objectvar syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 5.0
        h("a_ASKL[0].Soma { syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQL[0].Soma { syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKL[0].Soma { syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_PVQL[0].Soma { syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKL_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKL_RMGL_Generic_GJ
        print("Adding electrical projection: NC_ASKL_RMGL_Generic_GJ from ASKL to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_ASKL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0
        h("a_ASKL[0].Soma { syn_NC_ASKL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_ASKL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASKL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKR_ASHR_Generic_GJ
        print("Adding electrical projection: NC_ASKR_ASHR_Generic_GJ from ASKR to ASHR, with 1 connection(s)")

        h("objectvar syn_NC_ASKR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0
        h("a_ASKR[0].Soma { syn_NC_ASKR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_ASKR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASKR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKR_ASKL_Generic_GJ
        print("Adding electrical projection: NC_ASKR_ASKL_Generic_GJ from ASKR to ASKL, with 1 connection(s)")

        h("objectvar syn_NC_ASKR_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKR_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 1.0
        h("a_ASKR[0].Soma { syn_NC_ASKR_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKL[0].Soma { syn_NC_ASKR_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASKR_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKR_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKR_PVQR_Generic_GJ
        print("Adding electrical projection: NC_ASKR_PVQR_Generic_GJ from ASKR to PVQR, with 1 connection(s)")

        h("objectvar syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 4.0
        h("a_ASKR[0].Soma { syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKR[0].Soma { syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_PVQR[0].Soma { syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKR_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_ASKR_RMGR_Generic_GJ
        print("Adding electrical projection: NC_ASKR_RMGR_Generic_GJ from ASKR to RMGR, with 1 connection(s)")

        h("objectvar syn_NC_ASKR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_ASKR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0
        h("a_ASKR[0].Soma { syn_NC_ASKR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGR[0].Soma { syn_NC_ASKR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_ASKR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_ASKR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_ASKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AUAL_AINR_Generic_GJ
        print("Adding electrical projection: NC_AUAL_AINR_Generic_GJ from AUAL to AINR, with 1 connection(s)")

        h("objectvar syn_NC_AUAL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AUAL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINR[0].Soma], weight: 1.0
        h("a_AUAL[0].Soma { syn_NC_AUAL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINR[0].Soma { syn_NC_AUAL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AUAL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AUAL_AINR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AUAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AUAL_AUAR_Generic_GJ
        print("Adding electrical projection: NC_AUAL_AUAR_Generic_GJ from AUAL to AUAR, with 1 connection(s)")

        h("objectvar syn_NC_AUAL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AUAL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0
        h("a_AUAL[0].Soma { syn_NC_AUAL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AUAR[0].Soma { syn_NC_AUAL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AUAL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AUAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AUAL_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AUAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AUAL_AWBL_Generic_GJ
        print("Adding electrical projection: NC_AUAL_AWBL_Generic_GJ from AUAL to AWBL, with 1 connection(s)")

        h("objectvar syn_NC_AUAL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AUAL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 1.0
        h("a_AUAL[0].Soma { syn_NC_AUAL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBL[0].Soma { syn_NC_AUAL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AUAL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AUAL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AUAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AUAR_AINL_Generic_GJ
        print("Adding electrical projection: NC_AUAR_AINL_Generic_GJ from AUAR to AINL, with 1 connection(s)")

        h("objectvar syn_NC_AUAR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AUAR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AINL[0].Soma], weight: 1.0
        h("a_AUAR[0].Soma { syn_NC_AUAR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AINL[0].Soma { syn_NC_AUAR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AUAR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AINL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AUAR_AINL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AUAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AUAR_AUAL_Generic_GJ
        print("Adding electrical projection: NC_AUAR_AUAL_Generic_GJ from AUAR to AUAL, with 1 connection(s)")

        h("objectvar syn_NC_AUAR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AUAR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0
        h("a_AUAR[0].Soma { syn_NC_AUAR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AUAL[0].Soma { syn_NC_AUAR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AUAR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AUAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AUAR_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AUAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AUAR_AWBR_Generic_GJ
        print("Adding electrical projection: NC_AUAR_AWBR_Generic_GJ from AUAR to AWBR, with 1 connection(s)")

        h("objectvar syn_NC_AUAR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AUAR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0
        h("a_AUAR[0].Soma { syn_NC_AUAR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBR[0].Soma { syn_NC_AUAR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AUAR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AUAR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AUAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS1_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS1_Generic_GJ from AVAL to AS1, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 3.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS1[0].Soma { syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AS1[0].Soma { syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS10_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS10_Generic_GJ from AVAL to AS10, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS10[0].Soma { syn_NC_AVAL_AS10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_AS10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS3_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS3_Generic_GJ from AVAL to AS3, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS3[0].Soma { syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS3[0].Soma { syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS5_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS5_Generic_GJ from AVAL to AS5, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS5[0].Soma { syn_NC_AVAL_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS6_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS6_Generic_GJ from AVAL to AS6, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS6[0].Soma { syn_NC_AVAL_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS7_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS7_Generic_GJ from AVAL to AS7, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 6.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_AS7[0].Soma { syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS8_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS8_Generic_GJ from AVAL to AS8, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS8[0].Soma], weight: 4.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS8[0].Soma { syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AS8[0].Soma { syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AS9_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AS9_Generic_GJ from AVAL to AS9, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma], weight: 4.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS9[0].Soma { syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AS9[0].Soma { syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AVAR_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AVAR_Generic_GJ from AVAL to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 5.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAR[0].Soma { syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_AVJL_Generic_GJ
        print("Adding electrical projection: NC_AVAL_AVJL_Generic_GJ from AVAL to AVJL, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVJL[0].Soma { syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DA1_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DA1_Generic_GJ from AVAL to DA1, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA1[0].Soma { syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DA2_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DA2_Generic_GJ from AVAL to DA2, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA2[0].Soma { syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DA4_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DA4_Generic_GJ from AVAL to DA4, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 3.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_DA4[0].Soma { syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DA5_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DA5_Generic_GJ from AVAL to DA5, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_AVAL_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DA6_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DA6_Generic_GJ from AVAL to DA6, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 10.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA6[0].Soma { syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 10.0 }")
        h("a_DA6[0].Soma { syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 10.0 }")
        h("setpointer syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DA7_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DA7_Generic_GJ from AVAL to DA7, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA7[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA7[0].Soma { syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA7[0].Soma { syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_DB6_Generic_GJ
        print("Adding electrical projection: NC_AVAL_DB6_Generic_GJ from AVAL to DB6, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 3.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB6[0].Soma { syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_DB6[0].Soma { syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_FLPL_Generic_GJ
        print("Adding electrical projection: NC_AVAL_FLPL_Generic_GJ from AVAL to FLPL, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPL[0].Soma { syn_NC_AVAL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_LUAL_Generic_GJ
        print("Adding electrical projection: NC_AVAL_LUAL_Generic_GJ from AVAL to LUAL, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_LUAL[0].Soma { syn_NC_AVAL_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_LUAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_PVCL_Generic_GJ
        print("Adding electrical projection: NC_AVAL_PVCL_Generic_GJ from AVAL to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVCL[0].Soma { syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_PVCR_Generic_GJ
        print("Adding electrical projection: NC_AVAL_PVCR_Generic_GJ from AVAL to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 5.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_PVCR[0].Soma { syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_PVPL_Generic_GJ
        print("Adding electrical projection: NC_AVAL_PVPL_Generic_GJ from AVAL to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_AVAL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_RIMR_Generic_GJ
        print("Adding electrical projection: NC_AVAL_RIMR_Generic_GJ from AVAL to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 3.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIMR[0].Soma { syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_SABD_Generic_GJ
        print("Adding electrical projection: NC_AVAL_SABD_Generic_GJ from AVAL to SABD, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 4.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_SABD[0].Soma { syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABD[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_SABVR_Generic_GJ
        print("Adding electrical projection: NC_AVAL_SABVR_Generic_GJ from AVAL to SABVR, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVR[0].Soma { syn_NC_AVAL_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_SDQR_Generic_GJ
        print("Adding electrical projection: NC_AVAL_SDQR_Generic_GJ from AVAL to SDQR, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_AVAL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_URYDL_Generic_GJ
        print("Adding electrical projection: NC_AVAL_URYDL_Generic_GJ from AVAL to URYDL, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYDL[0].Soma { syn_NC_AVAL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_URYVR_Generic_GJ
        print("Adding electrical projection: NC_AVAL_URYVR_Generic_GJ from AVAL to URYVR, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYVR[0].Soma { syn_NC_AVAL_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA1_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA1_Generic_GJ from AVAL to VA1, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 3.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA1[0].Soma { syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA1[0].Soma { syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA10_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA10_Generic_GJ from AVAL to VA10, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA10[0].Soma { syn_NC_AVAL_VA10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_VA10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA11_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA11_Generic_GJ from AVAL to VA11, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA11[0].Soma { syn_NC_AVAL_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA11[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA2_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA2_Generic_GJ from AVAL to VA2, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 4.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VA2[0].Soma { syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA3_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA3_Generic_GJ from AVAL to VA3, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA3[0].Soma { syn_NC_AVAL_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA4_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA4_Generic_GJ from AVAL to VA4, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_AVAL_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA5_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA5_Generic_GJ from AVAL to VA5, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 5.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_VA5[0].Soma { syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA6_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA6_Generic_GJ from AVAL to VA6, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 6.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA6[0].Soma { syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_VA6[0].Soma { syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA7_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA7_Generic_GJ from AVAL to VA7, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma], weight: 2.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA7[0].Soma { syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA7[0].Soma { syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA8_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA8_Generic_GJ from AVAL to VA8, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 10.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 10.0 }")
        h("a_VA8[0].Soma { syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 10.0 }")
        h("setpointer syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VA9_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VA9_Generic_GJ from AVAL to VA9, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_AVAL_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAL_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAL_VB9_Generic_GJ
        print("Adding electrical projection: NC_AVAL_VB9_Generic_GJ from AVAL to VB9, with 1 connection(s)")

        h("objectvar syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 5.0
        h("a_AVAL[0].Soma { syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_VB9[0].Soma { syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS1_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS1_Generic_GJ from AVAR to AS1, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS1[0].Soma { syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS1[0].Soma { syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS10_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS10_Generic_GJ from AVAR to AS10, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS10[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS10[0].Soma { syn_NC_AVAR_AS10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_AS10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS3_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS3_Generic_GJ from AVAR to AS3, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS3[0].Soma { syn_NC_AVAR_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS5_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS5_Generic_GJ from AVAR to AS5, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS5[0].Soma { syn_NC_AVAR_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS6_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS6_Generic_GJ from AVAR to AS6, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS6[0].Soma { syn_NC_AVAR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS7_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS7_Generic_GJ from AVAR to AS7, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 5.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AS7[0].Soma { syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS8_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS8_Generic_GJ from AVAR to AS8, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS8[0].Soma], weight: 3.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS8[0].Soma { syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AS8[0].Soma { syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AS9_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AS9_Generic_GJ from AVAR to AS9, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS9[0].Soma { syn_NC_AVAR_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AVAR_AVAL_Generic_GJ from AVAR to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAL[0].Soma { syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA1_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA1_Generic_GJ from AVAR to DA1, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 6.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_DA1[0].Soma { syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA2_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA2_Generic_GJ from AVAR to DA2, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA2[0].Soma { syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA3_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA3_Generic_GJ from AVAR to DA3, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA3[0].Soma { syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA3[0].Soma { syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA4_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA4_Generic_GJ from AVAR to DA4, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA4[0].Soma { syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA5_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA5_Generic_GJ from AVAR to DA5, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 5.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_DA5[0].Soma { syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA6_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA6_Generic_GJ from AVAR to DA6, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA6[0].Soma { syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA6[0].Soma { syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DA8_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DA8_Generic_GJ from AVAR to DA8, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA8[0].Soma { syn_NC_AVAR_DA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_DA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_DB5_Generic_GJ
        print("Adding electrical projection: NC_AVAR_DB5_Generic_GJ from AVAR to DB5, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB5[0].Soma { syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DB5[0].Soma { syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_PVCR_Generic_GJ
        print("Adding electrical projection: NC_AVAR_PVCR_Generic_GJ from AVAR to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PVCR[0].Soma { syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_RIML_Generic_GJ
        print("Adding electrical projection: NC_AVAR_RIML_Generic_GJ from AVAR to RIML, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIML[0].Soma { syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_RIMR_Generic_GJ
        print("Adding electrical projection: NC_AVAR_RIMR_Generic_GJ from AVAR to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_AVAR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_SABVL_Generic_GJ
        print("Adding electrical projection: NC_AVAR_SABVL_Generic_GJ from AVAR to SABVL, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 3.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVL[0].Soma { syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_SABVL[0].Soma { syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_SABVR_Generic_GJ
        print("Adding electrical projection: NC_AVAR_SABVR_Generic_GJ from AVAR to SABVR, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVR[0].Soma { syn_NC_AVAR_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_URYDR_Generic_GJ
        print("Adding electrical projection: NC_AVAR_URYDR_Generic_GJ from AVAR to URYDR, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYDR[0].Soma { syn_NC_AVAR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_URYVL_Generic_GJ
        print("Adding electrical projection: NC_AVAR_URYVL_Generic_GJ from AVAR to URYVL, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYVL[0].Soma { syn_NC_AVAR_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA10_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA10_Generic_GJ from AVAR to VA10, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA10[0].Soma { syn_NC_AVAR_VA10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_VA10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA11_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA11_Generic_GJ from AVAR to VA11, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma], weight: 7.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA11[0].Soma { syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_VA11[0].Soma { syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA11[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA12_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA12_Generic_GJ from AVAR to VA12, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA12[0].Soma { syn_NC_AVAR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVAR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA12[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA3_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA3_Generic_GJ from AVAR to VA3, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA3[0].Soma { syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA3[0].Soma { syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA4_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA4_Generic_GJ from AVAR to VA4, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 3.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA4[0].Soma { syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA5_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA5_Generic_GJ from AVAR to VA5, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 3.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA5[0].Soma { syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA6_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA6_Generic_GJ from AVAR to VA6, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma], weight: 2.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA6[0].Soma { syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA6[0].Soma { syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA7_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA7_Generic_GJ from AVAR to VA7, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma], weight: 4.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA7[0].Soma { syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VA7[0].Soma { syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VA8_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VA8_Generic_GJ from AVAR to VA8, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 4.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VA8[0].Soma { syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVAR_VB9_Generic_GJ
        print("Adding electrical projection: NC_AVAR_VB9_Generic_GJ from AVAR to VB9, with 1 connection(s)")

        h("objectvar syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 4.0
        h("a_AVAR[0].Soma { syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VB9[0].Soma { syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVAR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_AQR_Generic_GJ
        print("Adding electrical projection: NC_AVBL_AQR_Generic_GJ from AVBL to AQR, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AVBL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_AS7_Generic_GJ
        print("Adding electrical projection: NC_AVBL_AS7_Generic_GJ from AVBL to AS7, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 2.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS7[0].Soma { syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_AVBR_Generic_GJ
        print("Adding electrical projection: NC_AVBL_AVBR_Generic_GJ from AVBL to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 3.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVBR[0].Soma { syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_DB3_Generic_GJ
        print("Adding electrical projection: NC_AVBL_DB3_Generic_GJ from AVBL to DB3, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB3[0].Soma { syn_NC_AVBL_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_DB4_Generic_GJ
        print("Adding electrical projection: NC_AVBL_DB4_Generic_GJ from AVBL to DB4, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB4[0].Soma { syn_NC_AVBL_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_DB5_Generic_GJ
        print("Adding electrical projection: NC_AVBL_DB5_Generic_GJ from AVBL to DB5, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB5[0].Soma { syn_NC_AVBL_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_DB6_Generic_GJ
        print("Adding electrical projection: NC_AVBL_DB6_Generic_GJ from AVBL to DB6, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 2.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB6[0].Soma { syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DB6[0].Soma { syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_DB7_Generic_GJ
        print("Adding electrical projection: NC_AVBL_DB7_Generic_GJ from AVBL to DB7, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma], weight: 2.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB7[0].Soma { syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DB7[0].Soma { syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_DVA_Generic_GJ
        print("Adding electrical projection: NC_AVBL_DVA_Generic_GJ from AVBL to DVA, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVA[0].Soma { syn_NC_AVBL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVA[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_AVBL_RIBL_Generic_GJ from AVBL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_AVBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_RIBR_Generic_GJ
        print("Adding electrical projection: NC_AVBL_RIBR_Generic_GJ from AVBL to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_AVBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_RID_Generic_GJ
        print("Adding electrical projection: NC_AVBL_RID_Generic_GJ from AVBL to RID, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_AVBL_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RID[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_SDQR_Generic_GJ
        print("Adding electrical projection: NC_AVBL_SDQR_Generic_GJ from AVBL to SDQR, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_AVBL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_SIBVL_Generic_GJ
        print("Adding electrical projection: NC_AVBL_SIBVL_Generic_GJ from AVBL to SIBVL, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVL[0].Soma { syn_NC_AVBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB1_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB1_Generic_GJ from AVBL to VB1, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_AVBL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB10_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB10_Generic_GJ from AVBL to VB10, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 2.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB10[0].Soma { syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB10[0].Soma { syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB11_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB11_Generic_GJ from AVBL to VB11, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma], weight: 2.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB11[0].Soma { syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB11[0].Soma { syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB11[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB2_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB2_Generic_GJ from AVBL to VB2, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 3.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VB2[0].Soma { syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB4_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB4_Generic_GJ from AVBL to VB4, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB4[0].Soma { syn_NC_AVBL_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB5_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB5_Generic_GJ from AVBL to VB5, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB5[0].Soma { syn_NC_AVBL_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB6_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB6_Generic_GJ from AVBL to VB6, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB6[0].Soma { syn_NC_AVBL_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB7_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB7_Generic_GJ from AVBL to VB7, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma], weight: 2.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB7[0].Soma { syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB7[0].Soma { syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB8_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB8_Generic_GJ from AVBL to VB8, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 7.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_VB8[0].Soma { syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBL_VB9_Generic_GJ
        print("Adding electrical projection: NC_AVBL_VB9_Generic_GJ from AVBL to VB9, with 1 connection(s)")

        h("objectvar syn_NC_AVBL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 1.0
        h("a_AVBL[0].Soma { syn_NC_AVBL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_AVBL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_AS6_Generic_GJ
        print("Adding electrical projection: NC_AVBR_AS6_Generic_GJ from AVBR to AS6, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS6[0].Soma { syn_NC_AVBR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_AS7_Generic_GJ
        print("Adding electrical projection: NC_AVBR_AS7_Generic_GJ from AVBR to AS7, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS7[0].Soma], weight: 2.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS7[0].Soma { syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS7[0].Soma { syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_AS7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_AVBL_Generic_GJ
        print("Adding electrical projection: NC_AVBR_AVBL_Generic_GJ from AVBR to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 3.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVBL[0].Soma { syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB1_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB1_Generic_GJ from AVBR to DB1, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 3.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_DB1[0].Soma { syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB2_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB2_Generic_GJ from AVBR to DB2, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB2[0].Soma { syn_NC_AVBR_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB3_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB3_Generic_GJ from AVBR to DB3, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB3[0].Soma { syn_NC_AVBR_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB4_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB4_Generic_GJ from AVBR to DB4, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB4[0].Soma { syn_NC_AVBR_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB5_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB5_Generic_GJ from AVBR to DB5, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB5[0].Soma { syn_NC_AVBR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB6_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB6_Generic_GJ from AVBR to DB6, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB6[0].Soma { syn_NC_AVBR_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DB7_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DB7_Generic_GJ from AVBR to DB7, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB7[0].Soma { syn_NC_AVBR_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DD1_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DD1_Generic_GJ from AVBR to DD1, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD1[0].Soma { syn_NC_AVBR_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_DVA_Generic_GJ
        print("Adding electrical projection: NC_AVBR_DVA_Generic_GJ from AVBR to DVA, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVA[0].Soma { syn_NC_AVBR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVA[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_PVNL_Generic_GJ
        print("Adding electrical projection: NC_AVBR_PVNL_Generic_GJ from AVBR to PVNL, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 2.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVNL[0].Soma { syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVNL[0].Soma { syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVNL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_RIBL_Generic_GJ
        print("Adding electrical projection: NC_AVBR_RIBL_Generic_GJ from AVBR to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_AVBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_AVBR_RIBR_Generic_GJ from AVBR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_AVBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_RID_Generic_GJ
        print("Adding electrical projection: NC_AVBR_RID_Generic_GJ from AVBR to RID, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 2.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RID[0].Soma { syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RID[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_SIBVL_Generic_GJ
        print("Adding electrical projection: NC_AVBR_SIBVL_Generic_GJ from AVBR to SIBVL, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVL[0].Soma { syn_NC_AVBR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VA8_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VA8_Generic_GJ from AVBR to VA8, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_AVBR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VA9_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VA9_Generic_GJ from AVBR to VA9, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_AVBR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB10_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB10_Generic_GJ from AVBR to VB10, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB10[0].Soma { syn_NC_AVBR_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB11_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB11_Generic_GJ from AVBR to VB11, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB11[0].Soma { syn_NC_AVBR_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB11[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB2_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB2_Generic_GJ from AVBR to VB2, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_AVBR_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB3_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB3_Generic_GJ from AVBR to VB3, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB3[0].Soma { syn_NC_AVBR_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB4_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB4_Generic_GJ from AVBR to VB4, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB4[0].Soma { syn_NC_AVBR_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB6_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB6_Generic_GJ from AVBR to VB6, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 2.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB6[0].Soma { syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB6[0].Soma { syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB7_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB7_Generic_GJ from AVBR to VB7, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma], weight: 2.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB7[0].Soma { syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB7[0].Soma { syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB7[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB8_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB8_Generic_GJ from AVBR to VB8, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 3.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VB8[0].Soma { syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB8[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VB9_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VB9_Generic_GJ from AVBR to VB9, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 6.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_VB9[0].Soma { syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVBR_VD10_Generic_GJ
        print("Adding electrical projection: NC_AVBR_VD10_Generic_GJ from AVBR to VD10, with 1 connection(s)")

        h("objectvar syn_NC_AVBR_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVBR_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 1.0
        h("a_AVBR[0].Soma { syn_NC_AVBR_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD10[0].Soma { syn_NC_AVBR_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVBR_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVBR_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDL_ADAR_Generic_GJ
        print("Adding electrical projection: NC_AVDL_ADAR_Generic_GJ from AVDL to ADAR, with 1 connection(s)")

        h("objectvar syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 2.0
        h("a_AVDL[0].Soma { syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAR[0].Soma { syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDL[0].Soma { syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_ADAR[0].Soma { syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDL_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDL_AVM_Generic_GJ
        print("Adding electrical projection: NC_AVDL_AVM_Generic_GJ from AVDL to AVM, with 1 connection(s)")

        h("objectvar syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma], weight: 2.0
        h("a_AVDL[0].Soma { syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVM[0].Soma { syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDL[0].Soma { syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVM[0].Soma { syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVM[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDL_AVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDL_FLPL_Generic_GJ
        print("Adding electrical projection: NC_AVDL_FLPL_Generic_GJ from AVDL to FLPL, with 1 connection(s)")

        h("objectvar syn_NC_AVDL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0
        h("a_AVDL[0].Soma { syn_NC_AVDL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPL[0].Soma { syn_NC_AVDL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVDL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDL_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDL_FLPR_Generic_GJ
        print("Adding electrical projection: NC_AVDL_FLPR_Generic_GJ from AVDL to FLPR, with 1 connection(s)")

        h("objectvar syn_NC_AVDL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma], weight: 1.0
        h("a_AVDL[0].Soma { syn_NC_AVDL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPR[0].Soma { syn_NC_AVDL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVDL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDR_ADAL_Generic_GJ
        print("Adding electrical projection: NC_AVDR_ADAL_Generic_GJ from AVDR to ADAL, with 1 connection(s)")

        h("objectvar syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 2.0
        h("a_AVDR[0].Soma { syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAL[0].Soma { syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDR[0].Soma { syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_ADAL[0].Soma { syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDR_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDR_ADLL_Generic_GJ
        print("Adding electrical projection: NC_AVDR_ADLL_Generic_GJ from AVDR to ADLL, with 1 connection(s)")

        h("objectvar syn_NC_AVDR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0
        h("a_AVDR[0].Soma { syn_NC_AVDR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADLL[0].Soma { syn_NC_AVDR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVDR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDR_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDR_AVJL_Generic_GJ
        print("Adding electrical projection: NC_AVDR_AVJL_Generic_GJ from AVDR to AVJL, with 1 connection(s)")

        h("objectvar syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 2.0
        h("a_AVDR[0].Soma { syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDR[0].Soma { syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVJL[0].Soma { syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVDR_FLPR_Generic_GJ
        print("Adding electrical projection: NC_AVDR_FLPR_Generic_GJ from AVDR to FLPR, with 1 connection(s)")

        h("objectvar syn_NC_AVDR_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVDR_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma], weight: 1.0
        h("a_AVDR[0].Soma { syn_NC_AVDR_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPR[0].Soma { syn_NC_AVDR_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVDR_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVDR_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVEL_AVER_Generic_GJ
        print("Adding electrical projection: NC_AVEL_AVER_Generic_GJ from AVEL to AVER, with 1 connection(s)")

        h("objectvar syn_NC_AVEL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVEL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0
        h("a_AVEL[0].Soma { syn_NC_AVEL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_AVEL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVEL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVER[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVEL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVEL_RIML_Generic_GJ
        print("Adding electrical projection: NC_AVEL_RIML_Generic_GJ from AVEL to RIML, with 1 connection(s)")

        h("objectvar syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 2.0
        h("a_AVEL[0].Soma { syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIML[0].Soma { syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVEL_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVEL_RIMR_Generic_GJ
        print("Adding electrical projection: NC_AVEL_RIMR_Generic_GJ from AVEL to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 3.0
        h("a_AVEL[0].Soma { syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIMR[0].Soma { syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVEL_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVEL_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_AVEL_RMDVR_Generic_GJ from AVEL to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_AVEL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVEL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_AVEL[0].Soma { syn_NC_AVEL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_AVEL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVEL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVEL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVEL_RMEV_Generic_GJ
        print("Adding electrical projection: NC_AVEL_RMEV_Generic_GJ from AVEL to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_AVEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0
        h("a_AVEL[0].Soma { syn_NC_AVEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_AVEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVER_AVEL_Generic_GJ
        print("Adding electrical projection: NC_AVER_AVEL_Generic_GJ from AVER to AVEL, with 1 connection(s)")

        h("objectvar syn_NC_AVER_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVER_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0
        h("a_AVER[0].Soma { syn_NC_AVER_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_AVER_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVER_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVER_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVER_RIML_Generic_GJ
        print("Adding electrical projection: NC_AVER_RIML_Generic_GJ from AVER to RIML, with 1 connection(s)")

        h("objectvar syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 3.0
        h("a_AVER[0].Soma { syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIML[0].Soma { syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVER_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVER_RIMR_Generic_GJ
        print("Adding electrical projection: NC_AVER_RIMR_Generic_GJ from AVER to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 2.0
        h("a_AVER[0].Soma { syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIMR[0].Soma { syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVER_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVER_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_AVER_RMDVL_Generic_GJ from AVER to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_AVER_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVER_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_AVER[0].Soma { syn_NC_AVER_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_AVER_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVER_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVER_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVER_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_AVER_RMDVR_Generic_GJ from AVER to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_AVER_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVER_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_AVER[0].Soma { syn_NC_AVER_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_AVER_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVER_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVER_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVER_RMEV_Generic_GJ
        print("Adding electrical projection: NC_AVER_RMEV_Generic_GJ from AVER to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_AVER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0
        h("a_AVER[0].Soma { syn_NC_AVER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_AVER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFL_AVFR_Generic_GJ
        print("Adding electrical projection: NC_AVFL_AVFR_Generic_GJ from AVFL to AVFR, with 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 23.0
        h("a_AVFL[0].Soma { syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFR[0].Soma { syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 23.0 }")
        h("a_AVFR[0].Soma { syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 23.0 }")
        h("setpointer syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFL_AVHL_Generic_GJ
        print("Adding electrical projection: NC_AVFL_AVHL_Generic_GJ from AVFL to AVHL, with 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 2.0
        h("a_AVFL[0].Soma { syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHL[0].Soma { syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVHL[0].Soma { syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFL_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFL_AVHR_Generic_GJ
        print("Adding electrical projection: NC_AVFL_AVHR_Generic_GJ from AVFL to AVHR, with 1 connection(s)")

        h("objectvar syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 3.0
        h("a_AVFL[0].Soma { syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHR[0].Soma { syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVHR[0].Soma { syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFL_PVQR_Generic_GJ
        print("Adding electrical projection: NC_AVFL_PVQR_Generic_GJ from AVFL to PVQR, with 1 connection(s)")

        h("objectvar syn_NC_AVFL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0
        h("a_AVFL[0].Soma { syn_NC_AVFL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_AVFL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVFL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFR_AVFL_Generic_GJ
        print("Adding electrical projection: NC_AVFR_AVFL_Generic_GJ from AVFR to AVFL, with 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 23.0
        h("a_AVFR[0].Soma { syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFR[0].Soma { syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 23.0 }")
        h("a_AVFL[0].Soma { syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 23.0 }")
        h("setpointer syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFR_AVHL_Generic_GJ
        print("Adding electrical projection: NC_AVFR_AVHL_Generic_GJ from AVFR to AVHL, with 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 2.0
        h("a_AVFR[0].Soma { syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHL[0].Soma { syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFR[0].Soma { syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVHL[0].Soma { syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFR_AVHR_Generic_GJ
        print("Adding electrical projection: NC_AVFR_AVHR_Generic_GJ from AVFR to AVHR, with 1 connection(s)")

        h("objectvar syn_NC_AVFR_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFR_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0
        h("a_AVFR[0].Soma { syn_NC_AVFR_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHR[0].Soma { syn_NC_AVFR_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVFR_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFR_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVFR_VC4_Generic_GJ
        print("Adding electrical projection: NC_AVFR_VC4_Generic_GJ from AVFR to VC4, with 1 connection(s)")

        h("objectvar syn_NC_AVFR_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVFR_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma], weight: 1.0
        h("a_AVFR[0].Soma { syn_NC_AVFR_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC4[0].Soma { syn_NC_AVFR_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVFR_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC4[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVFR_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVG_RIFL_Generic_GJ
        print("Adding electrical projection: NC_AVG_RIFL_Generic_GJ from AVG to RIFL, with 1 connection(s)")

        h("objectvar syn_NC_AVG_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVG_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0
        h("a_AVG[0].Soma { syn_NC_AVG_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIFL[0].Soma { syn_NC_AVG_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVG_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVG_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVG[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVG_RIFR_Generic_GJ
        print("Adding electrical projection: NC_AVG_RIFR_Generic_GJ from AVG to RIFR, with 1 connection(s)")

        h("objectvar syn_NC_AVG_RIFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVG_RIFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma], weight: 1.0
        h("a_AVG[0].Soma { syn_NC_AVG_RIFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIFR[0].Soma { syn_NC_AVG_RIFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVG_RIFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVG_RIFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVG[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHL_AVFL_Generic_GJ
        print("Adding electrical projection: NC_AVHL_AVFL_Generic_GJ from AVHL to AVFL, with 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 2.0
        h("a_AVHL[0].Soma { syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHL[0].Soma { syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVFL[0].Soma { syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHL_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHL_AVFR_Generic_GJ
        print("Adding electrical projection: NC_AVHL_AVFR_Generic_GJ from AVHL to AVFR, with 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 2.0
        h("a_AVHL[0].Soma { syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFR[0].Soma { syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHL[0].Soma { syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVFR[0].Soma { syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHL_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHL_AVHR_Generic_GJ
        print("Adding electrical projection: NC_AVHL_AVHR_Generic_GJ from AVHL to AVHR, with 1 connection(s)")

        h("objectvar syn_NC_AVHL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma], weight: 1.0
        h("a_AVHL[0].Soma { syn_NC_AVHL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHR[0].Soma { syn_NC_AVHL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVHL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHL_AVHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHL_PHBR_Generic_GJ
        print("Adding electrical projection: NC_AVHL_PHBR_Generic_GJ from AVHL to PHBR, with 1 connection(s)")

        h("objectvar syn_NC_AVHL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma], weight: 1.0
        h("a_AVHL[0].Soma { syn_NC_AVHL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHBR[0].Soma { syn_NC_AVHL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVHL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHR_AVFL_Generic_GJ
        print("Adding electrical projection: NC_AVHR_AVFL_Generic_GJ from AVHR to AVFL, with 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 3.0
        h("a_AVHR[0].Soma { syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHR[0].Soma { syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVFL[0].Soma { syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHR_AVFR_Generic_GJ
        print("Adding electrical projection: NC_AVHR_AVFR_Generic_GJ from AVHR to AVFR, with 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHR_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0
        h("a_AVHR[0].Soma { syn_NC_AVHR_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFR[0].Soma { syn_NC_AVHR_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVHR_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHR_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVHR_AVHL_Generic_GJ
        print("Adding electrical projection: NC_AVHR_AVHL_Generic_GJ from AVHR to AVHL, with 1 connection(s)")

        h("objectvar syn_NC_AVHR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVHR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0
        h("a_AVHR[0].Soma { syn_NC_AVHR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHL[0].Soma { syn_NC_AVHR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVHR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVHR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJL_AVAL_Generic_GJ
        print("Adding electrical projection: NC_AVJL_AVAL_Generic_GJ from AVJL to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_AVJL[0].Soma { syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJL_AVDR_Generic_GJ
        print("Adding electrical projection: NC_AVJL_AVDR_Generic_GJ from AVJL to AVDR, with 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 2.0
        h("a_AVJL[0].Soma { syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDR[0].Soma { syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVDR[0].Soma { syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJL_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJL_AVJR_Generic_GJ
        print("Adding electrical projection: NC_AVJL_AVJR_Generic_GJ from AVJL to AVJR, with 1 connection(s)")

        h("objectvar syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 4.0
        h("a_AVJL[0].Soma { syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJR[0].Soma { syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVJR[0].Soma { syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJL_PVCL_Generic_GJ
        print("Adding electrical projection: NC_AVJL_PVCL_Generic_GJ from AVJL to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_AVJL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0
        h("a_AVJL[0].Soma { syn_NC_AVJL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_AVJL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVJL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJL_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJL_PVCR_Generic_GJ
        print("Adding electrical projection: NC_AVJL_PVCR_Generic_GJ from AVJL to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 3.0
        h("a_AVJL[0].Soma { syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PVCR[0].Soma { syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJL_RIS_Generic_GJ
        print("Adding electrical projection: NC_AVJL_RIS_Generic_GJ from AVJL to RIS, with 1 connection(s)")

        h("objectvar syn_NC_AVJL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_AVJL[0].Soma { syn_NC_AVJL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_AVJL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVJL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJR_AVJL_Generic_GJ
        print("Adding electrical projection: NC_AVJR_AVJL_Generic_GJ from AVJR to AVJL, with 1 connection(s)")

        h("objectvar syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 4.0
        h("a_AVJR[0].Soma { syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJR[0].Soma { syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVJL[0].Soma { syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVJR_PVCL_Generic_GJ
        print("Adding electrical projection: NC_AVJR_PVCL_Generic_GJ from AVJR to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_AVJR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVJR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0
        h("a_AVJR[0].Soma { syn_NC_AVJR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_AVJR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVJR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVJR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVJR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_ADER_Generic_GJ
        print("Adding electrical projection: NC_AVKL_ADER_Generic_GJ from AVKL to ADER, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_ADER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_ADER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADER[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_ADER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADER[0].Soma { syn_NC_AVKL_ADER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_ADER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADER[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_ADER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_AQR_Generic_GJ
        print("Adding electrical projection: NC_AVKL_AQR_Generic_GJ from AVKL to AQR, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 2.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AQR[0].Soma { syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_AVKR_Generic_GJ
        print("Adding electrical projection: NC_AVKL_AVKR_Generic_GJ from AVKL to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 2.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVKR[0].Soma { syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_PVPL_Generic_GJ
        print("Adding electrical projection: NC_AVKL_PVPL_Generic_GJ from AVKL to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_AVKL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_PVPR_Generic_GJ
        print("Adding electrical projection: NC_AVKL_PVPR_Generic_GJ from AVKL to PVPR, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_AVKL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_PVT_Generic_GJ
        print("Adding electrical projection: NC_AVKL_PVT_Generic_GJ from AVKL to PVT, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 2.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVT[0].Soma { syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVT[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_RICL_Generic_GJ
        print("Adding electrical projection: NC_AVKL_RICL_Generic_GJ from AVKL to RICL, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICL[0].Soma { syn_NC_AVKL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RICL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_RICR_Generic_GJ
        print("Adding electrical projection: NC_AVKL_RICR_Generic_GJ from AVKL to RICR, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICR[0].Soma { syn_NC_AVKL_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_RICR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RICR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_RICR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_AVKL_RIGL_Generic_GJ from AVKL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_AVKL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_SMBDL_Generic_GJ
        print("Adding electrical projection: NC_AVKL_SMBDL_Generic_GJ from AVKL to SMBDL, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDL[0].Soma { syn_NC_AVKL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_SMBDR_Generic_GJ
        print("Adding electrical projection: NC_AVKL_SMBDR_Generic_GJ from AVKL to SMBDR, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDR[0].Soma { syn_NC_AVKL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_SMBVR_Generic_GJ
        print("Adding electrical projection: NC_AVKL_SMBVR_Generic_GJ from AVKL to SMBVR, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBVR[0].Soma { syn_NC_AVKL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_VB1_Generic_GJ
        print("Adding electrical projection: NC_AVKL_VB1_Generic_GJ from AVKL to VB1, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 4.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VB1[0].Soma { syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKL_VB10_Generic_GJ
        print("Adding electrical projection: NC_AVKL_VB10_Generic_GJ from AVKL to VB10, with 1 connection(s)")

        h("objectvar syn_NC_AVKL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0
        h("a_AVKL[0].Soma { syn_NC_AVKL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB10[0].Soma { syn_NC_AVKL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB10[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_ADEL_Generic_GJ
        print("Adding electrical projection: NC_AVKR_ADEL_Generic_GJ from AVKR to ADEL, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADEL[0].Soma], weight: 1.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADEL[0].Soma { syn_NC_AVKR_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKR_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_ADEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_AQR_Generic_GJ
        print("Adding electrical projection: NC_AVKR_AQR_Generic_GJ from AVKR to AQR, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 1.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_AVKR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_AVKL_Generic_GJ
        print("Adding electrical projection: NC_AVKR_AVKL_Generic_GJ from AVKR to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 2.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVKL[0].Soma { syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_PVPL_Generic_GJ
        print("Adding electrical projection: NC_AVKR_PVPL_Generic_GJ from AVKR to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 6.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_PVPL[0].Soma { syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_RICL_Generic_GJ
        print("Adding electrical projection: NC_AVKR_RICL_Generic_GJ from AVKR to RICL, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICL[0].Soma { syn_NC_AVKR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RICL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_AVKR_RIGR_Generic_GJ from AVKR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_AVKR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_SMBDL_Generic_GJ
        print("Adding electrical projection: NC_AVKR_SMBDL_Generic_GJ from AVKR to SMBDL, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDL[0].Soma { syn_NC_AVKR_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKR_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_SMBDR_Generic_GJ
        print("Adding electrical projection: NC_AVKR_SMBDR_Generic_GJ from AVKR to SMBDR, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 2.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDR[0].Soma { syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SMBDR[0].Soma { syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVKR_SMBVR_Generic_GJ
        print("Adding electrical projection: NC_AVKR_SMBVR_Generic_GJ from AVKR to SMBVR, with 1 connection(s)")

        h("objectvar syn_NC_AVKR_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVKR_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 1.0
        h("a_AVKR[0].Soma { syn_NC_AVKR_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBVR[0].Soma { syn_NC_AVKR_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVKR_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVKR_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVKR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVL_DVB_Generic_GJ
        print("Adding electrical projection: NC_AVL_DVB_Generic_GJ from AVL to DVB, with 1 connection(s)")

        h("objectvar syn_NC_AVL_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVL_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma], weight: 1.0
        h("a_AVL[0].Soma { syn_NC_AVL_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVB[0].Soma { syn_NC_AVL_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVL_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVB[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVL_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVL_DVC_Generic_GJ
        print("Adding electrical projection: NC_AVL_DVC_Generic_GJ from AVL to DVC, with 1 connection(s)")

        h("objectvar syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 9.0
        h("a_AVL[0].Soma { syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVL[0].Soma { syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 9.0 }")
        h("a_DVC[0].Soma { syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 9.0 }")
        h("setpointer syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVL_PVM_Generic_GJ
        print("Adding electrical projection: NC_AVL_PVM_Generic_GJ from AVL to PVM, with 1 connection(s)")

        h("objectvar syn_NC_AVL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma], weight: 1.0
        h("a_AVL[0].Soma { syn_NC_AVL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVM[0].Soma { syn_NC_AVL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVM[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVM_ALML_Generic_GJ
        print("Adding electrical projection: NC_AVM_ALML_Generic_GJ from AVM to ALML, with 1 connection(s)")

        h("objectvar syn_NC_AVM_ALML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVM_ALML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma], weight: 1.0
        h("a_AVM[0].Soma { syn_NC_AVM_ALML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ALML[0].Soma { syn_NC_AVM_ALML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVM_ALML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ALML[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVM_ALML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVM[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVM_ALMR_Generic_GJ
        print("Adding electrical projection: NC_AVM_ALMR_Generic_GJ from AVM to ALMR, with 1 connection(s)")

        h("objectvar syn_NC_AVM_ALMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVM_ALMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALMR[0].Soma], weight: 1.0
        h("a_AVM[0].Soma { syn_NC_AVM_ALMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ALMR[0].Soma { syn_NC_AVM_ALMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AVM_ALMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ALMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVM_ALMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVM[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AVM_AVDL_Generic_GJ
        print("Adding electrical projection: NC_AVM_AVDL_Generic_GJ from AVM to AVDL, with 1 connection(s)")

        h("objectvar syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 2.0
        h("a_AVM[0].Soma { syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDL[0].Soma { syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVM[0].Soma { syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVDL[0].Soma { syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AVM_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AVM[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWAL_AIAL_Generic_GJ
        print("Adding electrical projection: NC_AWAL_AIAL_Generic_GJ from AWAL to AIAL, with 1 connection(s)")

        h("objectvar syn_NC_AWAL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWAL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAL[0].Soma], weight: 1.0
        h("a_AWAL[0].Soma { syn_NC_AWAL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAL[0].Soma { syn_NC_AWAL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWAL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWAL_AIAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWAL_AWAR_Generic_GJ
        print("Adding electrical projection: NC_AWAL_AWAR_Generic_GJ from AWAL to AWAR, with 1 connection(s)")

        h("objectvar syn_NC_AWAL_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWAL_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma], weight: 1.0
        h("a_AWAL[0].Soma { syn_NC_AWAL_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWAR[0].Soma { syn_NC_AWAL_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWAL_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWAL_AWAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWAR_AIAR_Generic_GJ
        print("Adding electrical projection: NC_AWAR_AIAR_Generic_GJ from AWAR to AIAR, with 1 connection(s)")

        h("objectvar syn_NC_AWAR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWAR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIAR[0].Soma], weight: 1.0
        h("a_AWAR[0].Soma { syn_NC_AWAR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIAR[0].Soma { syn_NC_AWAR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWAR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWAR_AIAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWAR_AIZR_Generic_GJ
        print("Adding electrical projection: NC_AWAR_AIZR_Generic_GJ from AWAR to AIZR, with 1 connection(s)")

        h("objectvar syn_NC_AWAR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWAR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIZR[0].Soma], weight: 1.0
        h("a_AWAR[0].Soma { syn_NC_AWAR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIZR[0].Soma { syn_NC_AWAR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWAR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIZR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWAR_AIZR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWAR_AWAL_Generic_GJ
        print("Adding electrical projection: NC_AWAR_AWAL_Generic_GJ from AWAR to AWAL, with 1 connection(s)")

        h("objectvar syn_NC_AWAR_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWAR_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWAL[0].Soma], weight: 1.0
        h("a_AWAR[0].Soma { syn_NC_AWAR_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWAL[0].Soma { syn_NC_AWAR_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWAR_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWAR_AWAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBL_AUAL_Generic_GJ
        print("Adding electrical projection: NC_AWBL_AUAL_Generic_GJ from AWBL to AUAL, with 1 connection(s)")

        h("objectvar syn_NC_AWBL_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBL_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAL[0].Soma], weight: 1.0
        h("a_AWBL[0].Soma { syn_NC_AWBL_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AUAL[0].Soma { syn_NC_AWBL_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBL_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AUAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBL_AUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBL_AWBR_Generic_GJ
        print("Adding electrical projection: NC_AWBL_AWBR_Generic_GJ from AWBL to AWBR, with 1 connection(s)")

        h("objectvar syn_NC_AWBL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0
        h("a_AWBL[0].Soma { syn_NC_AWBL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBR[0].Soma { syn_NC_AWBL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBL_RMGL_Generic_GJ
        print("Adding electrical projection: NC_AWBL_RMGL_Generic_GJ from AWBL to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_AWBL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0
        h("a_AWBL[0].Soma { syn_NC_AWBL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_AWBL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBR_AUAR_Generic_GJ
        print("Adding electrical projection: NC_AWBR_AUAR_Generic_GJ from AWBR to AUAR, with 1 connection(s)")

        h("objectvar syn_NC_AWBR_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBR_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AUAR[0].Soma], weight: 1.0
        h("a_AWBR[0].Soma { syn_NC_AWBR_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AUAR[0].Soma { syn_NC_AWBR_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBR_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AUAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBR_AUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBR_AWBL_Generic_GJ
        print("Adding electrical projection: NC_AWBR_AWBL_Generic_GJ from AWBR to AWBL, with 1 connection(s)")

        h("objectvar syn_NC_AWBR_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBR_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 1.0
        h("a_AWBR[0].Soma { syn_NC_AWBR_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBL[0].Soma { syn_NC_AWBR_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBR_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBR_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBR_RICL_Generic_GJ
        print("Adding electrical projection: NC_AWBR_RICL_Generic_GJ from AWBR to RICL, with 1 connection(s)")

        h("objectvar syn_NC_AWBR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma], weight: 1.0
        h("a_AWBR[0].Soma { syn_NC_AWBR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICL[0].Soma { syn_NC_AWBR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RICL[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBR_RICL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_AWBR_RMGR_Generic_GJ
        print("Adding electrical projection: NC_AWBR_RMGR_Generic_GJ from AWBR to RMGR, with 1 connection(s)")

        h("objectvar syn_NC_AWBR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_AWBR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0
        h("a_AWBR[0].Soma { syn_NC_AWBR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGR[0].Soma { syn_NC_AWBR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_AWBR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_AWBR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_AWBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_BAGL_BAGR_Generic_GJ
        print("Adding electrical projection: NC_BAGL_BAGR_Generic_GJ from BAGL to BAGR, with 1 connection(s)")

        h("objectvar syn_NC_BAGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_BAGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0
        h("a_BAGL[0].Soma { syn_NC_BAGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_BAGR[0].Soma { syn_NC_BAGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_BAGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_BAGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_BAGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_BAGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_BAGL_RIGR_Generic_GJ
        print("Adding electrical projection: NC_BAGL_RIGR_Generic_GJ from BAGL to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_BAGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_BAGL[0].Soma { syn_NC_BAGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_BAGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_BAGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_BAGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_BAGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_BAGL_RIR_Generic_GJ
        print("Adding electrical projection: NC_BAGL_RIR_Generic_GJ from BAGL to RIR, with 1 connection(s)")

        h("objectvar syn_NC_BAGL_RIR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_BAGL_RIR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 1.0
        h("a_BAGL[0].Soma { syn_NC_BAGL_RIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIR[0].Soma { syn_NC_BAGL_RIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_BAGL_RIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIR[0].Soma.v(0.5)")
        h("setpointer syn_NC_BAGL_RIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_BAGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_BAGR_BAGL_Generic_GJ
        print("Adding electrical projection: NC_BAGR_BAGL_Generic_GJ from BAGR to BAGL, with 1 connection(s)")

        h("objectvar syn_NC_BAGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_BAGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma], weight: 1.0
        h("a_BAGR[0].Soma { syn_NC_BAGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_BAGL[0].Soma { syn_NC_BAGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_BAGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_BAGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_BAGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_BAGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_BAGR_RIGL_Generic_GJ
        print("Adding electrical projection: NC_BAGR_RIGL_Generic_GJ from BAGR to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_BAGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_BAGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_BAGR[0].Soma { syn_NC_BAGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_BAGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_BAGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_BAGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_BAGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_BAGR_RIR_Generic_GJ
        print("Adding electrical projection: NC_BAGR_RIR_Generic_GJ from BAGR to RIR, with 1 connection(s)")

        h("objectvar syn_NC_BAGR_RIR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_BAGR_RIR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma], weight: 1.0
        h("a_BAGR[0].Soma { syn_NC_BAGR_RIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIR[0].Soma { syn_NC_BAGR_RIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_BAGR_RIR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIR[0].Soma.v(0.5)")
        h("setpointer syn_NC_BAGR_RIR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_BAGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPDL_OLQDL_Generic_GJ
        print("Adding electrical projection: NC_CEPDL_OLQDL_Generic_GJ from CEPDL to OLQDL, with 1 connection(s)")

        h("objectvar syn_NC_CEPDL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPDL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 1.0
        h("a_CEPDL[0].Soma { syn_NC_CEPDL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDL[0].Soma { syn_NC_CEPDL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPDL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPDL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPDL_RIH_Generic_GJ
        print("Adding electrical projection: NC_CEPDL_RIH_Generic_GJ from CEPDL to RIH, with 1 connection(s)")

        h("objectvar syn_NC_CEPDL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPDL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0
        h("a_CEPDL[0].Soma { syn_NC_CEPDL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIH[0].Soma { syn_NC_CEPDL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPDL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIH[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPDL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPDR_OLQDR_Generic_GJ
        print("Adding electrical projection: NC_CEPDR_OLQDR_Generic_GJ from CEPDR to OLQDR, with 1 connection(s)")

        h("objectvar syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 2.0
        h("a_CEPDR[0].Soma { syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPDR[0].Soma { syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_OLQDR[0].Soma { syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPDR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPDR_RIH_Generic_GJ
        print("Adding electrical projection: NC_CEPDR_RIH_Generic_GJ from CEPDR to RIH, with 1 connection(s)")

        h("objectvar syn_NC_CEPDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0
        h("a_CEPDR[0].Soma { syn_NC_CEPDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIH[0].Soma { syn_NC_CEPDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIH[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPVL_OLQVL_Generic_GJ
        print("Adding electrical projection: NC_CEPVL_OLQVL_Generic_GJ from CEPVL to OLQVL, with 1 connection(s)")

        h("objectvar syn_NC_CEPVL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPVL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0
        h("a_CEPVL[0].Soma { syn_NC_CEPVL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVL[0].Soma { syn_NC_CEPVL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPVL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPVL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPVL_RIH_Generic_GJ
        print("Adding electrical projection: NC_CEPVL_RIH_Generic_GJ from CEPVL to RIH, with 1 connection(s)")

        h("objectvar syn_NC_CEPVL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPVL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0
        h("a_CEPVL[0].Soma { syn_NC_CEPVL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIH[0].Soma { syn_NC_CEPVL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPVL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIH[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPVL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPVR_OLQVR_Generic_GJ
        print("Adding electrical projection: NC_CEPVR_OLQVR_Generic_GJ from CEPVR to OLQVR, with 1 connection(s)")

        h("objectvar syn_NC_CEPVR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPVR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0
        h("a_CEPVR[0].Soma { syn_NC_CEPVR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVR[0].Soma { syn_NC_CEPVR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPVR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPVR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_CEPVR_RIH_Generic_GJ
        print("Adding electrical projection: NC_CEPVR_RIH_Generic_GJ from CEPVR to RIH, with 1 connection(s)")

        h("objectvar syn_NC_CEPVR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_CEPVR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0
        h("a_CEPVR[0].Soma { syn_NC_CEPVR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIH[0].Soma { syn_NC_CEPVR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_CEPVR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIH[0].Soma.v(0.5)")
        h("setpointer syn_NC_CEPVR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_CEPVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA1_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DA1_AVAL_Generic_GJ from DA1 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_DA1[0].Soma { syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA1_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA1_AVAR_Generic_GJ from DA1 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 6.0
        h("a_DA1[0].Soma { syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_AVAR[0].Soma { syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA1_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA1_DA4_Generic_GJ
        print("Adding electrical projection: NC_DA1_DA4_Generic_GJ from DA1 to DA4, with 1 connection(s)")

        h("objectvar syn_NC_DA1_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA1_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 1.0
        h("a_DA1[0].Soma { syn_NC_DA1_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_DA1_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA1_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA1_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA1_SABVL_Generic_GJ
        print("Adding electrical projection: NC_DA1_SABVL_Generic_GJ from DA1 to SABVL, with 1 connection(s)")

        h("objectvar syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 2.0
        h("a_DA1[0].Soma { syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVL[0].Soma { syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SABVL[0].Soma { syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA1_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA1_SABVR_Generic_GJ
        print("Adding electrical projection: NC_DA1_SABVR_Generic_GJ from DA1 to SABVR, with 1 connection(s)")

        h("objectvar syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma], weight: 3.0
        h("a_DA1[0].Soma { syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVR[0].Soma { syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_SABVR[0].Soma { syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA1_SABVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA2_AS2_Generic_GJ
        print("Adding electrical projection: NC_DA2_AS2_Generic_GJ from DA2 to AS2, with 1 connection(s)")

        h("objectvar syn_NC_DA2_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA2_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 1.0
        h("a_DA2[0].Soma { syn_NC_DA2_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS2[0].Soma { syn_NC_DA2_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA2_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA2_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA2_AS3_Generic_GJ
        print("Adding electrical projection: NC_DA2_AS3_Generic_GJ from DA2 to AS3, with 1 connection(s)")

        h("objectvar syn_NC_DA2_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA2_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 1.0
        h("a_DA2[0].Soma { syn_NC_DA2_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS3[0].Soma { syn_NC_DA2_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA2_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA2_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA2_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DA2_AVAL_Generic_GJ from DA2 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_DA2[0].Soma { syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA2_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA2_AVAR_Generic_GJ from DA2 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_DA2[0].Soma { syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA2_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA2_SABVL_Generic_GJ
        print("Adding electrical projection: NC_DA2_SABVL_Generic_GJ from DA2 to SABVL, with 1 connection(s)")

        h("objectvar syn_NC_DA2_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA2_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma], weight: 1.0
        h("a_DA2[0].Soma { syn_NC_DA2_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVL[0].Soma { syn_NC_DA2_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA2_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA2_SABVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA2_VA1_Generic_GJ
        print("Adding electrical projection: NC_DA2_VA1_Generic_GJ from DA2 to VA1, with 1 connection(s)")

        h("objectvar syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma], weight: 2.0
        h("a_DA2[0].Soma { syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA1[0].Soma { syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA1[0].Soma { syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA2_VA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA3_AS4_Generic_GJ
        print("Adding electrical projection: NC_DA3_AS4_Generic_GJ from DA3 to AS4, with 1 connection(s)")

        h("objectvar syn_NC_DA3_AS4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA3_AS4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS4[0].Soma], weight: 1.0
        h("a_DA3[0].Soma { syn_NC_DA3_AS4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS4[0].Soma { syn_NC_DA3_AS4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA3_AS4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA3_AS4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA3_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA3_AVAR_Generic_GJ from DA3 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_DA3[0].Soma { syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA3[0].Soma { syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA4_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DA4_AVAL_Generic_GJ from DA4 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0
        h("a_DA4[0].Soma { syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAL[0].Soma { syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA4_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA4_AVAR_Generic_GJ from DA4 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_DA4[0].Soma { syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA4_DA1_Generic_GJ
        print("Adding electrical projection: NC_DA4_DA1_Generic_GJ from DA4 to DA1, with 1 connection(s)")

        h("objectvar syn_NC_DA4_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA4_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 1.0
        h("a_DA4[0].Soma { syn_NC_DA4_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_DA4_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA4_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA4_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA4_DB3_Generic_GJ
        print("Adding electrical projection: NC_DA4_DB3_Generic_GJ from DA4 to DB3, with 1 connection(s)")

        h("objectvar syn_NC_DA4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0
        h("a_DA4[0].Soma { syn_NC_DA4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB3[0].Soma { syn_NC_DA4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA4_VB6_Generic_GJ
        print("Adding electrical projection: NC_DA4_VB6_Generic_GJ from DA4 to VB6, with 1 connection(s)")

        h("objectvar syn_NC_DA4_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA4_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 1.0
        h("a_DA4[0].Soma { syn_NC_DA4_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB6[0].Soma { syn_NC_DA4_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA4_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA4_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA5_AS6_Generic_GJ
        print("Adding electrical projection: NC_DA5_AS6_Generic_GJ from DA5 to AS6, with 1 connection(s)")

        h("objectvar syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 2.0
        h("a_DA5[0].Soma { syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS6[0].Soma { syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS6[0].Soma { syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS6[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA5_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA5_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DA5_AVAL_Generic_GJ from DA5 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_DA5[0].Soma { syn_NC_DA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA5_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA5_AVAR_Generic_GJ from DA5 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 5.0
        h("a_DA5[0].Soma { syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAR[0].Soma { syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA5_VA4_Generic_GJ
        print("Adding electrical projection: NC_DA5_VA4_Generic_GJ from DA5 to VA4, with 1 connection(s)")

        h("objectvar syn_NC_DA5_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA5_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0
        h("a_DA5[0].Soma { syn_NC_DA5_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_DA5_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA5_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA5_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA5_VA5_Generic_GJ
        print("Adding electrical projection: NC_DA5_VA5_Generic_GJ from DA5 to VA5, with 1 connection(s)")

        h("objectvar syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma], weight: 2.0
        h("a_DA5[0].Soma { syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA5[0].Soma { syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA5_VA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA6_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DA6_AVAL_Generic_GJ from DA6 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 10.0
        h("a_DA6[0].Soma { syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA6[0].Soma { syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 10.0 }")
        h("a_AVAL[0].Soma { syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 10.0 }")
        h("setpointer syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA6_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA6_AVAR_Generic_GJ from DA6 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_DA6[0].Soma { syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA6[0].Soma { syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA7_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DA7_AVAL_Generic_GJ from DA7 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_DA7[0].Soma { syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA7[0].Soma { syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA8_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DA8_AVAR_Generic_GJ from DA8 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_DA8[0].Soma { syn_NC_DA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA8_DA9_Generic_GJ
        print("Adding electrical projection: NC_DA8_DA9_Generic_GJ from DA8 to DA9, with 1 connection(s)")

        h("objectvar syn_NC_DA8_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA8_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0
        h("a_DA8[0].Soma { syn_NC_DA8_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA9[0].Soma { syn_NC_DA8_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA8_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA8_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA9_DA8_Generic_GJ
        print("Adding electrical projection: NC_DA9_DA8_Generic_GJ from DA9 to DA8, with 1 connection(s)")

        h("objectvar syn_NC_DA9_DA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA9_DA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA8[0].Soma], weight: 1.0
        h("a_DA9[0].Soma { syn_NC_DA9_DA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA8[0].Soma { syn_NC_DA9_DA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA9_DA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA9_DA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA9_PDA_Generic_GJ
        print("Adding electrical projection: NC_DA9_PDA_Generic_GJ from DA9 to PDA, with 1 connection(s)")

        h("objectvar syn_NC_DA9_PDA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA9_PDA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma], weight: 1.0
        h("a_DA9[0].Soma { syn_NC_DA9_PDA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDA[0].Soma { syn_NC_DA9_PDA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA9_PDA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDA[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA9_PDA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA9_PHCL_Generic_GJ
        print("Adding electrical projection: NC_DA9_PHCL_Generic_GJ from DA9 to PHCL, with 1 connection(s)")

        h("objectvar syn_NC_DA9_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA9_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma], weight: 1.0
        h("a_DA9[0].Soma { syn_NC_DA9_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCL[0].Soma { syn_NC_DA9_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA9_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA9_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DA9_RID_Generic_GJ
        print("Adding electrical projection: NC_DA9_RID_Generic_GJ from DA9 to RID, with 1 connection(s)")

        h("objectvar syn_NC_DA9_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DA9_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0
        h("a_DA9[0].Soma { syn_NC_DA9_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_DA9_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DA9_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RID[0].Soma.v(0.5)")
        h("setpointer syn_NC_DA9_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_AIBR_Generic_GJ
        print("Adding electrical projection: NC_DB1_AIBR_Generic_GJ from DB1 to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_DB1_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_DB1_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB1_AVBR_Generic_GJ from DB1 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 3.0
        h("a_DB1[0].Soma { syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVBR[0].Soma { syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_DB2_Generic_GJ
        print("Adding electrical projection: NC_DB1_DB2_Generic_GJ from DB1 to DB2, with 1 connection(s)")

        h("objectvar syn_NC_DB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB2[0].Soma { syn_NC_DB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_DB4_Generic_GJ
        print("Adding electrical projection: NC_DB1_DB4_Generic_GJ from DB1 to DB4, with 1 connection(s)")

        h("objectvar syn_NC_DB1_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB4[0].Soma { syn_NC_DB1_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_DVA_Generic_GJ
        print("Adding electrical projection: NC_DB1_DVA_Generic_GJ from DB1 to DVA, with 1 connection(s)")

        h("objectvar syn_NC_DB1_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVA[0].Soma { syn_NC_DB1_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVA[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_RID_Generic_GJ
        print("Adding electrical projection: NC_DB1_RID_Generic_GJ from DB1 to RID, with 1 connection(s)")

        h("objectvar syn_NC_DB1_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_DB1_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RID[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_RIS_Generic_GJ
        print("Adding electrical projection: NC_DB1_RIS_Generic_GJ from DB1 to RIS, with 1 connection(s)")

        h("objectvar syn_NC_DB1_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_DB1_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_VB3_Generic_GJ
        print("Adding electrical projection: NC_DB1_VB3_Generic_GJ from DB1 to VB3, with 1 connection(s)")

        h("objectvar syn_NC_DB1_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB3[0].Soma { syn_NC_DB1_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB1_VB4_Generic_GJ
        print("Adding electrical projection: NC_DB1_VB4_Generic_GJ from DB1 to VB4, with 1 connection(s)")

        h("objectvar syn_NC_DB1_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB1_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 1.0
        h("a_DB1[0].Soma { syn_NC_DB1_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB4[0].Soma { syn_NC_DB1_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB1_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB1_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB2_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB2_AVBR_Generic_GJ from DB2 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DB2[0].Soma { syn_NC_DB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB2_DB1_Generic_GJ
        print("Adding electrical projection: NC_DB2_DB1_Generic_GJ from DB2 to DB1, with 1 connection(s)")

        h("objectvar syn_NC_DB2_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB2_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_DB2[0].Soma { syn_NC_DB2_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_DB2_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB2_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB2_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB2_DB3_Generic_GJ
        print("Adding electrical projection: NC_DB2_DB3_Generic_GJ from DB2 to DB3, with 1 connection(s)")

        h("objectvar syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 6.0
        h("a_DB2[0].Soma { syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB3[0].Soma { syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB2[0].Soma { syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_DB3[0].Soma { syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB2_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB2_VB1_Generic_GJ
        print("Adding electrical projection: NC_DB2_VB1_Generic_GJ from DB2 to VB1, with 1 connection(s)")

        h("objectvar syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 2.0
        h("a_DB2[0].Soma { syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB2[0].Soma { syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB1[0].Soma { syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB3_AVBL_Generic_GJ
        print("Adding electrical projection: NC_DB3_AVBL_Generic_GJ from DB3 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_DB3_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB3_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_DB3[0].Soma { syn_NC_DB3_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_DB3_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB3_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB3_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB3_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB3_AVBR_Generic_GJ from DB3 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DB3[0].Soma { syn_NC_DB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB3_DA4_Generic_GJ
        print("Adding electrical projection: NC_DB3_DA4_Generic_GJ from DB3 to DA4, with 1 connection(s)")

        h("objectvar syn_NC_DB3_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB3_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 1.0
        h("a_DB3[0].Soma { syn_NC_DB3_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_DB3_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB3_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB3_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB3_DB2_Generic_GJ
        print("Adding electrical projection: NC_DB3_DB2_Generic_GJ from DB3 to DB2, with 1 connection(s)")

        h("objectvar syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 6.0
        h("a_DB3[0].Soma { syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB2[0].Soma { syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB3[0].Soma { syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_DB2[0].Soma { syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB3_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB3_DB4_Generic_GJ
        print("Adding electrical projection: NC_DB3_DB4_Generic_GJ from DB3 to DB4, with 1 connection(s)")

        h("objectvar syn_NC_DB3_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB3_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0
        h("a_DB3[0].Soma { syn_NC_DB3_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB4[0].Soma { syn_NC_DB3_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB3_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB3_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB4_AVBL_Generic_GJ
        print("Adding electrical projection: NC_DB4_AVBL_Generic_GJ from DB4 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_DB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_DB4[0].Soma { syn_NC_DB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_DB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB4_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB4_AVBR_Generic_GJ from DB4 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DB4[0].Soma { syn_NC_DB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB4_DB1_Generic_GJ
        print("Adding electrical projection: NC_DB4_DB1_Generic_GJ from DB4 to DB1, with 1 connection(s)")

        h("objectvar syn_NC_DB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_DB4[0].Soma { syn_NC_DB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_DB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB4_DB3_Generic_GJ
        print("Adding electrical projection: NC_DB4_DB3_Generic_GJ from DB4 to DB3, with 1 connection(s)")

        h("objectvar syn_NC_DB4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB3[0].Soma], weight: 1.0
        h("a_DB4[0].Soma { syn_NC_DB4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB3[0].Soma { syn_NC_DB4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB4_DB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB4_VB2_Generic_GJ
        print("Adding electrical projection: NC_DB4_VB2_Generic_GJ from DB4 to VB2, with 1 connection(s)")

        h("objectvar syn_NC_DB4_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB4_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0
        h("a_DB4[0].Soma { syn_NC_DB4_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_DB4_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB4_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB4_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB4_VB4_Generic_GJ
        print("Adding electrical projection: NC_DB4_VB4_Generic_GJ from DB4 to VB4, with 1 connection(s)")

        h("objectvar syn_NC_DB4_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB4_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 1.0
        h("a_DB4[0].Soma { syn_NC_DB4_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB4[0].Soma { syn_NC_DB4_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB4_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB4_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB5_AVAR_Generic_GJ
        print("Adding electrical projection: NC_DB5_AVAR_Generic_GJ from DB5 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_DB5[0].Soma { syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB5[0].Soma { syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB5_AVBL_Generic_GJ
        print("Adding electrical projection: NC_DB5_AVBL_Generic_GJ from DB5 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_DB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_DB5[0].Soma { syn_NC_DB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_DB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB5_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB5_AVBR_Generic_GJ from DB5 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB5_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB5_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DB5[0].Soma { syn_NC_DB5_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB5_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB5_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB5_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB6_AVAL_Generic_GJ
        print("Adding electrical projection: NC_DB6_AVAL_Generic_GJ from DB6 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0
        h("a_DB6[0].Soma { syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB6[0].Soma { syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAL[0].Soma { syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB6_AVBL_Generic_GJ
        print("Adding electrical projection: NC_DB6_AVBL_Generic_GJ from DB6 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0
        h("a_DB6[0].Soma { syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB6[0].Soma { syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBL[0].Soma { syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB6_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB6_AVBR_Generic_GJ from DB6 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DB6[0].Soma { syn_NC_DB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB7_AVBL_Generic_GJ
        print("Adding electrical projection: NC_DB7_AVBL_Generic_GJ from DB7 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0
        h("a_DB7[0].Soma { syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB7[0].Soma { syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBL[0].Soma { syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DB7_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DB7_AVBR_Generic_GJ from DB7 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DB7[0].Soma { syn_NC_DB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DB7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD1_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DD1_AVBR_Generic_GJ from DD1 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DD1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DD1[0].Soma { syn_NC_DD1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DD1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD1_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD1_DD2_Generic_GJ
        print("Adding electrical projection: NC_DD1_DD2_Generic_GJ from DD1 to DD2, with 1 connection(s)")

        h("objectvar syn_NC_DD1_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD1_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 1.0
        h("a_DD1[0].Soma { syn_NC_DD1_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD2[0].Soma { syn_NC_DD1_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD1_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD1_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD1_VD1_Generic_GJ
        print("Adding electrical projection: NC_DD1_VD1_Generic_GJ from DD1 to VD1, with 1 connection(s)")

        h("objectvar syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 4.0
        h("a_DD1[0].Soma { syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD1[0].Soma { syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VD1[0].Soma { syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD1_VD2_Generic_GJ
        print("Adding electrical projection: NC_DD1_VD2_Generic_GJ from DD1 to VD2, with 1 connection(s)")

        h("objectvar syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 2.0
        h("a_DD1[0].Soma { syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD1[0].Soma { syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD2[0].Soma { syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD2_DD1_Generic_GJ
        print("Adding electrical projection: NC_DD2_DD1_Generic_GJ from DD2 to DD1, with 1 connection(s)")

        h("objectvar syn_NC_DD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 1.0
        h("a_DD2[0].Soma { syn_NC_DD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD1[0].Soma { syn_NC_DD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD2_DD3_Generic_GJ
        print("Adding electrical projection: NC_DD2_DD3_Generic_GJ from DD2 to DD3, with 1 connection(s)")

        h("objectvar syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 2.0
        h("a_DD2[0].Soma { syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD3[0].Soma { syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD2[0].Soma { syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DD3[0].Soma { syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD2_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD2_VD4_Generic_GJ
        print("Adding electrical projection: NC_DD2_VD4_Generic_GJ from DD2 to VD4, with 1 connection(s)")

        h("objectvar syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 2.0
        h("a_DD2[0].Soma { syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD4[0].Soma { syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD2[0].Soma { syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD4[0].Soma { syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD2_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD3_DD2_Generic_GJ
        print("Adding electrical projection: NC_DD3_DD2_Generic_GJ from DD3 to DD2, with 1 connection(s)")

        h("objectvar syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 2.0
        h("a_DD3[0].Soma { syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD2[0].Soma { syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD3[0].Soma { syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DD2[0].Soma { syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD3_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD3_DD4_Generic_GJ
        print("Adding electrical projection: NC_DD3_DD4_Generic_GJ from DD3 to DD4, with 1 connection(s)")

        h("objectvar syn_NC_DD3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 1.0
        h("a_DD3[0].Soma { syn_NC_DD3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD4[0].Soma { syn_NC_DD3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD4_DD3_Generic_GJ
        print("Adding electrical projection: NC_DD4_DD3_Generic_GJ from DD4 to DD3, with 1 connection(s)")

        h("objectvar syn_NC_DD4_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD4_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD3[0].Soma], weight: 1.0
        h("a_DD4[0].Soma { syn_NC_DD4_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD3[0].Soma { syn_NC_DD4_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD4_DD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD4_DD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD4_VC3_Generic_GJ
        print("Adding electrical projection: NC_DD4_VC3_Generic_GJ from DD4 to VC3, with 1 connection(s)")

        h("objectvar syn_NC_DD4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0
        h("a_DD4[0].Soma { syn_NC_DD4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_DD4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC3[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD4_VD8_Generic_GJ
        print("Adding electrical projection: NC_DD4_VD8_Generic_GJ from DD4 to VD8, with 1 connection(s)")

        h("objectvar syn_NC_DD4_VD8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD4_VD8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma], weight: 1.0
        h("a_DD4[0].Soma { syn_NC_DD4_VD8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD8[0].Soma { syn_NC_DD4_VD8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD4_VD8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD8[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD4_VD8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DD5_VD10_Generic_GJ
        print("Adding electrical projection: NC_DD5_VD10_Generic_GJ from DD5 to VD10, with 1 connection(s)")

        h("objectvar syn_NC_DD5_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DD5_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 1.0
        h("a_DD5[0].Soma { syn_NC_DD5_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD10[0].Soma { syn_NC_DD5_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DD5_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD10[0].Soma.v(0.5)")
        h("setpointer syn_NC_DD5_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DD5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVA_AVBL_Generic_GJ
        print("Adding electrical projection: NC_DVA_AVBL_Generic_GJ from DVA to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_DVA_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVA_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_DVA[0].Soma { syn_NC_DVA_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_DVA_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVA_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVA_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVA_AVBR_Generic_GJ
        print("Adding electrical projection: NC_DVA_AVBR_Generic_GJ from DVA to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_DVA_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVA_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_DVA[0].Soma { syn_NC_DVA_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_DVA_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVA_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVA_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVA_DB1_Generic_GJ
        print("Adding electrical projection: NC_DVA_DB1_Generic_GJ from DVA to DB1, with 1 connection(s)")

        h("objectvar syn_NC_DVA_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVA_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_DVA[0].Soma { syn_NC_DVA_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_DVA_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVA_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVA_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVA_PVCL_Generic_GJ
        print("Adding electrical projection: NC_DVA_PVCL_Generic_GJ from DVA to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_DVA_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVA_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0
        h("a_DVA[0].Soma { syn_NC_DVA_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_DVA_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVA_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVA_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVA_PVR_Generic_GJ
        print("Adding electrical projection: NC_DVA_PVR_Generic_GJ from DVA to PVR, with 1 connection(s)")

        h("objectvar syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 2.0
        h("a_DVA[0].Soma { syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVA[0].Soma { syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVR[0].Soma { syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVA_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVB_AS9_Generic_GJ
        print("Adding electrical projection: NC_DVB_AS9_Generic_GJ from DVB to AS9, with 1 connection(s)")

        h("objectvar syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS9[0].Soma], weight: 7.0
        h("a_DVB[0].Soma { syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS9[0].Soma { syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVB[0].Soma { syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_AS9[0].Soma { syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS9[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVB_AS9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVB[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVB_AVL_Generic_GJ
        print("Adding electrical projection: NC_DVB_AVL_Generic_GJ from DVB to AVL, with 1 connection(s)")

        h("objectvar syn_NC_DVB_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVB_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0
        h("a_DVB[0].Soma { syn_NC_DVB_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVL[0].Soma { syn_NC_DVB_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVB_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVB_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVB[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVB_VA9_Generic_GJ
        print("Adding electrical projection: NC_DVB_VA9_Generic_GJ from DVB to VA9, with 1 connection(s)")

        h("objectvar syn_NC_DVB_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVB_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_DVB[0].Soma { syn_NC_DVB_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_DVB_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVB_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVB_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVB[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVB_VB9_Generic_GJ
        print("Adding electrical projection: NC_DVB_VB9_Generic_GJ from DVB to VB9, with 1 connection(s)")

        h("objectvar syn_NC_DVB_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVB_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 1.0
        h("a_DVB[0].Soma { syn_NC_DVB_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_DVB_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVB_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVB_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVB[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_AIBL_Generic_GJ
        print("Adding electrical projection: NC_DVC_AIBL_Generic_GJ from DVC to AIBL, with 1 connection(s)")

        h("objectvar syn_NC_DVC_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0
        h("a_DVC[0].Soma { syn_NC_DVC_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_DVC_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVC_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_AIBR_Generic_GJ
        print("Adding electrical projection: NC_DVC_AIBR_Generic_GJ from DVC to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 2.0
        h("a_DVC[0].Soma { syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AIBR[0].Soma { syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_AVL_Generic_GJ
        print("Adding electrical projection: NC_DVC_AVL_Generic_GJ from DVC to AVL, with 1 connection(s)")

        h("objectvar syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 9.0
        h("a_DVC[0].Soma { syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVL[0].Soma { syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 9.0 }")
        h("a_AVL[0].Soma { syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 9.0 }")
        h("setpointer syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_PVPL_Generic_GJ
        print("Adding electrical projection: NC_DVC_PVPL_Generic_GJ from DVC to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 2.0
        h("a_DVC[0].Soma { syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVPL[0].Soma { syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_PVPR_Generic_GJ
        print("Adding electrical projection: NC_DVC_PVPR_Generic_GJ from DVC to PVPR, with 1 connection(s)")

        h("objectvar syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 13.0
        h("a_DVC[0].Soma { syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 13.0 }")
        h("a_PVPR[0].Soma { syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 13.0 }")
        h("setpointer syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_VA9_Generic_GJ
        print("Adding electrical projection: NC_DVC_VA9_Generic_GJ from DVC to VA9, with 1 connection(s)")

        h("objectvar syn_NC_DVC_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_DVC[0].Soma { syn_NC_DVC_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_DVC_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_DVC_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_VD1_Generic_GJ
        print("Adding electrical projection: NC_DVC_VD1_Generic_GJ from DVC to VD1, with 1 connection(s)")

        h("objectvar syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 5.0
        h("a_DVC[0].Soma { syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_VD1[0].Soma { syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_DVC_VD10_Generic_GJ
        print("Adding electrical projection: NC_DVC_VD10_Generic_GJ from DVC to VD10, with 1 connection(s)")

        h("objectvar syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 4.0
        h("a_DVC[0].Soma { syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD10[0].Soma { syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VD10[0].Soma { syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD10[0].Soma.v(0.5)")
        h("setpointer syn_NC_DVC_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_DVC[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPL_AVAL_Generic_GJ
        print("Adding electrical projection: NC_FLPL_AVAL_Generic_GJ from FLPL to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_FLPL[0].Soma { syn_NC_FLPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_FLPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_FLPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPL_AVDL_Generic_GJ
        print("Adding electrical projection: NC_FLPL_AVDL_Generic_GJ from FLPL to AVDL, with 1 connection(s)")

        h("objectvar syn_NC_FLPL_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPL_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0
        h("a_FLPL[0].Soma { syn_NC_FLPL_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDL[0].Soma { syn_NC_FLPL_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_FLPL_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPL_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPL_FLPR_Generic_GJ
        print("Adding electrical projection: NC_FLPL_FLPR_Generic_GJ from FLPL to FLPR, with 1 connection(s)")

        h("objectvar syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma], weight: 2.0
        h("a_FLPL[0].Soma { syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPR[0].Soma { syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPL[0].Soma { syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_FLPR[0].Soma { syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPL_FLPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPL_RIH_Generic_GJ
        print("Adding electrical projection: NC_FLPL_RIH_Generic_GJ from FLPL to RIH, with 1 connection(s)")

        h("objectvar syn_NC_FLPL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0
        h("a_FLPL[0].Soma { syn_NC_FLPL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIH[0].Soma { syn_NC_FLPL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_FLPL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIH[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPL_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPR_AVDL_Generic_GJ
        print("Adding electrical projection: NC_FLPR_AVDL_Generic_GJ from FLPR to AVDL, with 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDL[0].Soma], weight: 1.0
        h("a_FLPR[0].Soma { syn_NC_FLPR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDL[0].Soma { syn_NC_FLPR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_FLPR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPR_AVDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPR_AVDR_Generic_GJ
        print("Adding electrical projection: NC_FLPR_AVDR_Generic_GJ from FLPR to AVDR, with 1 connection(s)")

        h("objectvar syn_NC_FLPR_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPR_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVDR[0].Soma], weight: 1.0
        h("a_FLPR[0].Soma { syn_NC_FLPR_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVDR[0].Soma { syn_NC_FLPR_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_FLPR_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPR_AVDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_FLPR_FLPL_Generic_GJ
        print("Adding electrical projection: NC_FLPR_FLPL_Generic_GJ from FLPR to FLPL, with 1 connection(s)")

        h("objectvar syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_FLPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 2.0
        h("a_FLPR[0].Soma { syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPL[0].Soma { syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPR[0].Soma { syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_FLPL[0].Soma { syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_FLPR_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_FLPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_HSNL_HSNR_Generic_GJ
        print("Adding electrical projection: NC_HSNL_HSNR_Generic_GJ from HSNL to HSNR, with 1 connection(s)")

        h("objectvar syn_NC_HSNL_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_HSNL_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0
        h("a_HSNL[0].Soma { syn_NC_HSNL_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_HSNR[0].Soma { syn_NC_HSNL_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_HSNL_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_HSNR[0].Soma.v(0.5)")
        h("setpointer syn_NC_HSNL_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_HSNL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_HSNR_HSNL_Generic_GJ
        print("Adding electrical projection: NC_HSNR_HSNL_Generic_GJ from HSNR to HSNL, with 1 connection(s)")

        h("objectvar syn_NC_HSNR_HSNL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_HSNR_HSNL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNL[0].Soma], weight: 1.0
        h("a_HSNR[0].Soma { syn_NC_HSNR_HSNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_HSNL[0].Soma { syn_NC_HSNR_HSNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_HSNR_HSNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_HSNL[0].Soma.v(0.5)")
        h("setpointer syn_NC_HSNR_HSNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_HSNR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_HSNR_PVNR_Generic_GJ
        print("Adding electrical projection: NC_HSNR_PVNR_Generic_GJ from HSNR to PVNR, with 1 connection(s)")

        h("objectvar syn_NC_HSNR_PVNR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_HSNR_PVNR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma], weight: 1.0
        h("a_HSNR[0].Soma { syn_NC_HSNR_PVNR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVNR[0].Soma { syn_NC_HSNR_PVNR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_HSNR_PVNR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVNR[0].Soma.v(0.5)")
        h("setpointer syn_NC_HSNR_PVNR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_HSNR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1L_I1R_Generic_GJ
        print("Adding electrical projection: NC_I1L_I1R_Generic_GJ from I1L to I1R, with 1 connection(s)")

        h("objectvar syn_NC_I1L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 1.0
        h("a_I1L[0].Soma { syn_NC_I1L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1R[0].Soma { syn_NC_I1L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1R[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1L_I5_Generic_GJ
        print("Adding electrical projection: NC_I1L_I5_Generic_GJ from I1L to I5, with 1 connection(s)")

        h("objectvar syn_NC_I1L_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1L_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 1.0
        h("a_I1L[0].Soma { syn_NC_I1L_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I5[0].Soma { syn_NC_I1L_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1L_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I5[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1L_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1L_RIPL_Generic_GJ
        print("Adding electrical projection: NC_I1L_RIPL_Generic_GJ from I1L to RIPL, with 1 connection(s)")

        h("objectvar syn_NC_I1L_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1L_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0
        h("a_I1L[0].Soma { syn_NC_I1L_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIPL[0].Soma { syn_NC_I1L_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1L_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1L_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1L_RIPR_Generic_GJ
        print("Adding electrical projection: NC_I1L_RIPR_Generic_GJ from I1L to RIPR, with 1 connection(s)")

        h("objectvar syn_NC_I1L_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1L_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 1.0
        h("a_I1L[0].Soma { syn_NC_I1L_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIPR[0].Soma { syn_NC_I1L_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1L_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1L_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1R_I1L_Generic_GJ
        print("Adding electrical projection: NC_I1R_I1L_Generic_GJ from I1R to I1L, with 1 connection(s)")

        h("objectvar syn_NC_I1R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 1.0
        h("a_I1R[0].Soma { syn_NC_I1R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1L[0].Soma { syn_NC_I1R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1L[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1R_I5_Generic_GJ
        print("Adding electrical projection: NC_I1R_I5_Generic_GJ from I1R to I5, with 1 connection(s)")

        h("objectvar syn_NC_I1R_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1R_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 1.0
        h("a_I1R[0].Soma { syn_NC_I1R_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I5[0].Soma { syn_NC_I1R_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1R_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I5[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1R_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1R_RIPL_Generic_GJ
        print("Adding electrical projection: NC_I1R_RIPL_Generic_GJ from I1R to RIPL, with 1 connection(s)")

        h("objectvar syn_NC_I1R_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1R_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0
        h("a_I1R[0].Soma { syn_NC_I1R_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIPL[0].Soma { syn_NC_I1R_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1R_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1R_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I1R_RIPR_Generic_GJ
        print("Adding electrical projection: NC_I1R_RIPR_Generic_GJ from I1R to RIPR, with 1 connection(s)")

        h("objectvar syn_NC_I1R_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I1R_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 1.0
        h("a_I1R[0].Soma { syn_NC_I1R_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIPR[0].Soma { syn_NC_I1R_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I1R_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_I1R_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I1R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I2L_I1L_Generic_GJ
        print("Adding electrical projection: NC_I2L_I1L_Generic_GJ from I2L to I1L, with 1 connection(s)")

        h("objectvar syn_NC_I2L_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I2L_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 1.0
        h("a_I2L[0].Soma { syn_NC_I2L_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1L[0].Soma { syn_NC_I2L_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I2L_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1L[0].Soma.v(0.5)")
        h("setpointer syn_NC_I2L_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I2L_I1R_Generic_GJ
        print("Adding electrical projection: NC_I2L_I1R_Generic_GJ from I2L to I1R, with 1 connection(s)")

        h("objectvar syn_NC_I2L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I2L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 1.0
        h("a_I2L[0].Soma { syn_NC_I2L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1R[0].Soma { syn_NC_I2L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I2L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1R[0].Soma.v(0.5)")
        h("setpointer syn_NC_I2L_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I2L_M1_Generic_GJ
        print("Adding electrical projection: NC_I2L_M1_Generic_GJ from I2L to M1, with 1 connection(s)")

        h("objectvar syn_NC_I2L_M1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I2L_M1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0
        h("a_I2L[0].Soma { syn_NC_I2L_M1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M1[0].Soma { syn_NC_I2L_M1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I2L_M1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M1[0].Soma.v(0.5)")
        h("setpointer syn_NC_I2L_M1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I2R_I1L_Generic_GJ
        print("Adding electrical projection: NC_I2R_I1L_Generic_GJ from I2R to I1L, with 1 connection(s)")

        h("objectvar syn_NC_I2R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I2R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 1.0
        h("a_I2R[0].Soma { syn_NC_I2R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1L[0].Soma { syn_NC_I2R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I2R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1L[0].Soma.v(0.5)")
        h("setpointer syn_NC_I2R_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I2R_I1R_Generic_GJ
        print("Adding electrical projection: NC_I2R_I1R_Generic_GJ from I2R to I1R, with 1 connection(s)")

        h("objectvar syn_NC_I2R_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I2R_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 1.0
        h("a_I2R[0].Soma { syn_NC_I2R_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1R[0].Soma { syn_NC_I2R_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I2R_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1R[0].Soma.v(0.5)")
        h("setpointer syn_NC_I2R_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I2R_M1_Generic_GJ
        print("Adding electrical projection: NC_I2R_M1_Generic_GJ from I2R to M1, with 1 connection(s)")

        h("objectvar syn_NC_I2R_M1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I2R_M1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma], weight: 1.0
        h("a_I2R[0].Soma { syn_NC_I2R_M1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M1[0].Soma { syn_NC_I2R_M1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I2R_M1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M1[0].Soma.v(0.5)")
        h("setpointer syn_NC_I2R_M1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I3_M2L_Generic_GJ
        print("Adding electrical projection: NC_I3_M2L_Generic_GJ from I3 to M2L, with 1 connection(s)")

        h("objectvar syn_NC_I3_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I3_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma], weight: 1.0
        h("a_I3[0].Soma { syn_NC_I3_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2L[0].Soma { syn_NC_I3_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I3_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_I3_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I3_M2R_Generic_GJ
        print("Adding electrical projection: NC_I3_M2R_Generic_GJ from I3 to M2R, with 1 connection(s)")

        h("objectvar syn_NC_I3_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I3_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 1.0
        h("a_I3[0].Soma { syn_NC_I3_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2R[0].Soma { syn_NC_I3_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I3_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_I3_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I5_I1L_Generic_GJ
        print("Adding electrical projection: NC_I5_I1L_Generic_GJ from I5 to I1L, with 1 connection(s)")

        h("objectvar syn_NC_I5_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I5_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1L[0].Soma], weight: 1.0
        h("a_I5[0].Soma { syn_NC_I5_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1L[0].Soma { syn_NC_I5_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I5_I1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1L[0].Soma.v(0.5)")
        h("setpointer syn_NC_I5_I1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I5_I1R_Generic_GJ
        print("Adding electrical projection: NC_I5_I1R_Generic_GJ from I5 to I1R, with 1 connection(s)")

        h("objectvar syn_NC_I5_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I5_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I1R[0].Soma], weight: 1.0
        h("a_I5[0].Soma { syn_NC_I5_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I1R[0].Soma { syn_NC_I5_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I5_I1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I1R[0].Soma.v(0.5)")
        h("setpointer syn_NC_I5_I1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I5_M5_Generic_GJ
        print("Adding electrical projection: NC_I5_M5_Generic_GJ from I5 to M5, with 1 connection(s)")

        h("objectvar syn_NC_I5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 1.0
        h("a_I5[0].Soma { syn_NC_I5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_I5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M5[0].Soma.v(0.5)")
        h("setpointer syn_NC_I5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I6_M4_Generic_GJ
        print("Adding electrical projection: NC_I6_M4_Generic_GJ from I6 to M4, with 1 connection(s)")

        h("objectvar syn_NC_I6_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I6_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma], weight: 1.0
        h("a_I6[0].Soma { syn_NC_I6_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M4[0].Soma { syn_NC_I6_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_I6_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M4[0].Soma.v(0.5)")
        h("setpointer syn_NC_I6_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_I6_M5_Generic_GJ
        print("Adding electrical projection: NC_I6_M5_Generic_GJ from I6 to M5, with 1 connection(s)")

        h("objectvar syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 2.0
        h("a_I6[0].Soma { syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I6[0].Soma { syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M5[0].Soma { syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M5[0].Soma.v(0.5)")
        h("setpointer syn_NC_I6_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_I6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DL_IL1DR_Generic_GJ
        print("Adding electrical projection: NC_IL1DL_IL1DR_Generic_GJ from IL1DL to IL1DR, with 1 connection(s)")

        h("objectvar syn_NC_IL1DL_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DL_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0
        h("a_IL1DL[0].Soma { syn_NC_IL1DL_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DR[0].Soma { syn_NC_IL1DL_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DL_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DL_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DL_IL1L_Generic_GJ
        print("Adding electrical projection: NC_IL1DL_IL1L_Generic_GJ from IL1DL to IL1L, with 1 connection(s)")

        h("objectvar syn_NC_IL1DL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma], weight: 1.0
        h("a_IL1DL[0].Soma { syn_NC_IL1DL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1L[0].Soma { syn_NC_IL1DL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1L[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DL_OLLL_Generic_GJ
        print("Adding electrical projection: NC_IL1DL_OLLL_Generic_GJ from IL1DL to OLLL, with 1 connection(s)")

        h("objectvar syn_NC_IL1DL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 1.0
        h("a_IL1DL[0].Soma { syn_NC_IL1DL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLL[0].Soma { syn_NC_IL1DL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DL_RMEV_Generic_GJ
        print("Adding electrical projection: NC_IL1DL_RMEV_Generic_GJ from IL1DL to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_IL1DL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0
        h("a_IL1DL[0].Soma { syn_NC_IL1DL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_IL1DL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DR_IL1DL_Generic_GJ
        print("Adding electrical projection: NC_IL1DR_IL1DL_Generic_GJ from IL1DR to IL1DL, with 1 connection(s)")

        h("objectvar syn_NC_IL1DR_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DR_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 1.0
        h("a_IL1DR[0].Soma { syn_NC_IL1DR_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DL[0].Soma { syn_NC_IL1DR_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DR_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DL[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DR_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DR_IL1R_Generic_GJ
        print("Adding electrical projection: NC_IL1DR_IL1R_Generic_GJ from IL1DR to IL1R, with 1 connection(s)")

        h("objectvar syn_NC_IL1DR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0
        h("a_IL1DR[0].Soma { syn_NC_IL1DR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1R[0].Soma { syn_NC_IL1DR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1R[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DR_OLLR_Generic_GJ
        print("Adding electrical projection: NC_IL1DR_OLLR_Generic_GJ from IL1DR to OLLR, with 1 connection(s)")

        h("objectvar syn_NC_IL1DR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0
        h("a_IL1DR[0].Soma { syn_NC_IL1DR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLR[0].Soma { syn_NC_IL1DR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLLR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1DR_RMEV_Generic_GJ
        print("Adding electrical projection: NC_IL1DR_RMEV_Generic_GJ from IL1DR to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_IL1DR_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1DR_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0
        h("a_IL1DR[0].Soma { syn_NC_IL1DR_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_IL1DR_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1DR_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1DR_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1DR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1L_IL1DL_Generic_GJ
        print("Adding electrical projection: NC_IL1L_IL1DL_Generic_GJ from IL1L to IL1DL, with 1 connection(s)")

        h("objectvar syn_NC_IL1L_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1L_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 1.0
        h("a_IL1L[0].Soma { syn_NC_IL1L_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DL[0].Soma { syn_NC_IL1L_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1L_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DL[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1L_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1L_IL1VL_Generic_GJ
        print("Adding electrical projection: NC_IL1L_IL1VL_Generic_GJ from IL1L to IL1VL, with 1 connection(s)")

        h("objectvar syn_NC_IL1L_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1L_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 1.0
        h("a_IL1L[0].Soma { syn_NC_IL1L_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1VL[0].Soma { syn_NC_IL1L_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1L_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1VL[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1L_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1R_IL1DR_Generic_GJ
        print("Adding electrical projection: NC_IL1R_IL1DR_Generic_GJ from IL1R to IL1DR, with 1 connection(s)")

        h("objectvar syn_NC_IL1R_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1R_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0
        h("a_IL1R[0].Soma { syn_NC_IL1R_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DR[0].Soma { syn_NC_IL1R_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1R_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1R_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1R_IL1VR_Generic_GJ
        print("Adding electrical projection: NC_IL1R_IL1VR_Generic_GJ from IL1R to IL1VR, with 1 connection(s)")

        h("objectvar syn_NC_IL1R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0
        h("a_IL1R[0].Soma { syn_NC_IL1R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1VR[0].Soma { syn_NC_IL1R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1VR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1VL_IL1L_Generic_GJ
        print("Adding electrical projection: NC_IL1VL_IL1L_Generic_GJ from IL1VL to IL1L, with 1 connection(s)")

        h("objectvar syn_NC_IL1VL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1VL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1L[0].Soma], weight: 1.0
        h("a_IL1VL[0].Soma { syn_NC_IL1VL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1L[0].Soma { syn_NC_IL1VL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1VL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1L[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1VL_IL1L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1VL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1VL_IL1VR_Generic_GJ
        print("Adding electrical projection: NC_IL1VL_IL1VR_Generic_GJ from IL1VL to IL1VR, with 1 connection(s)")

        h("objectvar syn_NC_IL1VL_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1VL_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0
        h("a_IL1VL[0].Soma { syn_NC_IL1VL_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1VR[0].Soma { syn_NC_IL1VL_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1VL_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1VR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1VL_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1VL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1VL_RMED_Generic_GJ
        print("Adding electrical projection: NC_IL1VL_RMED_Generic_GJ from IL1VL to RMED, with 1 connection(s)")

        h("objectvar syn_NC_IL1VL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1VL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 1.0
        h("a_IL1VL[0].Soma { syn_NC_IL1VL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMED[0].Soma { syn_NC_IL1VL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1VL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMED[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1VL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1VL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1VR_IL1R_Generic_GJ
        print("Adding electrical projection: NC_IL1VR_IL1R_Generic_GJ from IL1VR to IL1R, with 1 connection(s)")

        h("objectvar syn_NC_IL1VR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1VR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1R[0].Soma], weight: 1.0
        h("a_IL1VR[0].Soma { syn_NC_IL1VR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1R[0].Soma { syn_NC_IL1VR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1VR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1R[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1VR_IL1R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1VR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1VR_IL1VL_Generic_GJ
        print("Adding electrical projection: NC_IL1VR_IL1VL_Generic_GJ from IL1VR to IL1VL, with 1 connection(s)")

        h("objectvar syn_NC_IL1VR_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1VR_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 1.0
        h("a_IL1VR[0].Soma { syn_NC_IL1VR_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1VL[0].Soma { syn_NC_IL1VR_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1VR_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1VL[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1VR_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1VR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL1VR_IL2R_Generic_GJ
        print("Adding electrical projection: NC_IL1VR_IL2R_Generic_GJ from IL1VR to IL2R, with 1 connection(s)")

        h("objectvar syn_NC_IL1VR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL1VR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma], weight: 1.0
        h("a_IL1VR[0].Soma { syn_NC_IL1VR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL2R[0].Soma { syn_NC_IL1VR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL1VR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL1VR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL1VR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL2L_RMGL_Generic_GJ
        print("Adding electrical projection: NC_IL2L_RMGL_Generic_GJ from IL2L to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_IL2L_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL2L_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0
        h("a_IL2L[0].Soma { syn_NC_IL2L_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_IL2L_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL2L_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL2L_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL2R_IL1VR_Generic_GJ
        print("Adding electrical projection: NC_IL2R_IL1VR_Generic_GJ from IL2R to IL1VR, with 1 connection(s)")

        h("objectvar syn_NC_IL2R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL2R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VR[0].Soma], weight: 1.0
        h("a_IL2R[0].Soma { syn_NC_IL2R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1VR[0].Soma { syn_NC_IL2R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL2R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1VR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL2R_IL1VR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC2_VC1_Generic_GJ
        print("Adding electrical projection: NC_VC2_VC1_Generic_GJ from VC2 to VC1, with 1 connection(s)")

        h("objectvar syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma], weight: 6.0
        h("a_VC2[0].Soma { syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC1[0].Soma { syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC2[0].Soma { syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_VC1[0].Soma { syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC2_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC2_VC3_Generic_GJ
        print("Adding electrical projection: NC_VC2_VC3_Generic_GJ from VC2 to VC3, with 1 connection(s)")

        h("objectvar syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 2.0
        h("a_VC2[0].Soma { syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC2[0].Soma { syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VC3[0].Soma { syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC2_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC3_DD4_Generic_GJ
        print("Adding electrical projection: NC_VC3_DD4_Generic_GJ from VC3 to DD4, with 1 connection(s)")

        h("objectvar syn_NC_VC3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 1.0
        h("a_VC3[0].Soma { syn_NC_VC3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD4[0].Soma { syn_NC_VC3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC3_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC3_VC1_Generic_GJ
        print("Adding electrical projection: NC_VC3_VC1_Generic_GJ from VC3 to VC1, with 1 connection(s)")

        h("objectvar syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma], weight: 2.0
        h("a_VC3[0].Soma { syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC1[0].Soma { syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VC1[0].Soma { syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC3_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC3_VC2_Generic_GJ
        print("Adding electrical projection: NC_VC3_VC2_Generic_GJ from VC3 to VC2, with 1 connection(s)")

        h("objectvar syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 2.0
        h("a_VC3[0].Soma { syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC2[0].Soma { syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VC2[0].Soma { syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC3_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC3_VC4_Generic_GJ
        print("Adding electrical projection: NC_VC3_VC4_Generic_GJ from VC3 to VC4, with 1 connection(s)")

        h("objectvar syn_NC_VC3_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC3_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma], weight: 1.0
        h("a_VC3[0].Soma { syn_NC_VC3_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC4[0].Soma { syn_NC_VC3_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC3_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC3_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC3_VC5_Generic_GJ
        print("Adding electrical projection: NC_VC3_VC5_Generic_GJ from VC3 to VC5, with 1 connection(s)")

        h("objectvar syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma], weight: 2.0
        h("a_VC3[0].Soma { syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC5[0].Soma { syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VC5[0].Soma { syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC3_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC4_AVFR_Generic_GJ
        print("Adding electrical projection: NC_VC4_AVFR_Generic_GJ from VC4 to AVFR, with 1 connection(s)")

        h("objectvar syn_NC_VC4_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC4_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFR[0].Soma], weight: 1.0
        h("a_VC4[0].Soma { syn_NC_VC4_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFR[0].Soma { syn_NC_VC4_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC4_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC4_AVFR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC4_VC3_Generic_GJ
        print("Adding electrical projection: NC_VC4_VC3_Generic_GJ from VC4 to VC3, with 1 connection(s)")

        h("objectvar syn_NC_VC4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 1.0
        h("a_VC4[0].Soma { syn_NC_VC4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC4_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC4_VC5_Generic_GJ
        print("Adding electrical projection: NC_VC4_VC5_Generic_GJ from VC4 to VC5, with 1 connection(s)")

        h("objectvar syn_NC_VC4_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC4_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma], weight: 1.0
        h("a_VC4[0].Soma { syn_NC_VC4_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC5[0].Soma { syn_NC_VC4_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC4_VC5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC4_VC5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC5_VC3_Generic_GJ
        print("Adding electrical projection: NC_VC5_VC3_Generic_GJ from VC5 to VC3, with 1 connection(s)")

        h("objectvar syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 2.0
        h("a_VC5[0].Soma { syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC5[0].Soma { syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VC3[0].Soma { syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC5_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC5_VC4_Generic_GJ
        print("Adding electrical projection: NC_VC5_VC4_Generic_GJ from VC5 to VC4, with 1 connection(s)")

        h("objectvar syn_NC_VC5_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC5_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC4[0].Soma], weight: 1.0
        h("a_VC5[0].Soma { syn_NC_VC5_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC4[0].Soma { syn_NC_VC5_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC5_VC4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC5_VC4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_DD1_Generic_GJ
        print("Adding electrical projection: NC_VD1_DD1_Generic_GJ from VD1 to DD1, with 1 connection(s)")

        h("objectvar syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 4.0
        h("a_VD1[0].Soma { syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD1[0].Soma { syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_DD1[0].Soma { syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_DVC_Generic_GJ
        print("Adding electrical projection: NC_VD1_DVC_Generic_GJ from VD1 to DVC, with 1 connection(s)")

        h("objectvar syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 5.0
        h("a_VD1[0].Soma { syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_DVC[0].Soma { syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_RIFL_Generic_GJ
        print("Adding electrical projection: NC_VD1_RIFL_Generic_GJ from VD1 to RIFL, with 1 connection(s)")

        h("objectvar syn_NC_VD1_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma], weight: 1.0
        h("a_VD1[0].Soma { syn_NC_VD1_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIFL[0].Soma { syn_NC_VD1_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD1_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_RIFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_RIGL_Generic_GJ
        print("Adding electrical projection: NC_VD1_RIGL_Generic_GJ from VD1 to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 2.0
        h("a_VD1[0].Soma { syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIGL[0].Soma { syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_SMDDR_Generic_GJ
        print("Adding electrical projection: NC_VD1_SMDDR_Generic_GJ from VD1 to SMDDR, with 1 connection(s)")

        h("objectvar syn_NC_VD1_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0
        h("a_VD1[0].Soma { syn_NC_VD1_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDR[0].Soma { syn_NC_VD1_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD1_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_VA2_Generic_GJ
        print("Adding electrical projection: NC_VD1_VA2_Generic_GJ from VD1 to VA2, with 1 connection(s)")

        h("objectvar syn_NC_VD1_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 1.0
        h("a_VD1[0].Soma { syn_NC_VD1_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_VD1_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD1_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_VC1_Generic_GJ
        print("Adding electrical projection: NC_VD1_VC1_Generic_GJ from VD1 to VC1, with 1 connection(s)")

        h("objectvar syn_NC_VD1_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma], weight: 1.0
        h("a_VD1[0].Soma { syn_NC_VD1_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC1[0].Soma { syn_NC_VD1_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD1_VC1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_VC1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD1_VD2_Generic_GJ
        print("Adding electrical projection: NC_VD1_VD2_Generic_GJ from VD1 to VD2, with 1 connection(s)")

        h("objectvar syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 7.0
        h("a_VD1[0].Soma { syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_VD2[0].Soma { syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD1_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD10_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VD10_AVBR_Generic_GJ from VD10 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VD10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VD10[0].Soma { syn_NC_VD10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VD10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD10_DD5_Generic_GJ
        print("Adding electrical projection: NC_VD10_DD5_Generic_GJ from VD10 to DD5, with 1 connection(s)")

        h("objectvar syn_NC_VD10_DD5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD10_DD5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD5[0].Soma], weight: 1.0
        h("a_VD10[0].Soma { syn_NC_VD10_DD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD5[0].Soma { syn_NC_VD10_DD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD10_DD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD10_DD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD10_DVC_Generic_GJ
        print("Adding electrical projection: NC_VD10_DVC_Generic_GJ from VD10 to DVC, with 1 connection(s)")

        h("objectvar syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 4.0
        h("a_VD10[0].Soma { syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD10[0].Soma { syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_DVC[0].Soma { syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD10_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD10_VD9_Generic_GJ
        print("Adding electrical projection: NC_VD10_VD9_Generic_GJ from VD10 to VD9, with 1 connection(s)")

        h("objectvar syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma], weight: 5.0
        h("a_VD10[0].Soma { syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD9[0].Soma { syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD10[0].Soma { syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_VD9[0].Soma { syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD10_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD13_PVPL_Generic_GJ
        print("Adding electrical projection: NC_VD13_PVPL_Generic_GJ from VD13 to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 2.0
        h("a_VD13[0].Soma { syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD13[0].Soma { syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVPL[0].Soma { syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD13_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD13[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD2_AS1_Generic_GJ
        print("Adding electrical projection: NC_VD2_AS1_Generic_GJ from VD2 to AS1, with 1 connection(s)")

        h("objectvar syn_NC_VD2_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD2_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0
        h("a_VD2[0].Soma { syn_NC_VD2_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS1[0].Soma { syn_NC_VD2_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD2_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD2_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD2_DD1_Generic_GJ
        print("Adding electrical projection: NC_VD2_DD1_Generic_GJ from VD2 to DD1, with 1 connection(s)")

        h("objectvar syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD1[0].Soma], weight: 2.0
        h("a_VD2[0].Soma { syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD1[0].Soma { syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DD1[0].Soma { syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD2_DD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD2_VA2_Generic_GJ
        print("Adding electrical projection: NC_VD2_VA2_Generic_GJ from VD2 to VA2, with 1 connection(s)")

        h("objectvar syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 3.0
        h("a_VD2[0].Soma { syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA2[0].Soma { syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD2_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD2_VD1_Generic_GJ
        print("Adding electrical projection: NC_VD2_VD1_Generic_GJ from VD2 to VD1, with 1 connection(s)")

        h("objectvar syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 7.0
        h("a_VD2[0].Soma { syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_VD1[0].Soma { syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD2_VD3_Generic_GJ
        print("Adding electrical projection: NC_VD2_VD3_Generic_GJ from VD2 to VD3, with 1 connection(s)")

        h("objectvar syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 2.0
        h("a_VD2[0].Soma { syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD3[0].Soma { syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD3[0].Soma { syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD2_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD3_PVPL_Generic_GJ
        print("Adding electrical projection: NC_VD3_PVPL_Generic_GJ from VD3 to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_VD3_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD3_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0
        h("a_VD3[0].Soma { syn_NC_VD3_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_VD3_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD3_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD3_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD3_VD2_Generic_GJ
        print("Adding electrical projection: NC_VD3_VD2_Generic_GJ from VD3 to VD2, with 1 connection(s)")

        h("objectvar syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 2.0
        h("a_VD3[0].Soma { syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD3[0].Soma { syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD2[0].Soma { syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD3_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD3_VD4_Generic_GJ
        print("Adding electrical projection: NC_VD3_VD4_Generic_GJ from VD3 to VD4, with 1 connection(s)")

        h("objectvar syn_NC_VD3_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD3_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 1.0
        h("a_VD3[0].Soma { syn_NC_VD3_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD4[0].Soma { syn_NC_VD3_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD3_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD3_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD4_DD2_Generic_GJ
        print("Adding electrical projection: NC_VD4_DD2_Generic_GJ from VD4 to DD2, with 1 connection(s)")

        h("objectvar syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD2[0].Soma], weight: 2.0
        h("a_VD4[0].Soma { syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD2[0].Soma { syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD4[0].Soma { syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DD2[0].Soma { syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD4_DD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD4_PVPR_Generic_GJ
        print("Adding electrical projection: NC_VD4_PVPR_Generic_GJ from VD4 to PVPR, with 1 connection(s)")

        h("objectvar syn_NC_VD4_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD4_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0
        h("a_VD4[0].Soma { syn_NC_VD4_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_VD4_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD4_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD4_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD4_VD3_Generic_GJ
        print("Adding electrical projection: NC_VD4_VD3_Generic_GJ from VD4 to VD3, with 1 connection(s)")

        h("objectvar syn_NC_VD4_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD4_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0
        h("a_VD4[0].Soma { syn_NC_VD4_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD3[0].Soma { syn_NC_VD4_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD4_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD4_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD4_VD5_Generic_GJ
        print("Adding electrical projection: NC_VD4_VD5_Generic_GJ from VD4 to VD5, with 1 connection(s)")

        h("objectvar syn_NC_VD4_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD4_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 1.0
        h("a_VD4[0].Soma { syn_NC_VD4_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD5[0].Soma { syn_NC_VD4_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD4_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD4_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD5_PVPR_Generic_GJ
        print("Adding electrical projection: NC_VD5_PVPR_Generic_GJ from VD5 to PVPR, with 1 connection(s)")

        h("objectvar syn_NC_VD5_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD5_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0
        h("a_VD5[0].Soma { syn_NC_VD5_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_VD5_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD5_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD5_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD5_VD4_Generic_GJ
        print("Adding electrical projection: NC_VD5_VD4_Generic_GJ from VD5 to VD4, with 1 connection(s)")

        h("objectvar syn_NC_VD5_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD5_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 1.0
        h("a_VD5[0].Soma { syn_NC_VD5_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD4[0].Soma { syn_NC_VD5_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD5_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD5_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD5_VD6_Generic_GJ
        print("Adding electrical projection: NC_VD5_VD6_Generic_GJ from VD5 to VD6, with 1 connection(s)")

        h("objectvar syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 2.0
        h("a_VD5[0].Soma { syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD6[0].Soma { syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD5[0].Soma { syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD6[0].Soma { syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD6[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD5_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD6_VD5_Generic_GJ
        print("Adding electrical projection: NC_VD6_VD5_Generic_GJ from VD6 to VD5, with 1 connection(s)")

        h("objectvar syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 2.0
        h("a_VD6[0].Soma { syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD5[0].Soma { syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD6[0].Soma { syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD5[0].Soma { syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD6_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD6_VD7_Generic_GJ
        print("Adding electrical projection: NC_VD6_VD7_Generic_GJ from VD6 to VD7, with 1 connection(s)")

        h("objectvar syn_NC_VD6_VD7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD6_VD7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 1.0
        h("a_VD6[0].Soma { syn_NC_VD6_VD7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD7[0].Soma { syn_NC_VD6_VD7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD6_VD7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD7[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD6_VD7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD7_VA9_Generic_GJ
        print("Adding electrical projection: NC_VD7_VA9_Generic_GJ from VD7 to VA9, with 1 connection(s)")

        h("objectvar syn_NC_VD7_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD7_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_VD7[0].Soma { syn_NC_VD7_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_VD7_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD7_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD7_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD7_VD6_Generic_GJ
        print("Adding electrical projection: NC_VD7_VD6_Generic_GJ from VD7 to VD6, with 1 connection(s)")

        h("objectvar syn_NC_VD7_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD7_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD6[0].Soma], weight: 1.0
        h("a_VD7[0].Soma { syn_NC_VD7_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD6[0].Soma { syn_NC_VD7_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD7_VD6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD6[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD7_VD6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD8_DD4_Generic_GJ
        print("Adding electrical projection: NC_VD8_DD4_Generic_GJ from VD8 to DD4, with 1 connection(s)")

        h("objectvar syn_NC_VD8_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD8_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DD4[0].Soma], weight: 1.0
        h("a_VD8[0].Soma { syn_NC_VD8_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DD4[0].Soma { syn_NC_VD8_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD8_DD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD8_DD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD8_VA8_Generic_GJ
        print("Adding electrical projection: NC_VD8_VA8_Generic_GJ from VD8 to VA8, with 1 connection(s)")

        h("objectvar syn_NC_VD8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 1.0
        h("a_VD8[0].Soma { syn_NC_VD8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VD8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD9_PDER_Generic_GJ
        print("Adding electrical projection: NC_VD9_PDER_Generic_GJ from VD9 to PDER, with 1 connection(s)")

        h("objectvar syn_NC_VD9_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD9_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0
        h("a_VD9[0].Soma { syn_NC_VD9_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDER[0].Soma { syn_NC_VD9_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VD9_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDER[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD9_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VD9_VD10_Generic_GJ
        print("Adding electrical projection: NC_VD9_VD10_Generic_GJ from VD9 to VD10, with 1 connection(s)")

        h("objectvar syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD10[0].Soma], weight: 5.0
        h("a_VD9[0].Soma { syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD10[0].Soma { syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD9[0].Soma { syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_VD10[0].Soma { syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD10[0].Soma.v(0.5)")
        h("setpointer syn_NC_VD9_VD10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VD9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL2R_RMGR_Generic_GJ
        print("Adding electrical projection: NC_IL2R_RMGR_Generic_GJ from IL2R to RMGR, with 1 connection(s)")

        h("objectvar syn_NC_IL2R_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL2R_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0
        h("a_IL2R[0].Soma { syn_NC_IL2R_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGR[0].Soma { syn_NC_IL2R_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL2R_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL2R_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_IL2R_URXR_Generic_GJ
        print("Adding electrical projection: NC_IL2R_URXR_Generic_GJ from IL2R to URXR, with 1 connection(s)")

        h("objectvar syn_NC_IL2R_URXR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_IL2R_URXR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0
        h("a_IL2R[0].Soma { syn_NC_IL2R_URXR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URXR[0].Soma { syn_NC_IL2R_URXR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_IL2R_URXR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URXR[0].Soma.v(0.5)")
        h("setpointer syn_NC_IL2R_URXR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_IL2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_LUAL_AVAL_Generic_GJ
        print("Adding electrical projection: NC_LUAL_AVAL_Generic_GJ from LUAL to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_LUAL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_LUAL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_LUAL[0].Soma { syn_NC_LUAL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_LUAL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_LUAL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_LUAL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_LUAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_LUAL_PLML_Generic_GJ
        print("Adding electrical projection: NC_LUAL_PLML_Generic_GJ from LUAL to PLML, with 1 connection(s)")

        h("objectvar syn_NC_LUAL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_LUAL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma], weight: 1.0
        h("a_LUAL[0].Soma { syn_NC_LUAL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLML[0].Soma { syn_NC_LUAL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_LUAL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PLML[0].Soma.v(0.5)")
        h("setpointer syn_NC_LUAL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_LUAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_LUAL_PVR_Generic_GJ
        print("Adding electrical projection: NC_LUAL_PVR_Generic_GJ from LUAL to PVR, with 1 connection(s)")

        h("objectvar syn_NC_LUAL_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_LUAL_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0
        h("a_LUAL[0].Soma { syn_NC_LUAL_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_LUAL_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_LUAL_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_LUAL_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_LUAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_LUAR_PLMR_Generic_GJ
        print("Adding electrical projection: NC_LUAR_PLMR_Generic_GJ from LUAR to PLMR, with 1 connection(s)")

        h("objectvar syn_NC_LUAR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_LUAR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma], weight: 1.0
        h("a_LUAR[0].Soma { syn_NC_LUAR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLMR[0].Soma { syn_NC_LUAR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_LUAR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PLMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_LUAR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_LUAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_LUAR_PVR_Generic_GJ
        print("Adding electrical projection: NC_LUAR_PVR_Generic_GJ from LUAR to PVR, with 1 connection(s)")

        h("objectvar syn_NC_LUAR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_LUAR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 1.0
        h("a_LUAR[0].Soma { syn_NC_LUAR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_LUAR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_LUAR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_LUAR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_LUAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M1_I2L_Generic_GJ
        print("Adding electrical projection: NC_M1_I2L_Generic_GJ from M1 to I2L, with 1 connection(s)")

        h("objectvar syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2L[0].Soma], weight: 2.0
        h("a_M1[0].Soma { syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I2L[0].Soma { syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M1[0].Soma { syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_I2L[0].Soma { syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_M1_I2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M1_I2R_Generic_GJ
        print("Adding electrical projection: NC_M1_I2R_Generic_GJ from M1 to I2R, with 1 connection(s)")

        h("objectvar syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I2R[0].Soma], weight: 2.0
        h("a_M1[0].Soma { syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I2R[0].Soma { syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M1[0].Soma { syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_I2R[0].Soma { syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_M1_I2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M1_I3_Generic_GJ
        print("Adding electrical projection: NC_M1_I3_Generic_GJ from M1 to I3, with 1 connection(s)")

        h("objectvar syn_NC_M1_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M1_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0
        h("a_M1[0].Soma { syn_NC_M1_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I3[0].Soma { syn_NC_M1_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M1_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I3[0].Soma.v(0.5)")
        h("setpointer syn_NC_M1_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M1_I4_Generic_GJ
        print("Adding electrical projection: NC_M1_I4_Generic_GJ from M1 to I4, with 1 connection(s)")

        h("objectvar syn_NC_M1_I4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M1_I4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I4[0].Soma], weight: 1.0
        h("a_M1[0].Soma { syn_NC_M1_I4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I4[0].Soma { syn_NC_M1_I4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M1_I4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I4[0].Soma.v(0.5)")
        h("setpointer syn_NC_M1_I4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2L_I3_Generic_GJ
        print("Adding electrical projection: NC_M2L_I3_Generic_GJ from M2L to I3, with 1 connection(s)")

        h("objectvar syn_NC_M2L_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2L_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0
        h("a_M2L[0].Soma { syn_NC_M2L_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I3[0].Soma { syn_NC_M2L_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2L_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I3[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2L_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2L_M2R_Generic_GJ
        print("Adding electrical projection: NC_M2L_M2R_Generic_GJ from M2L to M2R, with 1 connection(s)")

        h("objectvar syn_NC_M2L_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2L_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 1.0
        h("a_M2L[0].Soma { syn_NC_M2L_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2R[0].Soma { syn_NC_M2L_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2L_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2L_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2L_M5_Generic_GJ
        print("Adding electrical projection: NC_M2L_M5_Generic_GJ from M2L to M5, with 1 connection(s)")

        h("objectvar syn_NC_M2L_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2L_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 1.0
        h("a_M2L[0].Soma { syn_NC_M2L_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M2L_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2L_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M5[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2L_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2R_I3_Generic_GJ
        print("Adding electrical projection: NC_M2R_I3_Generic_GJ from M2R to I3, with 1 connection(s)")

        h("objectvar syn_NC_M2R_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2R_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I3[0].Soma], weight: 1.0
        h("a_M2R[0].Soma { syn_NC_M2R_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I3[0].Soma { syn_NC_M2R_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2R_I3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I3[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2R_I3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2R_M3L_Generic_GJ
        print("Adding electrical projection: NC_M2R_M3L_Generic_GJ from M2R to M3L, with 1 connection(s)")

        h("objectvar syn_NC_M2R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma], weight: 1.0
        h("a_M2R[0].Soma { syn_NC_M2R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M3L[0].Soma { syn_NC_M2R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M3L[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2R_M3R_Generic_GJ
        print("Adding electrical projection: NC_M2R_M3R_Generic_GJ from M2R to M3R, with 1 connection(s)")

        h("objectvar syn_NC_M2R_M3R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2R_M3R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma], weight: 1.0
        h("a_M2R[0].Soma { syn_NC_M2R_M3R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M3R[0].Soma { syn_NC_M2R_M3R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2R_M3R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M3R[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2R_M3R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2R_M5_Generic_GJ
        print("Adding electrical projection: NC_M2R_M5_Generic_GJ from M2R to M5, with 1 connection(s)")

        h("objectvar syn_NC_M2R_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2R_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 1.0
        h("a_M2R[0].Soma { syn_NC_M2R_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M2R_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2R_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M5[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2R_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M2R_MI_Generic_GJ
        print("Adding electrical projection: NC_M2R_MI_Generic_GJ from M2R to MI, with 1 connection(s)")

        h("objectvar syn_NC_M2R_MI_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M2R_MI_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MI[0].Soma], weight: 1.0
        h("a_M2R[0].Soma { syn_NC_M2R_MI_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MI[0].Soma { syn_NC_M2R_MI_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M2R_MI_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_MI[0].Soma.v(0.5)")
        h("setpointer syn_NC_M2R_MI_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M2R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M3L_M3R_Generic_GJ
        print("Adding electrical projection: NC_M3L_M3R_Generic_GJ from M3L to M3R, with 1 connection(s)")

        h("objectvar syn_NC_M3L_M3R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M3L_M3R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma], weight: 1.0
        h("a_M3L[0].Soma { syn_NC_M3L_M3R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M3R[0].Soma { syn_NC_M3L_M3R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M3L_M3R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M3R[0].Soma.v(0.5)")
        h("setpointer syn_NC_M3L_M3R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M3L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M3L_MCL_Generic_GJ
        print("Adding electrical projection: NC_M3L_MCL_Generic_GJ from M3L to MCL, with 1 connection(s)")

        h("objectvar syn_NC_M3L_MCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M3L_MCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma], weight: 1.0
        h("a_M3L[0].Soma { syn_NC_M3L_MCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCL[0].Soma { syn_NC_M3L_MCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M3L_MCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_MCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_M3L_MCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M3L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M3L_MCR_Generic_GJ
        print("Adding electrical projection: NC_M3L_MCR_Generic_GJ from M3L to MCR, with 1 connection(s)")

        h("objectvar syn_NC_M3L_MCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M3L_MCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma], weight: 1.0
        h("a_M3L[0].Soma { syn_NC_M3L_MCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCR[0].Soma { syn_NC_M3L_MCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M3L_MCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_MCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_M3L_MCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M3L[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M3R_M3L_Generic_GJ
        print("Adding electrical projection: NC_M3R_M3L_Generic_GJ from M3R to M3L, with 1 connection(s)")

        h("objectvar syn_NC_M3R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M3R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M3L[0].Soma], weight: 1.0
        h("a_M3R[0].Soma { syn_NC_M3R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M3L[0].Soma { syn_NC_M3R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M3R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M3L[0].Soma.v(0.5)")
        h("setpointer syn_NC_M3R_M3L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M3R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M3R_MCL_Generic_GJ
        print("Adding electrical projection: NC_M3R_MCL_Generic_GJ from M3R to MCL, with 1 connection(s)")

        h("objectvar syn_NC_M3R_MCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M3R_MCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma], weight: 1.0
        h("a_M3R[0].Soma { syn_NC_M3R_MCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCL[0].Soma { syn_NC_M3R_MCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M3R_MCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_MCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_M3R_MCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M3R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M3R_MCR_Generic_GJ
        print("Adding electrical projection: NC_M3R_MCR_Generic_GJ from M3R to MCR, with 1 connection(s)")

        h("objectvar syn_NC_M3R_MCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M3R_MCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M3R[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma], weight: 1.0
        h("a_M3R[0].Soma { syn_NC_M3R_MCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCR[0].Soma { syn_NC_M3R_MCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M3R_MCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_MCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_M3R_MCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M3R[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M4_I6_Generic_GJ
        print("Adding electrical projection: NC_M4_I6_Generic_GJ from M4 to I6, with 1 connection(s)")

        h("objectvar syn_NC_M4_I6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M4_I6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 1.0
        h("a_M4[0].Soma { syn_NC_M4_I6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I6[0].Soma { syn_NC_M4_I6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M4_I6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I6[0].Soma.v(0.5)")
        h("setpointer syn_NC_M4_I6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M4_M2L_Generic_GJ
        print("Adding electrical projection: NC_M4_M2L_Generic_GJ from M4 to M2L, with 1 connection(s)")

        h("objectvar syn_NC_M4_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M4_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma], weight: 1.0
        h("a_M4[0].Soma { syn_NC_M4_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2L[0].Soma { syn_NC_M4_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M4_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_M4_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M4_M2R_Generic_GJ
        print("Adding electrical projection: NC_M4_M2R_Generic_GJ from M4 to M2R, with 1 connection(s)")

        h("objectvar syn_NC_M4_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M4_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 1.0
        h("a_M4[0].Soma { syn_NC_M4_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2R[0].Soma { syn_NC_M4_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M4_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_M4_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M4_M4_Generic_GJ
        print("Adding electrical projection: NC_M4_M4_Generic_GJ from M4 to M4, with 1 connection(s)")

        h("objectvar syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma], weight: 6.0
        h("a_M4[0].Soma { syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M4[0].Soma { syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M4[0].Soma { syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_M4[0].Soma { syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M4[0].Soma.v(0.5)")
        h("setpointer syn_NC_M4_M4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M4_M5_Generic_GJ
        print("Adding electrical projection: NC_M4_M5_Generic_GJ from M4 to M5, with 1 connection(s)")

        h("objectvar syn_NC_M4_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M4_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 1.0
        h("a_M4[0].Soma { syn_NC_M4_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M4_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M4_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M5[0].Soma.v(0.5)")
        h("setpointer syn_NC_M4_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M5_I5_Generic_GJ
        print("Adding electrical projection: NC_M5_I5_Generic_GJ from M5 to I5, with 1 connection(s)")

        h("objectvar syn_NC_M5_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M5_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I5[0].Soma], weight: 1.0
        h("a_M5[0].Soma { syn_NC_M5_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I5[0].Soma { syn_NC_M5_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M5_I5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I5[0].Soma.v(0.5)")
        h("setpointer syn_NC_M5_I5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M5_I6_Generic_GJ
        print("Adding electrical projection: NC_M5_I6_Generic_GJ from M5 to I6, with 1 connection(s)")

        h("objectvar syn_NC_M5_I6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M5_I6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_I6[0].Soma], weight: 1.0
        h("a_M5[0].Soma { syn_NC_M5_I6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_I6[0].Soma { syn_NC_M5_I6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_M5_I6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_I6[0].Soma.v(0.5)")
        h("setpointer syn_NC_M5_I6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M5_M2L_Generic_GJ
        print("Adding electrical projection: NC_M5_M2L_Generic_GJ from M5 to M2L, with 1 connection(s)")

        h("objectvar syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma], weight: 2.0
        h("a_M5[0].Soma { syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2L[0].Soma { syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M2L[0].Soma { syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_M5_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M5_M2R_Generic_GJ
        print("Adding electrical projection: NC_M5_M2R_Generic_GJ from M5 to M2R, with 1 connection(s)")

        h("objectvar syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 2.0
        h("a_M5[0].Soma { syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2R[0].Soma { syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M2R[0].Soma { syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_M5_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_M5_M5_Generic_GJ
        print("Adding electrical projection: NC_M5_M5_Generic_GJ from M5 to M5, with 1 connection(s)")

        h("objectvar syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M5[0].Soma], weight: 4.0
        h("a_M5[0].Soma { syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M5[0].Soma { syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_M5[0].Soma { syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M5[0].Soma.v(0.5)")
        h("setpointer syn_NC_M5_M5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_M5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_MCL_M2L_Generic_GJ
        print("Adding electrical projection: NC_MCL_M2L_Generic_GJ from MCL to M2L, with 1 connection(s)")

        h("objectvar syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma], weight: 2.0
        h("a_MCL[0].Soma { syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2L[0].Soma { syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCL[0].Soma { syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M2L[0].Soma { syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_MCL_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_MCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_MCL_M2R_Generic_GJ
        print("Adding electrical projection: NC_MCL_M2R_Generic_GJ from MCL to M2R, with 1 connection(s)")

        h("objectvar syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 2.0
        h("a_MCL[0].Soma { syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2R[0].Soma { syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCL[0].Soma { syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M2R[0].Soma { syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_MCL_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_MCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_MCR_M2L_Generic_GJ
        print("Adding electrical projection: NC_MCR_M2L_Generic_GJ from MCR to M2L, with 1 connection(s)")

        h("objectvar syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2L[0].Soma], weight: 2.0
        h("a_MCR[0].Soma { syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2L[0].Soma { syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCR[0].Soma { syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M2L[0].Soma { syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_MCR_M2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_MCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_MCR_M2R_Generic_GJ
        print("Adding electrical projection: NC_MCR_M2R_Generic_GJ from MCR to M2R, with 1 connection(s)")

        h("objectvar syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_MCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_M2R[0].Soma], weight: 2.0
        h("a_MCR[0].Soma { syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_M2R[0].Soma { syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_MCR[0].Soma { syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_M2R[0].Soma { syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_M2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_MCR_M2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_MCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLLL_IL1DL_Generic_GJ
        print("Adding electrical projection: NC_OLLL_IL1DL_Generic_GJ from OLLL to IL1DL, with 1 connection(s)")

        h("objectvar syn_NC_OLLL_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLLL_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 1.0
        h("a_OLLL[0].Soma { syn_NC_OLLL_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DL[0].Soma { syn_NC_OLLL_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLLL_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLLL_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLLL_OLLR_Generic_GJ
        print("Adding electrical projection: NC_OLLL_OLLR_Generic_GJ from OLLL to OLLR, with 1 connection(s)")

        h("objectvar syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 2.0
        h("a_OLLL[0].Soma { syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLR[0].Soma { syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLL[0].Soma { syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_OLLR[0].Soma { syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLLR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLLL_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLLL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_OLLL_RIGL_Generic_GJ from OLLL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_OLLL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLLL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_OLLL[0].Soma { syn_NC_OLLL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_OLLL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLLL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLLL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLLL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLLR_IL1DR_Generic_GJ
        print("Adding electrical projection: NC_OLLR_IL1DR_Generic_GJ from OLLR to IL1DR, with 1 connection(s)")

        h("objectvar syn_NC_OLLR_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLLR_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0
        h("a_OLLR[0].Soma { syn_NC_OLLR_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DR[0].Soma { syn_NC_OLLR_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLLR_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLLR_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLLR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLLR_OLLL_Generic_GJ
        print("Adding electrical projection: NC_OLLR_OLLL_Generic_GJ from OLLR to OLLL, with 1 connection(s)")

        h("objectvar syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 2.0
        h("a_OLLR[0].Soma { syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLL[0].Soma { syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLR[0].Soma { syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_OLLL[0].Soma { syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLLR_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLLR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLLR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_OLLR_RIGR_Generic_GJ from OLLR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_OLLR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLLR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_OLLR[0].Soma { syn_NC_OLLR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_OLLR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLLR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLLR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLLR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDL_CEPDL_Generic_GJ
        print("Adding electrical projection: NC_OLQDL_CEPDL_Generic_GJ from OLQDL to CEPDL, with 1 connection(s)")

        h("objectvar syn_NC_OLQDL_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDL_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 1.0
        h("a_OLQDL[0].Soma { syn_NC_OLQDL_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPDL[0].Soma { syn_NC_OLQDL_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDL_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDL_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_OLQDL_RIBL_Generic_GJ from OLQDL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 2.0
        h("a_OLQDL[0].Soma { syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDL[0].Soma { syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIBL[0].Soma { syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_OLQDL_RIGL_Generic_GJ from OLQDL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_OLQDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_OLQDL[0].Soma { syn_NC_OLQDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_OLQDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDL_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_OLQDL_RMDVL_Generic_GJ from OLQDL to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_OLQDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_OLQDL[0].Soma { syn_NC_OLQDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_OLQDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDL_URBL_Generic_GJ
        print("Adding electrical projection: NC_OLQDL_URBL_Generic_GJ from OLQDL to URBL, with 1 connection(s)")

        h("objectvar syn_NC_OLQDL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma], weight: 1.0
        h("a_OLQDL[0].Soma { syn_NC_OLQDL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URBL[0].Soma { syn_NC_OLQDL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDR_CEPDR_Generic_GJ
        print("Adding electrical projection: NC_OLQDR_CEPDR_Generic_GJ from OLQDR to CEPDR, with 1 connection(s)")

        h("objectvar syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 2.0
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPDR[0].Soma { syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_CEPDR[0].Soma { syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDR_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_OLQDR_RIBR_Generic_GJ from OLQDR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 2.0
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIBR[0].Soma { syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_OLQDR_RIGR_Generic_GJ from OLQDR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_OLQDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDR_RIH_Generic_GJ
        print("Adding electrical projection: NC_OLQDR_RIH_Generic_GJ from OLQDR to RIH, with 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma], weight: 1.0
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIH[0].Soma { syn_NC_OLQDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIH[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDR_RIH_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDR_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_OLQDR_RMDVR_Generic_GJ from OLQDR to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_OLQDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_OLQDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQDR_URBR_Generic_GJ
        print("Adding electrical projection: NC_OLQDR_URBR_Generic_GJ from OLQDR to URBR, with 1 connection(s)")

        h("objectvar syn_NC_OLQDR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQDR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma], weight: 1.0
        h("a_OLQDR[0].Soma { syn_NC_OLQDR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URBR[0].Soma { syn_NC_OLQDR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQDR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQDR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVL_ADLL_Generic_GJ
        print("Adding electrical projection: NC_OLQVL_ADLL_Generic_GJ from OLQVL to ADLL, with 1 connection(s)")

        h("objectvar syn_NC_OLQVL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0
        h("a_OLQVL[0].Soma { syn_NC_OLQVL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADLL[0].Soma { syn_NC_OLQVL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVL_CEPVL_Generic_GJ
        print("Adding electrical projection: NC_OLQVL_CEPVL_Generic_GJ from OLQVL to CEPVL, with 1 connection(s)")

        h("objectvar syn_NC_OLQVL_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVL_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 1.0
        h("a_OLQVL[0].Soma { syn_NC_OLQVL_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPVL[0].Soma { syn_NC_OLQVL_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVL_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVL_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_OLQVL_RIBL_Generic_GJ from OLQVL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_OLQVL[0].Soma { syn_NC_OLQVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_OLQVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_OLQVL_RIGL_Generic_GJ from OLQVL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_OLQVL[0].Soma { syn_NC_OLQVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_OLQVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVL_RMDDL_Generic_GJ
        print("Adding electrical projection: NC_OLQVL_RMDDL_Generic_GJ from OLQVL to RMDDL, with 1 connection(s)")

        h("objectvar syn_NC_OLQVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0
        h("a_OLQVL[0].Soma { syn_NC_OLQVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDL[0].Soma { syn_NC_OLQVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVL_URBL_Generic_GJ
        print("Adding electrical projection: NC_OLQVL_URBL_Generic_GJ from OLQVL to URBL, with 1 connection(s)")

        h("objectvar syn_NC_OLQVL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma], weight: 1.0
        h("a_OLQVL[0].Soma { syn_NC_OLQVL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URBL[0].Soma { syn_NC_OLQVL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVL_URBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVR_CEPVR_Generic_GJ
        print("Adding electrical projection: NC_OLQVR_CEPVR_Generic_GJ from OLQVR to CEPVR, with 1 connection(s)")

        h("objectvar syn_NC_OLQVR_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVR_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0
        h("a_OLQVR[0].Soma { syn_NC_OLQVR_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPVR[0].Soma { syn_NC_OLQVR_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVR_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVR_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_OLQVR_RIBR_Generic_GJ from OLQVR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_OLQVR[0].Soma { syn_NC_OLQVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_OLQVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_OLQVR_RIGR_Generic_GJ from OLQVR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_OLQVR[0].Soma { syn_NC_OLQVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_OLQVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVR_RMDDR_Generic_GJ
        print("Adding electrical projection: NC_OLQVR_RMDDR_Generic_GJ from OLQVR to RMDDR, with 1 connection(s)")

        h("objectvar syn_NC_OLQVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0
        h("a_OLQVR[0].Soma { syn_NC_OLQVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDR[0].Soma { syn_NC_OLQVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_OLQVR_URBR_Generic_GJ
        print("Adding electrical projection: NC_OLQVR_URBR_Generic_GJ from OLQVR to URBR, with 1 connection(s)")

        h("objectvar syn_NC_OLQVR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_OLQVR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma], weight: 1.0
        h("a_OLQVR[0].Soma { syn_NC_OLQVR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URBR[0].Soma { syn_NC_OLQVR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_OLQVR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_OLQVR_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_OLQVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDA_DA9_Generic_GJ
        print("Adding electrical projection: NC_PDA_DA9_Generic_GJ from PDA to DA9, with 1 connection(s)")

        h("objectvar syn_NC_PDA_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDA_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDA[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0
        h("a_PDA[0].Soma { syn_NC_PDA_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA9[0].Soma { syn_NC_PDA_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PDA_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDA_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDA[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDB_AS11_Generic_GJ
        print("Adding electrical projection: NC_PDB_AS11_Generic_GJ from PDB to AS11, with 1 connection(s)")

        h("objectvar syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS11[0].Soma], weight: 2.0
        h("a_PDB[0].Soma { syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS11[0].Soma { syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDB[0].Soma { syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS11[0].Soma { syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS11[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDB_AS11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDB[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDB_RID_Generic_GJ
        print("Adding electrical projection: NC_PDB_RID_Generic_GJ from PDB to RID, with 1 connection(s)")

        h("objectvar syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDB[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma], weight: 2.0
        h("a_PDB[0].Soma { syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDB[0].Soma { syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RID[0].Soma { syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RID[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDB_RID_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDB[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDEL_PDER_Generic_GJ
        print("Adding electrical projection: NC_PDEL_PDER_Generic_GJ from PDEL to PDER, with 1 connection(s)")

        h("objectvar syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 3.0
        h("a_PDEL[0].Soma { syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDER[0].Soma { syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDEL[0].Soma { syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PDER[0].Soma { syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDER[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDEL_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDEL_PVCR_Generic_GJ
        print("Adding electrical projection: NC_PDEL_PVCR_Generic_GJ from PDEL to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_PDEL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDEL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0
        h("a_PDEL[0].Soma { syn_NC_PDEL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PDEL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PDEL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDEL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDEL_PVM_Generic_GJ
        print("Adding electrical projection: NC_PDEL_PVM_Generic_GJ from PDEL to PVM, with 1 connection(s)")

        h("objectvar syn_NC_PDEL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDEL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma], weight: 1.0
        h("a_PDEL[0].Soma { syn_NC_PDEL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVM[0].Soma { syn_NC_PDEL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PDEL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVM[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDEL_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDER_PDEL_Generic_GJ
        print("Adding electrical projection: NC_PDER_PDEL_Generic_GJ from PDER to PDEL, with 1 connection(s)")

        h("objectvar syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 3.0
        h("a_PDER[0].Soma { syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDEL[0].Soma { syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDER[0].Soma { syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PDEL[0].Soma { syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDER_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDER_PVM_Generic_GJ
        print("Adding electrical projection: NC_PDER_PVM_Generic_GJ from PDER to PVM, with 1 connection(s)")

        h("objectvar syn_NC_PDER_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDER_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma], weight: 1.0
        h("a_PDER[0].Soma { syn_NC_PDER_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVM[0].Soma { syn_NC_PDER_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PDER_PVM_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVM[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDER_PVM_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDER_VA8_Generic_GJ
        print("Adding electrical projection: NC_PDER_VA8_Generic_GJ from PDER to VA8, with 1 connection(s)")

        h("objectvar syn_NC_PDER_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDER_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 1.0
        h("a_PDER[0].Soma { syn_NC_PDER_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_PDER_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PDER_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDER_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PDER_VD9_Generic_GJ
        print("Adding electrical projection: NC_PDER_VD9_Generic_GJ from PDER to VD9, with 1 connection(s)")

        h("objectvar syn_NC_PDER_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PDER_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD9[0].Soma], weight: 1.0
        h("a_PDER[0].Soma { syn_NC_PDER_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD9[0].Soma { syn_NC_PDER_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PDER_VD9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD9[0].Soma.v(0.5)")
        h("setpointer syn_NC_PDER_VD9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PDER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHAL_PHAR_Generic_GJ
        print("Adding electrical projection: NC_PHAL_PHAR_Generic_GJ from PHAL to PHAR, with 1 connection(s)")

        h("objectvar syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma], weight: 2.0
        h("a_PHAL[0].Soma { syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHAR[0].Soma { syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHAL[0].Soma { syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PHAR[0].Soma { syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHAL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHAL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHAR_PHAL_Generic_GJ
        print("Adding electrical projection: NC_PHAR_PHAL_Generic_GJ from PHAR to PHAL, with 1 connection(s)")

        h("objectvar syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHAL[0].Soma], weight: 2.0
        h("a_PHAR[0].Soma { syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHAL[0].Soma { syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHAR[0].Soma { syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PHAL[0].Soma { syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHAR_PHAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHAR_PVPL_Generic_GJ
        print("Adding electrical projection: NC_PHAR_PVPL_Generic_GJ from PHAR to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 3.0
        h("a_PHAR[0].Soma { syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHAR[0].Soma { syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PVPL[0].Soma { syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHAR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHAR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHBL_PHBR_Generic_GJ
        print("Adding electrical projection: NC_PHBL_PHBR_Generic_GJ from PHBL to PHBR, with 1 connection(s)")

        h("objectvar syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma], weight: 3.0
        h("a_PHBL[0].Soma { syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHBR[0].Soma { syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHBL[0].Soma { syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PHBR[0].Soma { syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHBL_PHBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHBR_AVHL_Generic_GJ
        print("Adding electrical projection: NC_PHBR_AVHL_Generic_GJ from PHBR to AVHL, with 1 connection(s)")

        h("objectvar syn_NC_PHBR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHBR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVHL[0].Soma], weight: 1.0
        h("a_PHBR[0].Soma { syn_NC_PHBR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVHL[0].Soma { syn_NC_PHBR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHBR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHBR_AVHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHBR_PHBL_Generic_GJ
        print("Adding electrical projection: NC_PHBR_PHBL_Generic_GJ from PHBR to PHBL, with 1 connection(s)")

        h("objectvar syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHBL[0].Soma], weight: 3.0
        h("a_PHBR[0].Soma { syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHBL[0].Soma { syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHBR[0].Soma { syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PHBL[0].Soma { syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHBR_PHBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCL_DA9_Generic_GJ
        print("Adding electrical projection: NC_PHCL_DA9_Generic_GJ from PHCL to DA9, with 1 connection(s)")

        h("objectvar syn_NC_PHCL_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCL_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0
        h("a_PHCL[0].Soma { syn_NC_PHCL_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA9[0].Soma { syn_NC_PHCL_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCL_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCL_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCL_PHCR_Generic_GJ
        print("Adding electrical projection: NC_PHCL_PHCR_Generic_GJ from PHCL to PHCR, with 1 connection(s)")

        h("objectvar syn_NC_PHCL_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCL_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma], weight: 1.0
        h("a_PHCL[0].Soma { syn_NC_PHCL_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCR[0].Soma { syn_NC_PHCL_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCL_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCL_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCL_PLML_Generic_GJ
        print("Adding electrical projection: NC_PHCL_PLML_Generic_GJ from PHCL to PLML, with 1 connection(s)")

        h("objectvar syn_NC_PHCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma], weight: 1.0
        h("a_PHCL[0].Soma { syn_NC_PHCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLML[0].Soma { syn_NC_PHCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PLML[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCL_VA12_Generic_GJ
        print("Adding electrical projection: NC_PHCL_VA12_Generic_GJ from PHCL to VA12, with 1 connection(s)")

        h("objectvar syn_NC_PHCL_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCL_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0
        h("a_PHCL[0].Soma { syn_NC_PHCL_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA12[0].Soma { syn_NC_PHCL_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCL_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA12[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCL_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCR_PHCL_Generic_GJ
        print("Adding electrical projection: NC_PHCR_PHCL_Generic_GJ from PHCR to PHCL, with 1 connection(s)")

        h("objectvar syn_NC_PHCR_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCR_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma], weight: 1.0
        h("a_PHCR[0].Soma { syn_NC_PHCR_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCL[0].Soma { syn_NC_PHCR_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCR_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCR_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCR_PVCR_Generic_GJ
        print("Adding electrical projection: NC_PHCR_PVCR_Generic_GJ from PHCR to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_PHCR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0
        h("a_PHCR[0].Soma { syn_NC_PHCR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PHCR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PHCR_VA12_Generic_GJ
        print("Adding electrical projection: NC_PHCR_VA12_Generic_GJ from PHCR to VA12, with 1 connection(s)")

        h("objectvar syn_NC_PHCR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PHCR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0
        h("a_PHCR[0].Soma { syn_NC_PHCR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA12[0].Soma { syn_NC_PHCR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PHCR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA12[0].Soma.v(0.5)")
        h("setpointer syn_NC_PHCR_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PHCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PLML_LUAL_Generic_GJ
        print("Adding electrical projection: NC_PLML_LUAL_Generic_GJ from PLML to LUAL, with 1 connection(s)")

        h("objectvar syn_NC_PLML_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PLML_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0
        h("a_PLML[0].Soma { syn_NC_PLML_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_LUAL[0].Soma { syn_NC_PLML_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PLML_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_LUAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PLML_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PLML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PLML_PHCL_Generic_GJ
        print("Adding electrical projection: NC_PLML_PHCL_Generic_GJ from PLML to PHCL, with 1 connection(s)")

        h("objectvar syn_NC_PLML_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PLML_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma], weight: 1.0
        h("a_PLML[0].Soma { syn_NC_PLML_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCL[0].Soma { syn_NC_PLML_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PLML_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PLML_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PLML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PLML_PVCL_Generic_GJ
        print("Adding electrical projection: NC_PLML_PVCL_Generic_GJ from PLML to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_PLML_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PLML_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0
        h("a_PLML[0].Soma { syn_NC_PLML_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_PLML_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PLML_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PLML_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PLML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PLMR_LUAR_Generic_GJ
        print("Adding electrical projection: NC_PLMR_LUAR_Generic_GJ from PLMR to LUAR, with 1 connection(s)")

        h("objectvar syn_NC_PLMR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PLMR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma], weight: 1.0
        h("a_PLMR[0].Soma { syn_NC_PLMR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_LUAR[0].Soma { syn_NC_PLMR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PLMR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_LUAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PLMR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PLMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PLMR_PVCR_Generic_GJ
        print("Adding electrical projection: NC_PLMR_PVCR_Generic_GJ from PLMR to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_PLMR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PLMR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0
        h("a_PLMR[0].Soma { syn_NC_PLMR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PLMR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PLMR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PLMR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PLMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PLMR_PVR_Generic_GJ
        print("Adding electrical projection: NC_PLMR_PVR_Generic_GJ from PLMR to PVR, with 1 connection(s)")

        h("objectvar syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma], weight: 2.0
        h("a_PLMR[0].Soma { syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLMR[0].Soma { syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVR[0].Soma { syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PLMR_PVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PLMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PQR_PVPL_Generic_GJ
        print("Adding electrical projection: NC_PQR_PVPL_Generic_GJ from PQR to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 4.0
        h("a_PQR[0].Soma { syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PQR[0].Soma { syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_PVPL[0].Soma { syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PQR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_AVAL_Generic_GJ
        print("Adding electrical projection: NC_PVCL_AVAL_Generic_GJ from PVCL to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_AVJL_Generic_GJ
        print("Adding electrical projection: NC_PVCL_AVJL_Generic_GJ from PVCL to AVJL, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_PVCL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_AVJR_Generic_GJ
        print("Adding electrical projection: NC_PVCL_AVJR_Generic_GJ from PVCL to AVJR, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJR[0].Soma], weight: 1.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJR[0].Soma { syn_NC_PVCL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_AVJR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_DVA_Generic_GJ
        print("Adding electrical projection: NC_PVCL_DVA_Generic_GJ from PVCL to DVA, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 1.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVA[0].Soma { syn_NC_PVCL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVA[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_PLML_Generic_GJ
        print("Adding electrical projection: NC_PVCL_PLML_Generic_GJ from PVCL to PLML, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLML[0].Soma], weight: 1.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLML[0].Soma { syn_NC_PVCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PLML[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_PLML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_PVCR_Generic_GJ
        print("Adding electrical projection: NC_PVCL_PVCR_Generic_GJ from PVCL to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 5.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_PVCR[0].Soma { syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_VB10_Generic_GJ
        print("Adding electrical projection: NC_PVCL_VB10_Generic_GJ from PVCL to VB10, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma], weight: 1.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB10[0].Soma { syn_NC_PVCL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB10[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_VB10_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCL_VB9_Generic_GJ
        print("Adding electrical projection: NC_PVCL_VB9_Generic_GJ from PVCL to VB9, with 1 connection(s)")

        h("objectvar syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 2.0
        h("a_PVCL[0].Soma { syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB9[0].Soma { syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCL_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_AVAL_Generic_GJ
        print("Adding electrical projection: NC_PVCR_AVAL_Generic_GJ from PVCR to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAL[0].Soma { syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_AVAR_Generic_GJ
        print("Adding electrical projection: NC_PVCR_AVAR_Generic_GJ from PVCR to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAR[0].Soma { syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_AVJL_Generic_GJ
        print("Adding electrical projection: NC_PVCR_AVJL_Generic_GJ from PVCR to AVJL, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 3.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVJL[0].Soma { syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_PDEL_Generic_GJ
        print("Adding electrical projection: NC_PVCR_PDEL_Generic_GJ from PVCR to PDEL, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 1.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDEL[0].Soma { syn_NC_PVCR_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCR_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_PHCR_Generic_GJ
        print("Adding electrical projection: NC_PVCR_PHCR_Generic_GJ from PVCR to PHCR, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma], weight: 1.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCR[0].Soma { syn_NC_PVCR_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCR_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_PLMR_Generic_GJ
        print("Adding electrical projection: NC_PVCR_PLMR_Generic_GJ from PVCR to PLMR, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma], weight: 1.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLMR[0].Soma { syn_NC_PVCR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PLMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_PVCL_Generic_GJ
        print("Adding electrical projection: NC_PVCR_PVCL_Generic_GJ from PVCR to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 5.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_PVCL[0].Soma { syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_PVWL_Generic_GJ
        print("Adding electrical projection: NC_PVCR_PVWL_Generic_GJ from PVCR to PVWL, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma], weight: 2.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVWL[0].Soma { syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVWL[0].Soma { syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVWL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_PVWL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_PVWR_Generic_GJ
        print("Adding electrical projection: NC_PVCR_PVWR_Generic_GJ from PVCR to PVWR, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_PVWR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_PVWR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma], weight: 1.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_PVWR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVWR[0].Soma { syn_NC_PVCR_PVWR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCR_PVWR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVWR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_PVWR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_VA8_Generic_GJ
        print("Adding electrical projection: NC_PVCR_VA8_Generic_GJ from PVCR to VA8, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 2.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA8[0].Soma { syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVCR_VA9_Generic_GJ
        print("Adding electrical projection: NC_PVCR_VA9_Generic_GJ from PVCR to VA9, with 1 connection(s)")

        h("objectvar syn_NC_PVCR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVCR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_PVCR[0].Soma { syn_NC_PVCR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_PVCR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVCR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVCR_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVCR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVM_AVL_Generic_GJ
        print("Adding electrical projection: NC_PVM_AVL_Generic_GJ from PVM to AVL, with 1 connection(s)")

        h("objectvar syn_NC_PVM_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVM_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVL[0].Soma], weight: 1.0
        h("a_PVM[0].Soma { syn_NC_PVM_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVL[0].Soma { syn_NC_PVM_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVM_AVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVM_AVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVM[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVM_PDEL_Generic_GJ
        print("Adding electrical projection: NC_PVM_PDEL_Generic_GJ from PVM to PDEL, with 1 connection(s)")

        h("objectvar syn_NC_PVM_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVM_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDEL[0].Soma], weight: 1.0
        h("a_PVM[0].Soma { syn_NC_PVM_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDEL[0].Soma { syn_NC_PVM_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVM_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVM_PDEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVM[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVM_PDER_Generic_GJ
        print("Adding electrical projection: NC_PVM_PDER_Generic_GJ from PVM to PDER, with 1 connection(s)")

        h("objectvar syn_NC_PVM_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVM_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVM[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0
        h("a_PVM[0].Soma { syn_NC_PVM_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDER[0].Soma { syn_NC_PVM_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVM_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDER[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVM_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVM[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVNL_AVBR_Generic_GJ
        print("Adding electrical projection: NC_PVNL_AVBR_Generic_GJ from PVNL to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0
        h("a_PVNL[0].Soma { syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVNL[0].Soma { syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBR[0].Soma { syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVNL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVNL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVNL_PVQR_Generic_GJ
        print("Adding electrical projection: NC_PVNL_PVQR_Generic_GJ from PVNL to PVQR, with 1 connection(s)")

        h("objectvar syn_NC_PVNL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVNL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 1.0
        h("a_PVNL[0].Soma { syn_NC_PVNL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_PVNL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVNL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVNL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVNL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVNR_HSNR_Generic_GJ
        print("Adding electrical projection: NC_PVNR_HSNR_Generic_GJ from PVNR to HSNR, with 1 connection(s)")

        h("objectvar syn_NC_PVNR_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVNR_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVNR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_HSNR[0].Soma], weight: 1.0
        h("a_PVNR[0].Soma { syn_NC_PVNR_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_HSNR[0].Soma { syn_NC_PVNR_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVNR_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_HSNR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVNR_HSNR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVNR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_AQR_Generic_GJ
        print("Adding electrical projection: NC_PVPL_AQR_Generic_GJ from PVPL to AQR, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 7.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_AQR[0].Soma { syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_AVAL_Generic_GJ
        print("Adding electrical projection: NC_PVPL_AVAL_Generic_GJ from PVPL to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_PVPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_AVKL_Generic_GJ
        print("Adding electrical projection: NC_PVPL_AVKL_Generic_GJ from PVPL to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_PVPL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_AVKR_Generic_GJ
        print("Adding electrical projection: NC_PVPL_AVKR_Generic_GJ from PVPL to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 6.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_AVKR[0].Soma { syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_DVC_Generic_GJ
        print("Adding electrical projection: NC_PVPL_DVC_Generic_GJ from PVPL to DVC, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 2.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DVC[0].Soma { syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_PHAR_Generic_GJ
        print("Adding electrical projection: NC_PVPL_PHAR_Generic_GJ from PVPL to PHAR, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHAR[0].Soma], weight: 3.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHAR[0].Soma { syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_PHAR[0].Soma { syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_PHAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_PQR_Generic_GJ
        print("Adding electrical projection: NC_PVPL_PQR_Generic_GJ from PVPL to PQR, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PQR[0].Soma], weight: 4.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PQR[0].Soma { syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_PQR[0].Soma { syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_PQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_PVPR_Generic_GJ
        print("Adding electrical projection: NC_PVPL_PVPR_Generic_GJ from PVPL to PVPR, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma], weight: 1.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_PVPL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_PVPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_PVT_Generic_GJ
        print("Adding electrical projection: NC_PVPL_PVT_Generic_GJ from PVPL to PVT, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_PVPL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVT[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_VD13_Generic_GJ
        print("Adding electrical projection: NC_PVPL_VD13_Generic_GJ from PVPL to VD13, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD13[0].Soma], weight: 2.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD13[0].Soma { syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD13[0].Soma { syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD13[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_VD13_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPL_VD3_Generic_GJ
        print("Adding electrical projection: NC_PVPL_VD3_Generic_GJ from PVPL to VD3, with 1 connection(s)")

        h("objectvar syn_NC_PVPL_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPL_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD3[0].Soma], weight: 1.0
        h("a_PVPL[0].Soma { syn_NC_PVPL_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD3[0].Soma { syn_NC_PVPL_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPL_VD3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD3[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPL_VD3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPR_AQR_Generic_GJ
        print("Adding electrical projection: NC_PVPR_AQR_Generic_GJ from PVPR to AQR, with 1 connection(s)")

        h("objectvar syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 9.0
        h("a_PVPR[0].Soma { syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 9.0 }")
        h("a_AQR[0].Soma { syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 9.0 }")
        h("setpointer syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPR_AVKL_Generic_GJ
        print("Adding electrical projection: NC_PVPR_AVKL_Generic_GJ from PVPR to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_PVPR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_PVPR[0].Soma { syn_NC_PVPR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_PVPR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPR_DVC_Generic_GJ
        print("Adding electrical projection: NC_PVPR_DVC_Generic_GJ from PVPR to DVC, with 1 connection(s)")

        h("objectvar syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 13.0
        h("a_PVPR[0].Soma { syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPR[0].Soma { syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 13.0 }")
        h("a_DVC[0].Soma { syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 13.0 }")
        h("setpointer syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPR_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPR_PVPL_Generic_GJ
        print("Adding electrical projection: NC_PVPR_PVPL_Generic_GJ from PVPR to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_PVPR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0
        h("a_PVPR[0].Soma { syn_NC_PVPR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVPR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPR_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPR_VD4_Generic_GJ
        print("Adding electrical projection: NC_PVPR_VD4_Generic_GJ from PVPR to VD4, with 1 connection(s)")

        h("objectvar syn_NC_PVPR_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPR_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD4[0].Soma], weight: 1.0
        h("a_PVPR[0].Soma { syn_NC_PVPR_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD4[0].Soma { syn_NC_PVPR_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPR_VD4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD4[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPR_VD4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVPR_VD5_Generic_GJ
        print("Adding electrical projection: NC_PVPR_VD5_Generic_GJ from PVPR to VD5, with 1 connection(s)")

        h("objectvar syn_NC_PVPR_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVPR_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD5[0].Soma], weight: 1.0
        h("a_PVPR[0].Soma { syn_NC_PVPR_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD5[0].Soma { syn_NC_PVPR_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVPR_VD5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD5[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVPR_VD5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQL_ADAL_Generic_GJ
        print("Adding electrical projection: NC_PVQL_ADAL_Generic_GJ from PVQL to ADAL, with 1 connection(s)")

        h("objectvar syn_NC_PVQL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAL[0].Soma], weight: 1.0
        h("a_PVQL[0].Soma { syn_NC_PVQL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAL[0].Soma { syn_NC_PVQL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVQL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQL_ADAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQL_ASKL_Generic_GJ
        print("Adding electrical projection: NC_PVQL_ASKL_Generic_GJ from PVQL to ASKL, with 1 connection(s)")

        h("objectvar syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 5.0
        h("a_PVQL[0].Soma { syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKL[0].Soma { syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQL[0].Soma { syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_ASKL[0].Soma { syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQL_PVQR_Generic_GJ
        print("Adding electrical projection: NC_PVQL_PVQR_Generic_GJ from PVQL to PVQR, with 1 connection(s)")

        h("objectvar syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma], weight: 2.0
        h("a_PVQL[0].Soma { syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQL[0].Soma { syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVQR[0].Soma { syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQL_PVQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQR_ADAR_Generic_GJ
        print("Adding electrical projection: NC_PVQR_ADAR_Generic_GJ from PVQR to ADAR, with 1 connection(s)")

        h("objectvar syn_NC_PVQR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADAR[0].Soma], weight: 1.0
        h("a_PVQR[0].Soma { syn_NC_PVQR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADAR[0].Soma { syn_NC_PVQR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVQR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQR_ADAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQR_ASKR_Generic_GJ
        print("Adding electrical projection: NC_PVQR_ASKR_Generic_GJ from PVQR to ASKR, with 1 connection(s)")

        h("objectvar syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 4.0
        h("a_PVQR[0].Soma { syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKR[0].Soma { syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_ASKR[0].Soma { syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQR_AVFL_Generic_GJ
        print("Adding electrical projection: NC_PVQR_AVFL_Generic_GJ from PVQR to AVFL, with 1 connection(s)")

        h("objectvar syn_NC_PVQR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVFL[0].Soma], weight: 1.0
        h("a_PVQR[0].Soma { syn_NC_PVQR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVFL[0].Soma { syn_NC_PVQR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVQR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQR_AVFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQR_PVNL_Generic_GJ
        print("Adding electrical projection: NC_PVQR_PVNL_Generic_GJ from PVQR to PVNL, with 1 connection(s)")

        h("objectvar syn_NC_PVQR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVNL[0].Soma], weight: 1.0
        h("a_PVQR[0].Soma { syn_NC_PVQR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVNL[0].Soma { syn_NC_PVQR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVQR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVNL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQR_PVNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVQR_PVQL_Generic_GJ
        print("Adding electrical projection: NC_PVQR_PVQL_Generic_GJ from PVQR to PVQL, with 1 connection(s)")

        h("objectvar syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVQL[0].Soma], weight: 2.0
        h("a_PVQR[0].Soma { syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQL[0].Soma { syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVQR[0].Soma { syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVQL[0].Soma { syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVQL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVQR_PVQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVR_ALML_Generic_GJ
        print("Adding electrical projection: NC_PVR_ALML_Generic_GJ from PVR to ALML, with 1 connection(s)")

        h("objectvar syn_NC_PVR_ALML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVR_ALML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALML[0].Soma], weight: 1.0
        h("a_PVR[0].Soma { syn_NC_PVR_ALML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ALML[0].Soma { syn_NC_PVR_ALML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVR_ALML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ALML[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVR_ALML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVR_DVA_Generic_GJ
        print("Adding electrical projection: NC_PVR_DVA_Generic_GJ from PVR to DVA, with 1 connection(s)")

        h("objectvar syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVA[0].Soma], weight: 2.0
        h("a_PVR[0].Soma { syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVA[0].Soma { syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DVA[0].Soma { syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVA[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVR_DVA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVR_LUAL_Generic_GJ
        print("Adding electrical projection: NC_PVR_LUAL_Generic_GJ from PVR to LUAL, with 1 connection(s)")

        h("objectvar syn_NC_PVR_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVR_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAL[0].Soma], weight: 1.0
        h("a_PVR[0].Soma { syn_NC_PVR_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_LUAL[0].Soma { syn_NC_PVR_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVR_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_LUAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVR_LUAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVR_LUAR_Generic_GJ
        print("Adding electrical projection: NC_PVR_LUAR_Generic_GJ from PVR to LUAR, with 1 connection(s)")

        h("objectvar syn_NC_PVR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_LUAR[0].Soma], weight: 1.0
        h("a_PVR[0].Soma { syn_NC_PVR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_LUAR[0].Soma { syn_NC_PVR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_LUAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVR_LUAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVR_PLMR_Generic_GJ
        print("Adding electrical projection: NC_PVR_PLMR_Generic_GJ from PVR to PLMR, with 1 connection(s)")

        h("objectvar syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PLMR[0].Soma], weight: 2.0
        h("a_PVR[0].Soma { syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PLMR[0].Soma { syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVR[0].Soma { syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PLMR[0].Soma { syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PLMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVR_PLMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVT_AIBL_Generic_GJ
        print("Adding electrical projection: NC_PVT_AIBL_Generic_GJ from PVT to AIBL, with 1 connection(s)")

        h("objectvar syn_NC_PVT_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVT_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0
        h("a_PVT[0].Soma { syn_NC_PVT_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_PVT_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVT_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVT_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVT[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVT_AIBR_Generic_GJ
        print("Adding electrical projection: NC_PVT_AIBR_Generic_GJ from PVT to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_PVT_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVT_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0
        h("a_PVT[0].Soma { syn_NC_PVT_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_PVT_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVT_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVT_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVT[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVT_AVKL_Generic_GJ
        print("Adding electrical projection: NC_PVT_AVKL_Generic_GJ from PVT to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 2.0
        h("a_PVT[0].Soma { syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVKL[0].Soma { syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVT_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVT[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVT_PVPL_Generic_GJ
        print("Adding electrical projection: NC_PVT_PVPL_Generic_GJ from PVT to PVPL, with 1 connection(s)")

        h("objectvar syn_NC_PVT_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVT_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVPL[0].Soma], weight: 1.0
        h("a_PVT[0].Soma { syn_NC_PVT_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVPL[0].Soma { syn_NC_PVT_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVT_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVT_PVPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVT[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVT_RIBL_Generic_GJ
        print("Adding electrical projection: NC_PVT_RIBL_Generic_GJ from PVT to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_PVT_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVT_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_PVT[0].Soma { syn_NC_PVT_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_PVT_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVT_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVT_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVT[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVT_RIBR_Generic_GJ
        print("Adding electrical projection: NC_PVT_RIBR_Generic_GJ from PVT to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_PVT_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVT_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_PVT[0].Soma { syn_NC_PVT_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_PVT_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVT_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVT_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVT[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVWL_PVCR_Generic_GJ
        print("Adding electrical projection: NC_PVWL_PVCR_Generic_GJ from PVWL to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 2.0
        h("a_PVWL[0].Soma { syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVWL[0].Soma { syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVCR[0].Soma { syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVWL_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVWL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_PVWR_PVCR_Generic_GJ
        print("Adding electrical projection: NC_PVWR_PVCR_Generic_GJ from PVWR to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_PVWR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_PVWR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_PVWR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0
        h("a_PVWR[0].Soma { syn_NC_PVWR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_PVWR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_PVWR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_PVWR_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_PVWR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_AVBL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_AVBL_Generic_GJ from RIBL to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_RIBL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_AVBR_Generic_GJ
        print("Adding electrical projection: NC_RIBL_AVBR_Generic_GJ from RIBL to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_RIBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_OLQDL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_OLQDL_Generic_GJ from RIBL to OLQDL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 2.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDL[0].Soma { syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_OLQDL[0].Soma { syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_OLQVL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_OLQVL_Generic_GJ from RIBL to OLQVL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVL[0].Soma { syn_NC_RIBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_PVT_Generic_GJ
        print("Adding electrical projection: NC_RIBL_PVT_Generic_GJ from RIBL to PVT, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_RIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVT[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_RIBL_Generic_GJ from RIBL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_RIBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_RIBR_Generic_GJ
        print("Adding electrical projection: NC_RIBL_RIBR_Generic_GJ from RIBL to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 3.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIBR[0].Soma { syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_RIGL_Generic_GJ from RIBL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RIBL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SIADL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SIADL_Generic_GJ from RIBL to SIADL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SIADL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SIADL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SIADL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIADL[0].Soma { syn_NC_RIBL_SIADL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SIADL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIADL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SIADL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SIAVL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SIAVL_Generic_GJ from RIBL to SIAVL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SIAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SIAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SIAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIAVL[0].Soma { syn_NC_RIBL_SIAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SIAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIAVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SIAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SIBDL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SIBDL_Generic_GJ from RIBL to SIBDL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBDL[0].Soma { syn_NC_RIBL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SIBVL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SIBVL_Generic_GJ from RIBL to SIBVL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVL[0].Soma { syn_NC_RIBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SIBVR_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SIBVR_Generic_GJ from RIBL to SIBVR, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVR[0].Soma { syn_NC_RIBL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SMBDL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SMBDL_Generic_GJ from RIBL to SMBDL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDL[0].Soma { syn_NC_RIBL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SMDDL_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SMDDL_Generic_GJ from RIBL to SMDDL, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDL[0].Soma { syn_NC_RIBL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBL_SMDVR_Generic_GJ
        print("Adding electrical projection: NC_RIBL_SMDVR_Generic_GJ from RIBL to SMDVR, with 1 connection(s)")

        h("objectvar syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 2.0
        h("a_RIBL[0].Soma { syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SMDVR[0].Soma { syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_AVBL_Generic_GJ
        print("Adding electrical projection: NC_RIBR_AVBL_Generic_GJ from RIBR to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_RIBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_AVBR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_AVBR_Generic_GJ from RIBR to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_RIBR_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_OLQDR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_OLQDR_Generic_GJ from RIBR to OLQDR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 2.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_OLQDR[0].Soma { syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_OLQVR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_OLQVR_Generic_GJ from RIBR to OLQVR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVR[0].Soma { syn_NC_RIBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_PVT_Generic_GJ
        print("Adding electrical projection: NC_RIBR_PVT_Generic_GJ from RIBR to PVT, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVT[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVT[0].Soma { syn_NC_RIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVT[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_PVT_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_RIBL_Generic_GJ
        print("Adding electrical projection: NC_RIBR_RIBL_Generic_GJ from RIBR to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 3.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIBL[0].Soma { syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_RIBR_Generic_GJ from RIBR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_RIBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_RIGR_Generic_GJ from RIBR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_RIBR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SIADR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SIADR_Generic_GJ from RIBR to SIADR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SIADR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SIADR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIADR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SIADR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIADR[0].Soma { syn_NC_RIBR_SIADR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SIADR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIADR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SIADR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SIAVR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SIAVR_Generic_GJ from RIBR to SIAVR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SIAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SIAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SIAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIAVR[0].Soma { syn_NC_RIBR_SIAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SIAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIAVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SIAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SIBDR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SIBDR_Generic_GJ from RIBR to SIBDR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBDR[0].Soma { syn_NC_RIBR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SIBVR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SIBVR_Generic_GJ from RIBR to SIBVR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVR[0].Soma { syn_NC_RIBR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SMBDR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SMBDR_Generic_GJ from RIBR to SMBDR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDR[0].Soma { syn_NC_RIBR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SMBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SMDDL_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SMDDL_Generic_GJ from RIBR to SMDDL, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDL[0].Soma { syn_NC_RIBR_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SMDDR_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SMDDR_Generic_GJ from RIBR to SMDDR, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDR[0].Soma { syn_NC_RIBR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIBR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIBR_SMDVL_Generic_GJ
        print("Adding electrical projection: NC_RIBR_SMDVL_Generic_GJ from RIBR to SMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 2.0
        h("a_RIBR[0].Soma { syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVL[0].Soma { syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SMDVL[0].Soma { syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIBR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RICL_ASHL_Generic_GJ
        print("Adding electrical projection: NC_RICL_ASHL_Generic_GJ from RICL to ASHL, with 1 connection(s)")

        h("objectvar syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 2.0
        h("a_RICL[0].Soma { syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHL[0].Soma { syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICL[0].Soma { syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_ASHL[0].Soma { syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RICL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RICL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RICL_AVKL_Generic_GJ
        print("Adding electrical projection: NC_RICL_AVKL_Generic_GJ from RICL to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_RICL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RICL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_RICL[0].Soma { syn_NC_RICL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_RICL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RICL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RICL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RICL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RICL_AVKR_Generic_GJ
        print("Adding electrical projection: NC_RICL_AVKR_Generic_GJ from RICL to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_RICL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RICL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0
        h("a_RICL[0].Soma { syn_NC_RICL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_RICL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RICL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RICL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RICL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RICL_AWBR_Generic_GJ
        print("Adding electrical projection: NC_RICL_AWBR_Generic_GJ from RICL to AWBR, with 1 connection(s)")

        h("objectvar syn_NC_RICL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RICL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0
        h("a_RICL[0].Soma { syn_NC_RICL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBR[0].Soma { syn_NC_RICL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RICL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RICL_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RICL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RICR_ASHR_Generic_GJ
        print("Adding electrical projection: NC_RICR_ASHR_Generic_GJ from RICR to ASHR, with 1 connection(s)")

        h("objectvar syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 2.0
        h("a_RICR[0].Soma { syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RICR[0].Soma { syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_ASHR[0].Soma { syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RICR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RICR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RICR_AVKL_Generic_GJ
        print("Adding electrical projection: NC_RICR_AVKL_Generic_GJ from RICR to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_RICR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RICR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RICR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_RICR[0].Soma { syn_NC_RICR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_RICR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RICR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RICR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RICR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RID_ALA_Generic_GJ
        print("Adding electrical projection: NC_RID_ALA_Generic_GJ from RID to ALA, with 1 connection(s)")

        h("objectvar syn_NC_RID_ALA_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RID_ALA_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALA[0].Soma], weight: 1.0
        h("a_RID[0].Soma { syn_NC_RID_ALA_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ALA[0].Soma { syn_NC_RID_ALA_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RID_ALA_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ALA[0].Soma.v(0.5)")
        h("setpointer syn_NC_RID_ALA_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RID[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RID_AVBL_Generic_GJ
        print("Adding electrical projection: NC_RID_AVBL_Generic_GJ from RID to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_RID_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RID_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_RID[0].Soma { syn_NC_RID_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_RID_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RID_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RID_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RID[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RID_AVBR_Generic_GJ
        print("Adding electrical projection: NC_RID_AVBR_Generic_GJ from RID to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0
        h("a_RID[0].Soma { syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBR[0].Soma { syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RID_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RID[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RID_DA9_Generic_GJ
        print("Adding electrical projection: NC_RID_DA9_Generic_GJ from RID to DA9, with 1 connection(s)")

        h("objectvar syn_NC_RID_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RID_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA9[0].Soma], weight: 1.0
        h("a_RID[0].Soma { syn_NC_RID_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA9[0].Soma { syn_NC_RID_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RID_DA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_RID_DA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RID[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RID_DB1_Generic_GJ
        print("Adding electrical projection: NC_RID_DB1_Generic_GJ from RID to DB1, with 1 connection(s)")

        h("objectvar syn_NC_RID_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RID_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_RID[0].Soma { syn_NC_RID_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_RID_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RID_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_RID_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RID[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RID_PDB_Generic_GJ
        print("Adding electrical projection: NC_RID_PDB_Generic_GJ from RID to PDB, with 1 connection(s)")

        h("objectvar syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RID[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDB[0].Soma], weight: 2.0
        h("a_RID[0].Soma { syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDB[0].Soma { syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RID[0].Soma { syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PDB[0].Soma { syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDB[0].Soma.v(0.5)")
        h("setpointer syn_NC_RID_PDB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RID[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIFL_AVG_Generic_GJ
        print("Adding electrical projection: NC_RIFL_AVG_Generic_GJ from RIFL to AVG, with 1 connection(s)")

        h("objectvar syn_NC_RIFL_AVG_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIFL_AVG_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 1.0
        h("a_RIFL[0].Soma { syn_NC_RIFL_AVG_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVG[0].Soma { syn_NC_RIFL_AVG_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIFL_AVG_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVG[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIFL_AVG_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIFL_VD1_Generic_GJ
        print("Adding electrical projection: NC_RIFL_VD1_Generic_GJ from RIFL to VD1, with 1 connection(s)")

        h("objectvar syn_NC_RIFL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIFL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0
        h("a_RIFL[0].Soma { syn_NC_RIFL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_RIFL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIFL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIFL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIFR_AVG_Generic_GJ
        print("Adding electrical projection: NC_RIFR_AVG_Generic_GJ from RIFR to AVG, with 1 connection(s)")

        h("objectvar syn_NC_RIFR_AVG_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIFR_AVG_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIFR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVG[0].Soma], weight: 1.0
        h("a_RIFR[0].Soma { syn_NC_RIFR_AVG_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVG[0].Soma { syn_NC_RIFR_AVG_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIFR_AVG_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVG[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIFR_AVG_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIFR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_AIBR_Generic_GJ
        print("Adding electrical projection: NC_RIGL_AIBR_Generic_GJ from RIGL to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 3.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AIBR[0].Soma { syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_AQR_Generic_GJ
        print("Adding electrical projection: NC_RIGL_AQR_Generic_GJ from RIGL to AQR, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 2.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AQR[0].Soma { syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_AVKL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_AVKL_Generic_GJ from RIGL to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_RIGL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_BAGR_Generic_GJ
        print("Adding electrical projection: NC_RIGL_BAGR_Generic_GJ from RIGL to BAGR, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_BAGR[0].Soma { syn_NC_RIGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_BAGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_OLLL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_OLLL_Generic_GJ from RIGL to OLLL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLL[0].Soma { syn_NC_RIGL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_OLLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_OLQDL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_OLQDL_Generic_GJ from RIGL to OLQDL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDL[0].Soma { syn_NC_RIGL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_OLQVL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_OLQVL_Generic_GJ from RIGL to OLQVL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVL[0].Soma { syn_NC_RIGL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_RIBL_Generic_GJ from RIGL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_RIGL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_RIGR_Generic_GJ
        print("Adding electrical projection: NC_RIGL_RIGR_Generic_GJ from RIGL to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 3.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIGR[0].Soma { syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_RMEL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_RMEL_Generic_GJ from RIGL to RMEL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEL[0].Soma { syn_NC_RIGL_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_URYDL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_URYDL_Generic_GJ from RIGL to URYDL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYDL[0].Soma { syn_NC_RIGL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_URYDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_URYVL_Generic_GJ
        print("Adding electrical projection: NC_RIGL_URYVL_Generic_GJ from RIGL to URYVL, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYVL[0].Soma { syn_NC_RIGL_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_URYVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_VB2_Generic_GJ
        print("Adding electrical projection: NC_RIGL_VB2_Generic_GJ from RIGL to VB2, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_RIGL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGL_VD1_Generic_GJ
        print("Adding electrical projection: NC_RIGL_VD1_Generic_GJ from RIGL to VD1, with 1 connection(s)")

        h("objectvar syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 2.0
        h("a_RIGL[0].Soma { syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VD1[0].Soma { syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGL_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_AIBL_Generic_GJ
        print("Adding electrical projection: NC_RIGR_AIBL_Generic_GJ from RIGR to AIBL, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 3.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AIBL[0].Soma { syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_AQR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_AQR_Generic_GJ from RIGR to AQR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AQR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AQR[0].Soma { syn_NC_RIGR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_AQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_AVKR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_AVKR_Generic_GJ from RIGR to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_RIGR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_BAGL_Generic_GJ
        print("Adding electrical projection: NC_RIGR_BAGL_Generic_GJ from RIGR to BAGL, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_BAGL[0].Soma { syn_NC_RIGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_BAGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_OLLR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_OLLR_Generic_GJ from RIGR to OLLR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLLR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLLR[0].Soma { syn_NC_RIGR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLLR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_OLLR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_OLQDR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_OLQDR_Generic_GJ from RIGR to OLQDR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_RIGR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_OLQVR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_OLQVR_Generic_GJ from RIGR to OLQVR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVR[0].Soma { syn_NC_RIGR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_RIBR_Generic_GJ from RIGR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_RIGR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_RIGL_Generic_GJ
        print("Adding electrical projection: NC_RIGR_RIGL_Generic_GJ from RIGR to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 3.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RIGL[0].Soma { syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_URYDR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_URYDR_Generic_GJ from RIGR to URYDR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYDR[0].Soma { syn_NC_RIGR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_URYDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIGR_URYVR_Generic_GJ
        print("Adding electrical projection: NC_RIGR_URYVR_Generic_GJ from RIGR to URYVR, with 1 connection(s)")

        h("objectvar syn_NC_RIGR_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIGR_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma], weight: 1.0
        h("a_RIGR[0].Soma { syn_NC_RIGR_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URYVR[0].Soma { syn_NC_RIGR_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIGR_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URYVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIGR_URYVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIH_CEPDL_Generic_GJ
        print("Adding electrical projection: NC_RIH_CEPDL_Generic_GJ from RIH to CEPDL, with 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIH_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDL[0].Soma], weight: 1.0
        h("a_RIH[0].Soma { syn_NC_RIH_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPDL[0].Soma { syn_NC_RIH_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIH_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIH_CEPDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIH[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIH_CEPDR_Generic_GJ
        print("Adding electrical projection: NC_RIH_CEPDR_Generic_GJ from RIH to CEPDR, with 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIH_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPDR[0].Soma], weight: 1.0
        h("a_RIH[0].Soma { syn_NC_RIH_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPDR[0].Soma { syn_NC_RIH_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIH_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIH_CEPDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIH[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIH_CEPVL_Generic_GJ
        print("Adding electrical projection: NC_RIH_CEPVL_Generic_GJ from RIH to CEPVL, with 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIH_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVL[0].Soma], weight: 1.0
        h("a_RIH[0].Soma { syn_NC_RIH_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPVL[0].Soma { syn_NC_RIH_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIH_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIH_CEPVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIH[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIH_CEPVR_Generic_GJ
        print("Adding electrical projection: NC_RIH_CEPVR_Generic_GJ from RIH to CEPVR, with 1 connection(s)")

        h("objectvar syn_NC_RIH_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIH_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_CEPVR[0].Soma], weight: 1.0
        h("a_RIH[0].Soma { syn_NC_RIH_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_CEPVR[0].Soma { syn_NC_RIH_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIH_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_CEPVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIH_CEPVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIH[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIH_FLPL_Generic_GJ
        print("Adding electrical projection: NC_RIH_FLPL_Generic_GJ from RIH to FLPL, with 1 connection(s)")

        h("objectvar syn_NC_RIH_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIH_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_FLPL[0].Soma], weight: 1.0
        h("a_RIH[0].Soma { syn_NC_RIH_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_FLPL[0].Soma { syn_NC_RIH_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIH_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_FLPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIH_FLPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIH[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIH_OLQDR_Generic_GJ
        print("Adding electrical projection: NC_RIH_OLQDR_Generic_GJ from RIH to OLQDR, with 1 connection(s)")

        h("objectvar syn_NC_RIH_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIH_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIH[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0
        h("a_RIH[0].Soma { syn_NC_RIH_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_RIH_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIH_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIH_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIH[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIML_AIBR_Generic_GJ
        print("Adding electrical projection: NC_RIML_AIBR_Generic_GJ from RIML to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIML_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIML_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0
        h("a_RIML[0].Soma { syn_NC_RIML_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_RIML_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIML_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIML_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIML_AIYL_Generic_GJ
        print("Adding electrical projection: NC_RIML_AIYL_Generic_GJ from RIML to AIYL, with 1 connection(s)")

        h("objectvar syn_NC_RIML_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIML_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYL[0].Soma], weight: 1.0
        h("a_RIML[0].Soma { syn_NC_RIML_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIYL[0].Soma { syn_NC_RIML_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIML_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIYL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIML_AIYL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIML_AVAR_Generic_GJ
        print("Adding electrical projection: NC_RIML_AVAR_Generic_GJ from RIML to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_RIML[0].Soma { syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIML_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIML_AVEL_Generic_GJ
        print("Adding electrical projection: NC_RIML_AVEL_Generic_GJ from RIML to AVEL, with 1 connection(s)")

        h("objectvar syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 2.0
        h("a_RIML[0].Soma { syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVEL[0].Soma { syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIML_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIML_AVER_Generic_GJ
        print("Adding electrical projection: NC_RIML_AVER_Generic_GJ from RIML to AVER, with 1 connection(s)")

        h("objectvar syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 3.0
        h("a_RIML[0].Soma { syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVER[0].Soma { syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVER[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIML_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIML_RIS_Generic_GJ
        print("Adding electrical projection: NC_RIML_RIS_Generic_GJ from RIML to RIS, with 1 connection(s)")

        h("objectvar syn_NC_RIML_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIML_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_RIML[0].Soma { syn_NC_RIML_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_RIML_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIML_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIML_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIML[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_AIBL_Generic_GJ
        print("Adding electrical projection: NC_RIMR_AIBL_Generic_GJ from RIMR to AIBL, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_RIMR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIMR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_AIYR_Generic_GJ
        print("Adding electrical projection: NC_RIMR_AIYR_Generic_GJ from RIMR to AIYR, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIYR[0].Soma], weight: 1.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIYR[0].Soma { syn_NC_RIMR_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIMR_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIYR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_AIYR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_AVAL_Generic_GJ
        print("Adding electrical projection: NC_RIMR_AVAL_Generic_GJ from RIMR to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAL[0].Soma { syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_AVAR_Generic_GJ
        print("Adding electrical projection: NC_RIMR_AVAR_Generic_GJ from RIMR to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_RIMR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIMR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_AVEL_Generic_GJ
        print("Adding electrical projection: NC_RIMR_AVEL_Generic_GJ from RIMR to AVEL, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 3.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVEL[0].Soma { syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_AVER_Generic_GJ
        print("Adding electrical projection: NC_RIMR_AVER_Generic_GJ from RIMR to AVER, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 2.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVER[0].Soma { syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVER[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIMR_RIS_Generic_GJ
        print("Adding electrical projection: NC_RIMR_RIS_Generic_GJ from RIMR to RIS, with 1 connection(s)")

        h("objectvar syn_NC_RIMR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIMR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_RIMR[0].Soma { syn_NC_RIMR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_RIMR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIMR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIMR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIMR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIPL_RMED_Generic_GJ
        print("Adding electrical projection: NC_RIPL_RMED_Generic_GJ from RIPL to RMED, with 1 connection(s)")

        h("objectvar syn_NC_RIPL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIPL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 1.0
        h("a_RIPL[0].Soma { syn_NC_RIPL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMED[0].Soma { syn_NC_RIPL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIPL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMED[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIPL_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIPL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIPR_RMED_Generic_GJ
        print("Adding electrical projection: NC_RIPR_RMED_Generic_GJ from RIPR to RMED, with 1 connection(s)")

        h("objectvar syn_NC_RIPR_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIPR_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 1.0
        h("a_RIPR[0].Soma { syn_NC_RIPR_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMED[0].Soma { syn_NC_RIPR_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIPR_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMED[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIPR_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIPR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIR_BAGL_Generic_GJ
        print("Adding electrical projection: NC_RIR_BAGL_Generic_GJ from RIR to BAGL, with 1 connection(s)")

        h("objectvar syn_NC_RIR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGL[0].Soma], weight: 1.0
        h("a_RIR[0].Soma { syn_NC_RIR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_BAGL[0].Soma { syn_NC_RIR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_BAGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIR_BAGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIR_BAGR_Generic_GJ
        print("Adding electrical projection: NC_RIR_BAGR_Generic_GJ from RIR to BAGR, with 1 connection(s)")

        h("objectvar syn_NC_RIR_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIR_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_BAGR[0].Soma], weight: 1.0
        h("a_RIR[0].Soma { syn_NC_RIR_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_BAGR[0].Soma { syn_NC_RIR_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIR_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_BAGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIR_BAGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_AIBR_Generic_GJ
        print("Adding electrical projection: NC_RIS_AIBR_Generic_GJ from RIS to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIS_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_RIS_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_AVJL_Generic_GJ
        print("Adding electrical projection: NC_RIS_AVJL_Generic_GJ from RIS to AVJL, with 1 connection(s)")

        h("objectvar syn_NC_RIS_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVJL[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVJL[0].Soma { syn_NC_RIS_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVJL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_AVJL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_DB1_Generic_GJ
        print("Adding electrical projection: NC_RIS_DB1_Generic_GJ from RIS to DB1, with 1 connection(s)")

        h("objectvar syn_NC_RIS_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_RIS_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_RIML_Generic_GJ
        print("Adding electrical projection: NC_RIS_RIML_Generic_GJ from RIS to RIML, with 1 connection(s)")

        h("objectvar syn_NC_RIS_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIML[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIML[0].Soma { syn_NC_RIS_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_RIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_RIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_RIMR_Generic_GJ
        print("Adding electrical projection: NC_RIS_RIMR_Generic_GJ from RIS to RIMR, with 1 connection(s)")

        h("objectvar syn_NC_RIS_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIMR[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIMR[0].Soma { syn_NC_RIS_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIMR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_RIMR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_SMDDL_Generic_GJ
        print("Adding electrical projection: NC_RIS_SMDDL_Generic_GJ from RIS to SMDDL, with 1 connection(s)")

        h("objectvar syn_NC_RIS_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDL[0].Soma { syn_NC_RIS_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_SMDDR_Generic_GJ
        print("Adding electrical projection: NC_RIS_SMDDR_Generic_GJ from RIS to SMDDR, with 1 connection(s)")

        h("objectvar syn_NC_RIS_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDR[0].Soma { syn_NC_RIS_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIS_SMDVL_Generic_GJ
        print("Adding electrical projection: NC_RIS_SMDVL_Generic_GJ from RIS to SMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RIS_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIS_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0
        h("a_RIS[0].Soma { syn_NC_RIS_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVL[0].Soma { syn_NC_RIS_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIS_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIS_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIS[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVL_AIBL_Generic_GJ
        print("Adding electrical projection: NC_RIVL_AIBL_Generic_GJ from RIVL to AIBL, with 1 connection(s)")

        h("objectvar syn_NC_RIVL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBL[0].Soma], weight: 1.0
        h("a_RIVL[0].Soma { syn_NC_RIVL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBL[0].Soma { syn_NC_RIVL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIVL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVL_AIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVL_RIVR_Generic_GJ
        print("Adding electrical projection: NC_RIVL_RIVR_Generic_GJ from RIVL to RIVR, with 1 connection(s)")

        h("objectvar syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 2.0
        h("a_RIVL[0].Soma { syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVL[0].Soma { syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIVR[0].Soma { syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVL_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVL_SDQR_Generic_GJ
        print("Adding electrical projection: NC_RIVL_SDQR_Generic_GJ from RIVL to SDQR, with 1 connection(s)")

        h("objectvar syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma], weight: 2.0
        h("a_RIVL[0].Soma { syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVL[0].Soma { syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SDQR[0].Soma { syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVL_SMDVL_Generic_GJ
        print("Adding electrical projection: NC_RIVL_SMDVL_Generic_GJ from RIVL to SMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RIVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0
        h("a_RIVL[0].Soma { syn_NC_RIVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVL[0].Soma { syn_NC_RIVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVR_AIBR_Generic_GJ
        print("Adding electrical projection: NC_RIVR_AIBR_Generic_GJ from RIVR to AIBR, with 1 connection(s)")

        h("objectvar syn_NC_RIVR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIBR[0].Soma], weight: 1.0
        h("a_RIVR[0].Soma { syn_NC_RIVR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIBR[0].Soma { syn_NC_RIVR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RIVR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVR_AIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVR_RIVL_Generic_GJ
        print("Adding electrical projection: NC_RIVR_RIVL_Generic_GJ from RIVR to RIVL, with 1 connection(s)")

        h("objectvar syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 2.0
        h("a_RIVR[0].Soma { syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVL[0].Soma { syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIVL[0].Soma { syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVR_SDQR_Generic_GJ
        print("Adding electrical projection: NC_RIVR_SDQR_Generic_GJ from RIVR to SDQR, with 1 connection(s)")

        h("objectvar syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma], weight: 2.0
        h("a_RIVR[0].Soma { syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SDQR[0].Soma { syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVR_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RIVR_SMDVR_Generic_GJ
        print("Adding electrical projection: NC_RIVR_SMDVR_Generic_GJ from RIVR to SMDVR, with 1 connection(s)")

        h("objectvar syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 2.0
        h("a_RIVR[0].Soma { syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SMDVR[0].Soma { syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RIVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RIVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDL_OLQVL_Generic_GJ
        print("Adding electrical projection: NC_RMDDL_OLQVL_Generic_GJ from RMDDL to OLQVL, with 1 connection(s)")

        h("objectvar syn_NC_RMDDL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0
        h("a_RMDDL[0].Soma { syn_NC_RMDDL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVL[0].Soma { syn_NC_RMDDL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDL_RMDL_Generic_GJ
        print("Adding electrical projection: NC_RMDDL_RMDL_Generic_GJ from RMDDL to RMDL, with 1 connection(s)")

        h("objectvar syn_NC_RMDDL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0
        h("a_RMDDL[0].Soma { syn_NC_RMDDL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDL[0].Soma { syn_NC_RMDDL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDL_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_RMDDL_RMDVL_Generic_GJ from RMDDL to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RMDDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_RMDDL[0].Soma { syn_NC_RMDDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_RMDDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDL_SMDDL_Generic_GJ
        print("Adding electrical projection: NC_RMDDL_SMDDL_Generic_GJ from RMDDL to SMDDL, with 1 connection(s)")

        h("objectvar syn_NC_RMDDL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma], weight: 1.0
        h("a_RMDDL[0].Soma { syn_NC_RMDDL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDL[0].Soma { syn_NC_RMDDL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDL_SMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDR_OLQVR_Generic_GJ
        print("Adding electrical projection: NC_RMDDR_OLQVR_Generic_GJ from RMDDR to OLQVR, with 1 connection(s)")

        h("objectvar syn_NC_RMDDR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0
        h("a_RMDDR[0].Soma { syn_NC_RMDDR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVR[0].Soma { syn_NC_RMDDR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDR_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_RMDDR_RMDVR_Generic_GJ from RMDDR to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_RMDDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_RMDDR[0].Soma { syn_NC_RMDDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_RMDDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDR_SAADR_Generic_GJ
        print("Adding electrical projection: NC_RMDDR_SAADR_Generic_GJ from RMDDR to SAADR, with 1 connection(s)")

        h("objectvar syn_NC_RMDDR_SAADR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDR_SAADR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma], weight: 1.0
        h("a_RMDDR[0].Soma { syn_NC_RMDDR_SAADR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAADR[0].Soma { syn_NC_RMDDR_SAADR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDR_SAADR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SAADR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDR_SAADR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDDR_SMDDR_Generic_GJ
        print("Adding electrical projection: NC_RMDDR_SMDDR_Generic_GJ from RMDDR to SMDDR, with 1 connection(s)")

        h("objectvar syn_NC_RMDDR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDDR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma], weight: 1.0
        h("a_RMDDR[0].Soma { syn_NC_RMDDR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDDR[0].Soma { syn_NC_RMDDR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDDR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDDR_SMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDL_RMDDL_Generic_GJ
        print("Adding electrical projection: NC_RMDL_RMDDL_Generic_GJ from RMDL to RMDDL, with 1 connection(s)")

        h("objectvar syn_NC_RMDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0
        h("a_RMDL[0].Soma { syn_NC_RMDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDL[0].Soma { syn_NC_RMDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDL_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_RMDL_RMDVL_Generic_GJ from RMDL to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RMDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_RMDL[0].Soma { syn_NC_RMDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_RMDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDR_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_RMDR_RMDVR_Generic_GJ from RMDR to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_RMDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_RMDR[0].Soma { syn_NC_RMDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_RMDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_AVER_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_AVER_Generic_GJ from RMDVL to AVER, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_RMDVL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVER[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_OLQDL_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_OLQDL_Generic_GJ from RMDVL to OLQDL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDL[0].Soma { syn_NC_RMDVL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_RMDDL_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_RMDDL_Generic_GJ from RMDVL to RMDDL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDL[0].Soma { syn_NC_RMDVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_RMDL_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_RMDL_Generic_GJ from RMDVL to RMDL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDL[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDL[0].Soma { syn_NC_RMDVL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_RMDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_RMDVR_Generic_GJ from RMDVL to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_RMDVL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_SAAVL_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_SAAVL_Generic_GJ from RMDVL to SAAVL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAAVL[0].Soma { syn_NC_RMDVL_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SAAVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVL_SMDVL_Generic_GJ
        print("Adding electrical projection: NC_RMDVL_SMDVL_Generic_GJ from RMDVL to SMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0
        h("a_RMDVL[0].Soma { syn_NC_RMDVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVL[0].Soma { syn_NC_RMDVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVL_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_AVEL_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_AVEL_Generic_GJ from RMDVR to AVEL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_RMDVR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_AVER_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_AVER_Generic_GJ from RMDVR to AVER, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_RMDVR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVER[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_OLQDR_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_OLQDR_Generic_GJ from RMDVR to OLQDR, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_RMDVR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_RMDDR_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_RMDDR_Generic_GJ from RMDVR to RMDDR, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDR[0].Soma { syn_NC_RMDVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_RMDR_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_RMDR_Generic_GJ from RMDVR to RMDR, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_RMDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_RMDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDR[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_RMDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDR[0].Soma { syn_NC_RMDVR_RMDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_RMDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_RMDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_RMDVL_Generic_GJ from RMDVR to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_RMDVR_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_SAAVR_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_SAAVR_Generic_GJ from RMDVR to SAAVR, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAAVR[0].Soma { syn_NC_RMDVR_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SAAVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMDVR_SMDVR_Generic_GJ
        print("Adding electrical projection: NC_RMDVR_SMDVR_Generic_GJ from RMDVR to SMDVR, with 1 connection(s)")

        h("objectvar syn_NC_RMDVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMDVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 1.0
        h("a_RMDVR[0].Soma { syn_NC_RMDVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_RMDVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMDVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMDVR_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMED_IL1VL_Generic_GJ
        print("Adding electrical projection: NC_RMED_IL1VL_Generic_GJ from RMED to IL1VL, with 1 connection(s)")

        h("objectvar syn_NC_RMED_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMED_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1VL[0].Soma], weight: 1.0
        h("a_RMED[0].Soma { syn_NC_RMED_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1VL[0].Soma { syn_NC_RMED_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMED_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1VL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMED_IL1VL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMED[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMED_RIPL_Generic_GJ
        print("Adding electrical projection: NC_RMED_RIPL_Generic_GJ from RMED to RIPL, with 1 connection(s)")

        h("objectvar syn_NC_RMED_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMED_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPL[0].Soma], weight: 1.0
        h("a_RMED[0].Soma { syn_NC_RMED_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIPL[0].Soma { syn_NC_RMED_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMED_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIPL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMED_RIPL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMED[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMED_RIPR_Generic_GJ
        print("Adding electrical projection: NC_RMED_RIPR_Generic_GJ from RMED to RIPR, with 1 connection(s)")

        h("objectvar syn_NC_RMED_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMED_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIPR[0].Soma], weight: 1.0
        h("a_RMED[0].Soma { syn_NC_RMED_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIPR[0].Soma { syn_NC_RMED_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMED_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIPR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMED_RIPR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMED[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMED_RMEV_Generic_GJ
        print("Adding electrical projection: NC_RMED_RMEV_Generic_GJ from RMED to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 2.0
        h("a_RMED[0].Soma { syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMED[0].Soma { syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RMEV[0].Soma { syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMED_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMED[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_RMEL_RIGL_Generic_GJ from RMEL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_RMEL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_RMEL[0].Soma { syn_NC_RMEL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_RMEL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEL_RMEV_Generic_GJ
        print("Adding electrical projection: NC_RMEL_RMEV_Generic_GJ from RMEL to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_RMEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0
        h("a_RMEL[0].Soma { syn_NC_RMEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_RMEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEL_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMER_RMEV_Generic_GJ
        print("Adding electrical projection: NC_RMER_RMEV_Generic_GJ from RMER to RMEV, with 1 connection(s)")

        h("objectvar syn_NC_RMER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma], weight: 1.0
        h("a_RMER[0].Soma { syn_NC_RMER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_RMER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEV[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMER_RMEV_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMER[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_AVEL_Generic_GJ
        print("Adding electrical projection: NC_RMEV_AVEL_Generic_GJ from RMEV to AVEL, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVEL[0].Soma], weight: 1.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVEL[0].Soma { syn_NC_RMEV_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEV_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_AVEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_AVER_Generic_GJ
        print("Adding electrical projection: NC_RMEV_AVER_Generic_GJ from RMEV to AVER, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVER[0].Soma], weight: 1.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVER[0].Soma { syn_NC_RMEV_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEV_AVER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVER[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_AVER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_IL1DL_Generic_GJ
        print("Adding electrical projection: NC_RMEV_IL1DL_Generic_GJ from RMEV to IL1DL, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DL[0].Soma], weight: 1.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DL[0].Soma { syn_NC_RMEV_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEV_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_IL1DL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_IL1DR_Generic_GJ
        print("Adding electrical projection: NC_RMEV_IL1DR_Generic_GJ from RMEV to IL1DR, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL1DR[0].Soma], weight: 1.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL1DR[0].Soma { syn_NC_RMEV_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEV_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL1DR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_IL1DR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_RMED_Generic_GJ
        print("Adding electrical projection: NC_RMEV_RMED_Generic_GJ from RMEV to RMED, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMED[0].Soma], weight: 2.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMED[0].Soma { syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEV[0].Soma { syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RMED[0].Soma { syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMED[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_RMED_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_RMEL_Generic_GJ
        print("Adding electrical projection: NC_RMEV_RMEL_Generic_GJ from RMEV to RMEL, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMEL[0].Soma], weight: 1.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMEL[0].Soma { syn_NC_RMEV_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEV_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMEL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_RMEL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMEV_RMER_Generic_GJ
        print("Adding electrical projection: NC_RMEV_RMER_Generic_GJ from RMEV to RMER, with 1 connection(s)")

        h("objectvar syn_NC_RMEV_RMER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMEV_RMER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMEV[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMER[0].Soma], weight: 1.0
        h("a_RMEV[0].Soma { syn_NC_RMEV_RMER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMER[0].Soma { syn_NC_RMEV_RMER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMEV_RMER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMER[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMEV_RMER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMEV[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMFL_URBR_Generic_GJ
        print("Adding electrical projection: NC_RMFL_URBR_Generic_GJ from RMFL to URBR, with 1 connection(s)")

        h("objectvar syn_NC_RMFL_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMFL_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma], weight: 1.0
        h("a_RMFL[0].Soma { syn_NC_RMFL_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URBR[0].Soma { syn_NC_RMFL_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMFL_URBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMFL_URBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMFL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_ADLL_Generic_GJ
        print("Adding electrical projection: NC_RMGL_ADLL_Generic_GJ from RMGL to ADLL, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ADLL[0].Soma], weight: 1.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ADLL[0].Soma { syn_NC_RMGL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ADLL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_ADLL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_ASHL_Generic_GJ
        print("Adding electrical projection: NC_RMGL_ASHL_Generic_GJ from RMGL to ASHL, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHL[0].Soma], weight: 1.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHL[0].Soma { syn_NC_RMGL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_ASHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_ASKL_Generic_GJ
        print("Adding electrical projection: NC_RMGL_ASKL_Generic_GJ from RMGL to ASKL, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKL[0].Soma], weight: 1.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKL[0].Soma { syn_NC_RMGL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_ASKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_AWBL_Generic_GJ
        print("Adding electrical projection: NC_RMGL_AWBL_Generic_GJ from RMGL to AWBL, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBL[0].Soma], weight: 1.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBL[0].Soma { syn_NC_RMGL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_AWBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_IL2L_Generic_GJ
        print("Adding electrical projection: NC_RMGL_IL2L_Generic_GJ from RMGL to IL2L, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_IL2L_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_IL2L_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2L[0].Soma], weight: 1.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_IL2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL2L[0].Soma { syn_NC_RMGL_IL2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGL_IL2L_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL2L[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_IL2L_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_RMHL_Generic_GJ
        print("Adding electrical projection: NC_RMGL_RMHL_Generic_GJ from RMGL to RMHL, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 3.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMHL[0].Soma { syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RMHL[0].Soma { syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGL_URXL_Generic_GJ
        print("Adding electrical projection: NC_RMGL_URXL_Generic_GJ from RMGL to URXL, with 1 connection(s)")

        h("objectvar syn_NC_RMGL_URXL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGL_URXL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma], weight: 1.0
        h("a_RMGL[0].Soma { syn_NC_RMGL_URXL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URXL[0].Soma { syn_NC_RMGL_URXL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGL_URXL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URXL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGL_URXL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGR_ASHR_Generic_GJ
        print("Adding electrical projection: NC_RMGR_ASHR_Generic_GJ from RMGR to ASHR, with 1 connection(s)")

        h("objectvar syn_NC_RMGR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASHR[0].Soma], weight: 1.0
        h("a_RMGR[0].Soma { syn_NC_RMGR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASHR[0].Soma { syn_NC_RMGR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGR_ASHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGR_ASKR_Generic_GJ
        print("Adding electrical projection: NC_RMGR_ASKR_Generic_GJ from RMGR to ASKR, with 1 connection(s)")

        h("objectvar syn_NC_RMGR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ASKR[0].Soma], weight: 1.0
        h("a_RMGR[0].Soma { syn_NC_RMGR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ASKR[0].Soma { syn_NC_RMGR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ASKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGR_ASKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGR_AWBR_Generic_GJ
        print("Adding electrical projection: NC_RMGR_AWBR_Generic_GJ from RMGR to AWBR, with 1 connection(s)")

        h("objectvar syn_NC_RMGR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AWBR[0].Soma], weight: 1.0
        h("a_RMGR[0].Soma { syn_NC_RMGR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AWBR[0].Soma { syn_NC_RMGR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AWBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGR_AWBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGR_IL2R_Generic_GJ
        print("Adding electrical projection: NC_RMGR_IL2R_Generic_GJ from RMGR to IL2R, with 1 connection(s)")

        h("objectvar syn_NC_RMGR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma], weight: 1.0
        h("a_RMGR[0].Soma { syn_NC_RMGR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL2R[0].Soma { syn_NC_RMGR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGR_RMHR_Generic_GJ
        print("Adding electrical projection: NC_RMGR_RMHR_Generic_GJ from RMGR to RMHR, with 1 connection(s)")

        h("objectvar syn_NC_RMGR_RMHR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGR_RMHR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma], weight: 1.0
        h("a_RMGR[0].Soma { syn_NC_RMGR_RMHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMHR[0].Soma { syn_NC_RMGR_RMHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGR_RMHR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMHR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGR_RMHR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMGR_URXR_Generic_GJ
        print("Adding electrical projection: NC_RMGR_URXR_Generic_GJ from RMGR to URXR, with 1 connection(s)")

        h("objectvar syn_NC_RMGR_URXR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMGR_URXR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma], weight: 1.0
        h("a_RMGR[0].Soma { syn_NC_RMGR_URXR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_URXR[0].Soma { syn_NC_RMGR_URXR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMGR_URXR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_URXR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMGR_URXR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMGR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMHL_RMGL_Generic_GJ
        print("Adding electrical projection: NC_RMHL_RMGL_Generic_GJ from RMHL to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 3.0
        h("a_RMHL[0].Soma { syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMHL[0].Soma { syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_RMGL[0].Soma { syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMHL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMHL_SIBVR_Generic_GJ
        print("Adding electrical projection: NC_RMHL_SIBVR_Generic_GJ from RMHL to SIBVR, with 1 connection(s)")

        h("objectvar syn_NC_RMHL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMHL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0
        h("a_RMHL[0].Soma { syn_NC_RMHL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVR[0].Soma { syn_NC_RMHL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMHL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMHL_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMHL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_RMHR_RMGR_Generic_GJ
        print("Adding electrical projection: NC_RMHR_RMGR_Generic_GJ from RMHR to RMGR, with 1 connection(s)")

        h("objectvar syn_NC_RMHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_RMHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_RMHR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0
        h("a_RMHR[0].Soma { syn_NC_RMHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGR[0].Soma { syn_NC_RMHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_RMHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_RMHR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_RMHR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SAADL_SMBDL_Generic_GJ
        print("Adding electrical projection: NC_SAADL_SMBDL_Generic_GJ from SAADL to SMBDL, with 1 connection(s)")

        h("objectvar syn_NC_SAADL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SAADL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma], weight: 1.0
        h("a_SAADL[0].Soma { syn_NC_SAADL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDL[0].Soma { syn_NC_SAADL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SAADL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SAADL_SMBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SAADL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SAADR_RMDDR_Generic_GJ
        print("Adding electrical projection: NC_SAADR_RMDDR_Generic_GJ from SAADR to RMDDR, with 1 connection(s)")

        h("objectvar syn_NC_SAADR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SAADR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0
        h("a_SAADR[0].Soma { syn_NC_SAADR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDR[0].Soma { syn_NC_SAADR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SAADR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SAADR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SAADR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SAAVL_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_SAAVL_RMDVL_Generic_GJ from SAAVL to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_SAAVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SAAVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_SAAVL[0].Soma { syn_NC_SAAVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_SAAVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SAAVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SAAVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SAAVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SAAVL_SMBVR_Generic_GJ
        print("Adding electrical projection: NC_SAAVL_SMBVR_Generic_GJ from SAAVL to SMBVR, with 1 connection(s)")

        h("objectvar syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma], weight: 3.0
        h("a_SAAVL[0].Soma { syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBVR[0].Soma { syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAAVL[0].Soma { syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_SMBVR[0].Soma { syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SAAVL_SMBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SAAVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SAAVR_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_SAAVR_RMDVR_Generic_GJ from SAAVR to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_SAAVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SAAVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_SAAVR[0].Soma { syn_NC_SAAVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_SAAVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SAAVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SAAVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SAAVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SAAVR_SMBVL_Generic_GJ
        print("Adding electrical projection: NC_SAAVR_SMBVL_Generic_GJ from SAAVR to SMBVL, with 1 connection(s)")

        h("objectvar syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma], weight: 2.0
        h("a_SAAVR[0].Soma { syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBVL[0].Soma { syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAAVR[0].Soma { syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SMBVL[0].Soma { syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMBVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SAAVR_SMBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SAAVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABD_AVAL_Generic_GJ
        print("Adding electrical projection: NC_SABD_AVAL_Generic_GJ from SABD to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 4.0
        h("a_SABD[0].Soma { syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAL[0].Soma { syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABD_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABD[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABD_VA2_Generic_GJ
        print("Adding electrical projection: NC_SABD_VA2_Generic_GJ from SABD to VA2, with 1 connection(s)")

        h("objectvar syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma], weight: 3.0
        h("a_SABD[0].Soma { syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA2[0].Soma { syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABD_VA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABD[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABD_VA3_Generic_GJ
        print("Adding electrical projection: NC_SABD_VA3_Generic_GJ from SABD to VA3, with 1 connection(s)")

        h("objectvar syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma], weight: 2.0
        h("a_SABD[0].Soma { syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA3[0].Soma { syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VA3[0].Soma { syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA3[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABD_VA3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABD[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABD_VA4_Generic_GJ
        print("Adding electrical projection: NC_SABD_VA4_Generic_GJ from SABD to VA4, with 1 connection(s)")

        h("objectvar syn_NC_SABD_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABD_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma], weight: 1.0
        h("a_SABD[0].Soma { syn_NC_SABD_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_SABD_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SABD_VA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABD_VA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABD[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABVL_AVAR_Generic_GJ
        print("Adding electrical projection: NC_SABVL_AVAR_Generic_GJ from SABVL to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0
        h("a_SABVL[0].Soma { syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVL[0].Soma { syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAR[0].Soma { syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABVL_DA1_Generic_GJ
        print("Adding electrical projection: NC_SABVL_DA1_Generic_GJ from SABVL to DA1, with 1 connection(s)")

        h("objectvar syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 2.0
        h("a_SABVL[0].Soma { syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVL[0].Soma { syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA1[0].Soma { syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABVL_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABVL_DA2_Generic_GJ
        print("Adding electrical projection: NC_SABVL_DA2_Generic_GJ from SABVL to DA2, with 1 connection(s)")

        h("objectvar syn_NC_SABVL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABVL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 1.0
        h("a_SABVL[0].Soma { syn_NC_SABVL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_SABVL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SABVL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABVL_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABVR_AVAL_Generic_GJ
        print("Adding electrical projection: NC_SABVR_AVAL_Generic_GJ from SABVR to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_SABVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_SABVR[0].Soma { syn_NC_SABVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_SABVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SABVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABVR_AVAR_Generic_GJ
        print("Adding electrical projection: NC_SABVR_AVAR_Generic_GJ from SABVR to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_SABVR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABVR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_SABVR[0].Soma { syn_NC_SABVR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_SABVR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SABVR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABVR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SABVR_DA1_Generic_GJ
        print("Adding electrical projection: NC_SABVR_DA1_Generic_GJ from SABVR to DA1, with 1 connection(s)")

        h("objectvar syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SABVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA1[0].Soma], weight: 3.0
        h("a_SABVR[0].Soma { syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA1[0].Soma { syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABVR[0].Soma { syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_DA1[0].Soma { syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA1[0].Soma.v(0.5)")
        h("setpointer syn_NC_SABVR_DA1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SABVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQL_SDQR_Generic_GJ
        print("Adding electrical projection: NC_SDQL_SDQR_Generic_GJ from SDQL to SDQR, with 1 connection(s)")

        h("objectvar syn_NC_SDQL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma], weight: 1.0
        h("a_SDQL[0].Soma { syn_NC_SDQL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_SDQL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SDQL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQR_AVAL_Generic_GJ
        print("Adding electrical projection: NC_SDQR_AVAL_Generic_GJ from SDQR to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_SDQR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_SDQR[0].Soma { syn_NC_SDQR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_SDQR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SDQR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQR_AVBL_Generic_GJ
        print("Adding electrical projection: NC_SDQR_AVBL_Generic_GJ from SDQR to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_SDQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_SDQR[0].Soma { syn_NC_SDQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_SDQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SDQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQR_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQR_RIVL_Generic_GJ
        print("Adding electrical projection: NC_SDQR_RIVL_Generic_GJ from SDQR to RIVL, with 1 connection(s)")

        h("objectvar syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 2.0
        h("a_SDQR[0].Soma { syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVL[0].Soma { syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIVL[0].Soma { syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQR_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQR_RIVR_Generic_GJ
        print("Adding electrical projection: NC_SDQR_RIVR_Generic_GJ from SDQR to RIVR, with 1 connection(s)")

        h("objectvar syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 2.0
        h("a_SDQR[0].Soma { syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIVR[0].Soma { syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQR_SDQL_Generic_GJ
        print("Adding electrical projection: NC_SDQR_SDQL_Generic_GJ from SDQR to SDQL, with 1 connection(s)")

        h("objectvar syn_NC_SDQR_SDQL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQR_SDQL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQL[0].Soma], weight: 1.0
        h("a_SDQR[0].Soma { syn_NC_SDQR_SDQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQL[0].Soma { syn_NC_SDQR_SDQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SDQR_SDQL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQR_SDQL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SDQR_SIBVL_Generic_GJ
        print("Adding electrical projection: NC_SDQR_SIBVL_Generic_GJ from SDQR to SIBVL, with 1 connection(s)")

        h("objectvar syn_NC_SDQR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SDQR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0
        h("a_SDQR[0].Soma { syn_NC_SDQR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVL[0].Soma { syn_NC_SDQR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SDQR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SDQR_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SDQR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIADL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SIADL_RIBL_Generic_GJ from SIADL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SIADL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIADL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIADL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SIADL[0].Soma { syn_NC_SIADL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SIADL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIADL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIADL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIADL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIADR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SIADR_RIBR_Generic_GJ from SIADR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SIADR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIADR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIADR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SIADR[0].Soma { syn_NC_SIADR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SIADR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIADR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIADR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIADR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIAVL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SIAVL_RIBL_Generic_GJ from SIAVL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SIAVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIAVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIAVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SIAVL[0].Soma { syn_NC_SIAVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SIAVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIAVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIAVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIAVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIAVR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SIAVR_RIBR_Generic_GJ from SIAVR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SIAVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIAVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIAVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SIAVR[0].Soma { syn_NC_SIAVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SIAVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIAVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIAVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIAVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBDL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SIBDL_RIBL_Generic_GJ from SIBDL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SIBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SIBDL[0].Soma { syn_NC_SIBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SIBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBDL_SIBVL_Generic_GJ
        print("Adding electrical projection: NC_SIBDL_SIBVL_Generic_GJ from SIBDL to SIBVL, with 1 connection(s)")

        h("objectvar syn_NC_SIBDL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBDL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma], weight: 1.0
        h("a_SIBDL[0].Soma { syn_NC_SIBDL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVL[0].Soma { syn_NC_SIBDL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBDL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBDL_SIBVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBDR_AIML_Generic_GJ
        print("Adding electrical projection: NC_SIBDR_AIML_Generic_GJ from SIBDR to AIML, with 1 connection(s)")

        h("objectvar syn_NC_SIBDR_AIML_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBDR_AIML_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AIML[0].Soma], weight: 1.0
        h("a_SIBDR[0].Soma { syn_NC_SIBDR_AIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AIML[0].Soma { syn_NC_SIBDR_AIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBDR_AIML_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AIML[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBDR_AIML_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBDR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SIBDR_RIBR_Generic_GJ from SIBDR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SIBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SIBDR[0].Soma { syn_NC_SIBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SIBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBDR_SIBVR_Generic_GJ
        print("Adding electrical projection: NC_SIBDR_SIBVR_Generic_GJ from SIBDR to SIBVR, with 1 connection(s)")

        h("objectvar syn_NC_SIBDR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBDR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma], weight: 1.0
        h("a_SIBDR[0].Soma { syn_NC_SIBDR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBVR[0].Soma { syn_NC_SIBDR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBDR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBDR_SIBVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVL_AVBL_Generic_GJ
        print("Adding electrical projection: NC_SIBVL_AVBL_Generic_GJ from SIBVL to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_SIBVL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_SIBVL[0].Soma { syn_NC_SIBVL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_SIBVL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVL_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVL_AVBR_Generic_GJ
        print("Adding electrical projection: NC_SIBVL_AVBR_Generic_GJ from SIBVL to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_SIBVL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_SIBVL[0].Soma { syn_NC_SIBVL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_SIBVL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVL_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SIBVL_RIBL_Generic_GJ from SIBVL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SIBVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SIBVL[0].Soma { syn_NC_SIBVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SIBVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVL_SDQR_Generic_GJ
        print("Adding electrical projection: NC_SIBVL_SDQR_Generic_GJ from SIBVL to SDQR, with 1 connection(s)")

        h("objectvar syn_NC_SIBVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SDQR[0].Soma], weight: 1.0
        h("a_SIBVL[0].Soma { syn_NC_SIBVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SDQR[0].Soma { syn_NC_SIBVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SDQR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVL_SDQR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVL_SIBDL_Generic_GJ
        print("Adding electrical projection: NC_SIBVL_SIBDL_Generic_GJ from SIBVL to SIBDL, with 1 connection(s)")

        h("objectvar syn_NC_SIBVL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDL[0].Soma], weight: 1.0
        h("a_SIBVL[0].Soma { syn_NC_SIBVL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBDL[0].Soma { syn_NC_SIBVL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVL_SIBDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVR_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SIBVR_RIBL_Generic_GJ from SIBVR to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SIBVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SIBVR[0].Soma { syn_NC_SIBVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SIBVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SIBVR_RIBR_Generic_GJ from SIBVR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SIBVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SIBVR[0].Soma { syn_NC_SIBVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SIBVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVR_RMHL_Generic_GJ
        print("Adding electrical projection: NC_SIBVR_RMHL_Generic_GJ from SIBVR to RMHL, with 1 connection(s)")

        h("objectvar syn_NC_SIBVR_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVR_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMHL[0].Soma], weight: 1.0
        h("a_SIBVR[0].Soma { syn_NC_SIBVR_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMHL[0].Soma { syn_NC_SIBVR_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVR_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMHL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVR_RMHL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SIBVR_SIBDR_Generic_GJ
        print("Adding electrical projection: NC_SIBVR_SIBDR_Generic_GJ from SIBVR to SIBDR, with 1 connection(s)")

        h("objectvar syn_NC_SIBVR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SIBVR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SIBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SIBDR[0].Soma], weight: 1.0
        h("a_SIBVR[0].Soma { syn_NC_SIBVR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SIBDR[0].Soma { syn_NC_SIBVR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SIBVR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SIBDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SIBVR_SIBDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SIBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDL_AVKL_Generic_GJ
        print("Adding electrical projection: NC_SMBDL_AVKL_Generic_GJ from SMBDL to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_SMBDL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_SMBDL[0].Soma { syn_NC_SMBDL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_SMBDL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDL_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDL_AVKR_Generic_GJ
        print("Adding electrical projection: NC_SMBDL_AVKR_Generic_GJ from SMBDL to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_SMBDL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0
        h("a_SMBDL[0].Soma { syn_NC_SMBDL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_SMBDL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDL_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SMBDL_RIBL_Generic_GJ from SMBDL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SMBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SMBDL[0].Soma { syn_NC_SMBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SMBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDL_SAADL_Generic_GJ
        print("Adding electrical projection: NC_SMBDL_SAADL_Generic_GJ from SMBDL to SAADL, with 1 connection(s)")

        h("objectvar syn_NC_SMBDL_SAADL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDL_SAADL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAADL[0].Soma], weight: 1.0
        h("a_SMBDL[0].Soma { syn_NC_SMBDL_SAADL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAADL[0].Soma { syn_NC_SMBDL_SAADL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDL_SAADL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SAADL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDL_SAADL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDR_ALNL_Generic_GJ
        print("Adding electrical projection: NC_SMBDR_ALNL_Generic_GJ from SMBDR to ALNL, with 1 connection(s)")

        h("objectvar syn_NC_SMBDR_ALNL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDR_ALNL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_ALNL[0].Soma], weight: 1.0
        h("a_SMBDR[0].Soma { syn_NC_SMBDR_ALNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_ALNL[0].Soma { syn_NC_SMBDR_ALNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDR_ALNL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_ALNL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDR_ALNL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDR_AVKL_Generic_GJ
        print("Adding electrical projection: NC_SMBDR_AVKL_Generic_GJ from SMBDR to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_SMBDR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_SMBDR[0].Soma { syn_NC_SMBDR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_SMBDR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDR_AVKR_Generic_GJ
        print("Adding electrical projection: NC_SMBDR_AVKR_Generic_GJ from SMBDR to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 2.0
        h("a_SMBDR[0].Soma { syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBDR[0].Soma { syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVKR[0].Soma { syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBDR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SMBDR_RIBR_Generic_GJ from SMBDR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SMBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SMBDR[0].Soma { syn_NC_SMBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SMBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBVL_SAAVR_Generic_GJ
        print("Adding electrical projection: NC_SMBVL_SAAVR_Generic_GJ from SMBVL to SAAVR, with 1 connection(s)")

        h("objectvar syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVR[0].Soma], weight: 2.0
        h("a_SMBVL[0].Soma { syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAAVR[0].Soma { syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBVL[0].Soma { syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SAAVR[0].Soma { syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SAAVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBVL_SAAVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBVR_AVKL_Generic_GJ
        print("Adding electrical projection: NC_SMBVR_AVKL_Generic_GJ from SMBVR to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_SMBVR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBVR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_SMBVR[0].Soma { syn_NC_SMBVR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_SMBVR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBVR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBVR_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBVR_AVKR_Generic_GJ
        print("Adding electrical projection: NC_SMBVR_AVKR_Generic_GJ from SMBVR to AVKR, with 1 connection(s)")

        h("objectvar syn_NC_SMBVR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBVR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKR[0].Soma], weight: 1.0
        h("a_SMBVR[0].Soma { syn_NC_SMBVR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKR[0].Soma { syn_NC_SMBVR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMBVR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBVR_AVKR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMBVR_SAAVL_Generic_GJ
        print("Adding electrical projection: NC_SMBVR_SAAVL_Generic_GJ from SMBVR to SAAVL, with 1 connection(s)")

        h("objectvar syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMBVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SAAVL[0].Soma], weight: 3.0
        h("a_SMBVR[0].Soma { syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SAAVL[0].Soma { syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMBVR[0].Soma { syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_SAAVL[0].Soma { syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SAAVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMBVR_SAAVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMBVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDL_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SMDDL_RIBL_Generic_GJ from SMDDL to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SMDDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 1.0
        h("a_SMDDL[0].Soma { syn_NC_SMDDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SMDDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDL_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDL_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SMDDL_RIBR_Generic_GJ from SMDDL to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SMDDL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SMDDL[0].Soma { syn_NC_SMDDL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SMDDL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDL_RIS_Generic_GJ
        print("Adding electrical projection: NC_SMDDL_RIS_Generic_GJ from SMDDL to RIS, with 1 connection(s)")

        h("objectvar syn_NC_SMDDL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_SMDDL[0].Soma { syn_NC_SMDDL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_SMDDL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDL_RMDDL_Generic_GJ
        print("Adding electrical projection: NC_SMDDL_RMDDL_Generic_GJ from SMDDL to RMDDL, with 1 connection(s)")

        h("objectvar syn_NC_SMDDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDL[0].Soma], weight: 1.0
        h("a_SMDDL[0].Soma { syn_NC_SMDDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDL[0].Soma { syn_NC_SMDDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDL_RMDDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDR_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SMDDR_RIBR_Generic_GJ from SMDDR to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SMDDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 1.0
        h("a_SMDDR[0].Soma { syn_NC_SMDDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SMDDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDR_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDR_RIS_Generic_GJ
        print("Adding electrical projection: NC_SMDDR_RIS_Generic_GJ from SMDDR to RIS, with 1 connection(s)")

        h("objectvar syn_NC_SMDDR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_SMDDR[0].Soma { syn_NC_SMDDR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_SMDDR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDR_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDR_RMDDR_Generic_GJ
        print("Adding electrical projection: NC_SMDDR_RMDDR_Generic_GJ from SMDDR to RMDDR, with 1 connection(s)")

        h("objectvar syn_NC_SMDDR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDDR[0].Soma], weight: 1.0
        h("a_SMDDR[0].Soma { syn_NC_SMDDR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDDR[0].Soma { syn_NC_SMDDR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDR_RMDDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDDR_VD1_Generic_GJ
        print("Adding electrical projection: NC_SMDDR_VD1_Generic_GJ from SMDDR to VD1, with 1 connection(s)")

        h("objectvar syn_NC_SMDDR_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDDR_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0
        h("a_SMDDR[0].Soma { syn_NC_SMDDR_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_SMDDR_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDDR_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDDR_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVL_RIBR_Generic_GJ
        print("Adding electrical projection: NC_SMDVL_RIBR_Generic_GJ from SMDVL to RIBR, with 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBR[0].Soma], weight: 2.0
        h("a_SMDVL[0].Soma { syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBR[0].Soma { syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVL[0].Soma { syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIBR[0].Soma { syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVL_RIBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVL_RIS_Generic_GJ
        print("Adding electrical projection: NC_SMDVL_RIS_Generic_GJ from SMDVL to RIS, with 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIS[0].Soma], weight: 1.0
        h("a_SMDVL[0].Soma { syn_NC_SMDVL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIS[0].Soma { syn_NC_SMDVL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIS[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVL_RIS_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVL_RIVL_Generic_GJ
        print("Adding electrical projection: NC_SMDVL_RIVL_Generic_GJ from SMDVL to RIVL, with 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVL[0].Soma], weight: 1.0
        h("a_SMDVL[0].Soma { syn_NC_SMDVL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVL[0].Soma { syn_NC_SMDVL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVL_RIVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVL_RMDVL_Generic_GJ
        print("Adding electrical projection: NC_SMDVL_RMDVL_Generic_GJ from SMDVL to RMDVL, with 1 connection(s)")

        h("objectvar syn_NC_SMDVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVL[0].Soma], weight: 1.0
        h("a_SMDVL[0].Soma { syn_NC_SMDVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVL[0].Soma { syn_NC_SMDVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVL_RMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVL_SMDVR_Generic_GJ
        print("Adding electrical projection: NC_SMDVL_SMDVR_Generic_GJ from SMDVL to SMDVR, with 1 connection(s)")

        h("objectvar syn_NC_SMDVL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 1.0
        h("a_SMDVL[0].Soma { syn_NC_SMDVL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_SMDVL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVL_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVR_RIBL_Generic_GJ
        print("Adding electrical projection: NC_SMDVR_RIBL_Generic_GJ from SMDVR to RIBL, with 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIBL[0].Soma], weight: 2.0
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIBL[0].Soma { syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIBL[0].Soma { syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVR_RIBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVR_RIVR_Generic_GJ
        print("Adding electrical projection: NC_SMDVR_RIVR_Generic_GJ from SMDVR to RIVR, with 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIVR[0].Soma], weight: 2.0
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIVR[0].Soma { syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_RIVR[0].Soma { syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVR_RIVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVR_RMDVR_Generic_GJ
        print("Adding electrical projection: NC_SMDVR_RMDVR_Generic_GJ from SMDVR to RMDVR, with 1 connection(s)")

        h("objectvar syn_NC_SMDVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMDVR[0].Soma], weight: 1.0
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMDVR[0].Soma { syn_NC_SMDVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVR_RMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVR_SMDVL_Generic_GJ
        print("Adding electrical projection: NC_SMDVR_SMDVL_Generic_GJ from SMDVR to SMDVL, with 1 connection(s)")

        h("objectvar syn_NC_SMDVR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVL[0].Soma], weight: 1.0
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVL[0].Soma { syn_NC_SMDVR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVR_SMDVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_SMDVR_VB1_Generic_GJ
        print("Adding electrical projection: NC_SMDVR_VB1_Generic_GJ from SMDVR to VB1, with 1 connection(s)")

        h("objectvar syn_NC_SMDVR_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_SMDVR_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 1.0
        h("a_SMDVR[0].Soma { syn_NC_SMDVR_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_SMDVR_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_SMDVR_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_SMDVR_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_SMDVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URBL_OLQDL_Generic_GJ
        print("Adding electrical projection: NC_URBL_OLQDL_Generic_GJ from URBL to OLQDL, with 1 connection(s)")

        h("objectvar syn_NC_URBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDL[0].Soma], weight: 1.0
        h("a_URBL[0].Soma { syn_NC_URBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDL[0].Soma { syn_NC_URBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URBL_OLQDL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URBL_OLQVL_Generic_GJ
        print("Adding electrical projection: NC_URBL_OLQVL_Generic_GJ from URBL to OLQVL, with 1 connection(s)")

        h("objectvar syn_NC_URBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVL[0].Soma], weight: 1.0
        h("a_URBL[0].Soma { syn_NC_URBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVL[0].Soma { syn_NC_URBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URBL_OLQVL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URBL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URBR_OLQDR_Generic_GJ
        print("Adding electrical projection: NC_URBR_OLQDR_Generic_GJ from URBR to OLQDR, with 1 connection(s)")

        h("objectvar syn_NC_URBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQDR[0].Soma], weight: 1.0
        h("a_URBR[0].Soma { syn_NC_URBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQDR[0].Soma { syn_NC_URBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQDR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URBR_OLQDR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URBR_OLQVR_Generic_GJ
        print("Adding electrical projection: NC_URBR_OLQVR_Generic_GJ from URBR to OLQVR, with 1 connection(s)")

        h("objectvar syn_NC_URBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_OLQVR[0].Soma], weight: 1.0
        h("a_URBR[0].Soma { syn_NC_URBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_OLQVR[0].Soma { syn_NC_URBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_OLQVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URBR_OLQVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URBR_RMFL_Generic_GJ
        print("Adding electrical projection: NC_URBR_RMFL_Generic_GJ from URBR to RMFL, with 1 connection(s)")

        h("objectvar syn_NC_URBR_RMFL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URBR_RMFL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URBR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMFL[0].Soma], weight: 1.0
        h("a_URBR[0].Soma { syn_NC_URBR_RMFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMFL[0].Soma { syn_NC_URBR_RMFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URBR_RMFL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMFL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URBR_RMFL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URBR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URXL_RMGL_Generic_GJ
        print("Adding electrical projection: NC_URXL_RMGL_Generic_GJ from URXL to RMGL, with 1 connection(s)")

        h("objectvar syn_NC_URXL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URXL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGL[0].Soma], weight: 1.0
        h("a_URXL[0].Soma { syn_NC_URXL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGL[0].Soma { syn_NC_URXL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URXL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URXL_RMGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URXL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URXR_IL2R_Generic_GJ
        print("Adding electrical projection: NC_URXR_IL2R_Generic_GJ from URXR to IL2R, with 1 connection(s)")

        h("objectvar syn_NC_URXR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URXR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_IL2R[0].Soma], weight: 1.0
        h("a_URXR[0].Soma { syn_NC_URXR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_IL2R[0].Soma { syn_NC_URXR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URXR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_IL2R[0].Soma.v(0.5)")
        h("setpointer syn_NC_URXR_IL2R_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URXR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URXR_RMGR_Generic_GJ
        print("Adding electrical projection: NC_URXR_RMGR_Generic_GJ from URXR to RMGR, with 1 connection(s)")

        h("objectvar syn_NC_URXR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URXR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URXR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RMGR[0].Soma], weight: 1.0
        h("a_URXR[0].Soma { syn_NC_URXR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RMGR[0].Soma { syn_NC_URXR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URXR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RMGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URXR_RMGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URXR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYDL_AVAL_Generic_GJ
        print("Adding electrical projection: NC_URYDL_AVAL_Generic_GJ from URYDL to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_URYDL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYDL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_URYDL[0].Soma { syn_NC_URYDL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_URYDL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYDL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYDL_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYDL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_URYDL_RIGL_Generic_GJ from URYDL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_URYDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_URYDL[0].Soma { syn_NC_URYDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_URYDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYDL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYDL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYDR_AVAR_Generic_GJ
        print("Adding electrical projection: NC_URYDR_AVAR_Generic_GJ from URYDR to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_URYDR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYDR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_URYDR[0].Soma { syn_NC_URYDR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_URYDR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYDR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYDR_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYDR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_URYDR_RIGR_Generic_GJ from URYDR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_URYDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYDR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_URYDR[0].Soma { syn_NC_URYDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_URYDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYDR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYDR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYVL_AVAR_Generic_GJ
        print("Adding electrical projection: NC_URYVL_AVAR_Generic_GJ from URYVL to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_URYVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_URYVL[0].Soma { syn_NC_URYVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_URYVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYVL_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYVL_RIGL_Generic_GJ
        print("Adding electrical projection: NC_URYVL_RIGL_Generic_GJ from URYVL to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_URYVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVL[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_URYVL[0].Soma { syn_NC_URYVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_URYVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYVL_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYVL[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYVR_AVAL_Generic_GJ
        print("Adding electrical projection: NC_URYVR_AVAL_Generic_GJ from URYVR to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_URYVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_URYVR[0].Soma { syn_NC_URYVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_URYVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYVR_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_URYVR_RIGR_Generic_GJ
        print("Adding electrical projection: NC_URYVR_RIGR_Generic_GJ from URYVR to RIGR, with 1 connection(s)")

        h("objectvar syn_NC_URYVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_URYVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_URYVR[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGR[0].Soma], weight: 1.0
        h("a_URYVR[0].Soma { syn_NC_URYVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGR[0].Soma { syn_NC_URYVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_URYVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGR[0].Soma.v(0.5)")
        h("setpointer syn_NC_URYVR_RIGR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_URYVR[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA1_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA1_AVAL_Generic_GJ from VA1 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 3.0
        h("a_VA1[0].Soma { syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA1[0].Soma { syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAL[0].Soma { syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA1_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA1_DA2_Generic_GJ
        print("Adding electrical projection: NC_VA1_DA2_Generic_GJ from VA1 to DA2, with 1 connection(s)")

        h("objectvar syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA2[0].Soma], weight: 2.0
        h("a_VA1[0].Soma { syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA2[0].Soma { syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA1[0].Soma { syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA2[0].Soma { syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA1_DA2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA10_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA10_AVAL_Generic_GJ from VA10 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_VA10[0].Soma { syn_NC_VA10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA10_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA10_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA10_AVAR_Generic_GJ from VA10 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_VA10[0].Soma { syn_NC_VA10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA10_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA11_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA11_AVAL_Generic_GJ from VA11 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA11_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA11_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_VA11[0].Soma { syn_NC_VA11_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA11_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA11_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA11_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA11[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA11_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA11_AVAR_Generic_GJ from VA11 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 7.0
        h("a_VA11[0].Soma { syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA11[0].Soma { syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA11_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA11[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA12_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA12_AVAR_Generic_GJ from VA12 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA12_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA12_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 1.0
        h("a_VA12[0].Soma { syn_NC_VA12_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA12_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA12_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA12_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA12[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA12_PHCL_Generic_GJ
        print("Adding electrical projection: NC_VA12_PHCL_Generic_GJ from VA12 to PHCL, with 1 connection(s)")

        h("objectvar syn_NC_VA12_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA12_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCL[0].Soma], weight: 1.0
        h("a_VA12[0].Soma { syn_NC_VA12_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCL[0].Soma { syn_NC_VA12_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA12_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA12_PHCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA12[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA12_PHCR_Generic_GJ
        print("Adding electrical projection: NC_VA12_PHCR_Generic_GJ from VA12 to PHCR, with 1 connection(s)")

        h("objectvar syn_NC_VA12_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA12_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PHCR[0].Soma], weight: 1.0
        h("a_VA12[0].Soma { syn_NC_VA12_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PHCR[0].Soma { syn_NC_VA12_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA12_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PHCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA12_PHCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA12[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA12_VB11_Generic_GJ
        print("Adding electrical projection: NC_VA12_VB11_Generic_GJ from VA12 to VB11, with 1 connection(s)")

        h("objectvar syn_NC_VA12_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA12_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma], weight: 1.0
        h("a_VA12[0].Soma { syn_NC_VA12_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB11[0].Soma { syn_NC_VA12_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA12_VB11_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB11[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA12_VB11_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA12[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA2_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA2_AVAL_Generic_GJ from VA2 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 4.0
        h("a_VA2[0].Soma { syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAL[0].Soma { syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA2_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA2_SABD_Generic_GJ
        print("Adding electrical projection: NC_VA2_SABD_Generic_GJ from VA2 to SABD, with 1 connection(s)")

        h("objectvar syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 3.0
        h("a_VA2[0].Soma { syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_SABD[0].Soma { syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABD[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA2_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA2_VD1_Generic_GJ
        print("Adding electrical projection: NC_VA2_VD1_Generic_GJ from VA2 to VD1, with 1 connection(s)")

        h("objectvar syn_NC_VA2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0
        h("a_VA2[0].Soma { syn_NC_VA2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VA2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA2_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA2_VD2_Generic_GJ
        print("Adding electrical projection: NC_VA2_VD2_Generic_GJ from VA2 to VD2, with 1 connection(s)")

        h("objectvar syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD2[0].Soma], weight: 3.0
        h("a_VA2[0].Soma { syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD2[0].Soma { syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA2[0].Soma { syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VD2[0].Soma { syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA2_VD2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA3_AS1_Generic_GJ
        print("Adding electrical projection: NC_VA3_AS1_Generic_GJ from VA3 to AS1, with 1 connection(s)")

        h("objectvar syn_NC_VA3_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA3_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS1[0].Soma], weight: 1.0
        h("a_VA3[0].Soma { syn_NC_VA3_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS1[0].Soma { syn_NC_VA3_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA3_AS1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA3_AS1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA3_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA3_AVAL_Generic_GJ from VA3 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_VA3[0].Soma { syn_NC_VA3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA3_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA3_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA3_AVAR_Generic_GJ from VA3 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_VA3[0].Soma { syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA3[0].Soma { syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA3_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA3_SABD_Generic_GJ
        print("Adding electrical projection: NC_VA3_SABD_Generic_GJ from VA3 to SABD, with 1 connection(s)")

        h("objectvar syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 2.0
        h("a_VA3[0].Soma { syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA3[0].Soma { syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_SABD[0].Soma { syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABD[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA3_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA4_AS2_Generic_GJ
        print("Adding electrical projection: NC_VA4_AS2_Generic_GJ from VA4 to AS2, with 1 connection(s)")

        h("objectvar syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS2[0].Soma], weight: 2.0
        h("a_VA4[0].Soma { syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS2[0].Soma { syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS2[0].Soma { syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA4_AS2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA4_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA4_AVAL_Generic_GJ from VA4 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_VA4[0].Soma { syn_NC_VA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA4_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA4_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA4_AVAR_Generic_GJ from VA4 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0
        h("a_VA4[0].Soma { syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA4[0].Soma { syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA4_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA4_DA5_Generic_GJ
        print("Adding electrical projection: NC_VA4_DA5_Generic_GJ from VA4 to DA5, with 1 connection(s)")

        h("objectvar syn_NC_VA4_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA4_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 1.0
        h("a_VA4[0].Soma { syn_NC_VA4_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_VA4_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA4_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA4_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA4_SABD_Generic_GJ
        print("Adding electrical projection: NC_VA4_SABD_Generic_GJ from VA4 to SABD, with 1 connection(s)")

        h("objectvar syn_NC_VA4_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA4_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SABD[0].Soma], weight: 1.0
        h("a_VA4[0].Soma { syn_NC_VA4_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SABD[0].Soma { syn_NC_VA4_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA4_SABD_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SABD[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA4_SABD_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA5_AS3_Generic_GJ
        print("Adding electrical projection: NC_VA5_AS3_Generic_GJ from VA5 to AS3, with 1 connection(s)")

        h("objectvar syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS3[0].Soma], weight: 2.0
        h("a_VA5[0].Soma { syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS3[0].Soma { syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AS3[0].Soma { syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA5_AS3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA5_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA5_AVAL_Generic_GJ from VA5 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0
        h("a_VA5[0].Soma { syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAL[0].Soma { syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA5_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA5_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA5_AVAR_Generic_GJ from VA5 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 3.0
        h("a_VA5[0].Soma { syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA5_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA5_DA5_Generic_GJ
        print("Adding electrical projection: NC_VA5_DA5_Generic_GJ from VA5 to DA5, with 1 connection(s)")

        h("objectvar syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA5[0].Soma], weight: 2.0
        h("a_VA5[0].Soma { syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA5[0].Soma { syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA5[0].Soma { syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DA5[0].Soma { syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA5_DA5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA6_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA6_AVAL_Generic_GJ from VA6 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 6.0
        h("a_VA6[0].Soma { syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA6[0].Soma { syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_AVAL[0].Soma { syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA6_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA6_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA6_AVAR_Generic_GJ from VA6 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 2.0
        h("a_VA6[0].Soma { syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA6[0].Soma { syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA6_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA7_AS5_Generic_GJ
        print("Adding electrical projection: NC_VA7_AS5_Generic_GJ from VA7 to AS5, with 1 connection(s)")

        h("objectvar syn_NC_VA7_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA7_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS5[0].Soma], weight: 1.0
        h("a_VA7[0].Soma { syn_NC_VA7_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS5[0].Soma { syn_NC_VA7_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA7_AS5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA7_AS5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA7_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA7_AVAL_Generic_GJ from VA7 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 2.0
        h("a_VA7[0].Soma { syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA7[0].Soma { syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVAL[0].Soma { syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA7_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA7_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA7_AVAR_Generic_GJ from VA7 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 4.0
        h("a_VA7[0].Soma { syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA7[0].Soma { syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA7_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA7_VB3_Generic_GJ
        print("Adding electrical projection: NC_VA7_VB3_Generic_GJ from VA7 to VB3, with 1 connection(s)")

        h("objectvar syn_NC_VA7_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA7_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma], weight: 1.0
        h("a_VA7[0].Soma { syn_NC_VA7_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB3[0].Soma { syn_NC_VA7_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA7_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA7_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_AS6_Generic_GJ
        print("Adding electrical projection: NC_VA8_AS6_Generic_GJ from VA8 to AS6, with 1 connection(s)")

        h("objectvar syn_NC_VA8_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AS6[0].Soma], weight: 1.0
        h("a_VA8[0].Soma { syn_NC_VA8_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AS6[0].Soma { syn_NC_VA8_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA8_AS6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AS6[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_AS6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA8_AVAL_Generic_GJ from VA8 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 10.0
        h("a_VA8[0].Soma { syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 10.0 }")
        h("a_AVAL[0].Soma { syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 10.0 }")
        h("setpointer syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VA8_AVAR_Generic_GJ from VA8 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 4.0
        h("a_VA8[0].Soma { syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAR[0].Soma { syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VA8_AVBR_Generic_GJ from VA8 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VA8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VA8[0].Soma { syn_NC_VA8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VA8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_PDER_Generic_GJ
        print("Adding electrical projection: NC_VA8_PDER_Generic_GJ from VA8 to PDER, with 1 connection(s)")

        h("objectvar syn_NC_VA8_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PDER[0].Soma], weight: 1.0
        h("a_VA8[0].Soma { syn_NC_VA8_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PDER[0].Soma { syn_NC_VA8_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA8_PDER_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PDER[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_PDER_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_PVCR_Generic_GJ
        print("Adding electrical projection: NC_VA8_PVCR_Generic_GJ from VA8 to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 2.0
        h("a_VA8[0].Soma { syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVCR[0].Soma { syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_VA8_Generic_GJ
        print("Adding electrical projection: NC_VA8_VA8_Generic_GJ from VA8 to VA8, with 1 connection(s)")

        h("objectvar syn_NC_VA8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 1.0
        h("a_VA8[0].Soma { syn_NC_VA8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VA8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_VB8_Generic_GJ
        print("Adding electrical projection: NC_VA8_VB8_Generic_GJ from VA8 to VB8, with 1 connection(s)")

        h("objectvar syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 3.0
        h("a_VA8[0].Soma { syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VB8[0].Soma { syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_VB9_Generic_GJ
        print("Adding electrical projection: NC_VA8_VB9_Generic_GJ from VA8 to VB9, with 1 connection(s)")

        h("objectvar syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 3.0
        h("a_VA8[0].Soma { syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VB9[0].Soma { syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA8_VD8_Generic_GJ
        print("Adding electrical projection: NC_VA8_VD8_Generic_GJ from VA8 to VD8, with 1 connection(s)")

        h("objectvar syn_NC_VA8_VD8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA8_VD8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD8[0].Soma], weight: 1.0
        h("a_VA8[0].Soma { syn_NC_VA8_VD8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD8[0].Soma { syn_NC_VA8_VD8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA8_VD8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA8_VD8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VA9_AVAL_Generic_GJ from VA9 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VA9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VA9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VA9_AVBR_Generic_GJ from VA9 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VA9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VA9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_DVB_Generic_GJ
        print("Adding electrical projection: NC_VA9_DVB_Generic_GJ from VA9 to DVB, with 1 connection(s)")

        h("objectvar syn_NC_VA9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVB[0].Soma { syn_NC_VA9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVB[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_DVC_Generic_GJ
        print("Adding electrical projection: NC_VA9_DVC_Generic_GJ from VA9 to DVC, with 1 connection(s)")

        h("objectvar syn_NC_VA9_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVC[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVC[0].Soma { syn_NC_VA9_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_DVC_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVC[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_DVC_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_PVCR_Generic_GJ
        print("Adding electrical projection: NC_VA9_PVCR_Generic_GJ from VA9 to PVCR, with 1 connection(s)")

        h("objectvar syn_NC_VA9_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCR[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCR[0].Soma { syn_NC_VA9_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_PVCR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_VB8_Generic_GJ
        print("Adding electrical projection: NC_VA9_VB8_Generic_GJ from VA9 to VB8, with 1 connection(s)")

        h("objectvar syn_NC_VA9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VA9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_VB9_Generic_GJ
        print("Adding electrical projection: NC_VA9_VB9_Generic_GJ from VA9 to VB9, with 1 connection(s)")

        h("objectvar syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 4.0
        h("a_VA9[0].Soma { syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VB9[0].Soma { syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VA9_VD7_Generic_GJ
        print("Adding electrical projection: NC_VA9_VD7_Generic_GJ from VA9 to VD7, with 1 connection(s)")

        h("objectvar syn_NC_VA9_VD7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VA9_VD7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD7[0].Soma], weight: 1.0
        h("a_VA9[0].Soma { syn_NC_VA9_VD7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD7[0].Soma { syn_NC_VA9_VD7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VA9_VD7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD7[0].Soma.v(0.5)")
        h("setpointer syn_NC_VA9_VD7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VA9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB1_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB1_AVBL_Generic_GJ from VB1 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB1_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB1_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_VB1[0].Soma { syn_NC_VB1_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB1_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB1_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB1_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB1_AVKL_Generic_GJ
        print("Adding electrical projection: NC_VB1_AVKL_Generic_GJ from VB1 to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 4.0
        h("a_VB1[0].Soma { syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVKL[0].Soma { syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB1_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB1_DB2_Generic_GJ
        print("Adding electrical projection: NC_VB1_DB2_Generic_GJ from VB1 to DB2, with 1 connection(s)")

        h("objectvar syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB2[0].Soma], weight: 2.0
        h("a_VB1[0].Soma { syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB2[0].Soma { syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_DB2[0].Soma { syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB1_DB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB1_SMDVR_Generic_GJ
        print("Adding electrical projection: NC_VB1_SMDVR_Generic_GJ from VB1 to SMDVR, with 1 connection(s)")

        h("objectvar syn_NC_VB1_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB1_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_SMDVR[0].Soma], weight: 1.0
        h("a_VB1[0].Soma { syn_NC_VB1_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_SMDVR[0].Soma { syn_NC_VB1_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB1_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_SMDVR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB1_SMDVR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB1_VB2_Generic_GJ
        print("Adding electrical projection: NC_VB1_VB2_Generic_GJ from VB1 to VB2, with 1 connection(s)")

        h("objectvar syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 4.0
        h("a_VB1[0].Soma { syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VB2[0].Soma { syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB1_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB10_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB10_AVBL_Generic_GJ from VB10 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0
        h("a_VB10[0].Soma { syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB10[0].Soma { syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBL[0].Soma { syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB10_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB10_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB10_AVBR_Generic_GJ from VB10 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VB10[0].Soma { syn_NC_VB10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB10_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB10_AVKL_Generic_GJ
        print("Adding electrical projection: NC_VB10_AVKL_Generic_GJ from VB10 to AVKL, with 1 connection(s)")

        h("objectvar syn_NC_VB10_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB10_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVKL[0].Soma], weight: 1.0
        h("a_VB10[0].Soma { syn_NC_VB10_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVKL[0].Soma { syn_NC_VB10_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB10_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVKL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB10_AVKL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB10_PVCL_Generic_GJ
        print("Adding electrical projection: NC_VB10_PVCL_Generic_GJ from VB10 to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_VB10_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB10_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB10[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 1.0
        h("a_VB10[0].Soma { syn_NC_VB10_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_VB10_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB10_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB10_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB10[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB11_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB11_AVBL_Generic_GJ from VB11 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0
        h("a_VB11[0].Soma { syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB11[0].Soma { syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBL[0].Soma { syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB11_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB11[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB11_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB11_AVBR_Generic_GJ from VB11 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB11_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB11_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VB11[0].Soma { syn_NC_VB11_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB11_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB11_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB11_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB11[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB11_VA12_Generic_GJ
        print("Adding electrical projection: NC_VB11_VA12_Generic_GJ from VB11 to VA12, with 1 connection(s)")

        h("objectvar syn_NC_VB11_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB11_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB11[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA12[0].Soma], weight: 1.0
        h("a_VB11[0].Soma { syn_NC_VB11_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA12[0].Soma { syn_NC_VB11_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB11_VA12_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA12[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB11_VA12_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB11[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB2_AVBL_Generic_GJ from VB2 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 3.0
        h("a_VB2[0].Soma { syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVBL[0].Soma { syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB2_AVBR_Generic_GJ from VB2 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VB2[0].Soma { syn_NC_VB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_DB4_Generic_GJ
        print("Adding electrical projection: NC_VB2_DB4_Generic_GJ from VB2 to DB4, with 1 connection(s)")

        h("objectvar syn_NC_VB2_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0
        h("a_VB2[0].Soma { syn_NC_VB2_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB4[0].Soma { syn_NC_VB2_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB2_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_RIGL_Generic_GJ
        print("Adding electrical projection: NC_VB2_RIGL_Generic_GJ from VB2 to RIGL, with 1 connection(s)")

        h("objectvar syn_NC_VB2_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_RIGL[0].Soma], weight: 1.0
        h("a_VB2[0].Soma { syn_NC_VB2_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_RIGL[0].Soma { syn_NC_VB2_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB2_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_RIGL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_RIGL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_VB1_Generic_GJ
        print("Adding electrical projection: NC_VB2_VB1_Generic_GJ from VB2 to VB1, with 1 connection(s)")

        h("objectvar syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB1[0].Soma], weight: 4.0
        h("a_VB2[0].Soma { syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB1[0].Soma { syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VB1[0].Soma { syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_VB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_VB3_Generic_GJ
        print("Adding electrical projection: NC_VB2_VB3_Generic_GJ from VB2 to VB3, with 1 connection(s)")

        h("objectvar syn_NC_VB2_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma], weight: 1.0
        h("a_VB2[0].Soma { syn_NC_VB2_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB3[0].Soma { syn_NC_VB2_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB2_VB3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_VB3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_VB5_Generic_GJ
        print("Adding electrical projection: NC_VB2_VB5_Generic_GJ from VB2 to VB5, with 1 connection(s)")

        h("objectvar syn_NC_VB2_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 1.0
        h("a_VB2[0].Soma { syn_NC_VB2_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB5[0].Soma { syn_NC_VB2_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB2_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB2_VB7_Generic_GJ
        print("Adding electrical projection: NC_VB2_VB7_Generic_GJ from VB2 to VB7, with 1 connection(s)")

        h("objectvar syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma], weight: 2.0
        h("a_VB2[0].Soma { syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB7[0].Soma { syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB7[0].Soma { syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB7[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB2_VB7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB2[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB3_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB3_AVBR_Generic_GJ from VB3 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VB3[0].Soma { syn_NC_VB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB3_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB3_DB1_Generic_GJ
        print("Adding electrical projection: NC_VB3_DB1_Generic_GJ from VB3 to DB1, with 1 connection(s)")

        h("objectvar syn_NC_VB3_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB3_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_VB3[0].Soma { syn_NC_VB3_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_VB3_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB3_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB3_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB3_VA7_Generic_GJ
        print("Adding electrical projection: NC_VB3_VA7_Generic_GJ from VB3 to VA7, with 1 connection(s)")

        h("objectvar syn_NC_VB3_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB3_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA7[0].Soma], weight: 1.0
        h("a_VB3[0].Soma { syn_NC_VB3_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA7[0].Soma { syn_NC_VB3_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB3_VA7_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA7[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB3_VA7_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB3_VB2_Generic_GJ
        print("Adding electrical projection: NC_VB3_VB2_Generic_GJ from VB3 to VB2, with 1 connection(s)")

        h("objectvar syn_NC_VB3_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB3_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB3[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0
        h("a_VB3[0].Soma { syn_NC_VB3_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB3_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB3_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB3_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB3[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB4_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB4_AVBL_Generic_GJ from VB4 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_VB4[0].Soma { syn_NC_VB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB4_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB4_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB4_AVBR_Generic_GJ from VB4 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 1.0
        h("a_VB4[0].Soma { syn_NC_VB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB4_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB4_DB1_Generic_GJ
        print("Adding electrical projection: NC_VB4_DB1_Generic_GJ from VB4 to DB1, with 1 connection(s)")

        h("objectvar syn_NC_VB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB1[0].Soma], weight: 1.0
        h("a_VB4[0].Soma { syn_NC_VB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB1[0].Soma { syn_NC_VB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB4_DB1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB4_DB4_Generic_GJ
        print("Adding electrical projection: NC_VB4_DB4_Generic_GJ from VB4 to DB4, with 1 connection(s)")

        h("objectvar syn_NC_VB4_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB4_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DB4[0].Soma], weight: 1.0
        h("a_VB4[0].Soma { syn_NC_VB4_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DB4[0].Soma { syn_NC_VB4_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB4_DB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB4_DB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB4_VB5_Generic_GJ
        print("Adding electrical projection: NC_VB4_VB5_Generic_GJ from VB4 to VB5, with 1 connection(s)")

        h("objectvar syn_NC_VB4_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB4_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 1.0
        h("a_VB4[0].Soma { syn_NC_VB4_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB5[0].Soma { syn_NC_VB4_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB4_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB4_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB4[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB5_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB5_AVBL_Generic_GJ from VB5 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_VB5[0].Soma { syn_NC_VB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB5_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB5_VB2_Generic_GJ
        print("Adding electrical projection: NC_VB5_VB2_Generic_GJ from VB5 to VB2, with 1 connection(s)")

        h("objectvar syn_NC_VB5_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB5_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 1.0
        h("a_VB5[0].Soma { syn_NC_VB5_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB5_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB5_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB5_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB5_VB4_Generic_GJ
        print("Adding electrical projection: NC_VB5_VB4_Generic_GJ from VB5 to VB4, with 1 connection(s)")

        h("objectvar syn_NC_VB5_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB5_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB4[0].Soma], weight: 1.0
        h("a_VB5[0].Soma { syn_NC_VB5_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB4[0].Soma { syn_NC_VB5_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB5_VB4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB5_VB4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB5_VB6_Generic_GJ
        print("Adding electrical projection: NC_VB5_VB6_Generic_GJ from VB5 to VB6, with 1 connection(s)")

        h("objectvar syn_NC_VB5_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB5_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma], weight: 1.0
        h("a_VB5[0].Soma { syn_NC_VB5_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB6[0].Soma { syn_NC_VB5_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB5_VB6_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB6[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB5_VB6_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB5[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB6_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB6_AVBL_Generic_GJ from VB6 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_VB6[0].Soma { syn_NC_VB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB6_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB6_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB6_AVBR_Generic_GJ from VB6 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0
        h("a_VB6[0].Soma { syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB6[0].Soma { syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBR[0].Soma { syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB6_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB6_DA4_Generic_GJ
        print("Adding electrical projection: NC_VB6_DA4_Generic_GJ from VB6 to DA4, with 1 connection(s)")

        h("objectvar syn_NC_VB6_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB6_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DA4[0].Soma], weight: 1.0
        h("a_VB6[0].Soma { syn_NC_VB6_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DA4[0].Soma { syn_NC_VB6_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB6_DA4_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DA4[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB6_DA4_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB6_VB5_Generic_GJ
        print("Adding electrical projection: NC_VB6_VB5_Generic_GJ from VB6 to VB5, with 1 connection(s)")

        h("objectvar syn_NC_VB6_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB6_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB6[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB5[0].Soma], weight: 1.0
        h("a_VB6[0].Soma { syn_NC_VB6_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB5[0].Soma { syn_NC_VB6_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB6_VB5_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB5[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB6_VB5_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB6[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB7_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB7_AVBL_Generic_GJ from VB7 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 2.0
        h("a_VB7[0].Soma { syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB7[0].Soma { syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBL[0].Soma { syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB7_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB7_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB7_AVBR_Generic_GJ from VB7 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 2.0
        h("a_VB7[0].Soma { syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB7[0].Soma { syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_AVBR[0].Soma { syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB7_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB7_VB2_Generic_GJ
        print("Adding electrical projection: NC_VB7_VB2_Generic_GJ from VB7 to VB2, with 1 connection(s)")

        h("objectvar syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB7[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB2[0].Soma], weight: 2.0
        h("a_VB7[0].Soma { syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB2[0].Soma { syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB7[0].Soma { syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VB2[0].Soma { syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB7_VB2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB7[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB8_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB8_AVBL_Generic_GJ from VB8 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 7.0
        h("a_VB8[0].Soma { syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 7.0 }")
        h("a_AVBL[0].Soma { syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 7.0 }")
        h("setpointer syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB8_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB8_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB8_AVBR_Generic_GJ from VB8 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 3.0
        h("a_VB8[0].Soma { syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_AVBR[0].Soma { syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB8_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB8_VA8_Generic_GJ
        print("Adding electrical projection: NC_VB8_VA8_Generic_GJ from VB8 to VA8, with 1 connection(s)")

        h("objectvar syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 3.0
        h("a_VB8[0].Soma { syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA8[0].Soma { syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB8_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB8_VA9_Generic_GJ
        print("Adding electrical projection: NC_VB8_VA9_Generic_GJ from VB8 to VA9, with 1 connection(s)")

        h("objectvar syn_NC_VB8_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB8_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 1.0
        h("a_VB8[0].Soma { syn_NC_VB8_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_VB8_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB8_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB8_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB8_VB9_Generic_GJ
        print("Adding electrical projection: NC_VB8_VB9_Generic_GJ from VB8 to VB9, with 1 connection(s)")

        h("objectvar syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma], weight: 3.0
        h("a_VB8[0].Soma { syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VB9[0].Soma { syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB8_VB9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB8[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_AVAL_Generic_GJ
        print("Adding electrical projection: NC_VB9_AVAL_Generic_GJ from VB9 to AVAL, with 1 connection(s)")

        h("objectvar syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAL[0].Soma], weight: 5.0
        h("a_VB9[0].Soma { syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAL[0].Soma { syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 5.0 }")
        h("a_AVAL[0].Soma { syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 5.0 }")
        h("setpointer syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_AVAL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_AVAR_Generic_GJ
        print("Adding electrical projection: NC_VB9_AVAR_Generic_GJ from VB9 to AVAR, with 1 connection(s)")

        h("objectvar syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVAR[0].Soma], weight: 4.0
        h("a_VB9[0].Soma { syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVAR[0].Soma { syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_AVAR[0].Soma { syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVAR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_AVAR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_AVBL_Generic_GJ
        print("Adding electrical projection: NC_VB9_AVBL_Generic_GJ from VB9 to AVBL, with 1 connection(s)")

        h("objectvar syn_NC_VB9_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBL[0].Soma], weight: 1.0
        h("a_VB9[0].Soma { syn_NC_VB9_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBL[0].Soma { syn_NC_VB9_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB9_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_AVBL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_AVBR_Generic_GJ
        print("Adding electrical projection: NC_VB9_AVBR_Generic_GJ from VB9 to AVBR, with 1 connection(s)")

        h("objectvar syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_AVBR[0].Soma], weight: 6.0
        h("a_VB9[0].Soma { syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_AVBR[0].Soma { syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_AVBR[0].Soma { syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_AVBR[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_AVBR_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_DVB_Generic_GJ
        print("Adding electrical projection: NC_VB9_DVB_Generic_GJ from VB9 to DVB, with 1 connection(s)")

        h("objectvar syn_NC_VB9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_DVB[0].Soma], weight: 1.0
        h("a_VB9[0].Soma { syn_NC_VB9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_DVB[0].Soma { syn_NC_VB9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VB9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_DVB[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_DVB_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_PVCL_Generic_GJ
        print("Adding electrical projection: NC_VB9_PVCL_Generic_GJ from VB9 to PVCL, with 1 connection(s)")

        h("objectvar syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_PVCL[0].Soma], weight: 2.0
        h("a_VB9[0].Soma { syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_PVCL[0].Soma { syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_PVCL[0].Soma { syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_PVCL[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_PVCL_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_VA8_Generic_GJ
        print("Adding electrical projection: NC_VB9_VA8_Generic_GJ from VB9 to VA8, with 1 connection(s)")

        h("objectvar syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA8[0].Soma], weight: 3.0
        h("a_VB9[0].Soma { syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA8[0].Soma { syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VA8[0].Soma { syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_VA8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_VA9_Generic_GJ
        print("Adding electrical projection: NC_VB9_VA9_Generic_GJ from VB9 to VA9, with 1 connection(s)")

        h("objectvar syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VA9[0].Soma], weight: 4.0
        h("a_VB9[0].Soma { syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VA9[0].Soma { syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 4.0 }")
        h("a_VA9[0].Soma { syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 4.0 }")
        h("setpointer syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VA9[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_VA9_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VB9_VB8_Generic_GJ
        print("Adding electrical projection: NC_VB9_VB8_Generic_GJ from VB9 to VB8, with 1 connection(s)")

        h("objectvar syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VB9[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VB8[0].Soma], weight: 3.0
        h("a_VB9[0].Soma { syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB8[0].Soma { syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VB9[0].Soma { syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 3.0 }")
        h("a_VB8[0].Soma { syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 3.0 }")
        h("setpointer syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VB8[0].Soma.v(0.5)")
        h("setpointer syn_NC_VB9_VB8_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VB9[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC1_VC2_Generic_GJ
        print("Adding electrical projection: NC_VC1_VC2_Generic_GJ from VC1 to VC2, with 1 connection(s)")

        h("objectvar syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC2[0].Soma], weight: 6.0
        h("a_VC1[0].Soma { syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC2[0].Soma { syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC1[0].Soma { syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 6.0 }")
        h("a_VC2[0].Soma { syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 6.0 }")
        h("setpointer syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC2[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC1_VC2_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC1_VC3_Generic_GJ
        print("Adding electrical projection: NC_VC1_VC3_Generic_GJ from VC1 to VC3, with 1 connection(s)")

        h("objectvar syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VC3[0].Soma], weight: 2.0
        h("a_VC1[0].Soma { syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC3[0].Soma { syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VC1[0].Soma { syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].weight = 2.0 }")
        h("a_VC3[0].Soma { syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].weight = 2.0 }")
        h("setpointer syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VC3[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC1_VC3_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC1[0].Soma.v(0.5)")

        # ######################   Electrical Projection: NC_VC1_VD1_Generic_GJ
        print("Adding electrical projection: NC_VC1_VD1_Generic_GJ from VC1 to VD1, with 1 connection(s)")

        h("objectvar syn_NC_VC1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[1]")
        h("objectvar syn_NC_VC1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[1]")

        # Elect Connection 0: cell 0, seg 0 (0.5) [0.5 on a_VC1[0].Soma] -> cell 0, seg 0 (0.5) [0.5 on a_VD1[0].Soma], weight: 1.0
        h("a_VC1[0].Soma { syn_NC_VC1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("a_VD1[0].Soma { syn_NC_VC1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0] = new neuron_to_neuron_elec_syn(0.5) }")
        h("setpointer syn_NC_VC1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_A[0].vpeer, a_VD1[0].Soma.v(0.5)")
        h("setpointer syn_NC_VC1_VD1_Generic_GJ_neuron_to_neuron_elec_syn_B[0].vpeer, a_VC1[0].Soma.v(0.5)")

        print("Processing 302 input lists")

        # ######################   Input List: Input_ADAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADAL_offset_current_0")
        h("a_ADAL[0].Soma { Input_ADAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADAR_offset_current_0")
        h("a_ADAR[0].Soma { Input_ADAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADEL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADEL_offset_current_0")
        h("a_ADEL[0].Soma { Input_ADEL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADER_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADER_offset_current_0")
        h("a_ADER[0].Soma { Input_ADER_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADFL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADFL_offset_current_0")
        h("a_ADFL[0].Soma { Input_ADFL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADFR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADFR_offset_current_0")
        h("a_ADFR[0].Soma { Input_ADFR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADLL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADLL_offset_current_0")
        h("a_ADLL[0].Soma { Input_ADLL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ADLR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ADLR_offset_current_0")
        h("a_ADLR[0].Soma { Input_ADLR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AFDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AFDL_offset_current_0")
        h("a_AFDL[0].Soma { Input_AFDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AFDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AFDR_offset_current_0")
        h("a_AFDR[0].Soma { Input_AFDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIAL_offset_current_0")
        h("a_AIAL[0].Soma { Input_AIAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIAR_offset_current_0")
        h("a_AIAR[0].Soma { Input_AIAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIBL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIBL_offset_current_0")
        h("a_AIBL[0].Soma { Input_AIBL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIBR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIBR_offset_current_0")
        h("a_AIBR[0].Soma { Input_AIBR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIML_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIML_offset_current_0")
        h("a_AIML[0].Soma { Input_AIML_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIMR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIMR_offset_current_0")
        h("a_AIMR[0].Soma { Input_AIMR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AINL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AINL_offset_current_0")
        h("a_AINL[0].Soma { Input_AINL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AINR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AINR_offset_current_0")
        h("a_AINR[0].Soma { Input_AINR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIYL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIYL_offset_current_0")
        h("a_AIYL[0].Soma { Input_AIYL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIYR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIYR_offset_current_0")
        h("a_AIYR[0].Soma { Input_AIYR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIZL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIZL_offset_current_0")
        h("a_AIZL[0].Soma { Input_AIZL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AIZR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AIZR_offset_current_0")
        h("a_AIZR[0].Soma { Input_AIZR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ALA_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ALA_offset_current_0")
        h("a_ALA[0].Soma { Input_ALA_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ALML_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ALML_offset_current_0")
        h("a_ALML[0].Soma { Input_ALML_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ALMR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ALMR_offset_current_0")
        h("a_ALMR[0].Soma { Input_ALMR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ALNL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ALNL_offset_current_0")
        h("a_ALNL[0].Soma { Input_ALNL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ALNR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ALNR_offset_current_0")
        h("a_ALNR[0].Soma { Input_ALNR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AQR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AQR_offset_current_0")
        h("a_AQR[0].Soma { Input_AQR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS1_offset_current_0")
        h("a_AS1[0].Soma { Input_AS1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS10_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS10_offset_current_0")
        h("a_AS10[0].Soma { Input_AS10_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS11_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS11_offset_current_0")
        h("a_AS11[0].Soma { Input_AS11_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS2_offset_current_0")
        h("a_AS2[0].Soma { Input_AS2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS3_offset_current_0")
        h("a_AS3[0].Soma { Input_AS3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS4_offset_current_0")
        h("a_AS4[0].Soma { Input_AS4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS5_offset_current_0")
        h("a_AS5[0].Soma { Input_AS5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS6_offset_current_0")
        h("a_AS6[0].Soma { Input_AS6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS7_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS7_offset_current_0")
        h("a_AS7[0].Soma { Input_AS7_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS8_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS8_offset_current_0")
        h("a_AS8[0].Soma { Input_AS8_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AS9_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AS9_offset_current_0")
        h("a_AS9[0].Soma { Input_AS9_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASEL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASEL_offset_current_0")
        h("a_ASEL[0].Soma { Input_ASEL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASER_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASER_offset_current_0")
        h("a_ASER[0].Soma { Input_ASER_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASGL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASGL_offset_current_0")
        h("a_ASGL[0].Soma { Input_ASGL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASGR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASGR_offset_current_0")
        h("a_ASGR[0].Soma { Input_ASGR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASHL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASHL_offset_current_0")
        h("a_ASHL[0].Soma { Input_ASHL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASHR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASHR_offset_current_0")
        h("a_ASHR[0].Soma { Input_ASHR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASIL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASIL_offset_current_0")
        h("a_ASIL[0].Soma { Input_ASIL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASIR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASIR_offset_current_0")
        h("a_ASIR[0].Soma { Input_ASIR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASJL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASJL_offset_current_0")
        h("a_ASJL[0].Soma { Input_ASJL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASJR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASJR_offset_current_0")
        h("a_ASJR[0].Soma { Input_ASJR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASKL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASKL_offset_current_0")
        h("a_ASKL[0].Soma { Input_ASKL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_ASKR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_ASKR_offset_current_0")
        h("a_ASKR[0].Soma { Input_ASKR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AUAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AUAL_offset_current_0")
        h("a_AUAL[0].Soma { Input_AUAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AUAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AUAR_offset_current_0")
        h("a_AUAR[0].Soma { Input_AUAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVAL_offset_current_0")
        h("a_AVAL[0].Soma { Input_AVAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVAR_offset_current_0")
        h("a_AVAR[0].Soma { Input_AVAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVBL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVBL_offset_current_0")
        h("a_AVBL[0].Soma { Input_AVBL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVBR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVBR_offset_current_0")
        h("a_AVBR[0].Soma { Input_AVBR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVDL_offset_current_0")
        h("a_AVDL[0].Soma { Input_AVDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVDR_offset_current_0")
        h("a_AVDR[0].Soma { Input_AVDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVEL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVEL_offset_current_0")
        h("a_AVEL[0].Soma { Input_AVEL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVER_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVER_offset_current_0")
        h("a_AVER[0].Soma { Input_AVER_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVFL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVFL_offset_current_0")
        h("a_AVFL[0].Soma { Input_AVFL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVFR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVFR_offset_current_0")
        h("a_AVFR[0].Soma { Input_AVFR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVG_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVG_offset_current_0")
        h("a_AVG[0].Soma { Input_AVG_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVHL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVHL_offset_current_0")
        h("a_AVHL[0].Soma { Input_AVHL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVHR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVHR_offset_current_0")
        h("a_AVHR[0].Soma { Input_AVHR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVJL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVJL_offset_current_0")
        h("a_AVJL[0].Soma { Input_AVJL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVJR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVJR_offset_current_0")
        h("a_AVJR[0].Soma { Input_AVJR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVKL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVKL_offset_current_0")
        h("a_AVKL[0].Soma { Input_AVKL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVKR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVKR_offset_current_0")
        h("a_AVKR[0].Soma { Input_AVKR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVL_offset_current_0")
        h("a_AVL[0].Soma { Input_AVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AVM_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AVM_offset_current_0")
        h("a_AVM[0].Soma { Input_AVM_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AWAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AWAL_offset_current_0")
        h("a_AWAL[0].Soma { Input_AWAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AWAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AWAR_offset_current_0")
        h("a_AWAR[0].Soma { Input_AWAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AWBL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AWBL_offset_current_0")
        h("a_AWBL[0].Soma { Input_AWBL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AWBR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AWBR_offset_current_0")
        h("a_AWBR[0].Soma { Input_AWBR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AWCL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AWCL_offset_current_0")
        h("a_AWCL[0].Soma { Input_AWCL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_AWCR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_AWCR_offset_current_0")
        h("a_AWCR[0].Soma { Input_AWCR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_BAGL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_BAGL_offset_current_0")
        h("a_BAGL[0].Soma { Input_BAGL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_BAGR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_BAGR_offset_current_0")
        h("a_BAGR[0].Soma { Input_BAGR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_BDUL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_BDUL_offset_current_0")
        h("a_BDUL[0].Soma { Input_BDUL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_BDUR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_BDUR_offset_current_0")
        h("a_BDUR[0].Soma { Input_BDUR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_CANL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_CANL_offset_current_0")
        h("a_CANL[0].Soma { Input_CANL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_CANR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_CANR_offset_current_0")
        h("a_CANR[0].Soma { Input_CANR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_CEPDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_CEPDL_offset_current_0")
        h("a_CEPDL[0].Soma { Input_CEPDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_CEPDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_CEPDR_offset_current_0")
        h("a_CEPDR[0].Soma { Input_CEPDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_CEPVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_CEPVL_offset_current_0")
        h("a_CEPVL[0].Soma { Input_CEPVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_CEPVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_CEPVR_offset_current_0")
        h("a_CEPVR[0].Soma { Input_CEPVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA1_offset_current_0")
        h("a_DA1[0].Soma { Input_DA1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA2_offset_current_0")
        h("a_DA2[0].Soma { Input_DA2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA3_offset_current_0")
        h("a_DA3[0].Soma { Input_DA3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA4_offset_current_0")
        h("a_DA4[0].Soma { Input_DA4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA5_offset_current_0")
        h("a_DA5[0].Soma { Input_DA5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA6_offset_current_0")
        h("a_DA6[0].Soma { Input_DA6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA7_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA7_offset_current_0")
        h("a_DA7[0].Soma { Input_DA7_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA8_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA8_offset_current_0")
        h("a_DA8[0].Soma { Input_DA8_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DA9_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DA9_offset_current_0")
        h("a_DA9[0].Soma { Input_DA9_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB1_offset_current_0")
        h("a_DB1[0].Soma { Input_DB1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB2_offset_current_0")
        h("a_DB2[0].Soma { Input_DB2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB3_offset_current_0")
        h("a_DB3[0].Soma { Input_DB3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB4_offset_current_0")
        h("a_DB4[0].Soma { Input_DB4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB5_offset_current_0")
        h("a_DB5[0].Soma { Input_DB5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB6_offset_current_0")
        h("a_DB6[0].Soma { Input_DB6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DB7_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DB7_offset_current_0")
        h("a_DB7[0].Soma { Input_DB7_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DD1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DD1_offset_current_0")
        h("a_DD1[0].Soma { Input_DD1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DD2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DD2_offset_current_0")
        h("a_DD2[0].Soma { Input_DD2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DD3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DD3_offset_current_0")
        h("a_DD3[0].Soma { Input_DD3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DD4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DD4_offset_current_0")
        h("a_DD4[0].Soma { Input_DD4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DD5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DD5_offset_current_0")
        h("a_DD5[0].Soma { Input_DD5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DD6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DD6_offset_current_0")
        h("a_DD6[0].Soma { Input_DD6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DVA_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DVA_offset_current_0")
        h("a_DVA[0].Soma { Input_DVA_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DVB_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DVB_offset_current_0")
        h("a_DVB[0].Soma { Input_DVB_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_DVC_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_DVC_offset_current_0")
        h("a_DVC[0].Soma { Input_DVC_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_FLPL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_FLPL_offset_current_0")
        h("a_FLPL[0].Soma { Input_FLPL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_FLPR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_FLPR_offset_current_0")
        h("a_FLPR[0].Soma { Input_FLPR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_HSNL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_HSNL_offset_current_0")
        h("a_HSNL[0].Soma { Input_HSNL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_HSNR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_HSNR_offset_current_0")
        h("a_HSNR[0].Soma { Input_HSNR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I1L_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I1L_offset_current_0")
        h("a_I1L[0].Soma { Input_I1L_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I1R_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I1R_offset_current_0")
        h("a_I1R[0].Soma { Input_I1R_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I2L_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I2L_offset_current_0")
        h("a_I2L[0].Soma { Input_I2L_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I2R_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I2R_offset_current_0")
        h("a_I2R[0].Soma { Input_I2R_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I3_offset_current_0")
        h("a_I3[0].Soma { Input_I3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I4_offset_current_0")
        h("a_I4[0].Soma { Input_I4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I5_offset_current_0")
        h("a_I5[0].Soma { Input_I5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_I6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_I6_offset_current_0")
        h("a_I6[0].Soma { Input_I6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL1DL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL1DL_offset_current_0")
        h("a_IL1DL[0].Soma { Input_IL1DL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL1DR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL1DR_offset_current_0")
        h("a_IL1DR[0].Soma { Input_IL1DR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL1L_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL1L_offset_current_0")
        h("a_IL1L[0].Soma { Input_IL1L_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL1R_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL1R_offset_current_0")
        h("a_IL1R[0].Soma { Input_IL1R_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL1VL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL1VL_offset_current_0")
        h("a_IL1VL[0].Soma { Input_IL1VL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL1VR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL1VR_offset_current_0")
        h("a_IL1VR[0].Soma { Input_IL1VR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL2DL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL2DL_offset_current_0")
        h("a_IL2DL[0].Soma { Input_IL2DL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL2DR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL2DR_offset_current_0")
        h("a_IL2DR[0].Soma { Input_IL2DR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL2L_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL2L_offset_current_0")
        h("a_IL2L[0].Soma { Input_IL2L_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL2R_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL2R_offset_current_0")
        h("a_IL2R[0].Soma { Input_IL2R_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL2VL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL2VL_offset_current_0")
        h("a_IL2VL[0].Soma { Input_IL2VL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_IL2VR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_IL2VR_offset_current_0")
        h("a_IL2VR[0].Soma { Input_IL2VR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_LUAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_LUAL_offset_current_0")
        h("a_LUAL[0].Soma { Input_LUAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_LUAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_LUAR_offset_current_0")
        h("a_LUAR[0].Soma { Input_LUAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M1_offset_current_0")
        h("a_M1[0].Soma { Input_M1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M2L_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M2L_offset_current_0")
        h("a_M2L[0].Soma { Input_M2L_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M2R_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M2R_offset_current_0")
        h("a_M2R[0].Soma { Input_M2R_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M3L_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M3L_offset_current_0")
        h("a_M3L[0].Soma { Input_M3L_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M3R_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M3R_offset_current_0")
        h("a_M3R[0].Soma { Input_M3R_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M4_offset_current_0")
        h("a_M4[0].Soma { Input_M4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_M5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_M5_offset_current_0")
        h("a_M5[0].Soma { Input_M5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_MCL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_MCL_offset_current_0")
        h("a_MCL[0].Soma { Input_MCL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_MCR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_MCR_offset_current_0")
        h("a_MCR[0].Soma { Input_MCR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_MI_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_MI_offset_current_0")
        h("a_MI[0].Soma { Input_MI_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_NSML_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_NSML_offset_current_0")
        h("a_NSML[0].Soma { Input_NSML_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_NSMR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_NSMR_offset_current_0")
        h("a_NSMR[0].Soma { Input_NSMR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_OLLL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_OLLL_offset_current_0")
        h("a_OLLL[0].Soma { Input_OLLL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_OLLR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_OLLR_offset_current_0")
        h("a_OLLR[0].Soma { Input_OLLR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_OLQDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_OLQDL_offset_current_0")
        h("a_OLQDL[0].Soma { Input_OLQDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_OLQDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_OLQDR_offset_current_0")
        h("a_OLQDR[0].Soma { Input_OLQDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_OLQVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_OLQVL_offset_current_0")
        h("a_OLQVL[0].Soma { Input_OLQVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_OLQVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_OLQVR_offset_current_0")
        h("a_OLQVR[0].Soma { Input_OLQVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PDA_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PDA_offset_current_0")
        h("a_PDA[0].Soma { Input_PDA_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PDB_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PDB_offset_current_0")
        h("a_PDB[0].Soma { Input_PDB_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PDEL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PDEL_offset_current_0")
        h("a_PDEL[0].Soma { Input_PDEL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PDER_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PDER_offset_current_0")
        h("a_PDER[0].Soma { Input_PDER_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PHAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PHAL_offset_current_0")
        h("a_PHAL[0].Soma { Input_PHAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PHAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PHAR_offset_current_0")
        h("a_PHAR[0].Soma { Input_PHAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PHBL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PHBL_offset_current_0")
        h("a_PHBL[0].Soma { Input_PHBL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PHBR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PHBR_offset_current_0")
        h("a_PHBR[0].Soma { Input_PHBR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PHCL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PHCL_offset_current_0")
        h("a_PHCL[0].Soma { Input_PHCL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PHCR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PHCR_offset_current_0")
        h("a_PHCR[0].Soma { Input_PHCR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PLML_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PLML_offset_current_0")
        h("a_PLML[0].Soma { Input_PLML_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PLMR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PLMR_offset_current_0")
        h("a_PLMR[0].Soma { Input_PLMR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PLNL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PLNL_offset_current_0")
        h("a_PLNL[0].Soma { Input_PLNL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PLNR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PLNR_offset_current_0")
        h("a_PLNR[0].Soma { Input_PLNR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PQR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PQR_offset_current_0")
        h("a_PQR[0].Soma { Input_PQR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVCL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVCL_offset_current_0")
        h("a_PVCL[0].Soma { Input_PVCL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVCR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVCR_offset_current_0")
        h("a_PVCR[0].Soma { Input_PVCR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVDL_offset_current_0")
        h("a_PVDL[0].Soma { Input_PVDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVDR_offset_current_0")
        h("a_PVDR[0].Soma { Input_PVDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVM_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVM_offset_current_0")
        h("a_PVM[0].Soma { Input_PVM_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVNL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVNL_offset_current_0")
        h("a_PVNL[0].Soma { Input_PVNL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVNR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVNR_offset_current_0")
        h("a_PVNR[0].Soma { Input_PVNR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVPL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVPL_offset_current_0")
        h("a_PVPL[0].Soma { Input_PVPL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVPR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVPR_offset_current_0")
        h("a_PVPR[0].Soma { Input_PVPR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVQL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVQL_offset_current_0")
        h("a_PVQL[0].Soma { Input_PVQL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVQR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVQR_offset_current_0")
        h("a_PVQR[0].Soma { Input_PVQR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVR_offset_current_0")
        h("a_PVR[0].Soma { Input_PVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVT_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVT_offset_current_0")
        h("a_PVT[0].Soma { Input_PVT_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVWL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVWL_offset_current_0")
        h("a_PVWL[0].Soma { Input_PVWL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_PVWR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_PVWR_offset_current_0")
        h("a_PVWR[0].Soma { Input_PVWR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIAL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIAL_offset_current_0")
        h("a_RIAL[0].Soma { Input_RIAL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIAR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIAR_offset_current_0")
        h("a_RIAR[0].Soma { Input_RIAR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIBL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIBL_offset_current_0")
        h("a_RIBL[0].Soma { Input_RIBL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIBR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIBR_offset_current_0")
        h("a_RIBR[0].Soma { Input_RIBR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RICL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RICL_offset_current_0")
        h("a_RICL[0].Soma { Input_RICL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RICR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RICR_offset_current_0")
        h("a_RICR[0].Soma { Input_RICR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RID_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RID_offset_current_0")
        h("a_RID[0].Soma { Input_RID_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIFL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIFL_offset_current_0")
        h("a_RIFL[0].Soma { Input_RIFL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIFR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIFR_offset_current_0")
        h("a_RIFR[0].Soma { Input_RIFR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIGL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIGL_offset_current_0")
        h("a_RIGL[0].Soma { Input_RIGL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIGR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIGR_offset_current_0")
        h("a_RIGR[0].Soma { Input_RIGR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIH_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIH_offset_current_0")
        h("a_RIH[0].Soma { Input_RIH_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIML_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIML_offset_current_0")
        h("a_RIML[0].Soma { Input_RIML_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIMR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIMR_offset_current_0")
        h("a_RIMR[0].Soma { Input_RIMR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIPL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIPL_offset_current_0")
        h("a_RIPL[0].Soma { Input_RIPL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIPR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIPR_offset_current_0")
        h("a_RIPR[0].Soma { Input_RIPR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIR_offset_current_0")
        h("a_RIR[0].Soma { Input_RIR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIS_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIS_offset_current_0")
        h("a_RIS[0].Soma { Input_RIS_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIVL_offset_current_0")
        h("a_RIVL[0].Soma { Input_RIVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RIVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RIVR_offset_current_0")
        h("a_RIVR[0].Soma { Input_RIVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMDDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMDDL_offset_current_0")
        h("a_RMDDL[0].Soma { Input_RMDDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMDDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMDDR_offset_current_0")
        h("a_RMDDR[0].Soma { Input_RMDDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMDL_offset_current_0")
        h("a_RMDL[0].Soma { Input_RMDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMDR_offset_current_0")
        h("a_RMDR[0].Soma { Input_RMDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMDVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMDVL_offset_current_0")
        h("a_RMDVL[0].Soma { Input_RMDVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMDVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMDVR_offset_current_0")
        h("a_RMDVR[0].Soma { Input_RMDVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMED_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMED_offset_current_0")
        h("a_RMED[0].Soma { Input_RMED_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMEL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMEL_offset_current_0")
        h("a_RMEL[0].Soma { Input_RMEL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMER_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMER_offset_current_0")
        h("a_RMER[0].Soma { Input_RMER_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMEV_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMEV_offset_current_0")
        h("a_RMEV[0].Soma { Input_RMEV_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMFL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMFL_offset_current_0")
        h("a_RMFL[0].Soma { Input_RMFL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMFR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMFR_offset_current_0")
        h("a_RMFR[0].Soma { Input_RMFR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMGL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMGL_offset_current_0")
        h("a_RMGL[0].Soma { Input_RMGL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMGR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMGR_offset_current_0")
        h("a_RMGR[0].Soma { Input_RMGR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMHL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMHL_offset_current_0")
        h("a_RMHL[0].Soma { Input_RMHL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_RMHR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_RMHR_offset_current_0")
        h("a_RMHR[0].Soma { Input_RMHR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SAADL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SAADL_offset_current_0")
        h("a_SAADL[0].Soma { Input_SAADL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SAADR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SAADR_offset_current_0")
        h("a_SAADR[0].Soma { Input_SAADR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SAAVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SAAVL_offset_current_0")
        h("a_SAAVL[0].Soma { Input_SAAVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SAAVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SAAVR_offset_current_0")
        h("a_SAAVR[0].Soma { Input_SAAVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SABD_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SABD_offset_current_0")
        h("a_SABD[0].Soma { Input_SABD_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SABVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SABVL_offset_current_0")
        h("a_SABVL[0].Soma { Input_SABVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SABVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SABVR_offset_current_0")
        h("a_SABVR[0].Soma { Input_SABVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SDQL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SDQL_offset_current_0")
        h("a_SDQL[0].Soma { Input_SDQL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SDQR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SDQR_offset_current_0")
        h("a_SDQR[0].Soma { Input_SDQR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIADL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIADL_offset_current_0")
        h("a_SIADL[0].Soma { Input_SIADL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIADR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIADR_offset_current_0")
        h("a_SIADR[0].Soma { Input_SIADR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIAVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIAVL_offset_current_0")
        h("a_SIAVL[0].Soma { Input_SIAVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIAVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIAVR_offset_current_0")
        h("a_SIAVR[0].Soma { Input_SIAVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIBDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIBDL_offset_current_0")
        h("a_SIBDL[0].Soma { Input_SIBDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIBDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIBDR_offset_current_0")
        h("a_SIBDR[0].Soma { Input_SIBDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIBVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIBVL_offset_current_0")
        h("a_SIBVL[0].Soma { Input_SIBVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SIBVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SIBVR_offset_current_0")
        h("a_SIBVR[0].Soma { Input_SIBVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMBDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMBDL_offset_current_0")
        h("a_SMBDL[0].Soma { Input_SMBDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMBDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMBDR_offset_current_0")
        h("a_SMBDR[0].Soma { Input_SMBDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMBVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMBVL_offset_current_0")
        h("a_SMBVL[0].Soma { Input_SMBVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMBVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMBVR_offset_current_0")
        h("a_SMBVR[0].Soma { Input_SMBVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMDDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMDDL_offset_current_0")
        h("a_SMDDL[0].Soma { Input_SMDDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMDDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMDDR_offset_current_0")
        h("a_SMDDR[0].Soma { Input_SMDDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMDVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMDVL_offset_current_0")
        h("a_SMDVL[0].Soma { Input_SMDVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_SMDVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_SMDVR_offset_current_0")
        h("a_SMDVR[0].Soma { Input_SMDVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URADL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URADL_offset_current_0")
        h("a_URADL[0].Soma { Input_URADL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URADR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URADR_offset_current_0")
        h("a_URADR[0].Soma { Input_URADR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URAVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URAVL_offset_current_0")
        h("a_URAVL[0].Soma { Input_URAVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URAVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URAVR_offset_current_0")
        h("a_URAVR[0].Soma { Input_URAVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URBL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URBL_offset_current_0")
        h("a_URBL[0].Soma { Input_URBL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URBR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URBR_offset_current_0")
        h("a_URBR[0].Soma { Input_URBR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URXL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URXL_offset_current_0")
        h("a_URXL[0].Soma { Input_URXL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URXR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URXR_offset_current_0")
        h("a_URXR[0].Soma { Input_URXR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URYDL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URYDL_offset_current_0")
        h("a_URYDL[0].Soma { Input_URYDL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URYDR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URYDR_offset_current_0")
        h("a_URYDR[0].Soma { Input_URYDR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URYVL_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URYVL_offset_current_0")
        h("a_URYVL[0].Soma { Input_URYVL_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_URYVR_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_URYVR_offset_current_0")
        h("a_URYVR[0].Soma { Input_URYVR_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA1_offset_current_0")
        h("a_VA1[0].Soma { Input_VA1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA10_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA10_offset_current_0")
        h("a_VA10[0].Soma { Input_VA10_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA11_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA11_offset_current_0")
        h("a_VA11[0].Soma { Input_VA11_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA12_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA12_offset_current_0")
        h("a_VA12[0].Soma { Input_VA12_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA2_offset_current_0")
        h("a_VA2[0].Soma { Input_VA2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA3_offset_current_0")
        h("a_VA3[0].Soma { Input_VA3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA4_offset_current_0")
        h("a_VA4[0].Soma { Input_VA4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA5_offset_current_0")
        h("a_VA5[0].Soma { Input_VA5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA6_offset_current_0")
        h("a_VA6[0].Soma { Input_VA6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA7_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA7_offset_current_0")
        h("a_VA7[0].Soma { Input_VA7_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA8_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA8_offset_current_0")
        h("a_VA8[0].Soma { Input_VA8_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VA9_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VA9_offset_current_0")
        h("a_VA9[0].Soma { Input_VA9_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB1_offset_current_0")
        h("a_VB1[0].Soma { Input_VB1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB10_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB10_offset_current_0")
        h("a_VB10[0].Soma { Input_VB10_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB11_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB11_offset_current_0")
        h("a_VB11[0].Soma { Input_VB11_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB2_offset_current_0")
        h("a_VB2[0].Soma { Input_VB2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB3_offset_current_0")
        h("a_VB3[0].Soma { Input_VB3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB4_offset_current_0")
        h("a_VB4[0].Soma { Input_VB4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB5_offset_current_0")
        h("a_VB5[0].Soma { Input_VB5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB6_offset_current_0")
        h("a_VB6[0].Soma { Input_VB6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB7_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB7_offset_current_0")
        h("a_VB7[0].Soma { Input_VB7_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB8_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB8_offset_current_0")
        h("a_VB8[0].Soma { Input_VB8_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VB9_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VB9_offset_current_0")
        h("a_VB9[0].Soma { Input_VB9_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VC1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VC1_offset_current_0")
        h("a_VC1[0].Soma { Input_VC1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VC2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VC2_offset_current_0")
        h("a_VC2[0].Soma { Input_VC2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VC3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VC3_offset_current_0")
        h("a_VC3[0].Soma { Input_VC3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VC4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VC4_offset_current_0")
        h("a_VC4[0].Soma { Input_VC4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VC5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VC5_offset_current_0")
        h("a_VC5[0].Soma { Input_VC5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VC6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VC6_offset_current_0")
        h("a_VC6[0].Soma { Input_VC6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD1_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD1_offset_current_0")
        h("a_VD1[0].Soma { Input_VD1_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD10_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD10_offset_current_0")
        h("a_VD10[0].Soma { Input_VD10_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD11_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD11_offset_current_0")
        h("a_VD11[0].Soma { Input_VD11_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD12_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD12_offset_current_0")
        h("a_VD12[0].Soma { Input_VD12_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD13_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD13_offset_current_0")
        h("a_VD13[0].Soma { Input_VD13_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD2_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD2_offset_current_0")
        h("a_VD2[0].Soma { Input_VD2_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD3_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD3_offset_current_0")
        h("a_VD3[0].Soma { Input_VD3_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD4_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD4_offset_current_0")
        h("a_VD4[0].Soma { Input_VD4_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD5_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD5_offset_current_0")
        h("a_VD5[0].Soma { Input_VD5_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD6_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD6_offset_current_0")
        h("a_VD6[0].Soma { Input_VD6_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD7_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD7_offset_current_0")
        h("a_VD7[0].Soma { Input_VD7_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD8_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD8_offset_current_0")
        h("a_VD8[0].Soma { Input_VD8_offset_current_0 = new offset_current(0.5) } ")

        # ######################   Input List: Input_VD9_offset_current
        # Adding single input: Component(id=0 type=input)
        h("objref Input_VD9_offset_current_0")
        h("a_VD9[0].Soma { Input_VD9_offset_current_0 = new offset_current(0.5) } ")

        print("Finished processing 302 input lists")

        trec = h.Vector()
        trec.record(h._ref_t)

        h.tstop = tstop

        if self.abs_tol is not None and self.rel_tol is not None:
            cvode = h.CVode()
            cvode.active(1)
            cvode.atol(self.abs_tol)
            cvode.rtol(self.rel_tol)
        else:
            h.dt = dt
            h.steps_per_ms = 1/h.dt

        # ######################   Display: self.display_neurons
        self.display_neurons = h.Graph(0)
        self.display_neurons.size(0,h.tstop,-80.0,50.0)
        self.display_neurons.view(0, -80.0, h.tstop, 130.0, 80, 330, 330, 250)
        h.graphList[0].append(self.display_neurons)
        # Line, plotting: ADAL/0/ADAL/v
        self.display_neurons.addexpr("a_ADAL[0].Soma.v(0.5)", "a_ADAL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: ADAR/0/ADAR/v
        self.display_neurons.addexpr("a_ADAR[0].Soma.v(0.5)", "a_ADAR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: ADEL/0/ADEL/v
        self.display_neurons.addexpr("a_ADEL[0].Soma.v(0.5)", "a_ADEL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: ADER/0/ADER/v
        self.display_neurons.addexpr("a_ADER[0].Soma.v(0.5)", "a_ADER[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: ADFL/0/ADFL/v
        self.display_neurons.addexpr("a_ADFL[0].Soma.v(0.5)", "a_ADFL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: ADFR/0/ADFR/v
        self.display_neurons.addexpr("a_ADFR[0].Soma.v(0.5)", "a_ADFR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: ADLL/0/ADLL/v
        self.display_neurons.addexpr("a_ADLL[0].Soma.v(0.5)", "a_ADLL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: ADLR/0/ADLR/v
        self.display_neurons.addexpr("a_ADLR[0].Soma.v(0.5)", "a_ADLR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AFDL/0/AFDL/v
        self.display_neurons.addexpr("a_AFDL[0].Soma.v(0.5)", "a_AFDL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AFDR/0/AFDR/v
        self.display_neurons.addexpr("a_AFDR[0].Soma.v(0.5)", "a_AFDR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AIAL/0/AIAL/v
        self.display_neurons.addexpr("a_AIAL[0].Soma.v(0.5)", "a_AIAL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AIAR/0/AIAR/v
        self.display_neurons.addexpr("a_AIAR[0].Soma.v(0.5)", "a_AIAR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AIBL/0/AIBL/v
        self.display_neurons.addexpr("a_AIBL[0].Soma.v(0.5)", "a_AIBL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AIBR/0/AIBR/v
        self.display_neurons.addexpr("a_AIBR[0].Soma.v(0.5)", "a_AIBR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AIML/0/AIML/v
        self.display_neurons.addexpr("a_AIML[0].Soma.v(0.5)", "a_AIML[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AIMR/0/AIMR/v
        self.display_neurons.addexpr("a_AIMR[0].Soma.v(0.5)", "a_AIMR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AINL/0/AINL/v
        self.display_neurons.addexpr("a_AINL[0].Soma.v(0.5)", "a_AINL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AINR/0/AINR/v
        self.display_neurons.addexpr("a_AINR[0].Soma.v(0.5)", "a_AINR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AIYL/0/AIYL/v
        self.display_neurons.addexpr("a_AIYL[0].Soma.v(0.5)", "a_AIYL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AIYR/0/AIYR/v
        self.display_neurons.addexpr("a_AIYR[0].Soma.v(0.5)", "a_AIYR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AIZL/0/AIZL/v
        self.display_neurons.addexpr("a_AIZL[0].Soma.v(0.5)", "a_AIZL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AIZR/0/AIZR/v
        self.display_neurons.addexpr("a_AIZR[0].Soma.v(0.5)", "a_AIZR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: ALA/0/ALA/v
        self.display_neurons.addexpr("a_ALA[0].Soma.v(0.5)", "a_ALA[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: ALML/0/ALML/v
        self.display_neurons.addexpr("a_ALML[0].Soma.v(0.5)", "a_ALML[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: ALMR/0/ALMR/v
        self.display_neurons.addexpr("a_ALMR[0].Soma.v(0.5)", "a_ALMR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: ALNL/0/ALNL/v
        self.display_neurons.addexpr("a_ALNL[0].Soma.v(0.5)", "a_ALNL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: ALNR/0/ALNR/v
        self.display_neurons.addexpr("a_ALNR[0].Soma.v(0.5)", "a_ALNR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AQR/0/AQR/v
        self.display_neurons.addexpr("a_AQR[0].Soma.v(0.5)", "a_AQR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AS1/0/AS1/v
        self.display_neurons.addexpr("a_AS1[0].Soma.v(0.5)", "a_AS1[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AS10/0/AS10/v
        self.display_neurons.addexpr("a_AS10[0].Soma.v(0.5)", "a_AS10[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AS11/0/AS11/v
        self.display_neurons.addexpr("a_AS11[0].Soma.v(0.5)", "a_AS11[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AS2/0/AS2/v
        self.display_neurons.addexpr("a_AS2[0].Soma.v(0.5)", "a_AS2[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AS3/0/AS3/v
        self.display_neurons.addexpr("a_AS3[0].Soma.v(0.5)", "a_AS3[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AS4/0/AS4/v
        self.display_neurons.addexpr("a_AS4[0].Soma.v(0.5)", "a_AS4[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AS5/0/AS5/v
        self.display_neurons.addexpr("a_AS5[0].Soma.v(0.5)", "a_AS5[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AS6/0/AS6/v
        self.display_neurons.addexpr("a_AS6[0].Soma.v(0.5)", "a_AS6[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AS7/0/AS7/v
        self.display_neurons.addexpr("a_AS7[0].Soma.v(0.5)", "a_AS7[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AS8/0/AS8/v
        self.display_neurons.addexpr("a_AS8[0].Soma.v(0.5)", "a_AS8[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AS9/0/AS9/v
        self.display_neurons.addexpr("a_AS9[0].Soma.v(0.5)", "a_AS9[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: ASEL/0/ASEL/v
        self.display_neurons.addexpr("a_ASEL[0].Soma.v(0.5)", "a_ASEL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: ASER/0/ASER/v
        self.display_neurons.addexpr("a_ASER[0].Soma.v(0.5)", "a_ASER[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: ASGL/0/ASGL/v
        self.display_neurons.addexpr("a_ASGL[0].Soma.v(0.5)", "a_ASGL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: ASGR/0/ASGR/v
        self.display_neurons.addexpr("a_ASGR[0].Soma.v(0.5)", "a_ASGR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: ASHL/0/ASHL/v
        self.display_neurons.addexpr("a_ASHL[0].Soma.v(0.5)", "a_ASHL[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: ASHR/0/ASHR/v
        self.display_neurons.addexpr("a_ASHR[0].Soma.v(0.5)", "a_ASHR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: ASIL/0/ASIL/v
        self.display_neurons.addexpr("a_ASIL[0].Soma.v(0.5)", "a_ASIL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: ASIR/0/ASIR/v
        self.display_neurons.addexpr("a_ASIR[0].Soma.v(0.5)", "a_ASIR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: ASJL/0/ASJL/v
        self.display_neurons.addexpr("a_ASJL[0].Soma.v(0.5)", "a_ASJL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: ASJR/0/ASJR/v
        self.display_neurons.addexpr("a_ASJR[0].Soma.v(0.5)", "a_ASJR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: ASKL/0/ASKL/v
        self.display_neurons.addexpr("a_ASKL[0].Soma.v(0.5)", "a_ASKL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: ASKR/0/ASKR/v
        self.display_neurons.addexpr("a_ASKR[0].Soma.v(0.5)", "a_ASKR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AUAL/0/AUAL/v
        self.display_neurons.addexpr("a_AUAL[0].Soma.v(0.5)", "a_AUAL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AUAR/0/AUAR/v
        self.display_neurons.addexpr("a_AUAR[0].Soma.v(0.5)", "a_AUAR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AVAL/0/AVAL/v
        self.display_neurons.addexpr("a_AVAL[0].Soma.v(0.5)", "a_AVAL[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AVAR/0/AVAR/v
        self.display_neurons.addexpr("a_AVAR[0].Soma.v(0.5)", "a_AVAR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AVBL/0/AVBL/v
        self.display_neurons.addexpr("a_AVBL[0].Soma.v(0.5)", "a_AVBL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AVBR/0/AVBR/v
        self.display_neurons.addexpr("a_AVBR[0].Soma.v(0.5)", "a_AVBR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AVDL/0/AVDL/v
        self.display_neurons.addexpr("a_AVDL[0].Soma.v(0.5)", "a_AVDL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AVDR/0/AVDR/v
        self.display_neurons.addexpr("a_AVDR[0].Soma.v(0.5)", "a_AVDR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AVEL/0/AVEL/v
        self.display_neurons.addexpr("a_AVEL[0].Soma.v(0.5)", "a_AVEL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AVER/0/AVER/v
        self.display_neurons.addexpr("a_AVER[0].Soma.v(0.5)", "a_AVER[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AVFL/0/AVFL/v
        self.display_neurons.addexpr("a_AVFL[0].Soma.v(0.5)", "a_AVFL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AVFR/0/AVFR/v
        self.display_neurons.addexpr("a_AVFR[0].Soma.v(0.5)", "a_AVFR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AVG/0/AVG/v
        self.display_neurons.addexpr("a_AVG[0].Soma.v(0.5)", "a_AVG[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AVHL/0/AVHL/v
        self.display_neurons.addexpr("a_AVHL[0].Soma.v(0.5)", "a_AVHL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AVHR/0/AVHR/v
        self.display_neurons.addexpr("a_AVHR[0].Soma.v(0.5)", "a_AVHR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AVJL/0/AVJL/v
        self.display_neurons.addexpr("a_AVJL[0].Soma.v(0.5)", "a_AVJL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AVJR/0/AVJR/v
        self.display_neurons.addexpr("a_AVJR[0].Soma.v(0.5)", "a_AVJR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AVKL/0/AVKL/v
        self.display_neurons.addexpr("a_AVKL[0].Soma.v(0.5)", "a_AVKL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AVKR/0/AVKR/v
        self.display_neurons.addexpr("a_AVKR[0].Soma.v(0.5)", "a_AVKR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AVL/0/AVL/v
        self.display_neurons.addexpr("a_AVL[0].Soma.v(0.5)", "a_AVL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AVM/0/AVM/v
        self.display_neurons.addexpr("a_AVM[0].Soma.v(0.5)", "a_AVM[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AWAL/0/AWAL/v
        self.display_neurons.addexpr("a_AWAL[0].Soma.v(0.5)", "a_AWAL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AWAR/0/AWAR/v
        self.display_neurons.addexpr("a_AWAR[0].Soma.v(0.5)", "a_AWAR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AWBL/0/AWBL/v
        self.display_neurons.addexpr("a_AWBL[0].Soma.v(0.5)", "a_AWBL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AWBR/0/AWBR/v
        self.display_neurons.addexpr("a_AWBR[0].Soma.v(0.5)", "a_AWBR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AWCL/0/AWCL/v
        self.display_neurons.addexpr("a_AWCL[0].Soma.v(0.5)", "a_AWCL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AWCR/0/AWCR/v
        self.display_neurons.addexpr("a_AWCR[0].Soma.v(0.5)", "a_AWCR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: BAGL/0/BAGL/v
        self.display_neurons.addexpr("a_BAGL[0].Soma.v(0.5)", "a_BAGL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: BAGR/0/BAGR/v
        self.display_neurons.addexpr("a_BAGR[0].Soma.v(0.5)", "a_BAGR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: BDUL/0/BDUL/v
        self.display_neurons.addexpr("a_BDUL[0].Soma.v(0.5)", "a_BDUL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: BDUR/0/BDUR/v
        self.display_neurons.addexpr("a_BDUR[0].Soma.v(0.5)", "a_BDUR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: CANL/0/CANL/v
        self.display_neurons.addexpr("a_CANL[0].Soma.v(0.5)", "a_CANL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: CANR/0/CANR/v
        self.display_neurons.addexpr("a_CANR[0].Soma.v(0.5)", "a_CANR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPDL/0/CEPDL/v
        self.display_neurons.addexpr("a_CEPDL[0].Soma.v(0.5)", "a_CEPDL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPDR/0/CEPDR/v
        self.display_neurons.addexpr("a_CEPDR[0].Soma.v(0.5)", "a_CEPDR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPVL/0/CEPVL/v
        self.display_neurons.addexpr("a_CEPVL[0].Soma.v(0.5)", "a_CEPVL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPVR/0/CEPVR/v
        self.display_neurons.addexpr("a_CEPVR[0].Soma.v(0.5)", "a_CEPVR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: DA1/0/DA1/v
        self.display_neurons.addexpr("a_DA1[0].Soma.v(0.5)", "a_DA1[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: DA2/0/DA2/v
        self.display_neurons.addexpr("a_DA2[0].Soma.v(0.5)", "a_DA2[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: DA3/0/DA3/v
        self.display_neurons.addexpr("a_DA3[0].Soma.v(0.5)", "a_DA3[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: DA4/0/DA4/v
        self.display_neurons.addexpr("a_DA4[0].Soma.v(0.5)", "a_DA4[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: DA5/0/DA5/v
        self.display_neurons.addexpr("a_DA5[0].Soma.v(0.5)", "a_DA5[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: DA6/0/DA6/v
        self.display_neurons.addexpr("a_DA6[0].Soma.v(0.5)", "a_DA6[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: DA7/0/DA7/v
        self.display_neurons.addexpr("a_DA7[0].Soma.v(0.5)", "a_DA7[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: DA8/0/DA8/v
        self.display_neurons.addexpr("a_DA8[0].Soma.v(0.5)", "a_DA8[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: DA9/0/DA9/v
        self.display_neurons.addexpr("a_DA9[0].Soma.v(0.5)", "a_DA9[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: DB1/0/DB1/v
        self.display_neurons.addexpr("a_DB1[0].Soma.v(0.5)", "a_DB1[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: DB2/0/DB2/v
        self.display_neurons.addexpr("a_DB2[0].Soma.v(0.5)", "a_DB2[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: DB3/0/DB3/v
        self.display_neurons.addexpr("a_DB3[0].Soma.v(0.5)", "a_DB3[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: DB4/0/DB4/v
        self.display_neurons.addexpr("a_DB4[0].Soma.v(0.5)", "a_DB4[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: DB5/0/DB5/v
        self.display_neurons.addexpr("a_DB5[0].Soma.v(0.5)", "a_DB5[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: DB6/0/DB6/v
        self.display_neurons.addexpr("a_DB6[0].Soma.v(0.5)", "a_DB6[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: DB7/0/DB7/v
        self.display_neurons.addexpr("a_DB7[0].Soma.v(0.5)", "a_DB7[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: DD1/0/DD1/v
        self.display_neurons.addexpr("a_DD1[0].Soma.v(0.5)", "a_DD1[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: DD2/0/DD2/v
        self.display_neurons.addexpr("a_DD2[0].Soma.v(0.5)", "a_DD2[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: DD3/0/DD3/v
        self.display_neurons.addexpr("a_DD3[0].Soma.v(0.5)", "a_DD3[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: DD4/0/DD4/v
        self.display_neurons.addexpr("a_DD4[0].Soma.v(0.5)", "a_DD4[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: DD5/0/DD5/v
        self.display_neurons.addexpr("a_DD5[0].Soma.v(0.5)", "a_DD5[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: DD6/0/DD6/v
        self.display_neurons.addexpr("a_DD6[0].Soma.v(0.5)", "a_DD6[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: DVA/0/DVA/v
        self.display_neurons.addexpr("a_DVA[0].Soma.v(0.5)", "a_DVA[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: DVB/0/DVB/v
        self.display_neurons.addexpr("a_DVB[0].Soma.v(0.5)", "a_DVB[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: DVC/0/DVC/v
        self.display_neurons.addexpr("a_DVC[0].Soma.v(0.5)", "a_DVC[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: FLPL/0/FLPL/v
        self.display_neurons.addexpr("a_FLPL[0].Soma.v(0.5)", "a_FLPL[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: FLPR/0/FLPR/v
        self.display_neurons.addexpr("a_FLPR[0].Soma.v(0.5)", "a_FLPR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: HSNL/0/HSNL/v
        self.display_neurons.addexpr("a_HSNL[0].Soma.v(0.5)", "a_HSNL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: HSNR/0/HSNR/v
        self.display_neurons.addexpr("a_HSNR[0].Soma.v(0.5)", "a_HSNR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: I1L/0/I1L/v
        self.display_neurons.addexpr("a_I1L[0].Soma.v(0.5)", "a_I1L[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: I1R/0/I1R/v
        self.display_neurons.addexpr("a_I1R[0].Soma.v(0.5)", "a_I1R[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: I2L/0/I2L/v
        self.display_neurons.addexpr("a_I2L[0].Soma.v(0.5)", "a_I2L[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: I2R/0/I2R/v
        self.display_neurons.addexpr("a_I2R[0].Soma.v(0.5)", "a_I2R[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: I3/0/I3/v
        self.display_neurons.addexpr("a_I3[0].Soma.v(0.5)", "a_I3[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: I4/0/I4/v
        self.display_neurons.addexpr("a_I4[0].Soma.v(0.5)", "a_I4[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: I5/0/I5/v
        self.display_neurons.addexpr("a_I5[0].Soma.v(0.5)", "a_I5[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: I6/0/I6/v
        self.display_neurons.addexpr("a_I6[0].Soma.v(0.5)", "a_I6[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1DL/0/IL1DL/v
        self.display_neurons.addexpr("a_IL1DL[0].Soma.v(0.5)", "a_IL1DL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1DR/0/IL1DR/v
        self.display_neurons.addexpr("a_IL1DR[0].Soma.v(0.5)", "a_IL1DR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1L/0/IL1L/v
        self.display_neurons.addexpr("a_IL1L[0].Soma.v(0.5)", "a_IL1L[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1R/0/IL1R/v
        self.display_neurons.addexpr("a_IL1R[0].Soma.v(0.5)", "a_IL1R[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1VL/0/IL1VL/v
        self.display_neurons.addexpr("a_IL1VL[0].Soma.v(0.5)", "a_IL1VL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1VR/0/IL1VR/v
        self.display_neurons.addexpr("a_IL1VR[0].Soma.v(0.5)", "a_IL1VR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2DL/0/IL2DL/v
        self.display_neurons.addexpr("a_IL2DL[0].Soma.v(0.5)", "a_IL2DL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2DR/0/IL2DR/v
        self.display_neurons.addexpr("a_IL2DR[0].Soma.v(0.5)", "a_IL2DR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2L/0/IL2L/v
        self.display_neurons.addexpr("a_IL2L[0].Soma.v(0.5)", "a_IL2L[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2R/0/IL2R/v
        self.display_neurons.addexpr("a_IL2R[0].Soma.v(0.5)", "a_IL2R[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2VL/0/IL2VL/v
        self.display_neurons.addexpr("a_IL2VL[0].Soma.v(0.5)", "a_IL2VL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2VR/0/IL2VR/v
        self.display_neurons.addexpr("a_IL2VR[0].Soma.v(0.5)", "a_IL2VR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: LUAL/0/LUAL/v
        self.display_neurons.addexpr("a_LUAL[0].Soma.v(0.5)", "a_LUAL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: LUAR/0/LUAR/v
        self.display_neurons.addexpr("a_LUAR[0].Soma.v(0.5)", "a_LUAR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: M1/0/M1/v
        self.display_neurons.addexpr("a_M1[0].Soma.v(0.5)", "a_M1[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: M2L/0/M2L/v
        self.display_neurons.addexpr("a_M2L[0].Soma.v(0.5)", "a_M2L[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: M2R/0/M2R/v
        self.display_neurons.addexpr("a_M2R[0].Soma.v(0.5)", "a_M2R[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: M3L/0/M3L/v
        self.display_neurons.addexpr("a_M3L[0].Soma.v(0.5)", "a_M3L[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: M3R/0/M3R/v
        self.display_neurons.addexpr("a_M3R[0].Soma.v(0.5)", "a_M3R[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: M4/0/M4/v
        self.display_neurons.addexpr("a_M4[0].Soma.v(0.5)", "a_M4[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: M5/0/M5/v
        self.display_neurons.addexpr("a_M5[0].Soma.v(0.5)", "a_M5[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: MCL/0/MCL/v
        self.display_neurons.addexpr("a_MCL[0].Soma.v(0.5)", "a_MCL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: MCR/0/MCR/v
        self.display_neurons.addexpr("a_MCR[0].Soma.v(0.5)", "a_MCR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: MI/0/MI/v
        self.display_neurons.addexpr("a_MI[0].Soma.v(0.5)", "a_MI[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: NSML/0/NSML/v
        self.display_neurons.addexpr("a_NSML[0].Soma.v(0.5)", "a_NSML[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: NSMR/0/NSMR/v
        self.display_neurons.addexpr("a_NSMR[0].Soma.v(0.5)", "a_NSMR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: OLLL/0/OLLL/v
        self.display_neurons.addexpr("a_OLLL[0].Soma.v(0.5)", "a_OLLL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: OLLR/0/OLLR/v
        self.display_neurons.addexpr("a_OLLR[0].Soma.v(0.5)", "a_OLLR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQDL/0/OLQDL/v
        self.display_neurons.addexpr("a_OLQDL[0].Soma.v(0.5)", "a_OLQDL[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQDR/0/OLQDR/v
        self.display_neurons.addexpr("a_OLQDR[0].Soma.v(0.5)", "a_OLQDR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQVL/0/OLQVL/v
        self.display_neurons.addexpr("a_OLQVL[0].Soma.v(0.5)", "a_OLQVL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQVR/0/OLQVR/v
        self.display_neurons.addexpr("a_OLQVR[0].Soma.v(0.5)", "a_OLQVR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: PDA/0/PDA/v
        self.display_neurons.addexpr("a_PDA[0].Soma.v(0.5)", "a_PDA[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: PDB/0/PDB/v
        self.display_neurons.addexpr("a_PDB[0].Soma.v(0.5)", "a_PDB[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: PDEL/0/PDEL/v
        self.display_neurons.addexpr("a_PDEL[0].Soma.v(0.5)", "a_PDEL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: PDER/0/PDER/v
        self.display_neurons.addexpr("a_PDER[0].Soma.v(0.5)", "a_PDER[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: PHAL/0/PHAL/v
        self.display_neurons.addexpr("a_PHAL[0].Soma.v(0.5)", "a_PHAL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: PHAR/0/PHAR/v
        self.display_neurons.addexpr("a_PHAR[0].Soma.v(0.5)", "a_PHAR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: PHBL/0/PHBL/v
        self.display_neurons.addexpr("a_PHBL[0].Soma.v(0.5)", "a_PHBL[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: PHBR/0/PHBR/v
        self.display_neurons.addexpr("a_PHBR[0].Soma.v(0.5)", "a_PHBR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: PHCL/0/PHCL/v
        self.display_neurons.addexpr("a_PHCL[0].Soma.v(0.5)", "a_PHCL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: PHCR/0/PHCR/v
        self.display_neurons.addexpr("a_PHCR[0].Soma.v(0.5)", "a_PHCR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: PLML/0/PLML/v
        self.display_neurons.addexpr("a_PLML[0].Soma.v(0.5)", "a_PLML[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: PLMR/0/PLMR/v
        self.display_neurons.addexpr("a_PLMR[0].Soma.v(0.5)", "a_PLMR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: PLNL/0/PLNL/v
        self.display_neurons.addexpr("a_PLNL[0].Soma.v(0.5)", "a_PLNL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: PLNR/0/PLNR/v
        self.display_neurons.addexpr("a_PLNR[0].Soma.v(0.5)", "a_PLNR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: PQR/0/PQR/v
        self.display_neurons.addexpr("a_PQR[0].Soma.v(0.5)", "a_PQR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: PVCL/0/PVCL/v
        self.display_neurons.addexpr("a_PVCL[0].Soma.v(0.5)", "a_PVCL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: PVCR/0/PVCR/v
        self.display_neurons.addexpr("a_PVCR[0].Soma.v(0.5)", "a_PVCR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: PVDL/0/PVDL/v
        self.display_neurons.addexpr("a_PVDL[0].Soma.v(0.5)", "a_PVDL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: PVDR/0/PVDR/v
        self.display_neurons.addexpr("a_PVDR[0].Soma.v(0.5)", "a_PVDR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: PVM/0/PVM/v
        self.display_neurons.addexpr("a_PVM[0].Soma.v(0.5)", "a_PVM[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: PVNL/0/PVNL/v
        self.display_neurons.addexpr("a_PVNL[0].Soma.v(0.5)", "a_PVNL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: PVNR/0/PVNR/v
        self.display_neurons.addexpr("a_PVNR[0].Soma.v(0.5)", "a_PVNR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: PVPL/0/PVPL/v
        self.display_neurons.addexpr("a_PVPL[0].Soma.v(0.5)", "a_PVPL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: PVPR/0/PVPR/v
        self.display_neurons.addexpr("a_PVPR[0].Soma.v(0.5)", "a_PVPR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: PVQL/0/PVQL/v
        self.display_neurons.addexpr("a_PVQL[0].Soma.v(0.5)", "a_PVQL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: PVQR/0/PVQR/v
        self.display_neurons.addexpr("a_PVQR[0].Soma.v(0.5)", "a_PVQR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: PVR/0/PVR/v
        self.display_neurons.addexpr("a_PVR[0].Soma.v(0.5)", "a_PVR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: PVT/0/PVT/v
        self.display_neurons.addexpr("a_PVT[0].Soma.v(0.5)", "a_PVT[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: PVWL/0/PVWL/v
        self.display_neurons.addexpr("a_PVWL[0].Soma.v(0.5)", "a_PVWL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: PVWR/0/PVWR/v
        self.display_neurons.addexpr("a_PVWR[0].Soma.v(0.5)", "a_PVWR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RIAL/0/RIAL/v
        self.display_neurons.addexpr("a_RIAL[0].Soma.v(0.5)", "a_RIAL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RIAR/0/RIAR/v
        self.display_neurons.addexpr("a_RIAR[0].Soma.v(0.5)", "a_RIAR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RIBL/0/RIBL/v
        self.display_neurons.addexpr("a_RIBL[0].Soma.v(0.5)", "a_RIBL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RIBR/0/RIBR/v
        self.display_neurons.addexpr("a_RIBR[0].Soma.v(0.5)", "a_RIBR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RICL/0/RICL/v
        self.display_neurons.addexpr("a_RICL[0].Soma.v(0.5)", "a_RICL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RICR/0/RICR/v
        self.display_neurons.addexpr("a_RICR[0].Soma.v(0.5)", "a_RICR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: RID/0/RID/v
        self.display_neurons.addexpr("a_RID[0].Soma.v(0.5)", "a_RID[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: RIFL/0/RIFL/v
        self.display_neurons.addexpr("a_RIFL[0].Soma.v(0.5)", "a_RIFL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: RIFR/0/RIFR/v
        self.display_neurons.addexpr("a_RIFR[0].Soma.v(0.5)", "a_RIFR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: RIGL/0/RIGL/v
        self.display_neurons.addexpr("a_RIGL[0].Soma.v(0.5)", "a_RIGL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RIGR/0/RIGR/v
        self.display_neurons.addexpr("a_RIGR[0].Soma.v(0.5)", "a_RIGR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RIH/0/RIH/v
        self.display_neurons.addexpr("a_RIH[0].Soma.v(0.5)", "a_RIH[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RIML/0/RIML/v
        self.display_neurons.addexpr("a_RIML[0].Soma.v(0.5)", "a_RIML[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RIMR/0/RIMR/v
        self.display_neurons.addexpr("a_RIMR[0].Soma.v(0.5)", "a_RIMR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RIPL/0/RIPL/v
        self.display_neurons.addexpr("a_RIPL[0].Soma.v(0.5)", "a_RIPL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RIPR/0/RIPR/v
        self.display_neurons.addexpr("a_RIPR[0].Soma.v(0.5)", "a_RIPR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: RIR/0/RIR/v
        self.display_neurons.addexpr("a_RIR[0].Soma.v(0.5)", "a_RIR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: RIS/0/RIS/v
        self.display_neurons.addexpr("a_RIS[0].Soma.v(0.5)", "a_RIS[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: RIVL/0/RIVL/v
        self.display_neurons.addexpr("a_RIVL[0].Soma.v(0.5)", "a_RIVL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: RIVR/0/RIVR/v
        self.display_neurons.addexpr("a_RIVR[0].Soma.v(0.5)", "a_RIVR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDDL/0/RMDDL/v
        self.display_neurons.addexpr("a_RMDDL[0].Soma.v(0.5)", "a_RMDDL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDDR/0/RMDDR/v
        self.display_neurons.addexpr("a_RMDDR[0].Soma.v(0.5)", "a_RMDDR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDL/0/RMDL/v
        self.display_neurons.addexpr("a_RMDL[0].Soma.v(0.5)", "a_RMDL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDR/0/RMDR/v
        self.display_neurons.addexpr("a_RMDR[0].Soma.v(0.5)", "a_RMDR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDVL/0/RMDVL/v
        self.display_neurons.addexpr("a_RMDVL[0].Soma.v(0.5)", "a_RMDVL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDVR/0/RMDVR/v
        self.display_neurons.addexpr("a_RMDVR[0].Soma.v(0.5)", "a_RMDVR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: RMED/0/RMED/v
        self.display_neurons.addexpr("a_RMED[0].Soma.v(0.5)", "a_RMED[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: RMEL/0/RMEL/v
        self.display_neurons.addexpr("a_RMEL[0].Soma.v(0.5)", "a_RMEL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: RMER/0/RMER/v
        self.display_neurons.addexpr("a_RMER[0].Soma.v(0.5)", "a_RMER[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: RMEV/0/RMEV/v
        self.display_neurons.addexpr("a_RMEV[0].Soma.v(0.5)", "a_RMEV[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RMFL/0/RMFL/v
        self.display_neurons.addexpr("a_RMFL[0].Soma.v(0.5)", "a_RMFL[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RMFR/0/RMFR/v
        self.display_neurons.addexpr("a_RMFR[0].Soma.v(0.5)", "a_RMFR[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RMGL/0/RMGL/v
        self.display_neurons.addexpr("a_RMGL[0].Soma.v(0.5)", "a_RMGL[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RMGR/0/RMGR/v
        self.display_neurons.addexpr("a_RMGR[0].Soma.v(0.5)", "a_RMGR[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RMHL/0/RMHL/v
        self.display_neurons.addexpr("a_RMHL[0].Soma.v(0.5)", "a_RMHL[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RMHR/0/RMHR/v
        self.display_neurons.addexpr("a_RMHR[0].Soma.v(0.5)", "a_RMHR[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: SAADL/0/SAADL/v
        self.display_neurons.addexpr("a_SAADL[0].Soma.v(0.5)", "a_SAADL[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: SAADR/0/SAADR/v
        self.display_neurons.addexpr("a_SAADR[0].Soma.v(0.5)", "a_SAADR[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: SAAVL/0/SAAVL/v
        self.display_neurons.addexpr("a_SAAVL[0].Soma.v(0.5)", "a_SAAVL[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: SAAVR/0/SAAVR/v
        self.display_neurons.addexpr("a_SAAVR[0].Soma.v(0.5)", "a_SAAVR[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: SABD/0/SABD/v
        self.display_neurons.addexpr("a_SABD[0].Soma.v(0.5)", "a_SABD[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: SABVL/0/SABVL/v
        self.display_neurons.addexpr("a_SABVL[0].Soma.v(0.5)", "a_SABVL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: SABVR/0/SABVR/v
        self.display_neurons.addexpr("a_SABVR[0].Soma.v(0.5)", "a_SABVR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: SDQL/0/SDQL/v
        self.display_neurons.addexpr("a_SDQL[0].Soma.v(0.5)", "a_SDQL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: SDQR/0/SDQR/v
        self.display_neurons.addexpr("a_SDQR[0].Soma.v(0.5)", "a_SDQR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: SIADL/0/SIADL/v
        self.display_neurons.addexpr("a_SIADL[0].Soma.v(0.5)", "a_SIADL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: SIADR/0/SIADR/v
        self.display_neurons.addexpr("a_SIADR[0].Soma.v(0.5)", "a_SIADR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: SIAVL/0/SIAVL/v
        self.display_neurons.addexpr("a_SIAVL[0].Soma.v(0.5)", "a_SIAVL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: SIAVR/0/SIAVR/v
        self.display_neurons.addexpr("a_SIAVR[0].Soma.v(0.5)", "a_SIAVR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBDL/0/SIBDL/v
        self.display_neurons.addexpr("a_SIBDL[0].Soma.v(0.5)", "a_SIBDL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBDR/0/SIBDR/v
        self.display_neurons.addexpr("a_SIBDR[0].Soma.v(0.5)", "a_SIBDR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBVL/0/SIBVL/v
        self.display_neurons.addexpr("a_SIBVL[0].Soma.v(0.5)", "a_SIBVL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBVR/0/SIBVR/v
        self.display_neurons.addexpr("a_SIBVR[0].Soma.v(0.5)", "a_SIBVR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBDL/0/SMBDL/v
        self.display_neurons.addexpr("a_SMBDL[0].Soma.v(0.5)", "a_SMBDL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBDR/0/SMBDR/v
        self.display_neurons.addexpr("a_SMBDR[0].Soma.v(0.5)", "a_SMBDR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBVL/0/SMBVL/v
        self.display_neurons.addexpr("a_SMBVL[0].Soma.v(0.5)", "a_SMBVL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBVR/0/SMBVR/v
        self.display_neurons.addexpr("a_SMBVR[0].Soma.v(0.5)", "a_SMBVR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDDL/0/SMDDL/v
        self.display_neurons.addexpr("a_SMDDL[0].Soma.v(0.5)", "a_SMDDL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDDR/0/SMDDR/v
        self.display_neurons.addexpr("a_SMDDR[0].Soma.v(0.5)", "a_SMDDR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDVL/0/SMDVL/v
        self.display_neurons.addexpr("a_SMDVL[0].Soma.v(0.5)", "a_SMDVL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDVR/0/SMDVR/v
        self.display_neurons.addexpr("a_SMDVR[0].Soma.v(0.5)", "a_SMDVR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: URADL/0/URADL/v
        self.display_neurons.addexpr("a_URADL[0].Soma.v(0.5)", "a_URADL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: URADR/0/URADR/v
        self.display_neurons.addexpr("a_URADR[0].Soma.v(0.5)", "a_URADR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: URAVL/0/URAVL/v
        self.display_neurons.addexpr("a_URAVL[0].Soma.v(0.5)", "a_URAVL[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: URAVR/0/URAVR/v
        self.display_neurons.addexpr("a_URAVR[0].Soma.v(0.5)", "a_URAVR[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: URBL/0/URBL/v
        self.display_neurons.addexpr("a_URBL[0].Soma.v(0.5)", "a_URBL[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: URBR/0/URBR/v
        self.display_neurons.addexpr("a_URBR[0].Soma.v(0.5)", "a_URBR[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: URXL/0/URXL/v
        self.display_neurons.addexpr("a_URXL[0].Soma.v(0.5)", "a_URXL[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: URXR/0/URXR/v
        self.display_neurons.addexpr("a_URXR[0].Soma.v(0.5)", "a_URXR[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: URYDL/0/URYDL/v
        self.display_neurons.addexpr("a_URYDL[0].Soma.v(0.5)", "a_URYDL[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: URYDR/0/URYDR/v
        self.display_neurons.addexpr("a_URYDR[0].Soma.v(0.5)", "a_URYDR[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: URYVL/0/URYVL/v
        self.display_neurons.addexpr("a_URYVL[0].Soma.v(0.5)", "a_URYVL[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: URYVR/0/URYVR/v
        self.display_neurons.addexpr("a_URYVR[0].Soma.v(0.5)", "a_URYVR[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VA1/0/VA1/v
        self.display_neurons.addexpr("a_VA1[0].Soma.v(0.5)", "a_VA1[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VA10/0/VA10/v
        self.display_neurons.addexpr("a_VA10[0].Soma.v(0.5)", "a_VA10[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VA11/0/VA11/v
        self.display_neurons.addexpr("a_VA11[0].Soma.v(0.5)", "a_VA11[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VA12/0/VA12/v
        self.display_neurons.addexpr("a_VA12[0].Soma.v(0.5)", "a_VA12[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VA2/0/VA2/v
        self.display_neurons.addexpr("a_VA2[0].Soma.v(0.5)", "a_VA2[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VA3/0/VA3/v
        self.display_neurons.addexpr("a_VA3[0].Soma.v(0.5)", "a_VA3[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VA4/0/VA4/v
        self.display_neurons.addexpr("a_VA4[0].Soma.v(0.5)", "a_VA4[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VA5/0/VA5/v
        self.display_neurons.addexpr("a_VA5[0].Soma.v(0.5)", "a_VA5[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VA6/0/VA6/v
        self.display_neurons.addexpr("a_VA6[0].Soma.v(0.5)", "a_VA6[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VA7/0/VA7/v
        self.display_neurons.addexpr("a_VA7[0].Soma.v(0.5)", "a_VA7[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VA8/0/VA8/v
        self.display_neurons.addexpr("a_VA8[0].Soma.v(0.5)", "a_VA8[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VA9/0/VA9/v
        self.display_neurons.addexpr("a_VA9[0].Soma.v(0.5)", "a_VA9[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VB1/0/VB1/v
        self.display_neurons.addexpr("a_VB1[0].Soma.v(0.5)", "a_VB1[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VB10/0/VB10/v
        self.display_neurons.addexpr("a_VB10[0].Soma.v(0.5)", "a_VB10[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VB11/0/VB11/v
        self.display_neurons.addexpr("a_VB11[0].Soma.v(0.5)", "a_VB11[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VB2/0/VB2/v
        self.display_neurons.addexpr("a_VB2[0].Soma.v(0.5)", "a_VB2[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VB3/0/VB3/v
        self.display_neurons.addexpr("a_VB3[0].Soma.v(0.5)", "a_VB3[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VB4/0/VB4/v
        self.display_neurons.addexpr("a_VB4[0].Soma.v(0.5)", "a_VB4[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VB5/0/VB5/v
        self.display_neurons.addexpr("a_VB5[0].Soma.v(0.5)", "a_VB5[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VB6/0/VB6/v
        self.display_neurons.addexpr("a_VB6[0].Soma.v(0.5)", "a_VB6[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VB7/0/VB7/v
        self.display_neurons.addexpr("a_VB7[0].Soma.v(0.5)", "a_VB7[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VB8/0/VB8/v
        self.display_neurons.addexpr("a_VB8[0].Soma.v(0.5)", "a_VB8[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VB9/0/VB9/v
        self.display_neurons.addexpr("a_VB9[0].Soma.v(0.5)", "a_VB9[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VC1/0/VC1/v
        self.display_neurons.addexpr("a_VC1[0].Soma.v(0.5)", "a_VC1[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VC2/0/VC2/v
        self.display_neurons.addexpr("a_VC2[0].Soma.v(0.5)", "a_VC2[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VC3/0/VC3/v
        self.display_neurons.addexpr("a_VC3[0].Soma.v(0.5)", "a_VC3[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VC4/0/VC4/v
        self.display_neurons.addexpr("a_VC4[0].Soma.v(0.5)", "a_VC4[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VC5/0/VC5/v
        self.display_neurons.addexpr("a_VC5[0].Soma.v(0.5)", "a_VC5[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VC6/0/VC6/v
        self.display_neurons.addexpr("a_VC6[0].Soma.v(0.5)", "a_VC6[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VD1/0/VD1/v
        self.display_neurons.addexpr("a_VD1[0].Soma.v(0.5)", "a_VD1[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VD10/0/VD10/v
        self.display_neurons.addexpr("a_VD10[0].Soma.v(0.5)", "a_VD10[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VD11/0/VD11/v
        self.display_neurons.addexpr("a_VD11[0].Soma.v(0.5)", "a_VD11[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VD12/0/VD12/v
        self.display_neurons.addexpr("a_VD12[0].Soma.v(0.5)", "a_VD12[0].Soma.v(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VD13/0/VD13/v
        self.display_neurons.addexpr("a_VD13[0].Soma.v(0.5)", "a_VD13[0].Soma.v(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VD2/0/VD2/v
        self.display_neurons.addexpr("a_VD2[0].Soma.v(0.5)", "a_VD2[0].Soma.v(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VD3/0/VD3/v
        self.display_neurons.addexpr("a_VD3[0].Soma.v(0.5)", "a_VD3[0].Soma.v(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VD4/0/VD4/v
        self.display_neurons.addexpr("a_VD4[0].Soma.v(0.5)", "a_VD4[0].Soma.v(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VD5/0/VD5/v
        self.display_neurons.addexpr("a_VD5[0].Soma.v(0.5)", "a_VD5[0].Soma.v(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VD6/0/VD6/v
        self.display_neurons.addexpr("a_VD6[0].Soma.v(0.5)", "a_VD6[0].Soma.v(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VD7/0/VD7/v
        self.display_neurons.addexpr("a_VD7[0].Soma.v(0.5)", "a_VD7[0].Soma.v(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VD8/0/VD8/v
        self.display_neurons.addexpr("a_VD8[0].Soma.v(0.5)", "a_VD8[0].Soma.v(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VD9/0/VD9/v
        self.display_neurons.addexpr("a_VD9[0].Soma.v(0.5)", "a_VD9[0].Soma.v(0.5)", 2, 1, 0.8, 0.9, 2)

        # ######################   Display: self.display_activity_neurons
        self.display_activity_neurons = h.Graph(0)
        self.display_activity_neurons.size(0,h.tstop,-80.0,50.0)
        self.display_activity_neurons.view(0, -80.0, h.tstop, 130.0, 80, 330, 330, 250)
        h.graphList[0].append(self.display_activity_neurons)
        # Line, plotting: ADAL/0/ADAL/caConc
        self.display_activity_neurons.addexpr("a_ADAL[0].Soma.cai(0.5)", "a_ADAL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: ADAR/0/ADAR/caConc
        self.display_activity_neurons.addexpr("a_ADAR[0].Soma.cai(0.5)", "a_ADAR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: ADEL/0/ADEL/caConc
        self.display_activity_neurons.addexpr("a_ADEL[0].Soma.cai(0.5)", "a_ADEL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: ADER/0/ADER/caConc
        self.display_activity_neurons.addexpr("a_ADER[0].Soma.cai(0.5)", "a_ADER[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: ADFL/0/ADFL/caConc
        self.display_activity_neurons.addexpr("a_ADFL[0].Soma.cai(0.5)", "a_ADFL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: ADFR/0/ADFR/caConc
        self.display_activity_neurons.addexpr("a_ADFR[0].Soma.cai(0.5)", "a_ADFR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: ADLL/0/ADLL/caConc
        self.display_activity_neurons.addexpr("a_ADLL[0].Soma.cai(0.5)", "a_ADLL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: ADLR/0/ADLR/caConc
        self.display_activity_neurons.addexpr("a_ADLR[0].Soma.cai(0.5)", "a_ADLR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AFDL/0/AFDL/caConc
        self.display_activity_neurons.addexpr("a_AFDL[0].Soma.cai(0.5)", "a_AFDL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AFDR/0/AFDR/caConc
        self.display_activity_neurons.addexpr("a_AFDR[0].Soma.cai(0.5)", "a_AFDR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AIAL/0/AIAL/caConc
        self.display_activity_neurons.addexpr("a_AIAL[0].Soma.cai(0.5)", "a_AIAL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AIAR/0/AIAR/caConc
        self.display_activity_neurons.addexpr("a_AIAR[0].Soma.cai(0.5)", "a_AIAR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AIBL/0/AIBL/caConc
        self.display_activity_neurons.addexpr("a_AIBL[0].Soma.cai(0.5)", "a_AIBL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AIBR/0/AIBR/caConc
        self.display_activity_neurons.addexpr("a_AIBR[0].Soma.cai(0.5)", "a_AIBR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AIML/0/AIML/caConc
        self.display_activity_neurons.addexpr("a_AIML[0].Soma.cai(0.5)", "a_AIML[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AIMR/0/AIMR/caConc
        self.display_activity_neurons.addexpr("a_AIMR[0].Soma.cai(0.5)", "a_AIMR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AINL/0/AINL/caConc
        self.display_activity_neurons.addexpr("a_AINL[0].Soma.cai(0.5)", "a_AINL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AINR/0/AINR/caConc
        self.display_activity_neurons.addexpr("a_AINR[0].Soma.cai(0.5)", "a_AINR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AIYL/0/AIYL/caConc
        self.display_activity_neurons.addexpr("a_AIYL[0].Soma.cai(0.5)", "a_AIYL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AIYR/0/AIYR/caConc
        self.display_activity_neurons.addexpr("a_AIYR[0].Soma.cai(0.5)", "a_AIYR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AIZL/0/AIZL/caConc
        self.display_activity_neurons.addexpr("a_AIZL[0].Soma.cai(0.5)", "a_AIZL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AIZR/0/AIZR/caConc
        self.display_activity_neurons.addexpr("a_AIZR[0].Soma.cai(0.5)", "a_AIZR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: ALA/0/ALA/caConc
        self.display_activity_neurons.addexpr("a_ALA[0].Soma.cai(0.5)", "a_ALA[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: ALML/0/ALML/caConc
        self.display_activity_neurons.addexpr("a_ALML[0].Soma.cai(0.5)", "a_ALML[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: ALMR/0/ALMR/caConc
        self.display_activity_neurons.addexpr("a_ALMR[0].Soma.cai(0.5)", "a_ALMR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: ALNL/0/ALNL/caConc
        self.display_activity_neurons.addexpr("a_ALNL[0].Soma.cai(0.5)", "a_ALNL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: ALNR/0/ALNR/caConc
        self.display_activity_neurons.addexpr("a_ALNR[0].Soma.cai(0.5)", "a_ALNR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AQR/0/AQR/caConc
        self.display_activity_neurons.addexpr("a_AQR[0].Soma.cai(0.5)", "a_AQR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AS1/0/AS1/caConc
        self.display_activity_neurons.addexpr("a_AS1[0].Soma.cai(0.5)", "a_AS1[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AS10/0/AS10/caConc
        self.display_activity_neurons.addexpr("a_AS10[0].Soma.cai(0.5)", "a_AS10[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AS11/0/AS11/caConc
        self.display_activity_neurons.addexpr("a_AS11[0].Soma.cai(0.5)", "a_AS11[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AS2/0/AS2/caConc
        self.display_activity_neurons.addexpr("a_AS2[0].Soma.cai(0.5)", "a_AS2[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AS3/0/AS3/caConc
        self.display_activity_neurons.addexpr("a_AS3[0].Soma.cai(0.5)", "a_AS3[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AS4/0/AS4/caConc
        self.display_activity_neurons.addexpr("a_AS4[0].Soma.cai(0.5)", "a_AS4[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AS5/0/AS5/caConc
        self.display_activity_neurons.addexpr("a_AS5[0].Soma.cai(0.5)", "a_AS5[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AS6/0/AS6/caConc
        self.display_activity_neurons.addexpr("a_AS6[0].Soma.cai(0.5)", "a_AS6[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AS7/0/AS7/caConc
        self.display_activity_neurons.addexpr("a_AS7[0].Soma.cai(0.5)", "a_AS7[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AS8/0/AS8/caConc
        self.display_activity_neurons.addexpr("a_AS8[0].Soma.cai(0.5)", "a_AS8[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AS9/0/AS9/caConc
        self.display_activity_neurons.addexpr("a_AS9[0].Soma.cai(0.5)", "a_AS9[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: ASEL/0/ASEL/caConc
        self.display_activity_neurons.addexpr("a_ASEL[0].Soma.cai(0.5)", "a_ASEL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: ASER/0/ASER/caConc
        self.display_activity_neurons.addexpr("a_ASER[0].Soma.cai(0.5)", "a_ASER[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: ASGL/0/ASGL/caConc
        self.display_activity_neurons.addexpr("a_ASGL[0].Soma.cai(0.5)", "a_ASGL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: ASGR/0/ASGR/caConc
        self.display_activity_neurons.addexpr("a_ASGR[0].Soma.cai(0.5)", "a_ASGR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: ASHL/0/ASHL/caConc
        self.display_activity_neurons.addexpr("a_ASHL[0].Soma.cai(0.5)", "a_ASHL[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: ASHR/0/ASHR/caConc
        self.display_activity_neurons.addexpr("a_ASHR[0].Soma.cai(0.5)", "a_ASHR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: ASIL/0/ASIL/caConc
        self.display_activity_neurons.addexpr("a_ASIL[0].Soma.cai(0.5)", "a_ASIL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: ASIR/0/ASIR/caConc
        self.display_activity_neurons.addexpr("a_ASIR[0].Soma.cai(0.5)", "a_ASIR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: ASJL/0/ASJL/caConc
        self.display_activity_neurons.addexpr("a_ASJL[0].Soma.cai(0.5)", "a_ASJL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: ASJR/0/ASJR/caConc
        self.display_activity_neurons.addexpr("a_ASJR[0].Soma.cai(0.5)", "a_ASJR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: ASKL/0/ASKL/caConc
        self.display_activity_neurons.addexpr("a_ASKL[0].Soma.cai(0.5)", "a_ASKL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: ASKR/0/ASKR/caConc
        self.display_activity_neurons.addexpr("a_ASKR[0].Soma.cai(0.5)", "a_ASKR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AUAL/0/AUAL/caConc
        self.display_activity_neurons.addexpr("a_AUAL[0].Soma.cai(0.5)", "a_AUAL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AUAR/0/AUAR/caConc
        self.display_activity_neurons.addexpr("a_AUAR[0].Soma.cai(0.5)", "a_AUAR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AVAL/0/AVAL/caConc
        self.display_activity_neurons.addexpr("a_AVAL[0].Soma.cai(0.5)", "a_AVAL[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AVAR/0/AVAR/caConc
        self.display_activity_neurons.addexpr("a_AVAR[0].Soma.cai(0.5)", "a_AVAR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AVBL/0/AVBL/caConc
        self.display_activity_neurons.addexpr("a_AVBL[0].Soma.cai(0.5)", "a_AVBL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AVBR/0/AVBR/caConc
        self.display_activity_neurons.addexpr("a_AVBR[0].Soma.cai(0.5)", "a_AVBR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AVDL/0/AVDL/caConc
        self.display_activity_neurons.addexpr("a_AVDL[0].Soma.cai(0.5)", "a_AVDL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AVDR/0/AVDR/caConc
        self.display_activity_neurons.addexpr("a_AVDR[0].Soma.cai(0.5)", "a_AVDR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AVEL/0/AVEL/caConc
        self.display_activity_neurons.addexpr("a_AVEL[0].Soma.cai(0.5)", "a_AVEL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AVER/0/AVER/caConc
        self.display_activity_neurons.addexpr("a_AVER[0].Soma.cai(0.5)", "a_AVER[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AVFL/0/AVFL/caConc
        self.display_activity_neurons.addexpr("a_AVFL[0].Soma.cai(0.5)", "a_AVFL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AVFR/0/AVFR/caConc
        self.display_activity_neurons.addexpr("a_AVFR[0].Soma.cai(0.5)", "a_AVFR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AVG/0/AVG/caConc
        self.display_activity_neurons.addexpr("a_AVG[0].Soma.cai(0.5)", "a_AVG[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AVHL/0/AVHL/caConc
        self.display_activity_neurons.addexpr("a_AVHL[0].Soma.cai(0.5)", "a_AVHL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AVHR/0/AVHR/caConc
        self.display_activity_neurons.addexpr("a_AVHR[0].Soma.cai(0.5)", "a_AVHR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AVJL/0/AVJL/caConc
        self.display_activity_neurons.addexpr("a_AVJL[0].Soma.cai(0.5)", "a_AVJL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AVJR/0/AVJR/caConc
        self.display_activity_neurons.addexpr("a_AVJR[0].Soma.cai(0.5)", "a_AVJR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: AVKL/0/AVKL/caConc
        self.display_activity_neurons.addexpr("a_AVKL[0].Soma.cai(0.5)", "a_AVKL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: AVKR/0/AVKR/caConc
        self.display_activity_neurons.addexpr("a_AVKR[0].Soma.cai(0.5)", "a_AVKR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: AVL/0/AVL/caConc
        self.display_activity_neurons.addexpr("a_AVL[0].Soma.cai(0.5)", "a_AVL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: AVM/0/AVM/caConc
        self.display_activity_neurons.addexpr("a_AVM[0].Soma.cai(0.5)", "a_AVM[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: AWAL/0/AWAL/caConc
        self.display_activity_neurons.addexpr("a_AWAL[0].Soma.cai(0.5)", "a_AWAL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: AWAR/0/AWAR/caConc
        self.display_activity_neurons.addexpr("a_AWAR[0].Soma.cai(0.5)", "a_AWAR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: AWBL/0/AWBL/caConc
        self.display_activity_neurons.addexpr("a_AWBL[0].Soma.cai(0.5)", "a_AWBL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: AWBR/0/AWBR/caConc
        self.display_activity_neurons.addexpr("a_AWBR[0].Soma.cai(0.5)", "a_AWBR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: AWCL/0/AWCL/caConc
        self.display_activity_neurons.addexpr("a_AWCL[0].Soma.cai(0.5)", "a_AWCL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: AWCR/0/AWCR/caConc
        self.display_activity_neurons.addexpr("a_AWCR[0].Soma.cai(0.5)", "a_AWCR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: BAGL/0/BAGL/caConc
        self.display_activity_neurons.addexpr("a_BAGL[0].Soma.cai(0.5)", "a_BAGL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: BAGR/0/BAGR/caConc
        self.display_activity_neurons.addexpr("a_BAGR[0].Soma.cai(0.5)", "a_BAGR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: BDUL/0/BDUL/caConc
        self.display_activity_neurons.addexpr("a_BDUL[0].Soma.cai(0.5)", "a_BDUL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: BDUR/0/BDUR/caConc
        self.display_activity_neurons.addexpr("a_BDUR[0].Soma.cai(0.5)", "a_BDUR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: CANL/0/CANL/caConc
        self.display_activity_neurons.addexpr("a_CANL[0].Soma.cai(0.5)", "a_CANL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: CANR/0/CANR/caConc
        self.display_activity_neurons.addexpr("a_CANR[0].Soma.cai(0.5)", "a_CANR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPDL/0/CEPDL/caConc
        self.display_activity_neurons.addexpr("a_CEPDL[0].Soma.cai(0.5)", "a_CEPDL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPDR/0/CEPDR/caConc
        self.display_activity_neurons.addexpr("a_CEPDR[0].Soma.cai(0.5)", "a_CEPDR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPVL/0/CEPVL/caConc
        self.display_activity_neurons.addexpr("a_CEPVL[0].Soma.cai(0.5)", "a_CEPVL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: CEPVR/0/CEPVR/caConc
        self.display_activity_neurons.addexpr("a_CEPVR[0].Soma.cai(0.5)", "a_CEPVR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: DA1/0/DA1/caConc
        self.display_activity_neurons.addexpr("a_DA1[0].Soma.cai(0.5)", "a_DA1[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: DA2/0/DA2/caConc
        self.display_activity_neurons.addexpr("a_DA2[0].Soma.cai(0.5)", "a_DA2[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: DA3/0/DA3/caConc
        self.display_activity_neurons.addexpr("a_DA3[0].Soma.cai(0.5)", "a_DA3[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: DA4/0/DA4/caConc
        self.display_activity_neurons.addexpr("a_DA4[0].Soma.cai(0.5)", "a_DA4[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: DA5/0/DA5/caConc
        self.display_activity_neurons.addexpr("a_DA5[0].Soma.cai(0.5)", "a_DA5[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: DA6/0/DA6/caConc
        self.display_activity_neurons.addexpr("a_DA6[0].Soma.cai(0.5)", "a_DA6[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: DA7/0/DA7/caConc
        self.display_activity_neurons.addexpr("a_DA7[0].Soma.cai(0.5)", "a_DA7[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: DA8/0/DA8/caConc
        self.display_activity_neurons.addexpr("a_DA8[0].Soma.cai(0.5)", "a_DA8[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: DA9/0/DA9/caConc
        self.display_activity_neurons.addexpr("a_DA9[0].Soma.cai(0.5)", "a_DA9[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: DB1/0/DB1/caConc
        self.display_activity_neurons.addexpr("a_DB1[0].Soma.cai(0.5)", "a_DB1[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: DB2/0/DB2/caConc
        self.display_activity_neurons.addexpr("a_DB2[0].Soma.cai(0.5)", "a_DB2[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: DB3/0/DB3/caConc
        self.display_activity_neurons.addexpr("a_DB3[0].Soma.cai(0.5)", "a_DB3[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: DB4/0/DB4/caConc
        self.display_activity_neurons.addexpr("a_DB4[0].Soma.cai(0.5)", "a_DB4[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: DB5/0/DB5/caConc
        self.display_activity_neurons.addexpr("a_DB5[0].Soma.cai(0.5)", "a_DB5[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: DB6/0/DB6/caConc
        self.display_activity_neurons.addexpr("a_DB6[0].Soma.cai(0.5)", "a_DB6[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: DB7/0/DB7/caConc
        self.display_activity_neurons.addexpr("a_DB7[0].Soma.cai(0.5)", "a_DB7[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: DD1/0/DD1/caConc
        self.display_activity_neurons.addexpr("a_DD1[0].Soma.cai(0.5)", "a_DD1[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: DD2/0/DD2/caConc
        self.display_activity_neurons.addexpr("a_DD2[0].Soma.cai(0.5)", "a_DD2[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: DD3/0/DD3/caConc
        self.display_activity_neurons.addexpr("a_DD3[0].Soma.cai(0.5)", "a_DD3[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: DD4/0/DD4/caConc
        self.display_activity_neurons.addexpr("a_DD4[0].Soma.cai(0.5)", "a_DD4[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: DD5/0/DD5/caConc
        self.display_activity_neurons.addexpr("a_DD5[0].Soma.cai(0.5)", "a_DD5[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: DD6/0/DD6/caConc
        self.display_activity_neurons.addexpr("a_DD6[0].Soma.cai(0.5)", "a_DD6[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: DVA/0/DVA/caConc
        self.display_activity_neurons.addexpr("a_DVA[0].Soma.cai(0.5)", "a_DVA[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: DVB/0/DVB/caConc
        self.display_activity_neurons.addexpr("a_DVB[0].Soma.cai(0.5)", "a_DVB[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: DVC/0/DVC/caConc
        self.display_activity_neurons.addexpr("a_DVC[0].Soma.cai(0.5)", "a_DVC[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: FLPL/0/FLPL/caConc
        self.display_activity_neurons.addexpr("a_FLPL[0].Soma.cai(0.5)", "a_FLPL[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: FLPR/0/FLPR/caConc
        self.display_activity_neurons.addexpr("a_FLPR[0].Soma.cai(0.5)", "a_FLPR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: HSNL/0/HSNL/caConc
        self.display_activity_neurons.addexpr("a_HSNL[0].Soma.cai(0.5)", "a_HSNL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: HSNR/0/HSNR/caConc
        self.display_activity_neurons.addexpr("a_HSNR[0].Soma.cai(0.5)", "a_HSNR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: I1L/0/I1L/caConc
        self.display_activity_neurons.addexpr("a_I1L[0].Soma.cai(0.5)", "a_I1L[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: I1R/0/I1R/caConc
        self.display_activity_neurons.addexpr("a_I1R[0].Soma.cai(0.5)", "a_I1R[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: I2L/0/I2L/caConc
        self.display_activity_neurons.addexpr("a_I2L[0].Soma.cai(0.5)", "a_I2L[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: I2R/0/I2R/caConc
        self.display_activity_neurons.addexpr("a_I2R[0].Soma.cai(0.5)", "a_I2R[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: I3/0/I3/caConc
        self.display_activity_neurons.addexpr("a_I3[0].Soma.cai(0.5)", "a_I3[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: I4/0/I4/caConc
        self.display_activity_neurons.addexpr("a_I4[0].Soma.cai(0.5)", "a_I4[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: I5/0/I5/caConc
        self.display_activity_neurons.addexpr("a_I5[0].Soma.cai(0.5)", "a_I5[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: I6/0/I6/caConc
        self.display_activity_neurons.addexpr("a_I6[0].Soma.cai(0.5)", "a_I6[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1DL/0/IL1DL/caConc
        self.display_activity_neurons.addexpr("a_IL1DL[0].Soma.cai(0.5)", "a_IL1DL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1DR/0/IL1DR/caConc
        self.display_activity_neurons.addexpr("a_IL1DR[0].Soma.cai(0.5)", "a_IL1DR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1L/0/IL1L/caConc
        self.display_activity_neurons.addexpr("a_IL1L[0].Soma.cai(0.5)", "a_IL1L[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1R/0/IL1R/caConc
        self.display_activity_neurons.addexpr("a_IL1R[0].Soma.cai(0.5)", "a_IL1R[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1VL/0/IL1VL/caConc
        self.display_activity_neurons.addexpr("a_IL1VL[0].Soma.cai(0.5)", "a_IL1VL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: IL1VR/0/IL1VR/caConc
        self.display_activity_neurons.addexpr("a_IL1VR[0].Soma.cai(0.5)", "a_IL1VR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2DL/0/IL2DL/caConc
        self.display_activity_neurons.addexpr("a_IL2DL[0].Soma.cai(0.5)", "a_IL2DL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2DR/0/IL2DR/caConc
        self.display_activity_neurons.addexpr("a_IL2DR[0].Soma.cai(0.5)", "a_IL2DR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2L/0/IL2L/caConc
        self.display_activity_neurons.addexpr("a_IL2L[0].Soma.cai(0.5)", "a_IL2L[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2R/0/IL2R/caConc
        self.display_activity_neurons.addexpr("a_IL2R[0].Soma.cai(0.5)", "a_IL2R[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2VL/0/IL2VL/caConc
        self.display_activity_neurons.addexpr("a_IL2VL[0].Soma.cai(0.5)", "a_IL2VL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: IL2VR/0/IL2VR/caConc
        self.display_activity_neurons.addexpr("a_IL2VR[0].Soma.cai(0.5)", "a_IL2VR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: LUAL/0/LUAL/caConc
        self.display_activity_neurons.addexpr("a_LUAL[0].Soma.cai(0.5)", "a_LUAL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: LUAR/0/LUAR/caConc
        self.display_activity_neurons.addexpr("a_LUAR[0].Soma.cai(0.5)", "a_LUAR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: M1/0/M1/caConc
        self.display_activity_neurons.addexpr("a_M1[0].Soma.cai(0.5)", "a_M1[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: M2L/0/M2L/caConc
        self.display_activity_neurons.addexpr("a_M2L[0].Soma.cai(0.5)", "a_M2L[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: M2R/0/M2R/caConc
        self.display_activity_neurons.addexpr("a_M2R[0].Soma.cai(0.5)", "a_M2R[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: M3L/0/M3L/caConc
        self.display_activity_neurons.addexpr("a_M3L[0].Soma.cai(0.5)", "a_M3L[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: M3R/0/M3R/caConc
        self.display_activity_neurons.addexpr("a_M3R[0].Soma.cai(0.5)", "a_M3R[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: M4/0/M4/caConc
        self.display_activity_neurons.addexpr("a_M4[0].Soma.cai(0.5)", "a_M4[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: M5/0/M5/caConc
        self.display_activity_neurons.addexpr("a_M5[0].Soma.cai(0.5)", "a_M5[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: MCL/0/MCL/caConc
        self.display_activity_neurons.addexpr("a_MCL[0].Soma.cai(0.5)", "a_MCL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: MCR/0/MCR/caConc
        self.display_activity_neurons.addexpr("a_MCR[0].Soma.cai(0.5)", "a_MCR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: MI/0/MI/caConc
        self.display_activity_neurons.addexpr("a_MI[0].Soma.cai(0.5)", "a_MI[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: NSML/0/NSML/caConc
        self.display_activity_neurons.addexpr("a_NSML[0].Soma.cai(0.5)", "a_NSML[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: NSMR/0/NSMR/caConc
        self.display_activity_neurons.addexpr("a_NSMR[0].Soma.cai(0.5)", "a_NSMR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: OLLL/0/OLLL/caConc
        self.display_activity_neurons.addexpr("a_OLLL[0].Soma.cai(0.5)", "a_OLLL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: OLLR/0/OLLR/caConc
        self.display_activity_neurons.addexpr("a_OLLR[0].Soma.cai(0.5)", "a_OLLR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQDL/0/OLQDL/caConc
        self.display_activity_neurons.addexpr("a_OLQDL[0].Soma.cai(0.5)", "a_OLQDL[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQDR/0/OLQDR/caConc
        self.display_activity_neurons.addexpr("a_OLQDR[0].Soma.cai(0.5)", "a_OLQDR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQVL/0/OLQVL/caConc
        self.display_activity_neurons.addexpr("a_OLQVL[0].Soma.cai(0.5)", "a_OLQVL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: OLQVR/0/OLQVR/caConc
        self.display_activity_neurons.addexpr("a_OLQVR[0].Soma.cai(0.5)", "a_OLQVR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: PDA/0/PDA/caConc
        self.display_activity_neurons.addexpr("a_PDA[0].Soma.cai(0.5)", "a_PDA[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: PDB/0/PDB/caConc
        self.display_activity_neurons.addexpr("a_PDB[0].Soma.cai(0.5)", "a_PDB[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: PDEL/0/PDEL/caConc
        self.display_activity_neurons.addexpr("a_PDEL[0].Soma.cai(0.5)", "a_PDEL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: PDER/0/PDER/caConc
        self.display_activity_neurons.addexpr("a_PDER[0].Soma.cai(0.5)", "a_PDER[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: PHAL/0/PHAL/caConc
        self.display_activity_neurons.addexpr("a_PHAL[0].Soma.cai(0.5)", "a_PHAL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: PHAR/0/PHAR/caConc
        self.display_activity_neurons.addexpr("a_PHAR[0].Soma.cai(0.5)", "a_PHAR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: PHBL/0/PHBL/caConc
        self.display_activity_neurons.addexpr("a_PHBL[0].Soma.cai(0.5)", "a_PHBL[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: PHBR/0/PHBR/caConc
        self.display_activity_neurons.addexpr("a_PHBR[0].Soma.cai(0.5)", "a_PHBR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: PHCL/0/PHCL/caConc
        self.display_activity_neurons.addexpr("a_PHCL[0].Soma.cai(0.5)", "a_PHCL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: PHCR/0/PHCR/caConc
        self.display_activity_neurons.addexpr("a_PHCR[0].Soma.cai(0.5)", "a_PHCR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: PLML/0/PLML/caConc
        self.display_activity_neurons.addexpr("a_PLML[0].Soma.cai(0.5)", "a_PLML[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: PLMR/0/PLMR/caConc
        self.display_activity_neurons.addexpr("a_PLMR[0].Soma.cai(0.5)", "a_PLMR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: PLNL/0/PLNL/caConc
        self.display_activity_neurons.addexpr("a_PLNL[0].Soma.cai(0.5)", "a_PLNL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: PLNR/0/PLNR/caConc
        self.display_activity_neurons.addexpr("a_PLNR[0].Soma.cai(0.5)", "a_PLNR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: PQR/0/PQR/caConc
        self.display_activity_neurons.addexpr("a_PQR[0].Soma.cai(0.5)", "a_PQR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: PVCL/0/PVCL/caConc
        self.display_activity_neurons.addexpr("a_PVCL[0].Soma.cai(0.5)", "a_PVCL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: PVCR/0/PVCR/caConc
        self.display_activity_neurons.addexpr("a_PVCR[0].Soma.cai(0.5)", "a_PVCR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: PVDL/0/PVDL/caConc
        self.display_activity_neurons.addexpr("a_PVDL[0].Soma.cai(0.5)", "a_PVDL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: PVDR/0/PVDR/caConc
        self.display_activity_neurons.addexpr("a_PVDR[0].Soma.cai(0.5)", "a_PVDR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: PVM/0/PVM/caConc
        self.display_activity_neurons.addexpr("a_PVM[0].Soma.cai(0.5)", "a_PVM[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: PVNL/0/PVNL/caConc
        self.display_activity_neurons.addexpr("a_PVNL[0].Soma.cai(0.5)", "a_PVNL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: PVNR/0/PVNR/caConc
        self.display_activity_neurons.addexpr("a_PVNR[0].Soma.cai(0.5)", "a_PVNR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: PVPL/0/PVPL/caConc
        self.display_activity_neurons.addexpr("a_PVPL[0].Soma.cai(0.5)", "a_PVPL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: PVPR/0/PVPR/caConc
        self.display_activity_neurons.addexpr("a_PVPR[0].Soma.cai(0.5)", "a_PVPR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: PVQL/0/PVQL/caConc
        self.display_activity_neurons.addexpr("a_PVQL[0].Soma.cai(0.5)", "a_PVQL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: PVQR/0/PVQR/caConc
        self.display_activity_neurons.addexpr("a_PVQR[0].Soma.cai(0.5)", "a_PVQR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: PVR/0/PVR/caConc
        self.display_activity_neurons.addexpr("a_PVR[0].Soma.cai(0.5)", "a_PVR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: PVT/0/PVT/caConc
        self.display_activity_neurons.addexpr("a_PVT[0].Soma.cai(0.5)", "a_PVT[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: PVWL/0/PVWL/caConc
        self.display_activity_neurons.addexpr("a_PVWL[0].Soma.cai(0.5)", "a_PVWL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: PVWR/0/PVWR/caConc
        self.display_activity_neurons.addexpr("a_PVWR[0].Soma.cai(0.5)", "a_PVWR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RIAL/0/RIAL/caConc
        self.display_activity_neurons.addexpr("a_RIAL[0].Soma.cai(0.5)", "a_RIAL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RIAR/0/RIAR/caConc
        self.display_activity_neurons.addexpr("a_RIAR[0].Soma.cai(0.5)", "a_RIAR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RIBL/0/RIBL/caConc
        self.display_activity_neurons.addexpr("a_RIBL[0].Soma.cai(0.5)", "a_RIBL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RIBR/0/RIBR/caConc
        self.display_activity_neurons.addexpr("a_RIBR[0].Soma.cai(0.5)", "a_RIBR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RICL/0/RICL/caConc
        self.display_activity_neurons.addexpr("a_RICL[0].Soma.cai(0.5)", "a_RICL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RICR/0/RICR/caConc
        self.display_activity_neurons.addexpr("a_RICR[0].Soma.cai(0.5)", "a_RICR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: RID/0/RID/caConc
        self.display_activity_neurons.addexpr("a_RID[0].Soma.cai(0.5)", "a_RID[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: RIFL/0/RIFL/caConc
        self.display_activity_neurons.addexpr("a_RIFL[0].Soma.cai(0.5)", "a_RIFL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: RIFR/0/RIFR/caConc
        self.display_activity_neurons.addexpr("a_RIFR[0].Soma.cai(0.5)", "a_RIFR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: RIGL/0/RIGL/caConc
        self.display_activity_neurons.addexpr("a_RIGL[0].Soma.cai(0.5)", "a_RIGL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RIGR/0/RIGR/caConc
        self.display_activity_neurons.addexpr("a_RIGR[0].Soma.cai(0.5)", "a_RIGR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RIH/0/RIH/caConc
        self.display_activity_neurons.addexpr("a_RIH[0].Soma.cai(0.5)", "a_RIH[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RIML/0/RIML/caConc
        self.display_activity_neurons.addexpr("a_RIML[0].Soma.cai(0.5)", "a_RIML[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RIMR/0/RIMR/caConc
        self.display_activity_neurons.addexpr("a_RIMR[0].Soma.cai(0.5)", "a_RIMR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RIPL/0/RIPL/caConc
        self.display_activity_neurons.addexpr("a_RIPL[0].Soma.cai(0.5)", "a_RIPL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RIPR/0/RIPR/caConc
        self.display_activity_neurons.addexpr("a_RIPR[0].Soma.cai(0.5)", "a_RIPR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: RIR/0/RIR/caConc
        self.display_activity_neurons.addexpr("a_RIR[0].Soma.cai(0.5)", "a_RIR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: RIS/0/RIS/caConc
        self.display_activity_neurons.addexpr("a_RIS[0].Soma.cai(0.5)", "a_RIS[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: RIVL/0/RIVL/caConc
        self.display_activity_neurons.addexpr("a_RIVL[0].Soma.cai(0.5)", "a_RIVL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: RIVR/0/RIVR/caConc
        self.display_activity_neurons.addexpr("a_RIVR[0].Soma.cai(0.5)", "a_RIVR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDDL/0/RMDDL/caConc
        self.display_activity_neurons.addexpr("a_RMDDL[0].Soma.cai(0.5)", "a_RMDDL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDDR/0/RMDDR/caConc
        self.display_activity_neurons.addexpr("a_RMDDR[0].Soma.cai(0.5)", "a_RMDDR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDL/0/RMDL/caConc
        self.display_activity_neurons.addexpr("a_RMDL[0].Soma.cai(0.5)", "a_RMDL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDR/0/RMDR/caConc
        self.display_activity_neurons.addexpr("a_RMDR[0].Soma.cai(0.5)", "a_RMDR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDVL/0/RMDVL/caConc
        self.display_activity_neurons.addexpr("a_RMDVL[0].Soma.cai(0.5)", "a_RMDVL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RMDVR/0/RMDVR/caConc
        self.display_activity_neurons.addexpr("a_RMDVR[0].Soma.cai(0.5)", "a_RMDVR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: RMED/0/RMED/caConc
        self.display_activity_neurons.addexpr("a_RMED[0].Soma.cai(0.5)", "a_RMED[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: RMEL/0/RMEL/caConc
        self.display_activity_neurons.addexpr("a_RMEL[0].Soma.cai(0.5)", "a_RMEL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: RMER/0/RMER/caConc
        self.display_activity_neurons.addexpr("a_RMER[0].Soma.cai(0.5)", "a_RMER[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: RMEV/0/RMEV/caConc
        self.display_activity_neurons.addexpr("a_RMEV[0].Soma.cai(0.5)", "a_RMEV[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: RMFL/0/RMFL/caConc
        self.display_activity_neurons.addexpr("a_RMFL[0].Soma.cai(0.5)", "a_RMFL[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: RMFR/0/RMFR/caConc
        self.display_activity_neurons.addexpr("a_RMFR[0].Soma.cai(0.5)", "a_RMFR[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: RMGL/0/RMGL/caConc
        self.display_activity_neurons.addexpr("a_RMGL[0].Soma.cai(0.5)", "a_RMGL[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: RMGR/0/RMGR/caConc
        self.display_activity_neurons.addexpr("a_RMGR[0].Soma.cai(0.5)", "a_RMGR[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: RMHL/0/RMHL/caConc
        self.display_activity_neurons.addexpr("a_RMHL[0].Soma.cai(0.5)", "a_RMHL[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: RMHR/0/RMHR/caConc
        self.display_activity_neurons.addexpr("a_RMHR[0].Soma.cai(0.5)", "a_RMHR[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: SAADL/0/SAADL/caConc
        self.display_activity_neurons.addexpr("a_SAADL[0].Soma.cai(0.5)", "a_SAADL[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: SAADR/0/SAADR/caConc
        self.display_activity_neurons.addexpr("a_SAADR[0].Soma.cai(0.5)", "a_SAADR[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: SAAVL/0/SAAVL/caConc
        self.display_activity_neurons.addexpr("a_SAAVL[0].Soma.cai(0.5)", "a_SAAVL[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: SAAVR/0/SAAVR/caConc
        self.display_activity_neurons.addexpr("a_SAAVR[0].Soma.cai(0.5)", "a_SAAVR[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: SABD/0/SABD/caConc
        self.display_activity_neurons.addexpr("a_SABD[0].Soma.cai(0.5)", "a_SABD[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: SABVL/0/SABVL/caConc
        self.display_activity_neurons.addexpr("a_SABVL[0].Soma.cai(0.5)", "a_SABVL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: SABVR/0/SABVR/caConc
        self.display_activity_neurons.addexpr("a_SABVR[0].Soma.cai(0.5)", "a_SABVR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: SDQL/0/SDQL/caConc
        self.display_activity_neurons.addexpr("a_SDQL[0].Soma.cai(0.5)", "a_SDQL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: SDQR/0/SDQR/caConc
        self.display_activity_neurons.addexpr("a_SDQR[0].Soma.cai(0.5)", "a_SDQR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: SIADL/0/SIADL/caConc
        self.display_activity_neurons.addexpr("a_SIADL[0].Soma.cai(0.5)", "a_SIADL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: SIADR/0/SIADR/caConc
        self.display_activity_neurons.addexpr("a_SIADR[0].Soma.cai(0.5)", "a_SIADR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: SIAVL/0/SIAVL/caConc
        self.display_activity_neurons.addexpr("a_SIAVL[0].Soma.cai(0.5)", "a_SIAVL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: SIAVR/0/SIAVR/caConc
        self.display_activity_neurons.addexpr("a_SIAVR[0].Soma.cai(0.5)", "a_SIAVR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBDL/0/SIBDL/caConc
        self.display_activity_neurons.addexpr("a_SIBDL[0].Soma.cai(0.5)", "a_SIBDL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBDR/0/SIBDR/caConc
        self.display_activity_neurons.addexpr("a_SIBDR[0].Soma.cai(0.5)", "a_SIBDR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBVL/0/SIBVL/caConc
        self.display_activity_neurons.addexpr("a_SIBVL[0].Soma.cai(0.5)", "a_SIBVL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: SIBVR/0/SIBVR/caConc
        self.display_activity_neurons.addexpr("a_SIBVR[0].Soma.cai(0.5)", "a_SIBVR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBDL/0/SMBDL/caConc
        self.display_activity_neurons.addexpr("a_SMBDL[0].Soma.cai(0.5)", "a_SMBDL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBDR/0/SMBDR/caConc
        self.display_activity_neurons.addexpr("a_SMBDR[0].Soma.cai(0.5)", "a_SMBDR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBVL/0/SMBVL/caConc
        self.display_activity_neurons.addexpr("a_SMBVL[0].Soma.cai(0.5)", "a_SMBVL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: SMBVR/0/SMBVR/caConc
        self.display_activity_neurons.addexpr("a_SMBVR[0].Soma.cai(0.5)", "a_SMBVR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDDL/0/SMDDL/caConc
        self.display_activity_neurons.addexpr("a_SMDDL[0].Soma.cai(0.5)", "a_SMDDL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDDR/0/SMDDR/caConc
        self.display_activity_neurons.addexpr("a_SMDDR[0].Soma.cai(0.5)", "a_SMDDR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDVL/0/SMDVL/caConc
        self.display_activity_neurons.addexpr("a_SMDVL[0].Soma.cai(0.5)", "a_SMDVL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: SMDVR/0/SMDVR/caConc
        self.display_activity_neurons.addexpr("a_SMDVR[0].Soma.cai(0.5)", "a_SMDVR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: URADL/0/URADL/caConc
        self.display_activity_neurons.addexpr("a_URADL[0].Soma.cai(0.5)", "a_URADL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: URADR/0/URADR/caConc
        self.display_activity_neurons.addexpr("a_URADR[0].Soma.cai(0.5)", "a_URADR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: URAVL/0/URAVL/caConc
        self.display_activity_neurons.addexpr("a_URAVL[0].Soma.cai(0.5)", "a_URAVL[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: URAVR/0/URAVR/caConc
        self.display_activity_neurons.addexpr("a_URAVR[0].Soma.cai(0.5)", "a_URAVR[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: URBL/0/URBL/caConc
        self.display_activity_neurons.addexpr("a_URBL[0].Soma.cai(0.5)", "a_URBL[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: URBR/0/URBR/caConc
        self.display_activity_neurons.addexpr("a_URBR[0].Soma.cai(0.5)", "a_URBR[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: URXL/0/URXL/caConc
        self.display_activity_neurons.addexpr("a_URXL[0].Soma.cai(0.5)", "a_URXL[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: URXR/0/URXR/caConc
        self.display_activity_neurons.addexpr("a_URXR[0].Soma.cai(0.5)", "a_URXR[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: URYDL/0/URYDL/caConc
        self.display_activity_neurons.addexpr("a_URYDL[0].Soma.cai(0.5)", "a_URYDL[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: URYDR/0/URYDR/caConc
        self.display_activity_neurons.addexpr("a_URYDR[0].Soma.cai(0.5)", "a_URYDR[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: URYVL/0/URYVL/caConc
        self.display_activity_neurons.addexpr("a_URYVL[0].Soma.cai(0.5)", "a_URYVL[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: URYVR/0/URYVR/caConc
        self.display_activity_neurons.addexpr("a_URYVR[0].Soma.cai(0.5)", "a_URYVR[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VA1/0/VA1/caConc
        self.display_activity_neurons.addexpr("a_VA1[0].Soma.cai(0.5)", "a_VA1[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VA10/0/VA10/caConc
        self.display_activity_neurons.addexpr("a_VA10[0].Soma.cai(0.5)", "a_VA10[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VA11/0/VA11/caConc
        self.display_activity_neurons.addexpr("a_VA11[0].Soma.cai(0.5)", "a_VA11[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VA12/0/VA12/caConc
        self.display_activity_neurons.addexpr("a_VA12[0].Soma.cai(0.5)", "a_VA12[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VA2/0/VA2/caConc
        self.display_activity_neurons.addexpr("a_VA2[0].Soma.cai(0.5)", "a_VA2[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VA3/0/VA3/caConc
        self.display_activity_neurons.addexpr("a_VA3[0].Soma.cai(0.5)", "a_VA3[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VA4/0/VA4/caConc
        self.display_activity_neurons.addexpr("a_VA4[0].Soma.cai(0.5)", "a_VA4[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VA5/0/VA5/caConc
        self.display_activity_neurons.addexpr("a_VA5[0].Soma.cai(0.5)", "a_VA5[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VA6/0/VA6/caConc
        self.display_activity_neurons.addexpr("a_VA6[0].Soma.cai(0.5)", "a_VA6[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VA7/0/VA7/caConc
        self.display_activity_neurons.addexpr("a_VA7[0].Soma.cai(0.5)", "a_VA7[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VA8/0/VA8/caConc
        self.display_activity_neurons.addexpr("a_VA8[0].Soma.cai(0.5)", "a_VA8[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VA9/0/VA9/caConc
        self.display_activity_neurons.addexpr("a_VA9[0].Soma.cai(0.5)", "a_VA9[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VB1/0/VB1/caConc
        self.display_activity_neurons.addexpr("a_VB1[0].Soma.cai(0.5)", "a_VB1[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VB10/0/VB10/caConc
        self.display_activity_neurons.addexpr("a_VB10[0].Soma.cai(0.5)", "a_VB10[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VB11/0/VB11/caConc
        self.display_activity_neurons.addexpr("a_VB11[0].Soma.cai(0.5)", "a_VB11[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VB2/0/VB2/caConc
        self.display_activity_neurons.addexpr("a_VB2[0].Soma.cai(0.5)", "a_VB2[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VB3/0/VB3/caConc
        self.display_activity_neurons.addexpr("a_VB3[0].Soma.cai(0.5)", "a_VB3[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VB4/0/VB4/caConc
        self.display_activity_neurons.addexpr("a_VB4[0].Soma.cai(0.5)", "a_VB4[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VB5/0/VB5/caConc
        self.display_activity_neurons.addexpr("a_VB5[0].Soma.cai(0.5)", "a_VB5[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VB6/0/VB6/caConc
        self.display_activity_neurons.addexpr("a_VB6[0].Soma.cai(0.5)", "a_VB6[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VB7/0/VB7/caConc
        self.display_activity_neurons.addexpr("a_VB7[0].Soma.cai(0.5)", "a_VB7[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VB8/0/VB8/caConc
        self.display_activity_neurons.addexpr("a_VB8[0].Soma.cai(0.5)", "a_VB8[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VB9/0/VB9/caConc
        self.display_activity_neurons.addexpr("a_VB9[0].Soma.cai(0.5)", "a_VB9[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VC1/0/VC1/caConc
        self.display_activity_neurons.addexpr("a_VC1[0].Soma.cai(0.5)", "a_VC1[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VC2/0/VC2/caConc
        self.display_activity_neurons.addexpr("a_VC2[0].Soma.cai(0.5)", "a_VC2[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VC3/0/VC3/caConc
        self.display_activity_neurons.addexpr("a_VC3[0].Soma.cai(0.5)", "a_VC3[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VC4/0/VC4/caConc
        self.display_activity_neurons.addexpr("a_VC4[0].Soma.cai(0.5)", "a_VC4[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VC5/0/VC5/caConc
        self.display_activity_neurons.addexpr("a_VC5[0].Soma.cai(0.5)", "a_VC5[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VC6/0/VC6/caConc
        self.display_activity_neurons.addexpr("a_VC6[0].Soma.cai(0.5)", "a_VC6[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VD1/0/VD1/caConc
        self.display_activity_neurons.addexpr("a_VD1[0].Soma.cai(0.5)", "a_VD1[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VD10/0/VD10/caConc
        self.display_activity_neurons.addexpr("a_VD10[0].Soma.cai(0.5)", "a_VD10[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VD11/0/VD11/caConc
        self.display_activity_neurons.addexpr("a_VD11[0].Soma.cai(0.5)", "a_VD11[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)
        # Line, plotting: VD12/0/VD12/caConc
        self.display_activity_neurons.addexpr("a_VD12[0].Soma.cai(0.5)", "a_VD12[0].Soma.cai(0.5)", 3, 1, 0.8, 0.9, 2)
        # Line, plotting: VD13/0/VD13/caConc
        self.display_activity_neurons.addexpr("a_VD13[0].Soma.cai(0.5)", "a_VD13[0].Soma.cai(0.5)", 4, 1, 0.8, 0.9, 2)
        # Line, plotting: VD2/0/VD2/caConc
        self.display_activity_neurons.addexpr("a_VD2[0].Soma.cai(0.5)", "a_VD2[0].Soma.cai(0.5)", 5, 1, 0.8, 0.9, 2)
        # Line, plotting: VD3/0/VD3/caConc
        self.display_activity_neurons.addexpr("a_VD3[0].Soma.cai(0.5)", "a_VD3[0].Soma.cai(0.5)", 6, 1, 0.8, 0.9, 2)
        # Line, plotting: VD4/0/VD4/caConc
        self.display_activity_neurons.addexpr("a_VD4[0].Soma.cai(0.5)", "a_VD4[0].Soma.cai(0.5)", 7, 1, 0.8, 0.9, 2)
        # Line, plotting: VD5/0/VD5/caConc
        self.display_activity_neurons.addexpr("a_VD5[0].Soma.cai(0.5)", "a_VD5[0].Soma.cai(0.5)", 8, 1, 0.8, 0.9, 2)
        # Line, plotting: VD6/0/VD6/caConc
        self.display_activity_neurons.addexpr("a_VD6[0].Soma.cai(0.5)", "a_VD6[0].Soma.cai(0.5)", 9, 1, 0.8, 0.9, 2)
        # Line, plotting: VD7/0/VD7/caConc
        self.display_activity_neurons.addexpr("a_VD7[0].Soma.cai(0.5)", "a_VD7[0].Soma.cai(0.5)", 10, 1, 0.8, 0.9, 2)
        # Line, plotting: VD8/0/VD8/caConc
        self.display_activity_neurons.addexpr("a_VD8[0].Soma.cai(0.5)", "a_VD8[0].Soma.cai(0.5)", 1, 1, 0.8, 0.9, 2)
        # Line, plotting: VD9/0/VD9/caConc
        self.display_activity_neurons.addexpr("a_VD9[0].Soma.cai(0.5)", "a_VD9[0].Soma.cai(0.5)", 2, 1, 0.8, 0.9, 2)



        # ######################   File to save: c302_D_Full.activity.dat (neurons_activity)
        # Column: ADAL/0/ADAL/caConc
        h(' objectvar v_ADAL_v_neurons_activity ')
        h(' { v_ADAL_v_neurons_activity = new Vector() } ')
        h(' { v_ADAL_v_neurons_activity.record(&a_ADAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADAR/0/ADAR/caConc
        h(' objectvar v_ADAR_v_neurons_activity ')
        h(' { v_ADAR_v_neurons_activity = new Vector() } ')
        h(' { v_ADAR_v_neurons_activity.record(&a_ADAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADEL/0/ADEL/caConc
        h(' objectvar v_ADEL_v_neurons_activity ')
        h(' { v_ADEL_v_neurons_activity = new Vector() } ')
        h(' { v_ADEL_v_neurons_activity.record(&a_ADEL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADEL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADER/0/ADER/caConc
        h(' objectvar v_ADER_v_neurons_activity ')
        h(' { v_ADER_v_neurons_activity = new Vector() } ')
        h(' { v_ADER_v_neurons_activity.record(&a_ADER[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADER_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADFL/0/ADFL/caConc
        h(' objectvar v_ADFL_v_neurons_activity ')
        h(' { v_ADFL_v_neurons_activity = new Vector() } ')
        h(' { v_ADFL_v_neurons_activity.record(&a_ADFL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADFL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADFR/0/ADFR/caConc
        h(' objectvar v_ADFR_v_neurons_activity ')
        h(' { v_ADFR_v_neurons_activity = new Vector() } ')
        h(' { v_ADFR_v_neurons_activity.record(&a_ADFR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADFR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADLL/0/ADLL/caConc
        h(' objectvar v_ADLL_v_neurons_activity ')
        h(' { v_ADLL_v_neurons_activity = new Vector() } ')
        h(' { v_ADLL_v_neurons_activity.record(&a_ADLL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADLL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADLR/0/ADLR/caConc
        h(' objectvar v_ADLR_v_neurons_activity ')
        h(' { v_ADLR_v_neurons_activity = new Vector() } ')
        h(' { v_ADLR_v_neurons_activity.record(&a_ADLR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADLR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AFDL/0/AFDL/caConc
        h(' objectvar v_AFDL_v_neurons_activity ')
        h(' { v_AFDL_v_neurons_activity = new Vector() } ')
        h(' { v_AFDL_v_neurons_activity.record(&a_AFDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AFDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AFDR/0/AFDR/caConc
        h(' objectvar v_AFDR_v_neurons_activity ')
        h(' { v_AFDR_v_neurons_activity = new Vector() } ')
        h(' { v_AFDR_v_neurons_activity.record(&a_AFDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AFDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIAL/0/AIAL/caConc
        h(' objectvar v_AIAL_v_neurons_activity ')
        h(' { v_AIAL_v_neurons_activity = new Vector() } ')
        h(' { v_AIAL_v_neurons_activity.record(&a_AIAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIAR/0/AIAR/caConc
        h(' objectvar v_AIAR_v_neurons_activity ')
        h(' { v_AIAR_v_neurons_activity = new Vector() } ')
        h(' { v_AIAR_v_neurons_activity.record(&a_AIAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIBL/0/AIBL/caConc
        h(' objectvar v_AIBL_v_neurons_activity ')
        h(' { v_AIBL_v_neurons_activity = new Vector() } ')
        h(' { v_AIBL_v_neurons_activity.record(&a_AIBL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIBL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIBR/0/AIBR/caConc
        h(' objectvar v_AIBR_v_neurons_activity ')
        h(' { v_AIBR_v_neurons_activity = new Vector() } ')
        h(' { v_AIBR_v_neurons_activity.record(&a_AIBR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIBR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIML/0/AIML/caConc
        h(' objectvar v_AIML_v_neurons_activity ')
        h(' { v_AIML_v_neurons_activity = new Vector() } ')
        h(' { v_AIML_v_neurons_activity.record(&a_AIML[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIML_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIMR/0/AIMR/caConc
        h(' objectvar v_AIMR_v_neurons_activity ')
        h(' { v_AIMR_v_neurons_activity = new Vector() } ')
        h(' { v_AIMR_v_neurons_activity.record(&a_AIMR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIMR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AINL/0/AINL/caConc
        h(' objectvar v_AINL_v_neurons_activity ')
        h(' { v_AINL_v_neurons_activity = new Vector() } ')
        h(' { v_AINL_v_neurons_activity.record(&a_AINL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AINL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AINR/0/AINR/caConc
        h(' objectvar v_AINR_v_neurons_activity ')
        h(' { v_AINR_v_neurons_activity = new Vector() } ')
        h(' { v_AINR_v_neurons_activity.record(&a_AINR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AINR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIYL/0/AIYL/caConc
        h(' objectvar v_AIYL_v_neurons_activity ')
        h(' { v_AIYL_v_neurons_activity = new Vector() } ')
        h(' { v_AIYL_v_neurons_activity.record(&a_AIYL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIYL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIYR/0/AIYR/caConc
        h(' objectvar v_AIYR_v_neurons_activity ')
        h(' { v_AIYR_v_neurons_activity = new Vector() } ')
        h(' { v_AIYR_v_neurons_activity.record(&a_AIYR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIYR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIZL/0/AIZL/caConc
        h(' objectvar v_AIZL_v_neurons_activity ')
        h(' { v_AIZL_v_neurons_activity = new Vector() } ')
        h(' { v_AIZL_v_neurons_activity.record(&a_AIZL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIZL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIZR/0/AIZR/caConc
        h(' objectvar v_AIZR_v_neurons_activity ')
        h(' { v_AIZR_v_neurons_activity = new Vector() } ')
        h(' { v_AIZR_v_neurons_activity.record(&a_AIZR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIZR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALA/0/ALA/caConc
        h(' objectvar v_ALA_v_neurons_activity ')
        h(' { v_ALA_v_neurons_activity = new Vector() } ')
        h(' { v_ALA_v_neurons_activity.record(&a_ALA[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALA_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALML/0/ALML/caConc
        h(' objectvar v_ALML_v_neurons_activity ')
        h(' { v_ALML_v_neurons_activity = new Vector() } ')
        h(' { v_ALML_v_neurons_activity.record(&a_ALML[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALML_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALMR/0/ALMR/caConc
        h(' objectvar v_ALMR_v_neurons_activity ')
        h(' { v_ALMR_v_neurons_activity = new Vector() } ')
        h(' { v_ALMR_v_neurons_activity.record(&a_ALMR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALMR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALNL/0/ALNL/caConc
        h(' objectvar v_ALNL_v_neurons_activity ')
        h(' { v_ALNL_v_neurons_activity = new Vector() } ')
        h(' { v_ALNL_v_neurons_activity.record(&a_ALNL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALNL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALNR/0/ALNR/caConc
        h(' objectvar v_ALNR_v_neurons_activity ')
        h(' { v_ALNR_v_neurons_activity = new Vector() } ')
        h(' { v_ALNR_v_neurons_activity.record(&a_ALNR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALNR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AQR/0/AQR/caConc
        h(' objectvar v_AQR_v_neurons_activity ')
        h(' { v_AQR_v_neurons_activity = new Vector() } ')
        h(' { v_AQR_v_neurons_activity.record(&a_AQR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AQR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS1/0/AS1/caConc
        h(' objectvar v_AS1_v_neurons_activity ')
        h(' { v_AS1_v_neurons_activity = new Vector() } ')
        h(' { v_AS1_v_neurons_activity.record(&a_AS1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS10/0/AS10/caConc
        h(' objectvar v_AS10_v_neurons_activity ')
        h(' { v_AS10_v_neurons_activity = new Vector() } ')
        h(' { v_AS10_v_neurons_activity.record(&a_AS10[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS10_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS11/0/AS11/caConc
        h(' objectvar v_AS11_v_neurons_activity ')
        h(' { v_AS11_v_neurons_activity = new Vector() } ')
        h(' { v_AS11_v_neurons_activity.record(&a_AS11[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS11_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS2/0/AS2/caConc
        h(' objectvar v_AS2_v_neurons_activity ')
        h(' { v_AS2_v_neurons_activity = new Vector() } ')
        h(' { v_AS2_v_neurons_activity.record(&a_AS2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS3/0/AS3/caConc
        h(' objectvar v_AS3_v_neurons_activity ')
        h(' { v_AS3_v_neurons_activity = new Vector() } ')
        h(' { v_AS3_v_neurons_activity.record(&a_AS3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS4/0/AS4/caConc
        h(' objectvar v_AS4_v_neurons_activity ')
        h(' { v_AS4_v_neurons_activity = new Vector() } ')
        h(' { v_AS4_v_neurons_activity.record(&a_AS4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS5/0/AS5/caConc
        h(' objectvar v_AS5_v_neurons_activity ')
        h(' { v_AS5_v_neurons_activity = new Vector() } ')
        h(' { v_AS5_v_neurons_activity.record(&a_AS5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS6/0/AS6/caConc
        h(' objectvar v_AS6_v_neurons_activity ')
        h(' { v_AS6_v_neurons_activity = new Vector() } ')
        h(' { v_AS6_v_neurons_activity.record(&a_AS6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS7/0/AS7/caConc
        h(' objectvar v_AS7_v_neurons_activity ')
        h(' { v_AS7_v_neurons_activity = new Vector() } ')
        h(' { v_AS7_v_neurons_activity.record(&a_AS7[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS7_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS8/0/AS8/caConc
        h(' objectvar v_AS8_v_neurons_activity ')
        h(' { v_AS8_v_neurons_activity = new Vector() } ')
        h(' { v_AS8_v_neurons_activity.record(&a_AS8[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS8_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS9/0/AS9/caConc
        h(' objectvar v_AS9_v_neurons_activity ')
        h(' { v_AS9_v_neurons_activity = new Vector() } ')
        h(' { v_AS9_v_neurons_activity.record(&a_AS9[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS9_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASEL/0/ASEL/caConc
        h(' objectvar v_ASEL_v_neurons_activity ')
        h(' { v_ASEL_v_neurons_activity = new Vector() } ')
        h(' { v_ASEL_v_neurons_activity.record(&a_ASEL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASEL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASER/0/ASER/caConc
        h(' objectvar v_ASER_v_neurons_activity ')
        h(' { v_ASER_v_neurons_activity = new Vector() } ')
        h(' { v_ASER_v_neurons_activity.record(&a_ASER[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASER_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASGL/0/ASGL/caConc
        h(' objectvar v_ASGL_v_neurons_activity ')
        h(' { v_ASGL_v_neurons_activity = new Vector() } ')
        h(' { v_ASGL_v_neurons_activity.record(&a_ASGL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASGL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASGR/0/ASGR/caConc
        h(' objectvar v_ASGR_v_neurons_activity ')
        h(' { v_ASGR_v_neurons_activity = new Vector() } ')
        h(' { v_ASGR_v_neurons_activity.record(&a_ASGR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASGR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASHL/0/ASHL/caConc
        h(' objectvar v_ASHL_v_neurons_activity ')
        h(' { v_ASHL_v_neurons_activity = new Vector() } ')
        h(' { v_ASHL_v_neurons_activity.record(&a_ASHL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASHL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASHR/0/ASHR/caConc
        h(' objectvar v_ASHR_v_neurons_activity ')
        h(' { v_ASHR_v_neurons_activity = new Vector() } ')
        h(' { v_ASHR_v_neurons_activity.record(&a_ASHR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASHR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASIL/0/ASIL/caConc
        h(' objectvar v_ASIL_v_neurons_activity ')
        h(' { v_ASIL_v_neurons_activity = new Vector() } ')
        h(' { v_ASIL_v_neurons_activity.record(&a_ASIL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASIL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASIR/0/ASIR/caConc
        h(' objectvar v_ASIR_v_neurons_activity ')
        h(' { v_ASIR_v_neurons_activity = new Vector() } ')
        h(' { v_ASIR_v_neurons_activity.record(&a_ASIR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASIR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASJL/0/ASJL/caConc
        h(' objectvar v_ASJL_v_neurons_activity ')
        h(' { v_ASJL_v_neurons_activity = new Vector() } ')
        h(' { v_ASJL_v_neurons_activity.record(&a_ASJL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASJL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASJR/0/ASJR/caConc
        h(' objectvar v_ASJR_v_neurons_activity ')
        h(' { v_ASJR_v_neurons_activity = new Vector() } ')
        h(' { v_ASJR_v_neurons_activity.record(&a_ASJR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASJR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASKL/0/ASKL/caConc
        h(' objectvar v_ASKL_v_neurons_activity ')
        h(' { v_ASKL_v_neurons_activity = new Vector() } ')
        h(' { v_ASKL_v_neurons_activity.record(&a_ASKL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASKL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASKR/0/ASKR/caConc
        h(' objectvar v_ASKR_v_neurons_activity ')
        h(' { v_ASKR_v_neurons_activity = new Vector() } ')
        h(' { v_ASKR_v_neurons_activity.record(&a_ASKR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASKR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AUAL/0/AUAL/caConc
        h(' objectvar v_AUAL_v_neurons_activity ')
        h(' { v_AUAL_v_neurons_activity = new Vector() } ')
        h(' { v_AUAL_v_neurons_activity.record(&a_AUAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AUAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AUAR/0/AUAR/caConc
        h(' objectvar v_AUAR_v_neurons_activity ')
        h(' { v_AUAR_v_neurons_activity = new Vector() } ')
        h(' { v_AUAR_v_neurons_activity.record(&a_AUAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AUAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVAL/0/AVAL/caConc
        h(' objectvar v_AVAL_v_neurons_activity ')
        h(' { v_AVAL_v_neurons_activity = new Vector() } ')
        h(' { v_AVAL_v_neurons_activity.record(&a_AVAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVAR/0/AVAR/caConc
        h(' objectvar v_AVAR_v_neurons_activity ')
        h(' { v_AVAR_v_neurons_activity = new Vector() } ')
        h(' { v_AVAR_v_neurons_activity.record(&a_AVAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVBL/0/AVBL/caConc
        h(' objectvar v_AVBL_v_neurons_activity ')
        h(' { v_AVBL_v_neurons_activity = new Vector() } ')
        h(' { v_AVBL_v_neurons_activity.record(&a_AVBL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVBL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVBR/0/AVBR/caConc
        h(' objectvar v_AVBR_v_neurons_activity ')
        h(' { v_AVBR_v_neurons_activity = new Vector() } ')
        h(' { v_AVBR_v_neurons_activity.record(&a_AVBR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVBR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVDL/0/AVDL/caConc
        h(' objectvar v_AVDL_v_neurons_activity ')
        h(' { v_AVDL_v_neurons_activity = new Vector() } ')
        h(' { v_AVDL_v_neurons_activity.record(&a_AVDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVDR/0/AVDR/caConc
        h(' objectvar v_AVDR_v_neurons_activity ')
        h(' { v_AVDR_v_neurons_activity = new Vector() } ')
        h(' { v_AVDR_v_neurons_activity.record(&a_AVDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVEL/0/AVEL/caConc
        h(' objectvar v_AVEL_v_neurons_activity ')
        h(' { v_AVEL_v_neurons_activity = new Vector() } ')
        h(' { v_AVEL_v_neurons_activity.record(&a_AVEL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVEL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVER/0/AVER/caConc
        h(' objectvar v_AVER_v_neurons_activity ')
        h(' { v_AVER_v_neurons_activity = new Vector() } ')
        h(' { v_AVER_v_neurons_activity.record(&a_AVER[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVER_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVFL/0/AVFL/caConc
        h(' objectvar v_AVFL_v_neurons_activity ')
        h(' { v_AVFL_v_neurons_activity = new Vector() } ')
        h(' { v_AVFL_v_neurons_activity.record(&a_AVFL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVFL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVFR/0/AVFR/caConc
        h(' objectvar v_AVFR_v_neurons_activity ')
        h(' { v_AVFR_v_neurons_activity = new Vector() } ')
        h(' { v_AVFR_v_neurons_activity.record(&a_AVFR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVFR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVG/0/AVG/caConc
        h(' objectvar v_AVG_v_neurons_activity ')
        h(' { v_AVG_v_neurons_activity = new Vector() } ')
        h(' { v_AVG_v_neurons_activity.record(&a_AVG[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVG_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVHL/0/AVHL/caConc
        h(' objectvar v_AVHL_v_neurons_activity ')
        h(' { v_AVHL_v_neurons_activity = new Vector() } ')
        h(' { v_AVHL_v_neurons_activity.record(&a_AVHL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVHL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVHR/0/AVHR/caConc
        h(' objectvar v_AVHR_v_neurons_activity ')
        h(' { v_AVHR_v_neurons_activity = new Vector() } ')
        h(' { v_AVHR_v_neurons_activity.record(&a_AVHR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVHR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVJL/0/AVJL/caConc
        h(' objectvar v_AVJL_v_neurons_activity ')
        h(' { v_AVJL_v_neurons_activity = new Vector() } ')
        h(' { v_AVJL_v_neurons_activity.record(&a_AVJL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVJL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVJR/0/AVJR/caConc
        h(' objectvar v_AVJR_v_neurons_activity ')
        h(' { v_AVJR_v_neurons_activity = new Vector() } ')
        h(' { v_AVJR_v_neurons_activity.record(&a_AVJR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVJR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVKL/0/AVKL/caConc
        h(' objectvar v_AVKL_v_neurons_activity ')
        h(' { v_AVKL_v_neurons_activity = new Vector() } ')
        h(' { v_AVKL_v_neurons_activity.record(&a_AVKL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVKL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVKR/0/AVKR/caConc
        h(' objectvar v_AVKR_v_neurons_activity ')
        h(' { v_AVKR_v_neurons_activity = new Vector() } ')
        h(' { v_AVKR_v_neurons_activity.record(&a_AVKR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVKR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVL/0/AVL/caConc
        h(' objectvar v_AVL_v_neurons_activity ')
        h(' { v_AVL_v_neurons_activity = new Vector() } ')
        h(' { v_AVL_v_neurons_activity.record(&a_AVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVM/0/AVM/caConc
        h(' objectvar v_AVM_v_neurons_activity ')
        h(' { v_AVM_v_neurons_activity = new Vector() } ')
        h(' { v_AVM_v_neurons_activity.record(&a_AVM[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVM_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWAL/0/AWAL/caConc
        h(' objectvar v_AWAL_v_neurons_activity ')
        h(' { v_AWAL_v_neurons_activity = new Vector() } ')
        h(' { v_AWAL_v_neurons_activity.record(&a_AWAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWAR/0/AWAR/caConc
        h(' objectvar v_AWAR_v_neurons_activity ')
        h(' { v_AWAR_v_neurons_activity = new Vector() } ')
        h(' { v_AWAR_v_neurons_activity.record(&a_AWAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWBL/0/AWBL/caConc
        h(' objectvar v_AWBL_v_neurons_activity ')
        h(' { v_AWBL_v_neurons_activity = new Vector() } ')
        h(' { v_AWBL_v_neurons_activity.record(&a_AWBL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWBL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWBR/0/AWBR/caConc
        h(' objectvar v_AWBR_v_neurons_activity ')
        h(' { v_AWBR_v_neurons_activity = new Vector() } ')
        h(' { v_AWBR_v_neurons_activity.record(&a_AWBR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWBR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWCL/0/AWCL/caConc
        h(' objectvar v_AWCL_v_neurons_activity ')
        h(' { v_AWCL_v_neurons_activity = new Vector() } ')
        h(' { v_AWCL_v_neurons_activity.record(&a_AWCL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWCL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWCR/0/AWCR/caConc
        h(' objectvar v_AWCR_v_neurons_activity ')
        h(' { v_AWCR_v_neurons_activity = new Vector() } ')
        h(' { v_AWCR_v_neurons_activity.record(&a_AWCR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWCR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BAGL/0/BAGL/caConc
        h(' objectvar v_BAGL_v_neurons_activity ')
        h(' { v_BAGL_v_neurons_activity = new Vector() } ')
        h(' { v_BAGL_v_neurons_activity.record(&a_BAGL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BAGL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BAGR/0/BAGR/caConc
        h(' objectvar v_BAGR_v_neurons_activity ')
        h(' { v_BAGR_v_neurons_activity = new Vector() } ')
        h(' { v_BAGR_v_neurons_activity.record(&a_BAGR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BAGR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BDUL/0/BDUL/caConc
        h(' objectvar v_BDUL_v_neurons_activity ')
        h(' { v_BDUL_v_neurons_activity = new Vector() } ')
        h(' { v_BDUL_v_neurons_activity.record(&a_BDUL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BDUL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BDUR/0/BDUR/caConc
        h(' objectvar v_BDUR_v_neurons_activity ')
        h(' { v_BDUR_v_neurons_activity = new Vector() } ')
        h(' { v_BDUR_v_neurons_activity.record(&a_BDUR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BDUR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CANL/0/CANL/caConc
        h(' objectvar v_CANL_v_neurons_activity ')
        h(' { v_CANL_v_neurons_activity = new Vector() } ')
        h(' { v_CANL_v_neurons_activity.record(&a_CANL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CANL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CANR/0/CANR/caConc
        h(' objectvar v_CANR_v_neurons_activity ')
        h(' { v_CANR_v_neurons_activity = new Vector() } ')
        h(' { v_CANR_v_neurons_activity.record(&a_CANR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CANR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPDL/0/CEPDL/caConc
        h(' objectvar v_CEPDL_v_neurons_activity ')
        h(' { v_CEPDL_v_neurons_activity = new Vector() } ')
        h(' { v_CEPDL_v_neurons_activity.record(&a_CEPDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPDR/0/CEPDR/caConc
        h(' objectvar v_CEPDR_v_neurons_activity ')
        h(' { v_CEPDR_v_neurons_activity = new Vector() } ')
        h(' { v_CEPDR_v_neurons_activity.record(&a_CEPDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPVL/0/CEPVL/caConc
        h(' objectvar v_CEPVL_v_neurons_activity ')
        h(' { v_CEPVL_v_neurons_activity = new Vector() } ')
        h(' { v_CEPVL_v_neurons_activity.record(&a_CEPVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPVR/0/CEPVR/caConc
        h(' objectvar v_CEPVR_v_neurons_activity ')
        h(' { v_CEPVR_v_neurons_activity = new Vector() } ')
        h(' { v_CEPVR_v_neurons_activity.record(&a_CEPVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA1/0/DA1/caConc
        h(' objectvar v_DA1_v_neurons_activity ')
        h(' { v_DA1_v_neurons_activity = new Vector() } ')
        h(' { v_DA1_v_neurons_activity.record(&a_DA1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA2/0/DA2/caConc
        h(' objectvar v_DA2_v_neurons_activity ')
        h(' { v_DA2_v_neurons_activity = new Vector() } ')
        h(' { v_DA2_v_neurons_activity.record(&a_DA2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA3/0/DA3/caConc
        h(' objectvar v_DA3_v_neurons_activity ')
        h(' { v_DA3_v_neurons_activity = new Vector() } ')
        h(' { v_DA3_v_neurons_activity.record(&a_DA3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA4/0/DA4/caConc
        h(' objectvar v_DA4_v_neurons_activity ')
        h(' { v_DA4_v_neurons_activity = new Vector() } ')
        h(' { v_DA4_v_neurons_activity.record(&a_DA4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA5/0/DA5/caConc
        h(' objectvar v_DA5_v_neurons_activity ')
        h(' { v_DA5_v_neurons_activity = new Vector() } ')
        h(' { v_DA5_v_neurons_activity.record(&a_DA5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA6/0/DA6/caConc
        h(' objectvar v_DA6_v_neurons_activity ')
        h(' { v_DA6_v_neurons_activity = new Vector() } ')
        h(' { v_DA6_v_neurons_activity.record(&a_DA6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA7/0/DA7/caConc
        h(' objectvar v_DA7_v_neurons_activity ')
        h(' { v_DA7_v_neurons_activity = new Vector() } ')
        h(' { v_DA7_v_neurons_activity.record(&a_DA7[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA7_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA8/0/DA8/caConc
        h(' objectvar v_DA8_v_neurons_activity ')
        h(' { v_DA8_v_neurons_activity = new Vector() } ')
        h(' { v_DA8_v_neurons_activity.record(&a_DA8[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA8_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA9/0/DA9/caConc
        h(' objectvar v_DA9_v_neurons_activity ')
        h(' { v_DA9_v_neurons_activity = new Vector() } ')
        h(' { v_DA9_v_neurons_activity.record(&a_DA9[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA9_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB1/0/DB1/caConc
        h(' objectvar v_DB1_v_neurons_activity ')
        h(' { v_DB1_v_neurons_activity = new Vector() } ')
        h(' { v_DB1_v_neurons_activity.record(&a_DB1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB2/0/DB2/caConc
        h(' objectvar v_DB2_v_neurons_activity ')
        h(' { v_DB2_v_neurons_activity = new Vector() } ')
        h(' { v_DB2_v_neurons_activity.record(&a_DB2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB3/0/DB3/caConc
        h(' objectvar v_DB3_v_neurons_activity ')
        h(' { v_DB3_v_neurons_activity = new Vector() } ')
        h(' { v_DB3_v_neurons_activity.record(&a_DB3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB4/0/DB4/caConc
        h(' objectvar v_DB4_v_neurons_activity ')
        h(' { v_DB4_v_neurons_activity = new Vector() } ')
        h(' { v_DB4_v_neurons_activity.record(&a_DB4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB5/0/DB5/caConc
        h(' objectvar v_DB5_v_neurons_activity ')
        h(' { v_DB5_v_neurons_activity = new Vector() } ')
        h(' { v_DB5_v_neurons_activity.record(&a_DB5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB6/0/DB6/caConc
        h(' objectvar v_DB6_v_neurons_activity ')
        h(' { v_DB6_v_neurons_activity = new Vector() } ')
        h(' { v_DB6_v_neurons_activity.record(&a_DB6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB7/0/DB7/caConc
        h(' objectvar v_DB7_v_neurons_activity ')
        h(' { v_DB7_v_neurons_activity = new Vector() } ')
        h(' { v_DB7_v_neurons_activity.record(&a_DB7[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB7_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD1/0/DD1/caConc
        h(' objectvar v_DD1_v_neurons_activity ')
        h(' { v_DD1_v_neurons_activity = new Vector() } ')
        h(' { v_DD1_v_neurons_activity.record(&a_DD1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD2/0/DD2/caConc
        h(' objectvar v_DD2_v_neurons_activity ')
        h(' { v_DD2_v_neurons_activity = new Vector() } ')
        h(' { v_DD2_v_neurons_activity.record(&a_DD2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD3/0/DD3/caConc
        h(' objectvar v_DD3_v_neurons_activity ')
        h(' { v_DD3_v_neurons_activity = new Vector() } ')
        h(' { v_DD3_v_neurons_activity.record(&a_DD3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD4/0/DD4/caConc
        h(' objectvar v_DD4_v_neurons_activity ')
        h(' { v_DD4_v_neurons_activity = new Vector() } ')
        h(' { v_DD4_v_neurons_activity.record(&a_DD4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD5/0/DD5/caConc
        h(' objectvar v_DD5_v_neurons_activity ')
        h(' { v_DD5_v_neurons_activity = new Vector() } ')
        h(' { v_DD5_v_neurons_activity.record(&a_DD5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD6/0/DD6/caConc
        h(' objectvar v_DD6_v_neurons_activity ')
        h(' { v_DD6_v_neurons_activity = new Vector() } ')
        h(' { v_DD6_v_neurons_activity.record(&a_DD6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DVA/0/DVA/caConc
        h(' objectvar v_DVA_v_neurons_activity ')
        h(' { v_DVA_v_neurons_activity = new Vector() } ')
        h(' { v_DVA_v_neurons_activity.record(&a_DVA[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DVA_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DVB/0/DVB/caConc
        h(' objectvar v_DVB_v_neurons_activity ')
        h(' { v_DVB_v_neurons_activity = new Vector() } ')
        h(' { v_DVB_v_neurons_activity.record(&a_DVB[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DVB_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DVC/0/DVC/caConc
        h(' objectvar v_DVC_v_neurons_activity ')
        h(' { v_DVC_v_neurons_activity = new Vector() } ')
        h(' { v_DVC_v_neurons_activity.record(&a_DVC[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DVC_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: FLPL/0/FLPL/caConc
        h(' objectvar v_FLPL_v_neurons_activity ')
        h(' { v_FLPL_v_neurons_activity = new Vector() } ')
        h(' { v_FLPL_v_neurons_activity.record(&a_FLPL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_FLPL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: FLPR/0/FLPR/caConc
        h(' objectvar v_FLPR_v_neurons_activity ')
        h(' { v_FLPR_v_neurons_activity = new Vector() } ')
        h(' { v_FLPR_v_neurons_activity.record(&a_FLPR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_FLPR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: HSNL/0/HSNL/caConc
        h(' objectvar v_HSNL_v_neurons_activity ')
        h(' { v_HSNL_v_neurons_activity = new Vector() } ')
        h(' { v_HSNL_v_neurons_activity.record(&a_HSNL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_HSNL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: HSNR/0/HSNR/caConc
        h(' objectvar v_HSNR_v_neurons_activity ')
        h(' { v_HSNR_v_neurons_activity = new Vector() } ')
        h(' { v_HSNR_v_neurons_activity.record(&a_HSNR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_HSNR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I1L/0/I1L/caConc
        h(' objectvar v_I1L_v_neurons_activity ')
        h(' { v_I1L_v_neurons_activity = new Vector() } ')
        h(' { v_I1L_v_neurons_activity.record(&a_I1L[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I1L_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I1R/0/I1R/caConc
        h(' objectvar v_I1R_v_neurons_activity ')
        h(' { v_I1R_v_neurons_activity = new Vector() } ')
        h(' { v_I1R_v_neurons_activity.record(&a_I1R[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I1R_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I2L/0/I2L/caConc
        h(' objectvar v_I2L_v_neurons_activity ')
        h(' { v_I2L_v_neurons_activity = new Vector() } ')
        h(' { v_I2L_v_neurons_activity.record(&a_I2L[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I2L_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I2R/0/I2R/caConc
        h(' objectvar v_I2R_v_neurons_activity ')
        h(' { v_I2R_v_neurons_activity = new Vector() } ')
        h(' { v_I2R_v_neurons_activity.record(&a_I2R[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I2R_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I3/0/I3/caConc
        h(' objectvar v_I3_v_neurons_activity ')
        h(' { v_I3_v_neurons_activity = new Vector() } ')
        h(' { v_I3_v_neurons_activity.record(&a_I3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I4/0/I4/caConc
        h(' objectvar v_I4_v_neurons_activity ')
        h(' { v_I4_v_neurons_activity = new Vector() } ')
        h(' { v_I4_v_neurons_activity.record(&a_I4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I5/0/I5/caConc
        h(' objectvar v_I5_v_neurons_activity ')
        h(' { v_I5_v_neurons_activity = new Vector() } ')
        h(' { v_I5_v_neurons_activity.record(&a_I5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I6/0/I6/caConc
        h(' objectvar v_I6_v_neurons_activity ')
        h(' { v_I6_v_neurons_activity = new Vector() } ')
        h(' { v_I6_v_neurons_activity.record(&a_I6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1DL/0/IL1DL/caConc
        h(' objectvar v_IL1DL_v_neurons_activity ')
        h(' { v_IL1DL_v_neurons_activity = new Vector() } ')
        h(' { v_IL1DL_v_neurons_activity.record(&a_IL1DL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1DL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1DR/0/IL1DR/caConc
        h(' objectvar v_IL1DR_v_neurons_activity ')
        h(' { v_IL1DR_v_neurons_activity = new Vector() } ')
        h(' { v_IL1DR_v_neurons_activity.record(&a_IL1DR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1DR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1L/0/IL1L/caConc
        h(' objectvar v_IL1L_v_neurons_activity ')
        h(' { v_IL1L_v_neurons_activity = new Vector() } ')
        h(' { v_IL1L_v_neurons_activity.record(&a_IL1L[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1L_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1R/0/IL1R/caConc
        h(' objectvar v_IL1R_v_neurons_activity ')
        h(' { v_IL1R_v_neurons_activity = new Vector() } ')
        h(' { v_IL1R_v_neurons_activity.record(&a_IL1R[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1R_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1VL/0/IL1VL/caConc
        h(' objectvar v_IL1VL_v_neurons_activity ')
        h(' { v_IL1VL_v_neurons_activity = new Vector() } ')
        h(' { v_IL1VL_v_neurons_activity.record(&a_IL1VL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1VL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1VR/0/IL1VR/caConc
        h(' objectvar v_IL1VR_v_neurons_activity ')
        h(' { v_IL1VR_v_neurons_activity = new Vector() } ')
        h(' { v_IL1VR_v_neurons_activity.record(&a_IL1VR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1VR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2DL/0/IL2DL/caConc
        h(' objectvar v_IL2DL_v_neurons_activity ')
        h(' { v_IL2DL_v_neurons_activity = new Vector() } ')
        h(' { v_IL2DL_v_neurons_activity.record(&a_IL2DL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2DL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2DR/0/IL2DR/caConc
        h(' objectvar v_IL2DR_v_neurons_activity ')
        h(' { v_IL2DR_v_neurons_activity = new Vector() } ')
        h(' { v_IL2DR_v_neurons_activity.record(&a_IL2DR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2DR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2L/0/IL2L/caConc
        h(' objectvar v_IL2L_v_neurons_activity ')
        h(' { v_IL2L_v_neurons_activity = new Vector() } ')
        h(' { v_IL2L_v_neurons_activity.record(&a_IL2L[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2L_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2R/0/IL2R/caConc
        h(' objectvar v_IL2R_v_neurons_activity ')
        h(' { v_IL2R_v_neurons_activity = new Vector() } ')
        h(' { v_IL2R_v_neurons_activity.record(&a_IL2R[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2R_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2VL/0/IL2VL/caConc
        h(' objectvar v_IL2VL_v_neurons_activity ')
        h(' { v_IL2VL_v_neurons_activity = new Vector() } ')
        h(' { v_IL2VL_v_neurons_activity.record(&a_IL2VL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2VL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2VR/0/IL2VR/caConc
        h(' objectvar v_IL2VR_v_neurons_activity ')
        h(' { v_IL2VR_v_neurons_activity = new Vector() } ')
        h(' { v_IL2VR_v_neurons_activity.record(&a_IL2VR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2VR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: LUAL/0/LUAL/caConc
        h(' objectvar v_LUAL_v_neurons_activity ')
        h(' { v_LUAL_v_neurons_activity = new Vector() } ')
        h(' { v_LUAL_v_neurons_activity.record(&a_LUAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_LUAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: LUAR/0/LUAR/caConc
        h(' objectvar v_LUAR_v_neurons_activity ')
        h(' { v_LUAR_v_neurons_activity = new Vector() } ')
        h(' { v_LUAR_v_neurons_activity.record(&a_LUAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_LUAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M1/0/M1/caConc
        h(' objectvar v_M1_v_neurons_activity ')
        h(' { v_M1_v_neurons_activity = new Vector() } ')
        h(' { v_M1_v_neurons_activity.record(&a_M1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M2L/0/M2L/caConc
        h(' objectvar v_M2L_v_neurons_activity ')
        h(' { v_M2L_v_neurons_activity = new Vector() } ')
        h(' { v_M2L_v_neurons_activity.record(&a_M2L[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M2L_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M2R/0/M2R/caConc
        h(' objectvar v_M2R_v_neurons_activity ')
        h(' { v_M2R_v_neurons_activity = new Vector() } ')
        h(' { v_M2R_v_neurons_activity.record(&a_M2R[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M2R_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M3L/0/M3L/caConc
        h(' objectvar v_M3L_v_neurons_activity ')
        h(' { v_M3L_v_neurons_activity = new Vector() } ')
        h(' { v_M3L_v_neurons_activity.record(&a_M3L[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M3L_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M3R/0/M3R/caConc
        h(' objectvar v_M3R_v_neurons_activity ')
        h(' { v_M3R_v_neurons_activity = new Vector() } ')
        h(' { v_M3R_v_neurons_activity.record(&a_M3R[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M3R_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M4/0/M4/caConc
        h(' objectvar v_M4_v_neurons_activity ')
        h(' { v_M4_v_neurons_activity = new Vector() } ')
        h(' { v_M4_v_neurons_activity.record(&a_M4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M5/0/M5/caConc
        h(' objectvar v_M5_v_neurons_activity ')
        h(' { v_M5_v_neurons_activity = new Vector() } ')
        h(' { v_M5_v_neurons_activity.record(&a_M5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MCL/0/MCL/caConc
        h(' objectvar v_MCL_v_neurons_activity ')
        h(' { v_MCL_v_neurons_activity = new Vector() } ')
        h(' { v_MCL_v_neurons_activity.record(&a_MCL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MCL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MCR/0/MCR/caConc
        h(' objectvar v_MCR_v_neurons_activity ')
        h(' { v_MCR_v_neurons_activity = new Vector() } ')
        h(' { v_MCR_v_neurons_activity.record(&a_MCR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MCR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MI/0/MI/caConc
        h(' objectvar v_MI_v_neurons_activity ')
        h(' { v_MI_v_neurons_activity = new Vector() } ')
        h(' { v_MI_v_neurons_activity.record(&a_MI[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MI_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: NSML/0/NSML/caConc
        h(' objectvar v_NSML_v_neurons_activity ')
        h(' { v_NSML_v_neurons_activity = new Vector() } ')
        h(' { v_NSML_v_neurons_activity.record(&a_NSML[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_NSML_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: NSMR/0/NSMR/caConc
        h(' objectvar v_NSMR_v_neurons_activity ')
        h(' { v_NSMR_v_neurons_activity = new Vector() } ')
        h(' { v_NSMR_v_neurons_activity.record(&a_NSMR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_NSMR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLLL/0/OLLL/caConc
        h(' objectvar v_OLLL_v_neurons_activity ')
        h(' { v_OLLL_v_neurons_activity = new Vector() } ')
        h(' { v_OLLL_v_neurons_activity.record(&a_OLLL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLLL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLLR/0/OLLR/caConc
        h(' objectvar v_OLLR_v_neurons_activity ')
        h(' { v_OLLR_v_neurons_activity = new Vector() } ')
        h(' { v_OLLR_v_neurons_activity.record(&a_OLLR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLLR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQDL/0/OLQDL/caConc
        h(' objectvar v_OLQDL_v_neurons_activity ')
        h(' { v_OLQDL_v_neurons_activity = new Vector() } ')
        h(' { v_OLQDL_v_neurons_activity.record(&a_OLQDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQDR/0/OLQDR/caConc
        h(' objectvar v_OLQDR_v_neurons_activity ')
        h(' { v_OLQDR_v_neurons_activity = new Vector() } ')
        h(' { v_OLQDR_v_neurons_activity.record(&a_OLQDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQVL/0/OLQVL/caConc
        h(' objectvar v_OLQVL_v_neurons_activity ')
        h(' { v_OLQVL_v_neurons_activity = new Vector() } ')
        h(' { v_OLQVL_v_neurons_activity.record(&a_OLQVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQVR/0/OLQVR/caConc
        h(' objectvar v_OLQVR_v_neurons_activity ')
        h(' { v_OLQVR_v_neurons_activity = new Vector() } ')
        h(' { v_OLQVR_v_neurons_activity.record(&a_OLQVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDA/0/PDA/caConc
        h(' objectvar v_PDA_v_neurons_activity ')
        h(' { v_PDA_v_neurons_activity = new Vector() } ')
        h(' { v_PDA_v_neurons_activity.record(&a_PDA[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDA_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDB/0/PDB/caConc
        h(' objectvar v_PDB_v_neurons_activity ')
        h(' { v_PDB_v_neurons_activity = new Vector() } ')
        h(' { v_PDB_v_neurons_activity.record(&a_PDB[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDB_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDEL/0/PDEL/caConc
        h(' objectvar v_PDEL_v_neurons_activity ')
        h(' { v_PDEL_v_neurons_activity = new Vector() } ')
        h(' { v_PDEL_v_neurons_activity.record(&a_PDEL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDEL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDER/0/PDER/caConc
        h(' objectvar v_PDER_v_neurons_activity ')
        h(' { v_PDER_v_neurons_activity = new Vector() } ')
        h(' { v_PDER_v_neurons_activity.record(&a_PDER[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDER_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHAL/0/PHAL/caConc
        h(' objectvar v_PHAL_v_neurons_activity ')
        h(' { v_PHAL_v_neurons_activity = new Vector() } ')
        h(' { v_PHAL_v_neurons_activity.record(&a_PHAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHAR/0/PHAR/caConc
        h(' objectvar v_PHAR_v_neurons_activity ')
        h(' { v_PHAR_v_neurons_activity = new Vector() } ')
        h(' { v_PHAR_v_neurons_activity.record(&a_PHAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHBL/0/PHBL/caConc
        h(' objectvar v_PHBL_v_neurons_activity ')
        h(' { v_PHBL_v_neurons_activity = new Vector() } ')
        h(' { v_PHBL_v_neurons_activity.record(&a_PHBL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHBL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHBR/0/PHBR/caConc
        h(' objectvar v_PHBR_v_neurons_activity ')
        h(' { v_PHBR_v_neurons_activity = new Vector() } ')
        h(' { v_PHBR_v_neurons_activity.record(&a_PHBR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHBR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHCL/0/PHCL/caConc
        h(' objectvar v_PHCL_v_neurons_activity ')
        h(' { v_PHCL_v_neurons_activity = new Vector() } ')
        h(' { v_PHCL_v_neurons_activity.record(&a_PHCL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHCL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHCR/0/PHCR/caConc
        h(' objectvar v_PHCR_v_neurons_activity ')
        h(' { v_PHCR_v_neurons_activity = new Vector() } ')
        h(' { v_PHCR_v_neurons_activity.record(&a_PHCR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHCR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLML/0/PLML/caConc
        h(' objectvar v_PLML_v_neurons_activity ')
        h(' { v_PLML_v_neurons_activity = new Vector() } ')
        h(' { v_PLML_v_neurons_activity.record(&a_PLML[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLML_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLMR/0/PLMR/caConc
        h(' objectvar v_PLMR_v_neurons_activity ')
        h(' { v_PLMR_v_neurons_activity = new Vector() } ')
        h(' { v_PLMR_v_neurons_activity.record(&a_PLMR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLMR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLNL/0/PLNL/caConc
        h(' objectvar v_PLNL_v_neurons_activity ')
        h(' { v_PLNL_v_neurons_activity = new Vector() } ')
        h(' { v_PLNL_v_neurons_activity.record(&a_PLNL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLNL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLNR/0/PLNR/caConc
        h(' objectvar v_PLNR_v_neurons_activity ')
        h(' { v_PLNR_v_neurons_activity = new Vector() } ')
        h(' { v_PLNR_v_neurons_activity.record(&a_PLNR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLNR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PQR/0/PQR/caConc
        h(' objectvar v_PQR_v_neurons_activity ')
        h(' { v_PQR_v_neurons_activity = new Vector() } ')
        h(' { v_PQR_v_neurons_activity.record(&a_PQR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PQR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVCL/0/PVCL/caConc
        h(' objectvar v_PVCL_v_neurons_activity ')
        h(' { v_PVCL_v_neurons_activity = new Vector() } ')
        h(' { v_PVCL_v_neurons_activity.record(&a_PVCL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVCL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVCR/0/PVCR/caConc
        h(' objectvar v_PVCR_v_neurons_activity ')
        h(' { v_PVCR_v_neurons_activity = new Vector() } ')
        h(' { v_PVCR_v_neurons_activity.record(&a_PVCR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVCR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVDL/0/PVDL/caConc
        h(' objectvar v_PVDL_v_neurons_activity ')
        h(' { v_PVDL_v_neurons_activity = new Vector() } ')
        h(' { v_PVDL_v_neurons_activity.record(&a_PVDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVDR/0/PVDR/caConc
        h(' objectvar v_PVDR_v_neurons_activity ')
        h(' { v_PVDR_v_neurons_activity = new Vector() } ')
        h(' { v_PVDR_v_neurons_activity.record(&a_PVDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVM/0/PVM/caConc
        h(' objectvar v_PVM_v_neurons_activity ')
        h(' { v_PVM_v_neurons_activity = new Vector() } ')
        h(' { v_PVM_v_neurons_activity.record(&a_PVM[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVM_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVNL/0/PVNL/caConc
        h(' objectvar v_PVNL_v_neurons_activity ')
        h(' { v_PVNL_v_neurons_activity = new Vector() } ')
        h(' { v_PVNL_v_neurons_activity.record(&a_PVNL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVNL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVNR/0/PVNR/caConc
        h(' objectvar v_PVNR_v_neurons_activity ')
        h(' { v_PVNR_v_neurons_activity = new Vector() } ')
        h(' { v_PVNR_v_neurons_activity.record(&a_PVNR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVNR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVPL/0/PVPL/caConc
        h(' objectvar v_PVPL_v_neurons_activity ')
        h(' { v_PVPL_v_neurons_activity = new Vector() } ')
        h(' { v_PVPL_v_neurons_activity.record(&a_PVPL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVPL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVPR/0/PVPR/caConc
        h(' objectvar v_PVPR_v_neurons_activity ')
        h(' { v_PVPR_v_neurons_activity = new Vector() } ')
        h(' { v_PVPR_v_neurons_activity.record(&a_PVPR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVPR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVQL/0/PVQL/caConc
        h(' objectvar v_PVQL_v_neurons_activity ')
        h(' { v_PVQL_v_neurons_activity = new Vector() } ')
        h(' { v_PVQL_v_neurons_activity.record(&a_PVQL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVQL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVQR/0/PVQR/caConc
        h(' objectvar v_PVQR_v_neurons_activity ')
        h(' { v_PVQR_v_neurons_activity = new Vector() } ')
        h(' { v_PVQR_v_neurons_activity.record(&a_PVQR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVQR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVR/0/PVR/caConc
        h(' objectvar v_PVR_v_neurons_activity ')
        h(' { v_PVR_v_neurons_activity = new Vector() } ')
        h(' { v_PVR_v_neurons_activity.record(&a_PVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVT/0/PVT/caConc
        h(' objectvar v_PVT_v_neurons_activity ')
        h(' { v_PVT_v_neurons_activity = new Vector() } ')
        h(' { v_PVT_v_neurons_activity.record(&a_PVT[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVT_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVWL/0/PVWL/caConc
        h(' objectvar v_PVWL_v_neurons_activity ')
        h(' { v_PVWL_v_neurons_activity = new Vector() } ')
        h(' { v_PVWL_v_neurons_activity.record(&a_PVWL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVWL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVWR/0/PVWR/caConc
        h(' objectvar v_PVWR_v_neurons_activity ')
        h(' { v_PVWR_v_neurons_activity = new Vector() } ')
        h(' { v_PVWR_v_neurons_activity.record(&a_PVWR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVWR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIAL/0/RIAL/caConc
        h(' objectvar v_RIAL_v_neurons_activity ')
        h(' { v_RIAL_v_neurons_activity = new Vector() } ')
        h(' { v_RIAL_v_neurons_activity.record(&a_RIAL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIAL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIAR/0/RIAR/caConc
        h(' objectvar v_RIAR_v_neurons_activity ')
        h(' { v_RIAR_v_neurons_activity = new Vector() } ')
        h(' { v_RIAR_v_neurons_activity.record(&a_RIAR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIAR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIBL/0/RIBL/caConc
        h(' objectvar v_RIBL_v_neurons_activity ')
        h(' { v_RIBL_v_neurons_activity = new Vector() } ')
        h(' { v_RIBL_v_neurons_activity.record(&a_RIBL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIBL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIBR/0/RIBR/caConc
        h(' objectvar v_RIBR_v_neurons_activity ')
        h(' { v_RIBR_v_neurons_activity = new Vector() } ')
        h(' { v_RIBR_v_neurons_activity.record(&a_RIBR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIBR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RICL/0/RICL/caConc
        h(' objectvar v_RICL_v_neurons_activity ')
        h(' { v_RICL_v_neurons_activity = new Vector() } ')
        h(' { v_RICL_v_neurons_activity.record(&a_RICL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RICL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RICR/0/RICR/caConc
        h(' objectvar v_RICR_v_neurons_activity ')
        h(' { v_RICR_v_neurons_activity = new Vector() } ')
        h(' { v_RICR_v_neurons_activity.record(&a_RICR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RICR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RID/0/RID/caConc
        h(' objectvar v_RID_v_neurons_activity ')
        h(' { v_RID_v_neurons_activity = new Vector() } ')
        h(' { v_RID_v_neurons_activity.record(&a_RID[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RID_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIFL/0/RIFL/caConc
        h(' objectvar v_RIFL_v_neurons_activity ')
        h(' { v_RIFL_v_neurons_activity = new Vector() } ')
        h(' { v_RIFL_v_neurons_activity.record(&a_RIFL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIFL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIFR/0/RIFR/caConc
        h(' objectvar v_RIFR_v_neurons_activity ')
        h(' { v_RIFR_v_neurons_activity = new Vector() } ')
        h(' { v_RIFR_v_neurons_activity.record(&a_RIFR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIFR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIGL/0/RIGL/caConc
        h(' objectvar v_RIGL_v_neurons_activity ')
        h(' { v_RIGL_v_neurons_activity = new Vector() } ')
        h(' { v_RIGL_v_neurons_activity.record(&a_RIGL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIGL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIGR/0/RIGR/caConc
        h(' objectvar v_RIGR_v_neurons_activity ')
        h(' { v_RIGR_v_neurons_activity = new Vector() } ')
        h(' { v_RIGR_v_neurons_activity.record(&a_RIGR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIGR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIH/0/RIH/caConc
        h(' objectvar v_RIH_v_neurons_activity ')
        h(' { v_RIH_v_neurons_activity = new Vector() } ')
        h(' { v_RIH_v_neurons_activity.record(&a_RIH[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIH_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIML/0/RIML/caConc
        h(' objectvar v_RIML_v_neurons_activity ')
        h(' { v_RIML_v_neurons_activity = new Vector() } ')
        h(' { v_RIML_v_neurons_activity.record(&a_RIML[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIML_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIMR/0/RIMR/caConc
        h(' objectvar v_RIMR_v_neurons_activity ')
        h(' { v_RIMR_v_neurons_activity = new Vector() } ')
        h(' { v_RIMR_v_neurons_activity.record(&a_RIMR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIMR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIPL/0/RIPL/caConc
        h(' objectvar v_RIPL_v_neurons_activity ')
        h(' { v_RIPL_v_neurons_activity = new Vector() } ')
        h(' { v_RIPL_v_neurons_activity.record(&a_RIPL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIPL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIPR/0/RIPR/caConc
        h(' objectvar v_RIPR_v_neurons_activity ')
        h(' { v_RIPR_v_neurons_activity = new Vector() } ')
        h(' { v_RIPR_v_neurons_activity.record(&a_RIPR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIPR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIR/0/RIR/caConc
        h(' objectvar v_RIR_v_neurons_activity ')
        h(' { v_RIR_v_neurons_activity = new Vector() } ')
        h(' { v_RIR_v_neurons_activity.record(&a_RIR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIS/0/RIS/caConc
        h(' objectvar v_RIS_v_neurons_activity ')
        h(' { v_RIS_v_neurons_activity = new Vector() } ')
        h(' { v_RIS_v_neurons_activity.record(&a_RIS[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIS_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIVL/0/RIVL/caConc
        h(' objectvar v_RIVL_v_neurons_activity ')
        h(' { v_RIVL_v_neurons_activity = new Vector() } ')
        h(' { v_RIVL_v_neurons_activity.record(&a_RIVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIVR/0/RIVR/caConc
        h(' objectvar v_RIVR_v_neurons_activity ')
        h(' { v_RIVR_v_neurons_activity = new Vector() } ')
        h(' { v_RIVR_v_neurons_activity.record(&a_RIVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDDL/0/RMDDL/caConc
        h(' objectvar v_RMDDL_v_neurons_activity ')
        h(' { v_RMDDL_v_neurons_activity = new Vector() } ')
        h(' { v_RMDDL_v_neurons_activity.record(&a_RMDDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDDR/0/RMDDR/caConc
        h(' objectvar v_RMDDR_v_neurons_activity ')
        h(' { v_RMDDR_v_neurons_activity = new Vector() } ')
        h(' { v_RMDDR_v_neurons_activity.record(&a_RMDDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDL/0/RMDL/caConc
        h(' objectvar v_RMDL_v_neurons_activity ')
        h(' { v_RMDL_v_neurons_activity = new Vector() } ')
        h(' { v_RMDL_v_neurons_activity.record(&a_RMDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDR/0/RMDR/caConc
        h(' objectvar v_RMDR_v_neurons_activity ')
        h(' { v_RMDR_v_neurons_activity = new Vector() } ')
        h(' { v_RMDR_v_neurons_activity.record(&a_RMDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDVL/0/RMDVL/caConc
        h(' objectvar v_RMDVL_v_neurons_activity ')
        h(' { v_RMDVL_v_neurons_activity = new Vector() } ')
        h(' { v_RMDVL_v_neurons_activity.record(&a_RMDVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDVR/0/RMDVR/caConc
        h(' objectvar v_RMDVR_v_neurons_activity ')
        h(' { v_RMDVR_v_neurons_activity = new Vector() } ')
        h(' { v_RMDVR_v_neurons_activity.record(&a_RMDVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMED/0/RMED/caConc
        h(' objectvar v_RMED_v_neurons_activity ')
        h(' { v_RMED_v_neurons_activity = new Vector() } ')
        h(' { v_RMED_v_neurons_activity.record(&a_RMED[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMED_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMEL/0/RMEL/caConc
        h(' objectvar v_RMEL_v_neurons_activity ')
        h(' { v_RMEL_v_neurons_activity = new Vector() } ')
        h(' { v_RMEL_v_neurons_activity.record(&a_RMEL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMEL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMER/0/RMER/caConc
        h(' objectvar v_RMER_v_neurons_activity ')
        h(' { v_RMER_v_neurons_activity = new Vector() } ')
        h(' { v_RMER_v_neurons_activity.record(&a_RMER[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMER_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMEV/0/RMEV/caConc
        h(' objectvar v_RMEV_v_neurons_activity ')
        h(' { v_RMEV_v_neurons_activity = new Vector() } ')
        h(' { v_RMEV_v_neurons_activity.record(&a_RMEV[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMEV_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMFL/0/RMFL/caConc
        h(' objectvar v_RMFL_v_neurons_activity ')
        h(' { v_RMFL_v_neurons_activity = new Vector() } ')
        h(' { v_RMFL_v_neurons_activity.record(&a_RMFL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMFL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMFR/0/RMFR/caConc
        h(' objectvar v_RMFR_v_neurons_activity ')
        h(' { v_RMFR_v_neurons_activity = new Vector() } ')
        h(' { v_RMFR_v_neurons_activity.record(&a_RMFR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMFR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMGL/0/RMGL/caConc
        h(' objectvar v_RMGL_v_neurons_activity ')
        h(' { v_RMGL_v_neurons_activity = new Vector() } ')
        h(' { v_RMGL_v_neurons_activity.record(&a_RMGL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMGL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMGR/0/RMGR/caConc
        h(' objectvar v_RMGR_v_neurons_activity ')
        h(' { v_RMGR_v_neurons_activity = new Vector() } ')
        h(' { v_RMGR_v_neurons_activity.record(&a_RMGR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMGR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMHL/0/RMHL/caConc
        h(' objectvar v_RMHL_v_neurons_activity ')
        h(' { v_RMHL_v_neurons_activity = new Vector() } ')
        h(' { v_RMHL_v_neurons_activity.record(&a_RMHL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMHL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMHR/0/RMHR/caConc
        h(' objectvar v_RMHR_v_neurons_activity ')
        h(' { v_RMHR_v_neurons_activity = new Vector() } ')
        h(' { v_RMHR_v_neurons_activity.record(&a_RMHR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMHR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAADL/0/SAADL/caConc
        h(' objectvar v_SAADL_v_neurons_activity ')
        h(' { v_SAADL_v_neurons_activity = new Vector() } ')
        h(' { v_SAADL_v_neurons_activity.record(&a_SAADL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAADL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAADR/0/SAADR/caConc
        h(' objectvar v_SAADR_v_neurons_activity ')
        h(' { v_SAADR_v_neurons_activity = new Vector() } ')
        h(' { v_SAADR_v_neurons_activity.record(&a_SAADR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAADR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAAVL/0/SAAVL/caConc
        h(' objectvar v_SAAVL_v_neurons_activity ')
        h(' { v_SAAVL_v_neurons_activity = new Vector() } ')
        h(' { v_SAAVL_v_neurons_activity.record(&a_SAAVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAAVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAAVR/0/SAAVR/caConc
        h(' objectvar v_SAAVR_v_neurons_activity ')
        h(' { v_SAAVR_v_neurons_activity = new Vector() } ')
        h(' { v_SAAVR_v_neurons_activity.record(&a_SAAVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAAVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SABD/0/SABD/caConc
        h(' objectvar v_SABD_v_neurons_activity ')
        h(' { v_SABD_v_neurons_activity = new Vector() } ')
        h(' { v_SABD_v_neurons_activity.record(&a_SABD[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SABD_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SABVL/0/SABVL/caConc
        h(' objectvar v_SABVL_v_neurons_activity ')
        h(' { v_SABVL_v_neurons_activity = new Vector() } ')
        h(' { v_SABVL_v_neurons_activity.record(&a_SABVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SABVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SABVR/0/SABVR/caConc
        h(' objectvar v_SABVR_v_neurons_activity ')
        h(' { v_SABVR_v_neurons_activity = new Vector() } ')
        h(' { v_SABVR_v_neurons_activity.record(&a_SABVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SABVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SDQL/0/SDQL/caConc
        h(' objectvar v_SDQL_v_neurons_activity ')
        h(' { v_SDQL_v_neurons_activity = new Vector() } ')
        h(' { v_SDQL_v_neurons_activity.record(&a_SDQL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SDQL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SDQR/0/SDQR/caConc
        h(' objectvar v_SDQR_v_neurons_activity ')
        h(' { v_SDQR_v_neurons_activity = new Vector() } ')
        h(' { v_SDQR_v_neurons_activity.record(&a_SDQR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SDQR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIADL/0/SIADL/caConc
        h(' objectvar v_SIADL_v_neurons_activity ')
        h(' { v_SIADL_v_neurons_activity = new Vector() } ')
        h(' { v_SIADL_v_neurons_activity.record(&a_SIADL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIADL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIADR/0/SIADR/caConc
        h(' objectvar v_SIADR_v_neurons_activity ')
        h(' { v_SIADR_v_neurons_activity = new Vector() } ')
        h(' { v_SIADR_v_neurons_activity.record(&a_SIADR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIADR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIAVL/0/SIAVL/caConc
        h(' objectvar v_SIAVL_v_neurons_activity ')
        h(' { v_SIAVL_v_neurons_activity = new Vector() } ')
        h(' { v_SIAVL_v_neurons_activity.record(&a_SIAVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIAVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIAVR/0/SIAVR/caConc
        h(' objectvar v_SIAVR_v_neurons_activity ')
        h(' { v_SIAVR_v_neurons_activity = new Vector() } ')
        h(' { v_SIAVR_v_neurons_activity.record(&a_SIAVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIAVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBDL/0/SIBDL/caConc
        h(' objectvar v_SIBDL_v_neurons_activity ')
        h(' { v_SIBDL_v_neurons_activity = new Vector() } ')
        h(' { v_SIBDL_v_neurons_activity.record(&a_SIBDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBDR/0/SIBDR/caConc
        h(' objectvar v_SIBDR_v_neurons_activity ')
        h(' { v_SIBDR_v_neurons_activity = new Vector() } ')
        h(' { v_SIBDR_v_neurons_activity.record(&a_SIBDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBVL/0/SIBVL/caConc
        h(' objectvar v_SIBVL_v_neurons_activity ')
        h(' { v_SIBVL_v_neurons_activity = new Vector() } ')
        h(' { v_SIBVL_v_neurons_activity.record(&a_SIBVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBVR/0/SIBVR/caConc
        h(' objectvar v_SIBVR_v_neurons_activity ')
        h(' { v_SIBVR_v_neurons_activity = new Vector() } ')
        h(' { v_SIBVR_v_neurons_activity.record(&a_SIBVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBDL/0/SMBDL/caConc
        h(' objectvar v_SMBDL_v_neurons_activity ')
        h(' { v_SMBDL_v_neurons_activity = new Vector() } ')
        h(' { v_SMBDL_v_neurons_activity.record(&a_SMBDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBDR/0/SMBDR/caConc
        h(' objectvar v_SMBDR_v_neurons_activity ')
        h(' { v_SMBDR_v_neurons_activity = new Vector() } ')
        h(' { v_SMBDR_v_neurons_activity.record(&a_SMBDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBVL/0/SMBVL/caConc
        h(' objectvar v_SMBVL_v_neurons_activity ')
        h(' { v_SMBVL_v_neurons_activity = new Vector() } ')
        h(' { v_SMBVL_v_neurons_activity.record(&a_SMBVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBVR/0/SMBVR/caConc
        h(' objectvar v_SMBVR_v_neurons_activity ')
        h(' { v_SMBVR_v_neurons_activity = new Vector() } ')
        h(' { v_SMBVR_v_neurons_activity.record(&a_SMBVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDDL/0/SMDDL/caConc
        h(' objectvar v_SMDDL_v_neurons_activity ')
        h(' { v_SMDDL_v_neurons_activity = new Vector() } ')
        h(' { v_SMDDL_v_neurons_activity.record(&a_SMDDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDDR/0/SMDDR/caConc
        h(' objectvar v_SMDDR_v_neurons_activity ')
        h(' { v_SMDDR_v_neurons_activity = new Vector() } ')
        h(' { v_SMDDR_v_neurons_activity.record(&a_SMDDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDVL/0/SMDVL/caConc
        h(' objectvar v_SMDVL_v_neurons_activity ')
        h(' { v_SMDVL_v_neurons_activity = new Vector() } ')
        h(' { v_SMDVL_v_neurons_activity.record(&a_SMDVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDVR/0/SMDVR/caConc
        h(' objectvar v_SMDVR_v_neurons_activity ')
        h(' { v_SMDVR_v_neurons_activity = new Vector() } ')
        h(' { v_SMDVR_v_neurons_activity.record(&a_SMDVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URADL/0/URADL/caConc
        h(' objectvar v_URADL_v_neurons_activity ')
        h(' { v_URADL_v_neurons_activity = new Vector() } ')
        h(' { v_URADL_v_neurons_activity.record(&a_URADL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URADL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URADR/0/URADR/caConc
        h(' objectvar v_URADR_v_neurons_activity ')
        h(' { v_URADR_v_neurons_activity = new Vector() } ')
        h(' { v_URADR_v_neurons_activity.record(&a_URADR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URADR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URAVL/0/URAVL/caConc
        h(' objectvar v_URAVL_v_neurons_activity ')
        h(' { v_URAVL_v_neurons_activity = new Vector() } ')
        h(' { v_URAVL_v_neurons_activity.record(&a_URAVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URAVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URAVR/0/URAVR/caConc
        h(' objectvar v_URAVR_v_neurons_activity ')
        h(' { v_URAVR_v_neurons_activity = new Vector() } ')
        h(' { v_URAVR_v_neurons_activity.record(&a_URAVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URAVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URBL/0/URBL/caConc
        h(' objectvar v_URBL_v_neurons_activity ')
        h(' { v_URBL_v_neurons_activity = new Vector() } ')
        h(' { v_URBL_v_neurons_activity.record(&a_URBL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URBL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URBR/0/URBR/caConc
        h(' objectvar v_URBR_v_neurons_activity ')
        h(' { v_URBR_v_neurons_activity = new Vector() } ')
        h(' { v_URBR_v_neurons_activity.record(&a_URBR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URBR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URXL/0/URXL/caConc
        h(' objectvar v_URXL_v_neurons_activity ')
        h(' { v_URXL_v_neurons_activity = new Vector() } ')
        h(' { v_URXL_v_neurons_activity.record(&a_URXL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URXL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URXR/0/URXR/caConc
        h(' objectvar v_URXR_v_neurons_activity ')
        h(' { v_URXR_v_neurons_activity = new Vector() } ')
        h(' { v_URXR_v_neurons_activity.record(&a_URXR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URXR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYDL/0/URYDL/caConc
        h(' objectvar v_URYDL_v_neurons_activity ')
        h(' { v_URYDL_v_neurons_activity = new Vector() } ')
        h(' { v_URYDL_v_neurons_activity.record(&a_URYDL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYDL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYDR/0/URYDR/caConc
        h(' objectvar v_URYDR_v_neurons_activity ')
        h(' { v_URYDR_v_neurons_activity = new Vector() } ')
        h(' { v_URYDR_v_neurons_activity.record(&a_URYDR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYDR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYVL/0/URYVL/caConc
        h(' objectvar v_URYVL_v_neurons_activity ')
        h(' { v_URYVL_v_neurons_activity = new Vector() } ')
        h(' { v_URYVL_v_neurons_activity.record(&a_URYVL[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYVL_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYVR/0/URYVR/caConc
        h(' objectvar v_URYVR_v_neurons_activity ')
        h(' { v_URYVR_v_neurons_activity = new Vector() } ')
        h(' { v_URYVR_v_neurons_activity.record(&a_URYVR[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYVR_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA1/0/VA1/caConc
        h(' objectvar v_VA1_v_neurons_activity ')
        h(' { v_VA1_v_neurons_activity = new Vector() } ')
        h(' { v_VA1_v_neurons_activity.record(&a_VA1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA10/0/VA10/caConc
        h(' objectvar v_VA10_v_neurons_activity ')
        h(' { v_VA10_v_neurons_activity = new Vector() } ')
        h(' { v_VA10_v_neurons_activity.record(&a_VA10[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA10_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA11/0/VA11/caConc
        h(' objectvar v_VA11_v_neurons_activity ')
        h(' { v_VA11_v_neurons_activity = new Vector() } ')
        h(' { v_VA11_v_neurons_activity.record(&a_VA11[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA11_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA12/0/VA12/caConc
        h(' objectvar v_VA12_v_neurons_activity ')
        h(' { v_VA12_v_neurons_activity = new Vector() } ')
        h(' { v_VA12_v_neurons_activity.record(&a_VA12[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA12_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA2/0/VA2/caConc
        h(' objectvar v_VA2_v_neurons_activity ')
        h(' { v_VA2_v_neurons_activity = new Vector() } ')
        h(' { v_VA2_v_neurons_activity.record(&a_VA2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA3/0/VA3/caConc
        h(' objectvar v_VA3_v_neurons_activity ')
        h(' { v_VA3_v_neurons_activity = new Vector() } ')
        h(' { v_VA3_v_neurons_activity.record(&a_VA3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA4/0/VA4/caConc
        h(' objectvar v_VA4_v_neurons_activity ')
        h(' { v_VA4_v_neurons_activity = new Vector() } ')
        h(' { v_VA4_v_neurons_activity.record(&a_VA4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA5/0/VA5/caConc
        h(' objectvar v_VA5_v_neurons_activity ')
        h(' { v_VA5_v_neurons_activity = new Vector() } ')
        h(' { v_VA5_v_neurons_activity.record(&a_VA5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA6/0/VA6/caConc
        h(' objectvar v_VA6_v_neurons_activity ')
        h(' { v_VA6_v_neurons_activity = new Vector() } ')
        h(' { v_VA6_v_neurons_activity.record(&a_VA6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA7/0/VA7/caConc
        h(' objectvar v_VA7_v_neurons_activity ')
        h(' { v_VA7_v_neurons_activity = new Vector() } ')
        h(' { v_VA7_v_neurons_activity.record(&a_VA7[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA7_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA8/0/VA8/caConc
        h(' objectvar v_VA8_v_neurons_activity ')
        h(' { v_VA8_v_neurons_activity = new Vector() } ')
        h(' { v_VA8_v_neurons_activity.record(&a_VA8[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA8_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA9/0/VA9/caConc
        h(' objectvar v_VA9_v_neurons_activity ')
        h(' { v_VA9_v_neurons_activity = new Vector() } ')
        h(' { v_VA9_v_neurons_activity.record(&a_VA9[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA9_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB1/0/VB1/caConc
        h(' objectvar v_VB1_v_neurons_activity ')
        h(' { v_VB1_v_neurons_activity = new Vector() } ')
        h(' { v_VB1_v_neurons_activity.record(&a_VB1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB10/0/VB10/caConc
        h(' objectvar v_VB10_v_neurons_activity ')
        h(' { v_VB10_v_neurons_activity = new Vector() } ')
        h(' { v_VB10_v_neurons_activity.record(&a_VB10[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB10_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB11/0/VB11/caConc
        h(' objectvar v_VB11_v_neurons_activity ')
        h(' { v_VB11_v_neurons_activity = new Vector() } ')
        h(' { v_VB11_v_neurons_activity.record(&a_VB11[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB11_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB2/0/VB2/caConc
        h(' objectvar v_VB2_v_neurons_activity ')
        h(' { v_VB2_v_neurons_activity = new Vector() } ')
        h(' { v_VB2_v_neurons_activity.record(&a_VB2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB3/0/VB3/caConc
        h(' objectvar v_VB3_v_neurons_activity ')
        h(' { v_VB3_v_neurons_activity = new Vector() } ')
        h(' { v_VB3_v_neurons_activity.record(&a_VB3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB4/0/VB4/caConc
        h(' objectvar v_VB4_v_neurons_activity ')
        h(' { v_VB4_v_neurons_activity = new Vector() } ')
        h(' { v_VB4_v_neurons_activity.record(&a_VB4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB5/0/VB5/caConc
        h(' objectvar v_VB5_v_neurons_activity ')
        h(' { v_VB5_v_neurons_activity = new Vector() } ')
        h(' { v_VB5_v_neurons_activity.record(&a_VB5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB6/0/VB6/caConc
        h(' objectvar v_VB6_v_neurons_activity ')
        h(' { v_VB6_v_neurons_activity = new Vector() } ')
        h(' { v_VB6_v_neurons_activity.record(&a_VB6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB7/0/VB7/caConc
        h(' objectvar v_VB7_v_neurons_activity ')
        h(' { v_VB7_v_neurons_activity = new Vector() } ')
        h(' { v_VB7_v_neurons_activity.record(&a_VB7[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB7_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB8/0/VB8/caConc
        h(' objectvar v_VB8_v_neurons_activity ')
        h(' { v_VB8_v_neurons_activity = new Vector() } ')
        h(' { v_VB8_v_neurons_activity.record(&a_VB8[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB8_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB9/0/VB9/caConc
        h(' objectvar v_VB9_v_neurons_activity ')
        h(' { v_VB9_v_neurons_activity = new Vector() } ')
        h(' { v_VB9_v_neurons_activity.record(&a_VB9[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB9_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC1/0/VC1/caConc
        h(' objectvar v_VC1_v_neurons_activity ')
        h(' { v_VC1_v_neurons_activity = new Vector() } ')
        h(' { v_VC1_v_neurons_activity.record(&a_VC1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC2/0/VC2/caConc
        h(' objectvar v_VC2_v_neurons_activity ')
        h(' { v_VC2_v_neurons_activity = new Vector() } ')
        h(' { v_VC2_v_neurons_activity.record(&a_VC2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC3/0/VC3/caConc
        h(' objectvar v_VC3_v_neurons_activity ')
        h(' { v_VC3_v_neurons_activity = new Vector() } ')
        h(' { v_VC3_v_neurons_activity.record(&a_VC3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC4/0/VC4/caConc
        h(' objectvar v_VC4_v_neurons_activity ')
        h(' { v_VC4_v_neurons_activity = new Vector() } ')
        h(' { v_VC4_v_neurons_activity.record(&a_VC4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC5/0/VC5/caConc
        h(' objectvar v_VC5_v_neurons_activity ')
        h(' { v_VC5_v_neurons_activity = new Vector() } ')
        h(' { v_VC5_v_neurons_activity.record(&a_VC5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC6/0/VC6/caConc
        h(' objectvar v_VC6_v_neurons_activity ')
        h(' { v_VC6_v_neurons_activity = new Vector() } ')
        h(' { v_VC6_v_neurons_activity.record(&a_VC6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD1/0/VD1/caConc
        h(' objectvar v_VD1_v_neurons_activity ')
        h(' { v_VD1_v_neurons_activity = new Vector() } ')
        h(' { v_VD1_v_neurons_activity.record(&a_VD1[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD1_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD10/0/VD10/caConc
        h(' objectvar v_VD10_v_neurons_activity ')
        h(' { v_VD10_v_neurons_activity = new Vector() } ')
        h(' { v_VD10_v_neurons_activity.record(&a_VD10[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD10_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD11/0/VD11/caConc
        h(' objectvar v_VD11_v_neurons_activity ')
        h(' { v_VD11_v_neurons_activity = new Vector() } ')
        h(' { v_VD11_v_neurons_activity.record(&a_VD11[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD11_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD12/0/VD12/caConc
        h(' objectvar v_VD12_v_neurons_activity ')
        h(' { v_VD12_v_neurons_activity = new Vector() } ')
        h(' { v_VD12_v_neurons_activity.record(&a_VD12[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD12_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD13/0/VD13/caConc
        h(' objectvar v_VD13_v_neurons_activity ')
        h(' { v_VD13_v_neurons_activity = new Vector() } ')
        h(' { v_VD13_v_neurons_activity.record(&a_VD13[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD13_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD2/0/VD2/caConc
        h(' objectvar v_VD2_v_neurons_activity ')
        h(' { v_VD2_v_neurons_activity = new Vector() } ')
        h(' { v_VD2_v_neurons_activity.record(&a_VD2[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD2_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD3/0/VD3/caConc
        h(' objectvar v_VD3_v_neurons_activity ')
        h(' { v_VD3_v_neurons_activity = new Vector() } ')
        h(' { v_VD3_v_neurons_activity.record(&a_VD3[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD3_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD4/0/VD4/caConc
        h(' objectvar v_VD4_v_neurons_activity ')
        h(' { v_VD4_v_neurons_activity = new Vector() } ')
        h(' { v_VD4_v_neurons_activity.record(&a_VD4[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD4_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD5/0/VD5/caConc
        h(' objectvar v_VD5_v_neurons_activity ')
        h(' { v_VD5_v_neurons_activity = new Vector() } ')
        h(' { v_VD5_v_neurons_activity.record(&a_VD5[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD5_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD6/0/VD6/caConc
        h(' objectvar v_VD6_v_neurons_activity ')
        h(' { v_VD6_v_neurons_activity = new Vector() } ')
        h(' { v_VD6_v_neurons_activity.record(&a_VD6[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD6_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD7/0/VD7/caConc
        h(' objectvar v_VD7_v_neurons_activity ')
        h(' { v_VD7_v_neurons_activity = new Vector() } ')
        h(' { v_VD7_v_neurons_activity.record(&a_VD7[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD7_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD8/0/VD8/caConc
        h(' objectvar v_VD8_v_neurons_activity ')
        h(' { v_VD8_v_neurons_activity = new Vector() } ')
        h(' { v_VD8_v_neurons_activity.record(&a_VD8[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD8_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD9/0/VD9/caConc
        h(' objectvar v_VD9_v_neurons_activity ')
        h(' { v_VD9_v_neurons_activity = new Vector() } ')
        h(' { v_VD9_v_neurons_activity.record(&a_VD9[0].Soma.cai(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD9_v_neurons_activity.resize((h.tstop * h.steps_per_ms) + 1)

        # ######################   File to save: c302_D_Full.dat (neurons_v)
        # Column: ADAL/0/ADAL/v
        h(' objectvar v_ADAL_v_neurons_v ')
        h(' { v_ADAL_v_neurons_v = new Vector() } ')
        h(' { v_ADAL_v_neurons_v.record(&a_ADAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADAR/0/ADAR/v
        h(' objectvar v_ADAR_v_neurons_v ')
        h(' { v_ADAR_v_neurons_v = new Vector() } ')
        h(' { v_ADAR_v_neurons_v.record(&a_ADAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADEL/0/ADEL/v
        h(' objectvar v_ADEL_v_neurons_v ')
        h(' { v_ADEL_v_neurons_v = new Vector() } ')
        h(' { v_ADEL_v_neurons_v.record(&a_ADEL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADEL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADER/0/ADER/v
        h(' objectvar v_ADER_v_neurons_v ')
        h(' { v_ADER_v_neurons_v = new Vector() } ')
        h(' { v_ADER_v_neurons_v.record(&a_ADER[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADER_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADFL/0/ADFL/v
        h(' objectvar v_ADFL_v_neurons_v ')
        h(' { v_ADFL_v_neurons_v = new Vector() } ')
        h(' { v_ADFL_v_neurons_v.record(&a_ADFL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADFL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADFR/0/ADFR/v
        h(' objectvar v_ADFR_v_neurons_v ')
        h(' { v_ADFR_v_neurons_v = new Vector() } ')
        h(' { v_ADFR_v_neurons_v.record(&a_ADFR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADFR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADLL/0/ADLL/v
        h(' objectvar v_ADLL_v_neurons_v ')
        h(' { v_ADLL_v_neurons_v = new Vector() } ')
        h(' { v_ADLL_v_neurons_v.record(&a_ADLL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADLL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ADLR/0/ADLR/v
        h(' objectvar v_ADLR_v_neurons_v ')
        h(' { v_ADLR_v_neurons_v = new Vector() } ')
        h(' { v_ADLR_v_neurons_v.record(&a_ADLR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ADLR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AFDL/0/AFDL/v
        h(' objectvar v_AFDL_v_neurons_v ')
        h(' { v_AFDL_v_neurons_v = new Vector() } ')
        h(' { v_AFDL_v_neurons_v.record(&a_AFDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AFDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AFDR/0/AFDR/v
        h(' objectvar v_AFDR_v_neurons_v ')
        h(' { v_AFDR_v_neurons_v = new Vector() } ')
        h(' { v_AFDR_v_neurons_v.record(&a_AFDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AFDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIAL/0/AIAL/v
        h(' objectvar v_AIAL_v_neurons_v ')
        h(' { v_AIAL_v_neurons_v = new Vector() } ')
        h(' { v_AIAL_v_neurons_v.record(&a_AIAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIAR/0/AIAR/v
        h(' objectvar v_AIAR_v_neurons_v ')
        h(' { v_AIAR_v_neurons_v = new Vector() } ')
        h(' { v_AIAR_v_neurons_v.record(&a_AIAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIBL/0/AIBL/v
        h(' objectvar v_AIBL_v_neurons_v ')
        h(' { v_AIBL_v_neurons_v = new Vector() } ')
        h(' { v_AIBL_v_neurons_v.record(&a_AIBL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIBL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIBR/0/AIBR/v
        h(' objectvar v_AIBR_v_neurons_v ')
        h(' { v_AIBR_v_neurons_v = new Vector() } ')
        h(' { v_AIBR_v_neurons_v.record(&a_AIBR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIBR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIML/0/AIML/v
        h(' objectvar v_AIML_v_neurons_v ')
        h(' { v_AIML_v_neurons_v = new Vector() } ')
        h(' { v_AIML_v_neurons_v.record(&a_AIML[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIML_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIMR/0/AIMR/v
        h(' objectvar v_AIMR_v_neurons_v ')
        h(' { v_AIMR_v_neurons_v = new Vector() } ')
        h(' { v_AIMR_v_neurons_v.record(&a_AIMR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIMR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AINL/0/AINL/v
        h(' objectvar v_AINL_v_neurons_v ')
        h(' { v_AINL_v_neurons_v = new Vector() } ')
        h(' { v_AINL_v_neurons_v.record(&a_AINL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AINL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AINR/0/AINR/v
        h(' objectvar v_AINR_v_neurons_v ')
        h(' { v_AINR_v_neurons_v = new Vector() } ')
        h(' { v_AINR_v_neurons_v.record(&a_AINR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AINR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIYL/0/AIYL/v
        h(' objectvar v_AIYL_v_neurons_v ')
        h(' { v_AIYL_v_neurons_v = new Vector() } ')
        h(' { v_AIYL_v_neurons_v.record(&a_AIYL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIYL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIYR/0/AIYR/v
        h(' objectvar v_AIYR_v_neurons_v ')
        h(' { v_AIYR_v_neurons_v = new Vector() } ')
        h(' { v_AIYR_v_neurons_v.record(&a_AIYR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIYR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIZL/0/AIZL/v
        h(' objectvar v_AIZL_v_neurons_v ')
        h(' { v_AIZL_v_neurons_v = new Vector() } ')
        h(' { v_AIZL_v_neurons_v.record(&a_AIZL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIZL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AIZR/0/AIZR/v
        h(' objectvar v_AIZR_v_neurons_v ')
        h(' { v_AIZR_v_neurons_v = new Vector() } ')
        h(' { v_AIZR_v_neurons_v.record(&a_AIZR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AIZR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALA/0/ALA/v
        h(' objectvar v_ALA_v_neurons_v ')
        h(' { v_ALA_v_neurons_v = new Vector() } ')
        h(' { v_ALA_v_neurons_v.record(&a_ALA[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALA_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALML/0/ALML/v
        h(' objectvar v_ALML_v_neurons_v ')
        h(' { v_ALML_v_neurons_v = new Vector() } ')
        h(' { v_ALML_v_neurons_v.record(&a_ALML[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALML_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALMR/0/ALMR/v
        h(' objectvar v_ALMR_v_neurons_v ')
        h(' { v_ALMR_v_neurons_v = new Vector() } ')
        h(' { v_ALMR_v_neurons_v.record(&a_ALMR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALMR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALNL/0/ALNL/v
        h(' objectvar v_ALNL_v_neurons_v ')
        h(' { v_ALNL_v_neurons_v = new Vector() } ')
        h(' { v_ALNL_v_neurons_v.record(&a_ALNL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALNL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ALNR/0/ALNR/v
        h(' objectvar v_ALNR_v_neurons_v ')
        h(' { v_ALNR_v_neurons_v = new Vector() } ')
        h(' { v_ALNR_v_neurons_v.record(&a_ALNR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ALNR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AQR/0/AQR/v
        h(' objectvar v_AQR_v_neurons_v ')
        h(' { v_AQR_v_neurons_v = new Vector() } ')
        h(' { v_AQR_v_neurons_v.record(&a_AQR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AQR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS1/0/AS1/v
        h(' objectvar v_AS1_v_neurons_v ')
        h(' { v_AS1_v_neurons_v = new Vector() } ')
        h(' { v_AS1_v_neurons_v.record(&a_AS1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS10/0/AS10/v
        h(' objectvar v_AS10_v_neurons_v ')
        h(' { v_AS10_v_neurons_v = new Vector() } ')
        h(' { v_AS10_v_neurons_v.record(&a_AS10[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS10_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS11/0/AS11/v
        h(' objectvar v_AS11_v_neurons_v ')
        h(' { v_AS11_v_neurons_v = new Vector() } ')
        h(' { v_AS11_v_neurons_v.record(&a_AS11[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS11_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS2/0/AS2/v
        h(' objectvar v_AS2_v_neurons_v ')
        h(' { v_AS2_v_neurons_v = new Vector() } ')
        h(' { v_AS2_v_neurons_v.record(&a_AS2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS3/0/AS3/v
        h(' objectvar v_AS3_v_neurons_v ')
        h(' { v_AS3_v_neurons_v = new Vector() } ')
        h(' { v_AS3_v_neurons_v.record(&a_AS3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS4/0/AS4/v
        h(' objectvar v_AS4_v_neurons_v ')
        h(' { v_AS4_v_neurons_v = new Vector() } ')
        h(' { v_AS4_v_neurons_v.record(&a_AS4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS5/0/AS5/v
        h(' objectvar v_AS5_v_neurons_v ')
        h(' { v_AS5_v_neurons_v = new Vector() } ')
        h(' { v_AS5_v_neurons_v.record(&a_AS5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS6/0/AS6/v
        h(' objectvar v_AS6_v_neurons_v ')
        h(' { v_AS6_v_neurons_v = new Vector() } ')
        h(' { v_AS6_v_neurons_v.record(&a_AS6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS7/0/AS7/v
        h(' objectvar v_AS7_v_neurons_v ')
        h(' { v_AS7_v_neurons_v = new Vector() } ')
        h(' { v_AS7_v_neurons_v.record(&a_AS7[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS7_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS8/0/AS8/v
        h(' objectvar v_AS8_v_neurons_v ')
        h(' { v_AS8_v_neurons_v = new Vector() } ')
        h(' { v_AS8_v_neurons_v.record(&a_AS8[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS8_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AS9/0/AS9/v
        h(' objectvar v_AS9_v_neurons_v ')
        h(' { v_AS9_v_neurons_v = new Vector() } ')
        h(' { v_AS9_v_neurons_v.record(&a_AS9[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AS9_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASEL/0/ASEL/v
        h(' objectvar v_ASEL_v_neurons_v ')
        h(' { v_ASEL_v_neurons_v = new Vector() } ')
        h(' { v_ASEL_v_neurons_v.record(&a_ASEL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASEL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASER/0/ASER/v
        h(' objectvar v_ASER_v_neurons_v ')
        h(' { v_ASER_v_neurons_v = new Vector() } ')
        h(' { v_ASER_v_neurons_v.record(&a_ASER[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASER_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASGL/0/ASGL/v
        h(' objectvar v_ASGL_v_neurons_v ')
        h(' { v_ASGL_v_neurons_v = new Vector() } ')
        h(' { v_ASGL_v_neurons_v.record(&a_ASGL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASGL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASGR/0/ASGR/v
        h(' objectvar v_ASGR_v_neurons_v ')
        h(' { v_ASGR_v_neurons_v = new Vector() } ')
        h(' { v_ASGR_v_neurons_v.record(&a_ASGR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASGR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASHL/0/ASHL/v
        h(' objectvar v_ASHL_v_neurons_v ')
        h(' { v_ASHL_v_neurons_v = new Vector() } ')
        h(' { v_ASHL_v_neurons_v.record(&a_ASHL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASHL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASHR/0/ASHR/v
        h(' objectvar v_ASHR_v_neurons_v ')
        h(' { v_ASHR_v_neurons_v = new Vector() } ')
        h(' { v_ASHR_v_neurons_v.record(&a_ASHR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASHR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASIL/0/ASIL/v
        h(' objectvar v_ASIL_v_neurons_v ')
        h(' { v_ASIL_v_neurons_v = new Vector() } ')
        h(' { v_ASIL_v_neurons_v.record(&a_ASIL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASIL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASIR/0/ASIR/v
        h(' objectvar v_ASIR_v_neurons_v ')
        h(' { v_ASIR_v_neurons_v = new Vector() } ')
        h(' { v_ASIR_v_neurons_v.record(&a_ASIR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASIR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASJL/0/ASJL/v
        h(' objectvar v_ASJL_v_neurons_v ')
        h(' { v_ASJL_v_neurons_v = new Vector() } ')
        h(' { v_ASJL_v_neurons_v.record(&a_ASJL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASJL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASJR/0/ASJR/v
        h(' objectvar v_ASJR_v_neurons_v ')
        h(' { v_ASJR_v_neurons_v = new Vector() } ')
        h(' { v_ASJR_v_neurons_v.record(&a_ASJR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASJR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASKL/0/ASKL/v
        h(' objectvar v_ASKL_v_neurons_v ')
        h(' { v_ASKL_v_neurons_v = new Vector() } ')
        h(' { v_ASKL_v_neurons_v.record(&a_ASKL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASKL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: ASKR/0/ASKR/v
        h(' objectvar v_ASKR_v_neurons_v ')
        h(' { v_ASKR_v_neurons_v = new Vector() } ')
        h(' { v_ASKR_v_neurons_v.record(&a_ASKR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_ASKR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AUAL/0/AUAL/v
        h(' objectvar v_AUAL_v_neurons_v ')
        h(' { v_AUAL_v_neurons_v = new Vector() } ')
        h(' { v_AUAL_v_neurons_v.record(&a_AUAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AUAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AUAR/0/AUAR/v
        h(' objectvar v_AUAR_v_neurons_v ')
        h(' { v_AUAR_v_neurons_v = new Vector() } ')
        h(' { v_AUAR_v_neurons_v.record(&a_AUAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AUAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVAL/0/AVAL/v
        h(' objectvar v_AVAL_v_neurons_v ')
        h(' { v_AVAL_v_neurons_v = new Vector() } ')
        h(' { v_AVAL_v_neurons_v.record(&a_AVAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVAR/0/AVAR/v
        h(' objectvar v_AVAR_v_neurons_v ')
        h(' { v_AVAR_v_neurons_v = new Vector() } ')
        h(' { v_AVAR_v_neurons_v.record(&a_AVAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVBL/0/AVBL/v
        h(' objectvar v_AVBL_v_neurons_v ')
        h(' { v_AVBL_v_neurons_v = new Vector() } ')
        h(' { v_AVBL_v_neurons_v.record(&a_AVBL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVBL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVBR/0/AVBR/v
        h(' objectvar v_AVBR_v_neurons_v ')
        h(' { v_AVBR_v_neurons_v = new Vector() } ')
        h(' { v_AVBR_v_neurons_v.record(&a_AVBR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVBR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVDL/0/AVDL/v
        h(' objectvar v_AVDL_v_neurons_v ')
        h(' { v_AVDL_v_neurons_v = new Vector() } ')
        h(' { v_AVDL_v_neurons_v.record(&a_AVDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVDR/0/AVDR/v
        h(' objectvar v_AVDR_v_neurons_v ')
        h(' { v_AVDR_v_neurons_v = new Vector() } ')
        h(' { v_AVDR_v_neurons_v.record(&a_AVDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVEL/0/AVEL/v
        h(' objectvar v_AVEL_v_neurons_v ')
        h(' { v_AVEL_v_neurons_v = new Vector() } ')
        h(' { v_AVEL_v_neurons_v.record(&a_AVEL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVEL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVER/0/AVER/v
        h(' objectvar v_AVER_v_neurons_v ')
        h(' { v_AVER_v_neurons_v = new Vector() } ')
        h(' { v_AVER_v_neurons_v.record(&a_AVER[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVER_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVFL/0/AVFL/v
        h(' objectvar v_AVFL_v_neurons_v ')
        h(' { v_AVFL_v_neurons_v = new Vector() } ')
        h(' { v_AVFL_v_neurons_v.record(&a_AVFL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVFL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVFR/0/AVFR/v
        h(' objectvar v_AVFR_v_neurons_v ')
        h(' { v_AVFR_v_neurons_v = new Vector() } ')
        h(' { v_AVFR_v_neurons_v.record(&a_AVFR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVFR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVG/0/AVG/v
        h(' objectvar v_AVG_v_neurons_v ')
        h(' { v_AVG_v_neurons_v = new Vector() } ')
        h(' { v_AVG_v_neurons_v.record(&a_AVG[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVG_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVHL/0/AVHL/v
        h(' objectvar v_AVHL_v_neurons_v ')
        h(' { v_AVHL_v_neurons_v = new Vector() } ')
        h(' { v_AVHL_v_neurons_v.record(&a_AVHL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVHL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVHR/0/AVHR/v
        h(' objectvar v_AVHR_v_neurons_v ')
        h(' { v_AVHR_v_neurons_v = new Vector() } ')
        h(' { v_AVHR_v_neurons_v.record(&a_AVHR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVHR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVJL/0/AVJL/v
        h(' objectvar v_AVJL_v_neurons_v ')
        h(' { v_AVJL_v_neurons_v = new Vector() } ')
        h(' { v_AVJL_v_neurons_v.record(&a_AVJL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVJL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVJR/0/AVJR/v
        h(' objectvar v_AVJR_v_neurons_v ')
        h(' { v_AVJR_v_neurons_v = new Vector() } ')
        h(' { v_AVJR_v_neurons_v.record(&a_AVJR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVJR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVKL/0/AVKL/v
        h(' objectvar v_AVKL_v_neurons_v ')
        h(' { v_AVKL_v_neurons_v = new Vector() } ')
        h(' { v_AVKL_v_neurons_v.record(&a_AVKL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVKL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVKR/0/AVKR/v
        h(' objectvar v_AVKR_v_neurons_v ')
        h(' { v_AVKR_v_neurons_v = new Vector() } ')
        h(' { v_AVKR_v_neurons_v.record(&a_AVKR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVKR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVL/0/AVL/v
        h(' objectvar v_AVL_v_neurons_v ')
        h(' { v_AVL_v_neurons_v = new Vector() } ')
        h(' { v_AVL_v_neurons_v.record(&a_AVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AVM/0/AVM/v
        h(' objectvar v_AVM_v_neurons_v ')
        h(' { v_AVM_v_neurons_v = new Vector() } ')
        h(' { v_AVM_v_neurons_v.record(&a_AVM[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AVM_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWAL/0/AWAL/v
        h(' objectvar v_AWAL_v_neurons_v ')
        h(' { v_AWAL_v_neurons_v = new Vector() } ')
        h(' { v_AWAL_v_neurons_v.record(&a_AWAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWAR/0/AWAR/v
        h(' objectvar v_AWAR_v_neurons_v ')
        h(' { v_AWAR_v_neurons_v = new Vector() } ')
        h(' { v_AWAR_v_neurons_v.record(&a_AWAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWBL/0/AWBL/v
        h(' objectvar v_AWBL_v_neurons_v ')
        h(' { v_AWBL_v_neurons_v = new Vector() } ')
        h(' { v_AWBL_v_neurons_v.record(&a_AWBL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWBL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWBR/0/AWBR/v
        h(' objectvar v_AWBR_v_neurons_v ')
        h(' { v_AWBR_v_neurons_v = new Vector() } ')
        h(' { v_AWBR_v_neurons_v.record(&a_AWBR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWBR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWCL/0/AWCL/v
        h(' objectvar v_AWCL_v_neurons_v ')
        h(' { v_AWCL_v_neurons_v = new Vector() } ')
        h(' { v_AWCL_v_neurons_v.record(&a_AWCL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWCL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: AWCR/0/AWCR/v
        h(' objectvar v_AWCR_v_neurons_v ')
        h(' { v_AWCR_v_neurons_v = new Vector() } ')
        h(' { v_AWCR_v_neurons_v.record(&a_AWCR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_AWCR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BAGL/0/BAGL/v
        h(' objectvar v_BAGL_v_neurons_v ')
        h(' { v_BAGL_v_neurons_v = new Vector() } ')
        h(' { v_BAGL_v_neurons_v.record(&a_BAGL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BAGL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BAGR/0/BAGR/v
        h(' objectvar v_BAGR_v_neurons_v ')
        h(' { v_BAGR_v_neurons_v = new Vector() } ')
        h(' { v_BAGR_v_neurons_v.record(&a_BAGR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BAGR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BDUL/0/BDUL/v
        h(' objectvar v_BDUL_v_neurons_v ')
        h(' { v_BDUL_v_neurons_v = new Vector() } ')
        h(' { v_BDUL_v_neurons_v.record(&a_BDUL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BDUL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: BDUR/0/BDUR/v
        h(' objectvar v_BDUR_v_neurons_v ')
        h(' { v_BDUR_v_neurons_v = new Vector() } ')
        h(' { v_BDUR_v_neurons_v.record(&a_BDUR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_BDUR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CANL/0/CANL/v
        h(' objectvar v_CANL_v_neurons_v ')
        h(' { v_CANL_v_neurons_v = new Vector() } ')
        h(' { v_CANL_v_neurons_v.record(&a_CANL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CANL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CANR/0/CANR/v
        h(' objectvar v_CANR_v_neurons_v ')
        h(' { v_CANR_v_neurons_v = new Vector() } ')
        h(' { v_CANR_v_neurons_v.record(&a_CANR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CANR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPDL/0/CEPDL/v
        h(' objectvar v_CEPDL_v_neurons_v ')
        h(' { v_CEPDL_v_neurons_v = new Vector() } ')
        h(' { v_CEPDL_v_neurons_v.record(&a_CEPDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPDR/0/CEPDR/v
        h(' objectvar v_CEPDR_v_neurons_v ')
        h(' { v_CEPDR_v_neurons_v = new Vector() } ')
        h(' { v_CEPDR_v_neurons_v.record(&a_CEPDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPVL/0/CEPVL/v
        h(' objectvar v_CEPVL_v_neurons_v ')
        h(' { v_CEPVL_v_neurons_v = new Vector() } ')
        h(' { v_CEPVL_v_neurons_v.record(&a_CEPVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: CEPVR/0/CEPVR/v
        h(' objectvar v_CEPVR_v_neurons_v ')
        h(' { v_CEPVR_v_neurons_v = new Vector() } ')
        h(' { v_CEPVR_v_neurons_v.record(&a_CEPVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_CEPVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA1/0/DA1/v
        h(' objectvar v_DA1_v_neurons_v ')
        h(' { v_DA1_v_neurons_v = new Vector() } ')
        h(' { v_DA1_v_neurons_v.record(&a_DA1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA2/0/DA2/v
        h(' objectvar v_DA2_v_neurons_v ')
        h(' { v_DA2_v_neurons_v = new Vector() } ')
        h(' { v_DA2_v_neurons_v.record(&a_DA2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA3/0/DA3/v
        h(' objectvar v_DA3_v_neurons_v ')
        h(' { v_DA3_v_neurons_v = new Vector() } ')
        h(' { v_DA3_v_neurons_v.record(&a_DA3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA4/0/DA4/v
        h(' objectvar v_DA4_v_neurons_v ')
        h(' { v_DA4_v_neurons_v = new Vector() } ')
        h(' { v_DA4_v_neurons_v.record(&a_DA4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA5/0/DA5/v
        h(' objectvar v_DA5_v_neurons_v ')
        h(' { v_DA5_v_neurons_v = new Vector() } ')
        h(' { v_DA5_v_neurons_v.record(&a_DA5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA6/0/DA6/v
        h(' objectvar v_DA6_v_neurons_v ')
        h(' { v_DA6_v_neurons_v = new Vector() } ')
        h(' { v_DA6_v_neurons_v.record(&a_DA6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA7/0/DA7/v
        h(' objectvar v_DA7_v_neurons_v ')
        h(' { v_DA7_v_neurons_v = new Vector() } ')
        h(' { v_DA7_v_neurons_v.record(&a_DA7[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA7_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA8/0/DA8/v
        h(' objectvar v_DA8_v_neurons_v ')
        h(' { v_DA8_v_neurons_v = new Vector() } ')
        h(' { v_DA8_v_neurons_v.record(&a_DA8[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA8_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DA9/0/DA9/v
        h(' objectvar v_DA9_v_neurons_v ')
        h(' { v_DA9_v_neurons_v = new Vector() } ')
        h(' { v_DA9_v_neurons_v.record(&a_DA9[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DA9_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB1/0/DB1/v
        h(' objectvar v_DB1_v_neurons_v ')
        h(' { v_DB1_v_neurons_v = new Vector() } ')
        h(' { v_DB1_v_neurons_v.record(&a_DB1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB2/0/DB2/v
        h(' objectvar v_DB2_v_neurons_v ')
        h(' { v_DB2_v_neurons_v = new Vector() } ')
        h(' { v_DB2_v_neurons_v.record(&a_DB2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB3/0/DB3/v
        h(' objectvar v_DB3_v_neurons_v ')
        h(' { v_DB3_v_neurons_v = new Vector() } ')
        h(' { v_DB3_v_neurons_v.record(&a_DB3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB4/0/DB4/v
        h(' objectvar v_DB4_v_neurons_v ')
        h(' { v_DB4_v_neurons_v = new Vector() } ')
        h(' { v_DB4_v_neurons_v.record(&a_DB4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB5/0/DB5/v
        h(' objectvar v_DB5_v_neurons_v ')
        h(' { v_DB5_v_neurons_v = new Vector() } ')
        h(' { v_DB5_v_neurons_v.record(&a_DB5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB6/0/DB6/v
        h(' objectvar v_DB6_v_neurons_v ')
        h(' { v_DB6_v_neurons_v = new Vector() } ')
        h(' { v_DB6_v_neurons_v.record(&a_DB6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DB7/0/DB7/v
        h(' objectvar v_DB7_v_neurons_v ')
        h(' { v_DB7_v_neurons_v = new Vector() } ')
        h(' { v_DB7_v_neurons_v.record(&a_DB7[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DB7_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD1/0/DD1/v
        h(' objectvar v_DD1_v_neurons_v ')
        h(' { v_DD1_v_neurons_v = new Vector() } ')
        h(' { v_DD1_v_neurons_v.record(&a_DD1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD2/0/DD2/v
        h(' objectvar v_DD2_v_neurons_v ')
        h(' { v_DD2_v_neurons_v = new Vector() } ')
        h(' { v_DD2_v_neurons_v.record(&a_DD2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD3/0/DD3/v
        h(' objectvar v_DD3_v_neurons_v ')
        h(' { v_DD3_v_neurons_v = new Vector() } ')
        h(' { v_DD3_v_neurons_v.record(&a_DD3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD4/0/DD4/v
        h(' objectvar v_DD4_v_neurons_v ')
        h(' { v_DD4_v_neurons_v = new Vector() } ')
        h(' { v_DD4_v_neurons_v.record(&a_DD4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD5/0/DD5/v
        h(' objectvar v_DD5_v_neurons_v ')
        h(' { v_DD5_v_neurons_v = new Vector() } ')
        h(' { v_DD5_v_neurons_v.record(&a_DD5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DD6/0/DD6/v
        h(' objectvar v_DD6_v_neurons_v ')
        h(' { v_DD6_v_neurons_v = new Vector() } ')
        h(' { v_DD6_v_neurons_v.record(&a_DD6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DD6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DVA/0/DVA/v
        h(' objectvar v_DVA_v_neurons_v ')
        h(' { v_DVA_v_neurons_v = new Vector() } ')
        h(' { v_DVA_v_neurons_v.record(&a_DVA[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DVA_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DVB/0/DVB/v
        h(' objectvar v_DVB_v_neurons_v ')
        h(' { v_DVB_v_neurons_v = new Vector() } ')
        h(' { v_DVB_v_neurons_v.record(&a_DVB[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DVB_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: DVC/0/DVC/v
        h(' objectvar v_DVC_v_neurons_v ')
        h(' { v_DVC_v_neurons_v = new Vector() } ')
        h(' { v_DVC_v_neurons_v.record(&a_DVC[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_DVC_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: FLPL/0/FLPL/v
        h(' objectvar v_FLPL_v_neurons_v ')
        h(' { v_FLPL_v_neurons_v = new Vector() } ')
        h(' { v_FLPL_v_neurons_v.record(&a_FLPL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_FLPL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: FLPR/0/FLPR/v
        h(' objectvar v_FLPR_v_neurons_v ')
        h(' { v_FLPR_v_neurons_v = new Vector() } ')
        h(' { v_FLPR_v_neurons_v.record(&a_FLPR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_FLPR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: HSNL/0/HSNL/v
        h(' objectvar v_HSNL_v_neurons_v ')
        h(' { v_HSNL_v_neurons_v = new Vector() } ')
        h(' { v_HSNL_v_neurons_v.record(&a_HSNL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_HSNL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: HSNR/0/HSNR/v
        h(' objectvar v_HSNR_v_neurons_v ')
        h(' { v_HSNR_v_neurons_v = new Vector() } ')
        h(' { v_HSNR_v_neurons_v.record(&a_HSNR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_HSNR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I1L/0/I1L/v
        h(' objectvar v_I1L_v_neurons_v ')
        h(' { v_I1L_v_neurons_v = new Vector() } ')
        h(' { v_I1L_v_neurons_v.record(&a_I1L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I1L_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I1R/0/I1R/v
        h(' objectvar v_I1R_v_neurons_v ')
        h(' { v_I1R_v_neurons_v = new Vector() } ')
        h(' { v_I1R_v_neurons_v.record(&a_I1R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I1R_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I2L/0/I2L/v
        h(' objectvar v_I2L_v_neurons_v ')
        h(' { v_I2L_v_neurons_v = new Vector() } ')
        h(' { v_I2L_v_neurons_v.record(&a_I2L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I2L_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I2R/0/I2R/v
        h(' objectvar v_I2R_v_neurons_v ')
        h(' { v_I2R_v_neurons_v = new Vector() } ')
        h(' { v_I2R_v_neurons_v.record(&a_I2R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I2R_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I3/0/I3/v
        h(' objectvar v_I3_v_neurons_v ')
        h(' { v_I3_v_neurons_v = new Vector() } ')
        h(' { v_I3_v_neurons_v.record(&a_I3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I4/0/I4/v
        h(' objectvar v_I4_v_neurons_v ')
        h(' { v_I4_v_neurons_v = new Vector() } ')
        h(' { v_I4_v_neurons_v.record(&a_I4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I5/0/I5/v
        h(' objectvar v_I5_v_neurons_v ')
        h(' { v_I5_v_neurons_v = new Vector() } ')
        h(' { v_I5_v_neurons_v.record(&a_I5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: I6/0/I6/v
        h(' objectvar v_I6_v_neurons_v ')
        h(' { v_I6_v_neurons_v = new Vector() } ')
        h(' { v_I6_v_neurons_v.record(&a_I6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_I6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1DL/0/IL1DL/v
        h(' objectvar v_IL1DL_v_neurons_v ')
        h(' { v_IL1DL_v_neurons_v = new Vector() } ')
        h(' { v_IL1DL_v_neurons_v.record(&a_IL1DL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1DL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1DR/0/IL1DR/v
        h(' objectvar v_IL1DR_v_neurons_v ')
        h(' { v_IL1DR_v_neurons_v = new Vector() } ')
        h(' { v_IL1DR_v_neurons_v.record(&a_IL1DR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1DR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1L/0/IL1L/v
        h(' objectvar v_IL1L_v_neurons_v ')
        h(' { v_IL1L_v_neurons_v = new Vector() } ')
        h(' { v_IL1L_v_neurons_v.record(&a_IL1L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1L_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1R/0/IL1R/v
        h(' objectvar v_IL1R_v_neurons_v ')
        h(' { v_IL1R_v_neurons_v = new Vector() } ')
        h(' { v_IL1R_v_neurons_v.record(&a_IL1R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1R_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1VL/0/IL1VL/v
        h(' objectvar v_IL1VL_v_neurons_v ')
        h(' { v_IL1VL_v_neurons_v = new Vector() } ')
        h(' { v_IL1VL_v_neurons_v.record(&a_IL1VL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1VL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL1VR/0/IL1VR/v
        h(' objectvar v_IL1VR_v_neurons_v ')
        h(' { v_IL1VR_v_neurons_v = new Vector() } ')
        h(' { v_IL1VR_v_neurons_v.record(&a_IL1VR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL1VR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2DL/0/IL2DL/v
        h(' objectvar v_IL2DL_v_neurons_v ')
        h(' { v_IL2DL_v_neurons_v = new Vector() } ')
        h(' { v_IL2DL_v_neurons_v.record(&a_IL2DL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2DL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2DR/0/IL2DR/v
        h(' objectvar v_IL2DR_v_neurons_v ')
        h(' { v_IL2DR_v_neurons_v = new Vector() } ')
        h(' { v_IL2DR_v_neurons_v.record(&a_IL2DR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2DR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2L/0/IL2L/v
        h(' objectvar v_IL2L_v_neurons_v ')
        h(' { v_IL2L_v_neurons_v = new Vector() } ')
        h(' { v_IL2L_v_neurons_v.record(&a_IL2L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2L_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2R/0/IL2R/v
        h(' objectvar v_IL2R_v_neurons_v ')
        h(' { v_IL2R_v_neurons_v = new Vector() } ')
        h(' { v_IL2R_v_neurons_v.record(&a_IL2R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2R_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2VL/0/IL2VL/v
        h(' objectvar v_IL2VL_v_neurons_v ')
        h(' { v_IL2VL_v_neurons_v = new Vector() } ')
        h(' { v_IL2VL_v_neurons_v.record(&a_IL2VL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2VL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: IL2VR/0/IL2VR/v
        h(' objectvar v_IL2VR_v_neurons_v ')
        h(' { v_IL2VR_v_neurons_v = new Vector() } ')
        h(' { v_IL2VR_v_neurons_v.record(&a_IL2VR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_IL2VR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: LUAL/0/LUAL/v
        h(' objectvar v_LUAL_v_neurons_v ')
        h(' { v_LUAL_v_neurons_v = new Vector() } ')
        h(' { v_LUAL_v_neurons_v.record(&a_LUAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_LUAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: LUAR/0/LUAR/v
        h(' objectvar v_LUAR_v_neurons_v ')
        h(' { v_LUAR_v_neurons_v = new Vector() } ')
        h(' { v_LUAR_v_neurons_v.record(&a_LUAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_LUAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M1/0/M1/v
        h(' objectvar v_M1_v_neurons_v ')
        h(' { v_M1_v_neurons_v = new Vector() } ')
        h(' { v_M1_v_neurons_v.record(&a_M1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M2L/0/M2L/v
        h(' objectvar v_M2L_v_neurons_v ')
        h(' { v_M2L_v_neurons_v = new Vector() } ')
        h(' { v_M2L_v_neurons_v.record(&a_M2L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M2L_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M2R/0/M2R/v
        h(' objectvar v_M2R_v_neurons_v ')
        h(' { v_M2R_v_neurons_v = new Vector() } ')
        h(' { v_M2R_v_neurons_v.record(&a_M2R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M2R_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M3L/0/M3L/v
        h(' objectvar v_M3L_v_neurons_v ')
        h(' { v_M3L_v_neurons_v = new Vector() } ')
        h(' { v_M3L_v_neurons_v.record(&a_M3L[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M3L_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M3R/0/M3R/v
        h(' objectvar v_M3R_v_neurons_v ')
        h(' { v_M3R_v_neurons_v = new Vector() } ')
        h(' { v_M3R_v_neurons_v.record(&a_M3R[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M3R_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M4/0/M4/v
        h(' objectvar v_M4_v_neurons_v ')
        h(' { v_M4_v_neurons_v = new Vector() } ')
        h(' { v_M4_v_neurons_v.record(&a_M4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: M5/0/M5/v
        h(' objectvar v_M5_v_neurons_v ')
        h(' { v_M5_v_neurons_v = new Vector() } ')
        h(' { v_M5_v_neurons_v.record(&a_M5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_M5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MCL/0/MCL/v
        h(' objectvar v_MCL_v_neurons_v ')
        h(' { v_MCL_v_neurons_v = new Vector() } ')
        h(' { v_MCL_v_neurons_v.record(&a_MCL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MCL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MCR/0/MCR/v
        h(' objectvar v_MCR_v_neurons_v ')
        h(' { v_MCR_v_neurons_v = new Vector() } ')
        h(' { v_MCR_v_neurons_v.record(&a_MCR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MCR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: MI/0/MI/v
        h(' objectvar v_MI_v_neurons_v ')
        h(' { v_MI_v_neurons_v = new Vector() } ')
        h(' { v_MI_v_neurons_v.record(&a_MI[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_MI_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: NSML/0/NSML/v
        h(' objectvar v_NSML_v_neurons_v ')
        h(' { v_NSML_v_neurons_v = new Vector() } ')
        h(' { v_NSML_v_neurons_v.record(&a_NSML[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_NSML_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: NSMR/0/NSMR/v
        h(' objectvar v_NSMR_v_neurons_v ')
        h(' { v_NSMR_v_neurons_v = new Vector() } ')
        h(' { v_NSMR_v_neurons_v.record(&a_NSMR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_NSMR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLLL/0/OLLL/v
        h(' objectvar v_OLLL_v_neurons_v ')
        h(' { v_OLLL_v_neurons_v = new Vector() } ')
        h(' { v_OLLL_v_neurons_v.record(&a_OLLL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLLL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLLR/0/OLLR/v
        h(' objectvar v_OLLR_v_neurons_v ')
        h(' { v_OLLR_v_neurons_v = new Vector() } ')
        h(' { v_OLLR_v_neurons_v.record(&a_OLLR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLLR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQDL/0/OLQDL/v
        h(' objectvar v_OLQDL_v_neurons_v ')
        h(' { v_OLQDL_v_neurons_v = new Vector() } ')
        h(' { v_OLQDL_v_neurons_v.record(&a_OLQDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQDR/0/OLQDR/v
        h(' objectvar v_OLQDR_v_neurons_v ')
        h(' { v_OLQDR_v_neurons_v = new Vector() } ')
        h(' { v_OLQDR_v_neurons_v.record(&a_OLQDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQVL/0/OLQVL/v
        h(' objectvar v_OLQVL_v_neurons_v ')
        h(' { v_OLQVL_v_neurons_v = new Vector() } ')
        h(' { v_OLQVL_v_neurons_v.record(&a_OLQVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: OLQVR/0/OLQVR/v
        h(' objectvar v_OLQVR_v_neurons_v ')
        h(' { v_OLQVR_v_neurons_v = new Vector() } ')
        h(' { v_OLQVR_v_neurons_v.record(&a_OLQVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_OLQVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDA/0/PDA/v
        h(' objectvar v_PDA_v_neurons_v ')
        h(' { v_PDA_v_neurons_v = new Vector() } ')
        h(' { v_PDA_v_neurons_v.record(&a_PDA[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDA_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDB/0/PDB/v
        h(' objectvar v_PDB_v_neurons_v ')
        h(' { v_PDB_v_neurons_v = new Vector() } ')
        h(' { v_PDB_v_neurons_v.record(&a_PDB[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDB_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDEL/0/PDEL/v
        h(' objectvar v_PDEL_v_neurons_v ')
        h(' { v_PDEL_v_neurons_v = new Vector() } ')
        h(' { v_PDEL_v_neurons_v.record(&a_PDEL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDEL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PDER/0/PDER/v
        h(' objectvar v_PDER_v_neurons_v ')
        h(' { v_PDER_v_neurons_v = new Vector() } ')
        h(' { v_PDER_v_neurons_v.record(&a_PDER[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PDER_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHAL/0/PHAL/v
        h(' objectvar v_PHAL_v_neurons_v ')
        h(' { v_PHAL_v_neurons_v = new Vector() } ')
        h(' { v_PHAL_v_neurons_v.record(&a_PHAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHAR/0/PHAR/v
        h(' objectvar v_PHAR_v_neurons_v ')
        h(' { v_PHAR_v_neurons_v = new Vector() } ')
        h(' { v_PHAR_v_neurons_v.record(&a_PHAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHBL/0/PHBL/v
        h(' objectvar v_PHBL_v_neurons_v ')
        h(' { v_PHBL_v_neurons_v = new Vector() } ')
        h(' { v_PHBL_v_neurons_v.record(&a_PHBL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHBL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHBR/0/PHBR/v
        h(' objectvar v_PHBR_v_neurons_v ')
        h(' { v_PHBR_v_neurons_v = new Vector() } ')
        h(' { v_PHBR_v_neurons_v.record(&a_PHBR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHBR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHCL/0/PHCL/v
        h(' objectvar v_PHCL_v_neurons_v ')
        h(' { v_PHCL_v_neurons_v = new Vector() } ')
        h(' { v_PHCL_v_neurons_v.record(&a_PHCL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHCL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PHCR/0/PHCR/v
        h(' objectvar v_PHCR_v_neurons_v ')
        h(' { v_PHCR_v_neurons_v = new Vector() } ')
        h(' { v_PHCR_v_neurons_v.record(&a_PHCR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PHCR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLML/0/PLML/v
        h(' objectvar v_PLML_v_neurons_v ')
        h(' { v_PLML_v_neurons_v = new Vector() } ')
        h(' { v_PLML_v_neurons_v.record(&a_PLML[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLML_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLMR/0/PLMR/v
        h(' objectvar v_PLMR_v_neurons_v ')
        h(' { v_PLMR_v_neurons_v = new Vector() } ')
        h(' { v_PLMR_v_neurons_v.record(&a_PLMR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLMR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLNL/0/PLNL/v
        h(' objectvar v_PLNL_v_neurons_v ')
        h(' { v_PLNL_v_neurons_v = new Vector() } ')
        h(' { v_PLNL_v_neurons_v.record(&a_PLNL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLNL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PLNR/0/PLNR/v
        h(' objectvar v_PLNR_v_neurons_v ')
        h(' { v_PLNR_v_neurons_v = new Vector() } ')
        h(' { v_PLNR_v_neurons_v.record(&a_PLNR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PLNR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PQR/0/PQR/v
        h(' objectvar v_PQR_v_neurons_v ')
        h(' { v_PQR_v_neurons_v = new Vector() } ')
        h(' { v_PQR_v_neurons_v.record(&a_PQR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PQR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVCL/0/PVCL/v
        h(' objectvar v_PVCL_v_neurons_v ')
        h(' { v_PVCL_v_neurons_v = new Vector() } ')
        h(' { v_PVCL_v_neurons_v.record(&a_PVCL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVCL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVCR/0/PVCR/v
        h(' objectvar v_PVCR_v_neurons_v ')
        h(' { v_PVCR_v_neurons_v = new Vector() } ')
        h(' { v_PVCR_v_neurons_v.record(&a_PVCR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVCR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVDL/0/PVDL/v
        h(' objectvar v_PVDL_v_neurons_v ')
        h(' { v_PVDL_v_neurons_v = new Vector() } ')
        h(' { v_PVDL_v_neurons_v.record(&a_PVDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVDR/0/PVDR/v
        h(' objectvar v_PVDR_v_neurons_v ')
        h(' { v_PVDR_v_neurons_v = new Vector() } ')
        h(' { v_PVDR_v_neurons_v.record(&a_PVDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVM/0/PVM/v
        h(' objectvar v_PVM_v_neurons_v ')
        h(' { v_PVM_v_neurons_v = new Vector() } ')
        h(' { v_PVM_v_neurons_v.record(&a_PVM[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVM_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVNL/0/PVNL/v
        h(' objectvar v_PVNL_v_neurons_v ')
        h(' { v_PVNL_v_neurons_v = new Vector() } ')
        h(' { v_PVNL_v_neurons_v.record(&a_PVNL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVNL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVNR/0/PVNR/v
        h(' objectvar v_PVNR_v_neurons_v ')
        h(' { v_PVNR_v_neurons_v = new Vector() } ')
        h(' { v_PVNR_v_neurons_v.record(&a_PVNR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVNR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVPL/0/PVPL/v
        h(' objectvar v_PVPL_v_neurons_v ')
        h(' { v_PVPL_v_neurons_v = new Vector() } ')
        h(' { v_PVPL_v_neurons_v.record(&a_PVPL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVPL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVPR/0/PVPR/v
        h(' objectvar v_PVPR_v_neurons_v ')
        h(' { v_PVPR_v_neurons_v = new Vector() } ')
        h(' { v_PVPR_v_neurons_v.record(&a_PVPR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVPR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVQL/0/PVQL/v
        h(' objectvar v_PVQL_v_neurons_v ')
        h(' { v_PVQL_v_neurons_v = new Vector() } ')
        h(' { v_PVQL_v_neurons_v.record(&a_PVQL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVQL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVQR/0/PVQR/v
        h(' objectvar v_PVQR_v_neurons_v ')
        h(' { v_PVQR_v_neurons_v = new Vector() } ')
        h(' { v_PVQR_v_neurons_v.record(&a_PVQR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVQR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVR/0/PVR/v
        h(' objectvar v_PVR_v_neurons_v ')
        h(' { v_PVR_v_neurons_v = new Vector() } ')
        h(' { v_PVR_v_neurons_v.record(&a_PVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVT/0/PVT/v
        h(' objectvar v_PVT_v_neurons_v ')
        h(' { v_PVT_v_neurons_v = new Vector() } ')
        h(' { v_PVT_v_neurons_v.record(&a_PVT[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVT_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVWL/0/PVWL/v
        h(' objectvar v_PVWL_v_neurons_v ')
        h(' { v_PVWL_v_neurons_v = new Vector() } ')
        h(' { v_PVWL_v_neurons_v.record(&a_PVWL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVWL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: PVWR/0/PVWR/v
        h(' objectvar v_PVWR_v_neurons_v ')
        h(' { v_PVWR_v_neurons_v = new Vector() } ')
        h(' { v_PVWR_v_neurons_v.record(&a_PVWR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_PVWR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIAL/0/RIAL/v
        h(' objectvar v_RIAL_v_neurons_v ')
        h(' { v_RIAL_v_neurons_v = new Vector() } ')
        h(' { v_RIAL_v_neurons_v.record(&a_RIAL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIAL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIAR/0/RIAR/v
        h(' objectvar v_RIAR_v_neurons_v ')
        h(' { v_RIAR_v_neurons_v = new Vector() } ')
        h(' { v_RIAR_v_neurons_v.record(&a_RIAR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIAR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIBL/0/RIBL/v
        h(' objectvar v_RIBL_v_neurons_v ')
        h(' { v_RIBL_v_neurons_v = new Vector() } ')
        h(' { v_RIBL_v_neurons_v.record(&a_RIBL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIBL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIBR/0/RIBR/v
        h(' objectvar v_RIBR_v_neurons_v ')
        h(' { v_RIBR_v_neurons_v = new Vector() } ')
        h(' { v_RIBR_v_neurons_v.record(&a_RIBR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIBR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RICL/0/RICL/v
        h(' objectvar v_RICL_v_neurons_v ')
        h(' { v_RICL_v_neurons_v = new Vector() } ')
        h(' { v_RICL_v_neurons_v.record(&a_RICL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RICL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RICR/0/RICR/v
        h(' objectvar v_RICR_v_neurons_v ')
        h(' { v_RICR_v_neurons_v = new Vector() } ')
        h(' { v_RICR_v_neurons_v.record(&a_RICR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RICR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RID/0/RID/v
        h(' objectvar v_RID_v_neurons_v ')
        h(' { v_RID_v_neurons_v = new Vector() } ')
        h(' { v_RID_v_neurons_v.record(&a_RID[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RID_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIFL/0/RIFL/v
        h(' objectvar v_RIFL_v_neurons_v ')
        h(' { v_RIFL_v_neurons_v = new Vector() } ')
        h(' { v_RIFL_v_neurons_v.record(&a_RIFL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIFL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIFR/0/RIFR/v
        h(' objectvar v_RIFR_v_neurons_v ')
        h(' { v_RIFR_v_neurons_v = new Vector() } ')
        h(' { v_RIFR_v_neurons_v.record(&a_RIFR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIFR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIGL/0/RIGL/v
        h(' objectvar v_RIGL_v_neurons_v ')
        h(' { v_RIGL_v_neurons_v = new Vector() } ')
        h(' { v_RIGL_v_neurons_v.record(&a_RIGL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIGL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIGR/0/RIGR/v
        h(' objectvar v_RIGR_v_neurons_v ')
        h(' { v_RIGR_v_neurons_v = new Vector() } ')
        h(' { v_RIGR_v_neurons_v.record(&a_RIGR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIGR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIH/0/RIH/v
        h(' objectvar v_RIH_v_neurons_v ')
        h(' { v_RIH_v_neurons_v = new Vector() } ')
        h(' { v_RIH_v_neurons_v.record(&a_RIH[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIH_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIML/0/RIML/v
        h(' objectvar v_RIML_v_neurons_v ')
        h(' { v_RIML_v_neurons_v = new Vector() } ')
        h(' { v_RIML_v_neurons_v.record(&a_RIML[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIML_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIMR/0/RIMR/v
        h(' objectvar v_RIMR_v_neurons_v ')
        h(' { v_RIMR_v_neurons_v = new Vector() } ')
        h(' { v_RIMR_v_neurons_v.record(&a_RIMR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIMR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIPL/0/RIPL/v
        h(' objectvar v_RIPL_v_neurons_v ')
        h(' { v_RIPL_v_neurons_v = new Vector() } ')
        h(' { v_RIPL_v_neurons_v.record(&a_RIPL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIPL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIPR/0/RIPR/v
        h(' objectvar v_RIPR_v_neurons_v ')
        h(' { v_RIPR_v_neurons_v = new Vector() } ')
        h(' { v_RIPR_v_neurons_v.record(&a_RIPR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIPR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIR/0/RIR/v
        h(' objectvar v_RIR_v_neurons_v ')
        h(' { v_RIR_v_neurons_v = new Vector() } ')
        h(' { v_RIR_v_neurons_v.record(&a_RIR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIS/0/RIS/v
        h(' objectvar v_RIS_v_neurons_v ')
        h(' { v_RIS_v_neurons_v = new Vector() } ')
        h(' { v_RIS_v_neurons_v.record(&a_RIS[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIS_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIVL/0/RIVL/v
        h(' objectvar v_RIVL_v_neurons_v ')
        h(' { v_RIVL_v_neurons_v = new Vector() } ')
        h(' { v_RIVL_v_neurons_v.record(&a_RIVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RIVR/0/RIVR/v
        h(' objectvar v_RIVR_v_neurons_v ')
        h(' { v_RIVR_v_neurons_v = new Vector() } ')
        h(' { v_RIVR_v_neurons_v.record(&a_RIVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RIVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDDL/0/RMDDL/v
        h(' objectvar v_RMDDL_v_neurons_v ')
        h(' { v_RMDDL_v_neurons_v = new Vector() } ')
        h(' { v_RMDDL_v_neurons_v.record(&a_RMDDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDDR/0/RMDDR/v
        h(' objectvar v_RMDDR_v_neurons_v ')
        h(' { v_RMDDR_v_neurons_v = new Vector() } ')
        h(' { v_RMDDR_v_neurons_v.record(&a_RMDDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDL/0/RMDL/v
        h(' objectvar v_RMDL_v_neurons_v ')
        h(' { v_RMDL_v_neurons_v = new Vector() } ')
        h(' { v_RMDL_v_neurons_v.record(&a_RMDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDR/0/RMDR/v
        h(' objectvar v_RMDR_v_neurons_v ')
        h(' { v_RMDR_v_neurons_v = new Vector() } ')
        h(' { v_RMDR_v_neurons_v.record(&a_RMDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDVL/0/RMDVL/v
        h(' objectvar v_RMDVL_v_neurons_v ')
        h(' { v_RMDVL_v_neurons_v = new Vector() } ')
        h(' { v_RMDVL_v_neurons_v.record(&a_RMDVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMDVR/0/RMDVR/v
        h(' objectvar v_RMDVR_v_neurons_v ')
        h(' { v_RMDVR_v_neurons_v = new Vector() } ')
        h(' { v_RMDVR_v_neurons_v.record(&a_RMDVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMDVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMED/0/RMED/v
        h(' objectvar v_RMED_v_neurons_v ')
        h(' { v_RMED_v_neurons_v = new Vector() } ')
        h(' { v_RMED_v_neurons_v.record(&a_RMED[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMED_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMEL/0/RMEL/v
        h(' objectvar v_RMEL_v_neurons_v ')
        h(' { v_RMEL_v_neurons_v = new Vector() } ')
        h(' { v_RMEL_v_neurons_v.record(&a_RMEL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMEL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMER/0/RMER/v
        h(' objectvar v_RMER_v_neurons_v ')
        h(' { v_RMER_v_neurons_v = new Vector() } ')
        h(' { v_RMER_v_neurons_v.record(&a_RMER[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMER_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMEV/0/RMEV/v
        h(' objectvar v_RMEV_v_neurons_v ')
        h(' { v_RMEV_v_neurons_v = new Vector() } ')
        h(' { v_RMEV_v_neurons_v.record(&a_RMEV[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMEV_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMFL/0/RMFL/v
        h(' objectvar v_RMFL_v_neurons_v ')
        h(' { v_RMFL_v_neurons_v = new Vector() } ')
        h(' { v_RMFL_v_neurons_v.record(&a_RMFL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMFL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMFR/0/RMFR/v
        h(' objectvar v_RMFR_v_neurons_v ')
        h(' { v_RMFR_v_neurons_v = new Vector() } ')
        h(' { v_RMFR_v_neurons_v.record(&a_RMFR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMFR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMGL/0/RMGL/v
        h(' objectvar v_RMGL_v_neurons_v ')
        h(' { v_RMGL_v_neurons_v = new Vector() } ')
        h(' { v_RMGL_v_neurons_v.record(&a_RMGL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMGL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMGR/0/RMGR/v
        h(' objectvar v_RMGR_v_neurons_v ')
        h(' { v_RMGR_v_neurons_v = new Vector() } ')
        h(' { v_RMGR_v_neurons_v.record(&a_RMGR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMGR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMHL/0/RMHL/v
        h(' objectvar v_RMHL_v_neurons_v ')
        h(' { v_RMHL_v_neurons_v = new Vector() } ')
        h(' { v_RMHL_v_neurons_v.record(&a_RMHL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMHL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: RMHR/0/RMHR/v
        h(' objectvar v_RMHR_v_neurons_v ')
        h(' { v_RMHR_v_neurons_v = new Vector() } ')
        h(' { v_RMHR_v_neurons_v.record(&a_RMHR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_RMHR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAADL/0/SAADL/v
        h(' objectvar v_SAADL_v_neurons_v ')
        h(' { v_SAADL_v_neurons_v = new Vector() } ')
        h(' { v_SAADL_v_neurons_v.record(&a_SAADL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAADL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAADR/0/SAADR/v
        h(' objectvar v_SAADR_v_neurons_v ')
        h(' { v_SAADR_v_neurons_v = new Vector() } ')
        h(' { v_SAADR_v_neurons_v.record(&a_SAADR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAADR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAAVL/0/SAAVL/v
        h(' objectvar v_SAAVL_v_neurons_v ')
        h(' { v_SAAVL_v_neurons_v = new Vector() } ')
        h(' { v_SAAVL_v_neurons_v.record(&a_SAAVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAAVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SAAVR/0/SAAVR/v
        h(' objectvar v_SAAVR_v_neurons_v ')
        h(' { v_SAAVR_v_neurons_v = new Vector() } ')
        h(' { v_SAAVR_v_neurons_v.record(&a_SAAVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SAAVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SABD/0/SABD/v
        h(' objectvar v_SABD_v_neurons_v ')
        h(' { v_SABD_v_neurons_v = new Vector() } ')
        h(' { v_SABD_v_neurons_v.record(&a_SABD[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SABD_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SABVL/0/SABVL/v
        h(' objectvar v_SABVL_v_neurons_v ')
        h(' { v_SABVL_v_neurons_v = new Vector() } ')
        h(' { v_SABVL_v_neurons_v.record(&a_SABVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SABVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SABVR/0/SABVR/v
        h(' objectvar v_SABVR_v_neurons_v ')
        h(' { v_SABVR_v_neurons_v = new Vector() } ')
        h(' { v_SABVR_v_neurons_v.record(&a_SABVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SABVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SDQL/0/SDQL/v
        h(' objectvar v_SDQL_v_neurons_v ')
        h(' { v_SDQL_v_neurons_v = new Vector() } ')
        h(' { v_SDQL_v_neurons_v.record(&a_SDQL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SDQL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SDQR/0/SDQR/v
        h(' objectvar v_SDQR_v_neurons_v ')
        h(' { v_SDQR_v_neurons_v = new Vector() } ')
        h(' { v_SDQR_v_neurons_v.record(&a_SDQR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SDQR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIADL/0/SIADL/v
        h(' objectvar v_SIADL_v_neurons_v ')
        h(' { v_SIADL_v_neurons_v = new Vector() } ')
        h(' { v_SIADL_v_neurons_v.record(&a_SIADL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIADL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIADR/0/SIADR/v
        h(' objectvar v_SIADR_v_neurons_v ')
        h(' { v_SIADR_v_neurons_v = new Vector() } ')
        h(' { v_SIADR_v_neurons_v.record(&a_SIADR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIADR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIAVL/0/SIAVL/v
        h(' objectvar v_SIAVL_v_neurons_v ')
        h(' { v_SIAVL_v_neurons_v = new Vector() } ')
        h(' { v_SIAVL_v_neurons_v.record(&a_SIAVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIAVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIAVR/0/SIAVR/v
        h(' objectvar v_SIAVR_v_neurons_v ')
        h(' { v_SIAVR_v_neurons_v = new Vector() } ')
        h(' { v_SIAVR_v_neurons_v.record(&a_SIAVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIAVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBDL/0/SIBDL/v
        h(' objectvar v_SIBDL_v_neurons_v ')
        h(' { v_SIBDL_v_neurons_v = new Vector() } ')
        h(' { v_SIBDL_v_neurons_v.record(&a_SIBDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBDR/0/SIBDR/v
        h(' objectvar v_SIBDR_v_neurons_v ')
        h(' { v_SIBDR_v_neurons_v = new Vector() } ')
        h(' { v_SIBDR_v_neurons_v.record(&a_SIBDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBVL/0/SIBVL/v
        h(' objectvar v_SIBVL_v_neurons_v ')
        h(' { v_SIBVL_v_neurons_v = new Vector() } ')
        h(' { v_SIBVL_v_neurons_v.record(&a_SIBVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SIBVR/0/SIBVR/v
        h(' objectvar v_SIBVR_v_neurons_v ')
        h(' { v_SIBVR_v_neurons_v = new Vector() } ')
        h(' { v_SIBVR_v_neurons_v.record(&a_SIBVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SIBVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBDL/0/SMBDL/v
        h(' objectvar v_SMBDL_v_neurons_v ')
        h(' { v_SMBDL_v_neurons_v = new Vector() } ')
        h(' { v_SMBDL_v_neurons_v.record(&a_SMBDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBDR/0/SMBDR/v
        h(' objectvar v_SMBDR_v_neurons_v ')
        h(' { v_SMBDR_v_neurons_v = new Vector() } ')
        h(' { v_SMBDR_v_neurons_v.record(&a_SMBDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBVL/0/SMBVL/v
        h(' objectvar v_SMBVL_v_neurons_v ')
        h(' { v_SMBVL_v_neurons_v = new Vector() } ')
        h(' { v_SMBVL_v_neurons_v.record(&a_SMBVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMBVR/0/SMBVR/v
        h(' objectvar v_SMBVR_v_neurons_v ')
        h(' { v_SMBVR_v_neurons_v = new Vector() } ')
        h(' { v_SMBVR_v_neurons_v.record(&a_SMBVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMBVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDDL/0/SMDDL/v
        h(' objectvar v_SMDDL_v_neurons_v ')
        h(' { v_SMDDL_v_neurons_v = new Vector() } ')
        h(' { v_SMDDL_v_neurons_v.record(&a_SMDDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDDR/0/SMDDR/v
        h(' objectvar v_SMDDR_v_neurons_v ')
        h(' { v_SMDDR_v_neurons_v = new Vector() } ')
        h(' { v_SMDDR_v_neurons_v.record(&a_SMDDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDVL/0/SMDVL/v
        h(' objectvar v_SMDVL_v_neurons_v ')
        h(' { v_SMDVL_v_neurons_v = new Vector() } ')
        h(' { v_SMDVL_v_neurons_v.record(&a_SMDVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: SMDVR/0/SMDVR/v
        h(' objectvar v_SMDVR_v_neurons_v ')
        h(' { v_SMDVR_v_neurons_v = new Vector() } ')
        h(' { v_SMDVR_v_neurons_v.record(&a_SMDVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_SMDVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URADL/0/URADL/v
        h(' objectvar v_URADL_v_neurons_v ')
        h(' { v_URADL_v_neurons_v = new Vector() } ')
        h(' { v_URADL_v_neurons_v.record(&a_URADL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URADL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URADR/0/URADR/v
        h(' objectvar v_URADR_v_neurons_v ')
        h(' { v_URADR_v_neurons_v = new Vector() } ')
        h(' { v_URADR_v_neurons_v.record(&a_URADR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URADR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URAVL/0/URAVL/v
        h(' objectvar v_URAVL_v_neurons_v ')
        h(' { v_URAVL_v_neurons_v = new Vector() } ')
        h(' { v_URAVL_v_neurons_v.record(&a_URAVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URAVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URAVR/0/URAVR/v
        h(' objectvar v_URAVR_v_neurons_v ')
        h(' { v_URAVR_v_neurons_v = new Vector() } ')
        h(' { v_URAVR_v_neurons_v.record(&a_URAVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URAVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URBL/0/URBL/v
        h(' objectvar v_URBL_v_neurons_v ')
        h(' { v_URBL_v_neurons_v = new Vector() } ')
        h(' { v_URBL_v_neurons_v.record(&a_URBL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URBL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URBR/0/URBR/v
        h(' objectvar v_URBR_v_neurons_v ')
        h(' { v_URBR_v_neurons_v = new Vector() } ')
        h(' { v_URBR_v_neurons_v.record(&a_URBR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URBR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URXL/0/URXL/v
        h(' objectvar v_URXL_v_neurons_v ')
        h(' { v_URXL_v_neurons_v = new Vector() } ')
        h(' { v_URXL_v_neurons_v.record(&a_URXL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URXL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URXR/0/URXR/v
        h(' objectvar v_URXR_v_neurons_v ')
        h(' { v_URXR_v_neurons_v = new Vector() } ')
        h(' { v_URXR_v_neurons_v.record(&a_URXR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URXR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYDL/0/URYDL/v
        h(' objectvar v_URYDL_v_neurons_v ')
        h(' { v_URYDL_v_neurons_v = new Vector() } ')
        h(' { v_URYDL_v_neurons_v.record(&a_URYDL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYDL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYDR/0/URYDR/v
        h(' objectvar v_URYDR_v_neurons_v ')
        h(' { v_URYDR_v_neurons_v = new Vector() } ')
        h(' { v_URYDR_v_neurons_v.record(&a_URYDR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYDR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYVL/0/URYVL/v
        h(' objectvar v_URYVL_v_neurons_v ')
        h(' { v_URYVL_v_neurons_v = new Vector() } ')
        h(' { v_URYVL_v_neurons_v.record(&a_URYVL[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYVL_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: URYVR/0/URYVR/v
        h(' objectvar v_URYVR_v_neurons_v ')
        h(' { v_URYVR_v_neurons_v = new Vector() } ')
        h(' { v_URYVR_v_neurons_v.record(&a_URYVR[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_URYVR_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA1/0/VA1/v
        h(' objectvar v_VA1_v_neurons_v ')
        h(' { v_VA1_v_neurons_v = new Vector() } ')
        h(' { v_VA1_v_neurons_v.record(&a_VA1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA10/0/VA10/v
        h(' objectvar v_VA10_v_neurons_v ')
        h(' { v_VA10_v_neurons_v = new Vector() } ')
        h(' { v_VA10_v_neurons_v.record(&a_VA10[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA10_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA11/0/VA11/v
        h(' objectvar v_VA11_v_neurons_v ')
        h(' { v_VA11_v_neurons_v = new Vector() } ')
        h(' { v_VA11_v_neurons_v.record(&a_VA11[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA11_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA12/0/VA12/v
        h(' objectvar v_VA12_v_neurons_v ')
        h(' { v_VA12_v_neurons_v = new Vector() } ')
        h(' { v_VA12_v_neurons_v.record(&a_VA12[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA12_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA2/0/VA2/v
        h(' objectvar v_VA2_v_neurons_v ')
        h(' { v_VA2_v_neurons_v = new Vector() } ')
        h(' { v_VA2_v_neurons_v.record(&a_VA2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA3/0/VA3/v
        h(' objectvar v_VA3_v_neurons_v ')
        h(' { v_VA3_v_neurons_v = new Vector() } ')
        h(' { v_VA3_v_neurons_v.record(&a_VA3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA4/0/VA4/v
        h(' objectvar v_VA4_v_neurons_v ')
        h(' { v_VA4_v_neurons_v = new Vector() } ')
        h(' { v_VA4_v_neurons_v.record(&a_VA4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA5/0/VA5/v
        h(' objectvar v_VA5_v_neurons_v ')
        h(' { v_VA5_v_neurons_v = new Vector() } ')
        h(' { v_VA5_v_neurons_v.record(&a_VA5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA6/0/VA6/v
        h(' objectvar v_VA6_v_neurons_v ')
        h(' { v_VA6_v_neurons_v = new Vector() } ')
        h(' { v_VA6_v_neurons_v.record(&a_VA6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA7/0/VA7/v
        h(' objectvar v_VA7_v_neurons_v ')
        h(' { v_VA7_v_neurons_v = new Vector() } ')
        h(' { v_VA7_v_neurons_v.record(&a_VA7[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA7_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA8/0/VA8/v
        h(' objectvar v_VA8_v_neurons_v ')
        h(' { v_VA8_v_neurons_v = new Vector() } ')
        h(' { v_VA8_v_neurons_v.record(&a_VA8[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA8_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VA9/0/VA9/v
        h(' objectvar v_VA9_v_neurons_v ')
        h(' { v_VA9_v_neurons_v = new Vector() } ')
        h(' { v_VA9_v_neurons_v.record(&a_VA9[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VA9_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB1/0/VB1/v
        h(' objectvar v_VB1_v_neurons_v ')
        h(' { v_VB1_v_neurons_v = new Vector() } ')
        h(' { v_VB1_v_neurons_v.record(&a_VB1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB10/0/VB10/v
        h(' objectvar v_VB10_v_neurons_v ')
        h(' { v_VB10_v_neurons_v = new Vector() } ')
        h(' { v_VB10_v_neurons_v.record(&a_VB10[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB10_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB11/0/VB11/v
        h(' objectvar v_VB11_v_neurons_v ')
        h(' { v_VB11_v_neurons_v = new Vector() } ')
        h(' { v_VB11_v_neurons_v.record(&a_VB11[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB11_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB2/0/VB2/v
        h(' objectvar v_VB2_v_neurons_v ')
        h(' { v_VB2_v_neurons_v = new Vector() } ')
        h(' { v_VB2_v_neurons_v.record(&a_VB2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB3/0/VB3/v
        h(' objectvar v_VB3_v_neurons_v ')
        h(' { v_VB3_v_neurons_v = new Vector() } ')
        h(' { v_VB3_v_neurons_v.record(&a_VB3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB4/0/VB4/v
        h(' objectvar v_VB4_v_neurons_v ')
        h(' { v_VB4_v_neurons_v = new Vector() } ')
        h(' { v_VB4_v_neurons_v.record(&a_VB4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB5/0/VB5/v
        h(' objectvar v_VB5_v_neurons_v ')
        h(' { v_VB5_v_neurons_v = new Vector() } ')
        h(' { v_VB5_v_neurons_v.record(&a_VB5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB6/0/VB6/v
        h(' objectvar v_VB6_v_neurons_v ')
        h(' { v_VB6_v_neurons_v = new Vector() } ')
        h(' { v_VB6_v_neurons_v.record(&a_VB6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB7/0/VB7/v
        h(' objectvar v_VB7_v_neurons_v ')
        h(' { v_VB7_v_neurons_v = new Vector() } ')
        h(' { v_VB7_v_neurons_v.record(&a_VB7[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB7_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB8/0/VB8/v
        h(' objectvar v_VB8_v_neurons_v ')
        h(' { v_VB8_v_neurons_v = new Vector() } ')
        h(' { v_VB8_v_neurons_v.record(&a_VB8[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB8_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VB9/0/VB9/v
        h(' objectvar v_VB9_v_neurons_v ')
        h(' { v_VB9_v_neurons_v = new Vector() } ')
        h(' { v_VB9_v_neurons_v.record(&a_VB9[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VB9_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC1/0/VC1/v
        h(' objectvar v_VC1_v_neurons_v ')
        h(' { v_VC1_v_neurons_v = new Vector() } ')
        h(' { v_VC1_v_neurons_v.record(&a_VC1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC2/0/VC2/v
        h(' objectvar v_VC2_v_neurons_v ')
        h(' { v_VC2_v_neurons_v = new Vector() } ')
        h(' { v_VC2_v_neurons_v.record(&a_VC2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC3/0/VC3/v
        h(' objectvar v_VC3_v_neurons_v ')
        h(' { v_VC3_v_neurons_v = new Vector() } ')
        h(' { v_VC3_v_neurons_v.record(&a_VC3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC4/0/VC4/v
        h(' objectvar v_VC4_v_neurons_v ')
        h(' { v_VC4_v_neurons_v = new Vector() } ')
        h(' { v_VC4_v_neurons_v.record(&a_VC4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC5/0/VC5/v
        h(' objectvar v_VC5_v_neurons_v ')
        h(' { v_VC5_v_neurons_v = new Vector() } ')
        h(' { v_VC5_v_neurons_v.record(&a_VC5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VC6/0/VC6/v
        h(' objectvar v_VC6_v_neurons_v ')
        h(' { v_VC6_v_neurons_v = new Vector() } ')
        h(' { v_VC6_v_neurons_v.record(&a_VC6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VC6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD1/0/VD1/v
        h(' objectvar v_VD1_v_neurons_v ')
        h(' { v_VD1_v_neurons_v = new Vector() } ')
        h(' { v_VD1_v_neurons_v.record(&a_VD1[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD1_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD10/0/VD10/v
        h(' objectvar v_VD10_v_neurons_v ')
        h(' { v_VD10_v_neurons_v = new Vector() } ')
        h(' { v_VD10_v_neurons_v.record(&a_VD10[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD10_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD11/0/VD11/v
        h(' objectvar v_VD11_v_neurons_v ')
        h(' { v_VD11_v_neurons_v = new Vector() } ')
        h(' { v_VD11_v_neurons_v.record(&a_VD11[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD11_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD12/0/VD12/v
        h(' objectvar v_VD12_v_neurons_v ')
        h(' { v_VD12_v_neurons_v = new Vector() } ')
        h(' { v_VD12_v_neurons_v.record(&a_VD12[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD12_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD13/0/VD13/v
        h(' objectvar v_VD13_v_neurons_v ')
        h(' { v_VD13_v_neurons_v = new Vector() } ')
        h(' { v_VD13_v_neurons_v.record(&a_VD13[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD13_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD2/0/VD2/v
        h(' objectvar v_VD2_v_neurons_v ')
        h(' { v_VD2_v_neurons_v = new Vector() } ')
        h(' { v_VD2_v_neurons_v.record(&a_VD2[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD2_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD3/0/VD3/v
        h(' objectvar v_VD3_v_neurons_v ')
        h(' { v_VD3_v_neurons_v = new Vector() } ')
        h(' { v_VD3_v_neurons_v.record(&a_VD3[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD3_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD4/0/VD4/v
        h(' objectvar v_VD4_v_neurons_v ')
        h(' { v_VD4_v_neurons_v = new Vector() } ')
        h(' { v_VD4_v_neurons_v.record(&a_VD4[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD4_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD5/0/VD5/v
        h(' objectvar v_VD5_v_neurons_v ')
        h(' { v_VD5_v_neurons_v = new Vector() } ')
        h(' { v_VD5_v_neurons_v.record(&a_VD5[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD5_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD6/0/VD6/v
        h(' objectvar v_VD6_v_neurons_v ')
        h(' { v_VD6_v_neurons_v = new Vector() } ')
        h(' { v_VD6_v_neurons_v.record(&a_VD6[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD6_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD7/0/VD7/v
        h(' objectvar v_VD7_v_neurons_v ')
        h(' { v_VD7_v_neurons_v = new Vector() } ')
        h(' { v_VD7_v_neurons_v.record(&a_VD7[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD7_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD8/0/VD8/v
        h(' objectvar v_VD8_v_neurons_v ')
        h(' { v_VD8_v_neurons_v = new Vector() } ')
        h(' { v_VD8_v_neurons_v.record(&a_VD8[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD8_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)
        # Column: VD9/0/VD9/v
        h(' objectvar v_VD9_v_neurons_v ')
        h(' { v_VD9_v_neurons_v = new Vector() } ')
        h(' { v_VD9_v_neurons_v.record(&a_VD9[0].Soma.v(0.5)) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_VD9_v_neurons_v.resize((h.tstop * h.steps_per_ms) + 1)

        # ######################   File to save: time.dat (time)
        # Column: time
        h(' objectvar v_time ')
        h(' { v_time = new Vector() } ')
        h(' { v_time.record(&t) } ')
        if self.abs_tol is None or self.rel_tol is None:

            h.v_time.resize((h.tstop * h.steps_per_ms) + 1)

        self.initialized = False

        self.sim_end = -1 # will be overwritten

        setup_end = time.time()
        self.setup_time = setup_end - self.setup_start
        print("Setting up the network to simulate took %f seconds"%(self.setup_time))

        h.nrncontrolmenu()


    def run(self):

        self.initialized = True
        sim_start = time.time()
        if self.abs_tol is not None and self.rel_tol is not None:
            print("Running a simulation of %sms (cvode abs_tol = %sms, rel_tol = %sms; seed=%s)" % (h.tstop, self.abs_tol, self.rel_tol, self.seed))
        else:
            print("Running a simulation of %sms (dt = %sms; seed=%s)" % (h.tstop, h.dt, self.seed))

        try:
            h.run()
        except Exception as e:
            print("Exception running NEURON: %s" % (e))
            return


        self.sim_end = time.time()
        self.sim_time = self.sim_end - sim_start
        print("Finished NEURON simulation in %f seconds (%f mins)..."%(self.sim_time, self.sim_time/60.0))

        try:
            self.save_results()
        except Exception as e:
            print("Exception saving results of NEURON simulation: %s" % (e))
            return


    def advance(self):

        if not self.initialized:
            h.finitialize()
            self.initialized = True

        h.fadvance()


    ###############################################################################
    # Hash function to use in generation of random value
    # This is copied from NetPyNE: https://github.com/Neurosim-lab/netpyne/blob/master/netpyne/simFuncs.py
    ###############################################################################
    def _id32 (self,obj): 
        return int(hashlib.md5(obj.encode('utf-8')).hexdigest()[0:8],16)  # convert 8 first chars of md5 hash in base 16 to int


    ###############################################################################
    # Initialize the stim randomizer
    # This is copied from NetPyNE: https://github.com/Neurosim-lab/netpyne/blob/master/netpyne/simFuncs.py
    ###############################################################################
    def _init_stim_randomizer(self,rand, stimType, gid, seed): 
        #print("INIT STIM  %s; %s; %s; %s"%(rand, stimType, gid, seed))
        rand.Random123(self._id32(stimType), gid, seed)


    def save_results(self):

        print("Saving results at t=%s..."%h.t)

        if self.sim_end < 0: self.sim_end = time.time()

        self.display_neurons.exec_menu("View = plot")
        self.display_activity_neurons.exec_menu("View = plot")

        # ######################   File to save: time.dat (time). Note, saving in SI units
        py_v_time = [ t/1000 for t in h.v_time.to_python() ]  # Convert to Python list for speed...

        f_time_f2 = open('time.dat', 'w')
        num_points = len(py_v_time)  # Simulation may have been stopped before tstop...

        for i in range(num_points):
            f_time_f2.write('%f'% py_v_time[i])  # Save in SI units...
        f_time_f2.close()
        print("Saved data to: time.dat")

        # ######################   File to save: c302_D_Full.activity.dat (neurons_activity). Note, saving in SI units
        py_v_ADAL_v_neurons_activity = [ float(x ) for x in h.v_ADAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADAR_v_neurons_activity = [ float(x ) for x in h.v_ADAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADEL_v_neurons_activity = [ float(x ) for x in h.v_ADEL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADER_v_neurons_activity = [ float(x ) for x in h.v_ADER_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADFL_v_neurons_activity = [ float(x ) for x in h.v_ADFL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADFR_v_neurons_activity = [ float(x ) for x in h.v_ADFR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADLL_v_neurons_activity = [ float(x ) for x in h.v_ADLL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ADLR_v_neurons_activity = [ float(x ) for x in h.v_ADLR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AFDL_v_neurons_activity = [ float(x ) for x in h.v_AFDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AFDR_v_neurons_activity = [ float(x ) for x in h.v_AFDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIAL_v_neurons_activity = [ float(x ) for x in h.v_AIAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIAR_v_neurons_activity = [ float(x ) for x in h.v_AIAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIBL_v_neurons_activity = [ float(x ) for x in h.v_AIBL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIBR_v_neurons_activity = [ float(x ) for x in h.v_AIBR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIML_v_neurons_activity = [ float(x ) for x in h.v_AIML_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIMR_v_neurons_activity = [ float(x ) for x in h.v_AIMR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AINL_v_neurons_activity = [ float(x ) for x in h.v_AINL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AINR_v_neurons_activity = [ float(x ) for x in h.v_AINR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIYL_v_neurons_activity = [ float(x ) for x in h.v_AIYL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIYR_v_neurons_activity = [ float(x ) for x in h.v_AIYR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIZL_v_neurons_activity = [ float(x ) for x in h.v_AIZL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AIZR_v_neurons_activity = [ float(x ) for x in h.v_AIZR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ALA_v_neurons_activity = [ float(x ) for x in h.v_ALA_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ALML_v_neurons_activity = [ float(x ) for x in h.v_ALML_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ALMR_v_neurons_activity = [ float(x ) for x in h.v_ALMR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ALNL_v_neurons_activity = [ float(x ) for x in h.v_ALNL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ALNR_v_neurons_activity = [ float(x ) for x in h.v_ALNR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AQR_v_neurons_activity = [ float(x ) for x in h.v_AQR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS1_v_neurons_activity = [ float(x ) for x in h.v_AS1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS10_v_neurons_activity = [ float(x ) for x in h.v_AS10_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS11_v_neurons_activity = [ float(x ) for x in h.v_AS11_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS2_v_neurons_activity = [ float(x ) for x in h.v_AS2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS3_v_neurons_activity = [ float(x ) for x in h.v_AS3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS4_v_neurons_activity = [ float(x ) for x in h.v_AS4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS5_v_neurons_activity = [ float(x ) for x in h.v_AS5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS6_v_neurons_activity = [ float(x ) for x in h.v_AS6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS7_v_neurons_activity = [ float(x ) for x in h.v_AS7_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS8_v_neurons_activity = [ float(x ) for x in h.v_AS8_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AS9_v_neurons_activity = [ float(x ) for x in h.v_AS9_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASEL_v_neurons_activity = [ float(x ) for x in h.v_ASEL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASER_v_neurons_activity = [ float(x ) for x in h.v_ASER_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASGL_v_neurons_activity = [ float(x ) for x in h.v_ASGL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASGR_v_neurons_activity = [ float(x ) for x in h.v_ASGR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASHL_v_neurons_activity = [ float(x ) for x in h.v_ASHL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASHR_v_neurons_activity = [ float(x ) for x in h.v_ASHR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASIL_v_neurons_activity = [ float(x ) for x in h.v_ASIL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASIR_v_neurons_activity = [ float(x ) for x in h.v_ASIR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASJL_v_neurons_activity = [ float(x ) for x in h.v_ASJL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASJR_v_neurons_activity = [ float(x ) for x in h.v_ASJR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASKL_v_neurons_activity = [ float(x ) for x in h.v_ASKL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_ASKR_v_neurons_activity = [ float(x ) for x in h.v_ASKR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AUAL_v_neurons_activity = [ float(x ) for x in h.v_AUAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AUAR_v_neurons_activity = [ float(x ) for x in h.v_AUAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVAL_v_neurons_activity = [ float(x ) for x in h.v_AVAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVAR_v_neurons_activity = [ float(x ) for x in h.v_AVAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVBL_v_neurons_activity = [ float(x ) for x in h.v_AVBL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVBR_v_neurons_activity = [ float(x ) for x in h.v_AVBR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVDL_v_neurons_activity = [ float(x ) for x in h.v_AVDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVDR_v_neurons_activity = [ float(x ) for x in h.v_AVDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVEL_v_neurons_activity = [ float(x ) for x in h.v_AVEL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVER_v_neurons_activity = [ float(x ) for x in h.v_AVER_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVFL_v_neurons_activity = [ float(x ) for x in h.v_AVFL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVFR_v_neurons_activity = [ float(x ) for x in h.v_AVFR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVG_v_neurons_activity = [ float(x ) for x in h.v_AVG_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVHL_v_neurons_activity = [ float(x ) for x in h.v_AVHL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVHR_v_neurons_activity = [ float(x ) for x in h.v_AVHR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVJL_v_neurons_activity = [ float(x ) for x in h.v_AVJL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVJR_v_neurons_activity = [ float(x ) for x in h.v_AVJR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVKL_v_neurons_activity = [ float(x ) for x in h.v_AVKL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVKR_v_neurons_activity = [ float(x ) for x in h.v_AVKR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVL_v_neurons_activity = [ float(x ) for x in h.v_AVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AVM_v_neurons_activity = [ float(x ) for x in h.v_AVM_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AWAL_v_neurons_activity = [ float(x ) for x in h.v_AWAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AWAR_v_neurons_activity = [ float(x ) for x in h.v_AWAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AWBL_v_neurons_activity = [ float(x ) for x in h.v_AWBL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AWBR_v_neurons_activity = [ float(x ) for x in h.v_AWBR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AWCL_v_neurons_activity = [ float(x ) for x in h.v_AWCL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_AWCR_v_neurons_activity = [ float(x ) for x in h.v_AWCR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_BAGL_v_neurons_activity = [ float(x ) for x in h.v_BAGL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_BAGR_v_neurons_activity = [ float(x ) for x in h.v_BAGR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_BDUL_v_neurons_activity = [ float(x ) for x in h.v_BDUL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_BDUR_v_neurons_activity = [ float(x ) for x in h.v_BDUR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_CANL_v_neurons_activity = [ float(x ) for x in h.v_CANL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_CANR_v_neurons_activity = [ float(x ) for x in h.v_CANR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_CEPDL_v_neurons_activity = [ float(x ) for x in h.v_CEPDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_CEPDR_v_neurons_activity = [ float(x ) for x in h.v_CEPDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_CEPVL_v_neurons_activity = [ float(x ) for x in h.v_CEPVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_CEPVR_v_neurons_activity = [ float(x ) for x in h.v_CEPVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA1_v_neurons_activity = [ float(x ) for x in h.v_DA1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA2_v_neurons_activity = [ float(x ) for x in h.v_DA2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA3_v_neurons_activity = [ float(x ) for x in h.v_DA3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA4_v_neurons_activity = [ float(x ) for x in h.v_DA4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA5_v_neurons_activity = [ float(x ) for x in h.v_DA5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA6_v_neurons_activity = [ float(x ) for x in h.v_DA6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA7_v_neurons_activity = [ float(x ) for x in h.v_DA7_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA8_v_neurons_activity = [ float(x ) for x in h.v_DA8_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DA9_v_neurons_activity = [ float(x ) for x in h.v_DA9_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB1_v_neurons_activity = [ float(x ) for x in h.v_DB1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB2_v_neurons_activity = [ float(x ) for x in h.v_DB2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB3_v_neurons_activity = [ float(x ) for x in h.v_DB3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB4_v_neurons_activity = [ float(x ) for x in h.v_DB4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB5_v_neurons_activity = [ float(x ) for x in h.v_DB5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB6_v_neurons_activity = [ float(x ) for x in h.v_DB6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DB7_v_neurons_activity = [ float(x ) for x in h.v_DB7_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DD1_v_neurons_activity = [ float(x ) for x in h.v_DD1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DD2_v_neurons_activity = [ float(x ) for x in h.v_DD2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DD3_v_neurons_activity = [ float(x ) for x in h.v_DD3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DD4_v_neurons_activity = [ float(x ) for x in h.v_DD4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DD5_v_neurons_activity = [ float(x ) for x in h.v_DD5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DD6_v_neurons_activity = [ float(x ) for x in h.v_DD6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DVA_v_neurons_activity = [ float(x ) for x in h.v_DVA_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DVB_v_neurons_activity = [ float(x ) for x in h.v_DVB_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_DVC_v_neurons_activity = [ float(x ) for x in h.v_DVC_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_FLPL_v_neurons_activity = [ float(x ) for x in h.v_FLPL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_FLPR_v_neurons_activity = [ float(x ) for x in h.v_FLPR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_HSNL_v_neurons_activity = [ float(x ) for x in h.v_HSNL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_HSNR_v_neurons_activity = [ float(x ) for x in h.v_HSNR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I1L_v_neurons_activity = [ float(x ) for x in h.v_I1L_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I1R_v_neurons_activity = [ float(x ) for x in h.v_I1R_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I2L_v_neurons_activity = [ float(x ) for x in h.v_I2L_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I2R_v_neurons_activity = [ float(x ) for x in h.v_I2R_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I3_v_neurons_activity = [ float(x ) for x in h.v_I3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I4_v_neurons_activity = [ float(x ) for x in h.v_I4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I5_v_neurons_activity = [ float(x ) for x in h.v_I5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_I6_v_neurons_activity = [ float(x ) for x in h.v_I6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL1DL_v_neurons_activity = [ float(x ) for x in h.v_IL1DL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL1DR_v_neurons_activity = [ float(x ) for x in h.v_IL1DR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL1L_v_neurons_activity = [ float(x ) for x in h.v_IL1L_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL1R_v_neurons_activity = [ float(x ) for x in h.v_IL1R_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL1VL_v_neurons_activity = [ float(x ) for x in h.v_IL1VL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL1VR_v_neurons_activity = [ float(x ) for x in h.v_IL1VR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL2DL_v_neurons_activity = [ float(x ) for x in h.v_IL2DL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL2DR_v_neurons_activity = [ float(x ) for x in h.v_IL2DR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL2L_v_neurons_activity = [ float(x ) for x in h.v_IL2L_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL2R_v_neurons_activity = [ float(x ) for x in h.v_IL2R_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL2VL_v_neurons_activity = [ float(x ) for x in h.v_IL2VL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_IL2VR_v_neurons_activity = [ float(x ) for x in h.v_IL2VR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_LUAL_v_neurons_activity = [ float(x ) for x in h.v_LUAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_LUAR_v_neurons_activity = [ float(x ) for x in h.v_LUAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M1_v_neurons_activity = [ float(x ) for x in h.v_M1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M2L_v_neurons_activity = [ float(x ) for x in h.v_M2L_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M2R_v_neurons_activity = [ float(x ) for x in h.v_M2R_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M3L_v_neurons_activity = [ float(x ) for x in h.v_M3L_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M3R_v_neurons_activity = [ float(x ) for x in h.v_M3R_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M4_v_neurons_activity = [ float(x ) for x in h.v_M4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_M5_v_neurons_activity = [ float(x ) for x in h.v_M5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_MCL_v_neurons_activity = [ float(x ) for x in h.v_MCL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_MCR_v_neurons_activity = [ float(x ) for x in h.v_MCR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_MI_v_neurons_activity = [ float(x ) for x in h.v_MI_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_NSML_v_neurons_activity = [ float(x ) for x in h.v_NSML_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_NSMR_v_neurons_activity = [ float(x ) for x in h.v_NSMR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_OLLL_v_neurons_activity = [ float(x ) for x in h.v_OLLL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_OLLR_v_neurons_activity = [ float(x ) for x in h.v_OLLR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_OLQDL_v_neurons_activity = [ float(x ) for x in h.v_OLQDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_OLQDR_v_neurons_activity = [ float(x ) for x in h.v_OLQDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_OLQVL_v_neurons_activity = [ float(x ) for x in h.v_OLQVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_OLQVR_v_neurons_activity = [ float(x ) for x in h.v_OLQVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PDA_v_neurons_activity = [ float(x ) for x in h.v_PDA_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PDB_v_neurons_activity = [ float(x ) for x in h.v_PDB_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PDEL_v_neurons_activity = [ float(x ) for x in h.v_PDEL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PDER_v_neurons_activity = [ float(x ) for x in h.v_PDER_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PHAL_v_neurons_activity = [ float(x ) for x in h.v_PHAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PHAR_v_neurons_activity = [ float(x ) for x in h.v_PHAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PHBL_v_neurons_activity = [ float(x ) for x in h.v_PHBL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PHBR_v_neurons_activity = [ float(x ) for x in h.v_PHBR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PHCL_v_neurons_activity = [ float(x ) for x in h.v_PHCL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PHCR_v_neurons_activity = [ float(x ) for x in h.v_PHCR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PLML_v_neurons_activity = [ float(x ) for x in h.v_PLML_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PLMR_v_neurons_activity = [ float(x ) for x in h.v_PLMR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PLNL_v_neurons_activity = [ float(x ) for x in h.v_PLNL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PLNR_v_neurons_activity = [ float(x ) for x in h.v_PLNR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PQR_v_neurons_activity = [ float(x ) for x in h.v_PQR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVCL_v_neurons_activity = [ float(x ) for x in h.v_PVCL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVCR_v_neurons_activity = [ float(x ) for x in h.v_PVCR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVDL_v_neurons_activity = [ float(x ) for x in h.v_PVDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVDR_v_neurons_activity = [ float(x ) for x in h.v_PVDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVM_v_neurons_activity = [ float(x ) for x in h.v_PVM_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVNL_v_neurons_activity = [ float(x ) for x in h.v_PVNL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVNR_v_neurons_activity = [ float(x ) for x in h.v_PVNR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVPL_v_neurons_activity = [ float(x ) for x in h.v_PVPL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVPR_v_neurons_activity = [ float(x ) for x in h.v_PVPR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVQL_v_neurons_activity = [ float(x ) for x in h.v_PVQL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVQR_v_neurons_activity = [ float(x ) for x in h.v_PVQR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVR_v_neurons_activity = [ float(x ) for x in h.v_PVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVT_v_neurons_activity = [ float(x ) for x in h.v_PVT_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVWL_v_neurons_activity = [ float(x ) for x in h.v_PVWL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_PVWR_v_neurons_activity = [ float(x ) for x in h.v_PVWR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIAL_v_neurons_activity = [ float(x ) for x in h.v_RIAL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIAR_v_neurons_activity = [ float(x ) for x in h.v_RIAR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIBL_v_neurons_activity = [ float(x ) for x in h.v_RIBL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIBR_v_neurons_activity = [ float(x ) for x in h.v_RIBR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RICL_v_neurons_activity = [ float(x ) for x in h.v_RICL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RICR_v_neurons_activity = [ float(x ) for x in h.v_RICR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RID_v_neurons_activity = [ float(x ) for x in h.v_RID_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIFL_v_neurons_activity = [ float(x ) for x in h.v_RIFL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIFR_v_neurons_activity = [ float(x ) for x in h.v_RIFR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIGL_v_neurons_activity = [ float(x ) for x in h.v_RIGL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIGR_v_neurons_activity = [ float(x ) for x in h.v_RIGR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIH_v_neurons_activity = [ float(x ) for x in h.v_RIH_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIML_v_neurons_activity = [ float(x ) for x in h.v_RIML_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIMR_v_neurons_activity = [ float(x ) for x in h.v_RIMR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIPL_v_neurons_activity = [ float(x ) for x in h.v_RIPL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIPR_v_neurons_activity = [ float(x ) for x in h.v_RIPR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIR_v_neurons_activity = [ float(x ) for x in h.v_RIR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIS_v_neurons_activity = [ float(x ) for x in h.v_RIS_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIVL_v_neurons_activity = [ float(x ) for x in h.v_RIVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RIVR_v_neurons_activity = [ float(x ) for x in h.v_RIVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMDDL_v_neurons_activity = [ float(x ) for x in h.v_RMDDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMDDR_v_neurons_activity = [ float(x ) for x in h.v_RMDDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMDL_v_neurons_activity = [ float(x ) for x in h.v_RMDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMDR_v_neurons_activity = [ float(x ) for x in h.v_RMDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMDVL_v_neurons_activity = [ float(x ) for x in h.v_RMDVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMDVR_v_neurons_activity = [ float(x ) for x in h.v_RMDVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMED_v_neurons_activity = [ float(x ) for x in h.v_RMED_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMEL_v_neurons_activity = [ float(x ) for x in h.v_RMEL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMER_v_neurons_activity = [ float(x ) for x in h.v_RMER_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMEV_v_neurons_activity = [ float(x ) for x in h.v_RMEV_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMFL_v_neurons_activity = [ float(x ) for x in h.v_RMFL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMFR_v_neurons_activity = [ float(x ) for x in h.v_RMFR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMGL_v_neurons_activity = [ float(x ) for x in h.v_RMGL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMGR_v_neurons_activity = [ float(x ) for x in h.v_RMGR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMHL_v_neurons_activity = [ float(x ) for x in h.v_RMHL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_RMHR_v_neurons_activity = [ float(x ) for x in h.v_RMHR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SAADL_v_neurons_activity = [ float(x ) for x in h.v_SAADL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SAADR_v_neurons_activity = [ float(x ) for x in h.v_SAADR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SAAVL_v_neurons_activity = [ float(x ) for x in h.v_SAAVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SAAVR_v_neurons_activity = [ float(x ) for x in h.v_SAAVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SABD_v_neurons_activity = [ float(x ) for x in h.v_SABD_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SABVL_v_neurons_activity = [ float(x ) for x in h.v_SABVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SABVR_v_neurons_activity = [ float(x ) for x in h.v_SABVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SDQL_v_neurons_activity = [ float(x ) for x in h.v_SDQL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SDQR_v_neurons_activity = [ float(x ) for x in h.v_SDQR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIADL_v_neurons_activity = [ float(x ) for x in h.v_SIADL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIADR_v_neurons_activity = [ float(x ) for x in h.v_SIADR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIAVL_v_neurons_activity = [ float(x ) for x in h.v_SIAVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIAVR_v_neurons_activity = [ float(x ) for x in h.v_SIAVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIBDL_v_neurons_activity = [ float(x ) for x in h.v_SIBDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIBDR_v_neurons_activity = [ float(x ) for x in h.v_SIBDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIBVL_v_neurons_activity = [ float(x ) for x in h.v_SIBVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SIBVR_v_neurons_activity = [ float(x ) for x in h.v_SIBVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMBDL_v_neurons_activity = [ float(x ) for x in h.v_SMBDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMBDR_v_neurons_activity = [ float(x ) for x in h.v_SMBDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMBVL_v_neurons_activity = [ float(x ) for x in h.v_SMBVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMBVR_v_neurons_activity = [ float(x ) for x in h.v_SMBVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMDDL_v_neurons_activity = [ float(x ) for x in h.v_SMDDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMDDR_v_neurons_activity = [ float(x ) for x in h.v_SMDDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMDVL_v_neurons_activity = [ float(x ) for x in h.v_SMDVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_SMDVR_v_neurons_activity = [ float(x ) for x in h.v_SMDVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URADL_v_neurons_activity = [ float(x ) for x in h.v_URADL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URADR_v_neurons_activity = [ float(x ) for x in h.v_URADR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URAVL_v_neurons_activity = [ float(x ) for x in h.v_URAVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URAVR_v_neurons_activity = [ float(x ) for x in h.v_URAVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URBL_v_neurons_activity = [ float(x ) for x in h.v_URBL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URBR_v_neurons_activity = [ float(x ) for x in h.v_URBR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URXL_v_neurons_activity = [ float(x ) for x in h.v_URXL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URXR_v_neurons_activity = [ float(x ) for x in h.v_URXR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URYDL_v_neurons_activity = [ float(x ) for x in h.v_URYDL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URYDR_v_neurons_activity = [ float(x ) for x in h.v_URYDR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URYVL_v_neurons_activity = [ float(x ) for x in h.v_URYVL_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_URYVR_v_neurons_activity = [ float(x ) for x in h.v_URYVR_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA1_v_neurons_activity = [ float(x ) for x in h.v_VA1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA10_v_neurons_activity = [ float(x ) for x in h.v_VA10_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA11_v_neurons_activity = [ float(x ) for x in h.v_VA11_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA12_v_neurons_activity = [ float(x ) for x in h.v_VA12_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA2_v_neurons_activity = [ float(x ) for x in h.v_VA2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA3_v_neurons_activity = [ float(x ) for x in h.v_VA3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA4_v_neurons_activity = [ float(x ) for x in h.v_VA4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA5_v_neurons_activity = [ float(x ) for x in h.v_VA5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA6_v_neurons_activity = [ float(x ) for x in h.v_VA6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA7_v_neurons_activity = [ float(x ) for x in h.v_VA7_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA8_v_neurons_activity = [ float(x ) for x in h.v_VA8_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VA9_v_neurons_activity = [ float(x ) for x in h.v_VA9_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB1_v_neurons_activity = [ float(x ) for x in h.v_VB1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB10_v_neurons_activity = [ float(x ) for x in h.v_VB10_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB11_v_neurons_activity = [ float(x ) for x in h.v_VB11_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB2_v_neurons_activity = [ float(x ) for x in h.v_VB2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB3_v_neurons_activity = [ float(x ) for x in h.v_VB3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB4_v_neurons_activity = [ float(x ) for x in h.v_VB4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB5_v_neurons_activity = [ float(x ) for x in h.v_VB5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB6_v_neurons_activity = [ float(x ) for x in h.v_VB6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB7_v_neurons_activity = [ float(x ) for x in h.v_VB7_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB8_v_neurons_activity = [ float(x ) for x in h.v_VB8_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VB9_v_neurons_activity = [ float(x ) for x in h.v_VB9_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VC1_v_neurons_activity = [ float(x ) for x in h.v_VC1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VC2_v_neurons_activity = [ float(x ) for x in h.v_VC2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VC3_v_neurons_activity = [ float(x ) for x in h.v_VC3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VC4_v_neurons_activity = [ float(x ) for x in h.v_VC4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VC5_v_neurons_activity = [ float(x ) for x in h.v_VC5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VC6_v_neurons_activity = [ float(x ) for x in h.v_VC6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD1_v_neurons_activity = [ float(x ) for x in h.v_VD1_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD10_v_neurons_activity = [ float(x ) for x in h.v_VD10_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD11_v_neurons_activity = [ float(x ) for x in h.v_VD11_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD12_v_neurons_activity = [ float(x ) for x in h.v_VD12_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD13_v_neurons_activity = [ float(x ) for x in h.v_VD13_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD2_v_neurons_activity = [ float(x ) for x in h.v_VD2_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD3_v_neurons_activity = [ float(x ) for x in h.v_VD3_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD4_v_neurons_activity = [ float(x ) for x in h.v_VD4_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD5_v_neurons_activity = [ float(x ) for x in h.v_VD5_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD6_v_neurons_activity = [ float(x ) for x in h.v_VD6_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD7_v_neurons_activity = [ float(x ) for x in h.v_VD7_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD8_v_neurons_activity = [ float(x ) for x in h.v_VD8_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration
        py_v_VD9_v_neurons_activity = [ float(x ) for x in h.v_VD9_v_neurons_activity.to_python() ]  # Convert to Python list for speed, variable has dim: concentration

        f_neurons_activity_f2 = open('c302_D_Full.activity.dat', 'w')
        num_points = len(py_v_time)  # Simulation may have been stopped before tstop...

        for i in range(num_points):
            f_neurons_activity_f2.write('%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t\n' % (py_v_time[i], py_v_ADAL_v_neurons_activity[i], py_v_ADAR_v_neurons_activity[i], py_v_ADEL_v_neurons_activity[i], py_v_ADER_v_neurons_activity[i], py_v_ADFL_v_neurons_activity[i], py_v_ADFR_v_neurons_activity[i], py_v_ADLL_v_neurons_activity[i], py_v_ADLR_v_neurons_activity[i], py_v_AFDL_v_neurons_activity[i], py_v_AFDR_v_neurons_activity[i], py_v_AIAL_v_neurons_activity[i], py_v_AIAR_v_neurons_activity[i], py_v_AIBL_v_neurons_activity[i], py_v_AIBR_v_neurons_activity[i], py_v_AIML_v_neurons_activity[i], py_v_AIMR_v_neurons_activity[i], py_v_AINL_v_neurons_activity[i], py_v_AINR_v_neurons_activity[i], py_v_AIYL_v_neurons_activity[i], py_v_AIYR_v_neurons_activity[i], py_v_AIZL_v_neurons_activity[i], py_v_AIZR_v_neurons_activity[i], py_v_ALA_v_neurons_activity[i], py_v_ALML_v_neurons_activity[i], py_v_ALMR_v_neurons_activity[i], py_v_ALNL_v_neurons_activity[i], py_v_ALNR_v_neurons_activity[i], py_v_AQR_v_neurons_activity[i], py_v_AS1_v_neurons_activity[i], py_v_AS10_v_neurons_activity[i], py_v_AS11_v_neurons_activity[i], py_v_AS2_v_neurons_activity[i], py_v_AS3_v_neurons_activity[i], py_v_AS4_v_neurons_activity[i], py_v_AS5_v_neurons_activity[i], py_v_AS6_v_neurons_activity[i], py_v_AS7_v_neurons_activity[i], py_v_AS8_v_neurons_activity[i], py_v_AS9_v_neurons_activity[i], py_v_ASEL_v_neurons_activity[i], py_v_ASER_v_neurons_activity[i], py_v_ASGL_v_neurons_activity[i], py_v_ASGR_v_neurons_activity[i], py_v_ASHL_v_neurons_activity[i], py_v_ASHR_v_neurons_activity[i], py_v_ASIL_v_neurons_activity[i], py_v_ASIR_v_neurons_activity[i], py_v_ASJL_v_neurons_activity[i], py_v_ASJR_v_neurons_activity[i], py_v_ASKL_v_neurons_activity[i], py_v_ASKR_v_neurons_activity[i], py_v_AUAL_v_neurons_activity[i], py_v_AUAR_v_neurons_activity[i], py_v_AVAL_v_neurons_activity[i], py_v_AVAR_v_neurons_activity[i], py_v_AVBL_v_neurons_activity[i], py_v_AVBR_v_neurons_activity[i], py_v_AVDL_v_neurons_activity[i], py_v_AVDR_v_neurons_activity[i], py_v_AVEL_v_neurons_activity[i], py_v_AVER_v_neurons_activity[i], py_v_AVFL_v_neurons_activity[i], py_v_AVFR_v_neurons_activity[i], py_v_AVG_v_neurons_activity[i], py_v_AVHL_v_neurons_activity[i], py_v_AVHR_v_neurons_activity[i], py_v_AVJL_v_neurons_activity[i], py_v_AVJR_v_neurons_activity[i], py_v_AVKL_v_neurons_activity[i], py_v_AVKR_v_neurons_activity[i], py_v_AVL_v_neurons_activity[i], py_v_AVM_v_neurons_activity[i], py_v_AWAL_v_neurons_activity[i], py_v_AWAR_v_neurons_activity[i], py_v_AWBL_v_neurons_activity[i], py_v_AWBR_v_neurons_activity[i], py_v_AWCL_v_neurons_activity[i], py_v_AWCR_v_neurons_activity[i], py_v_BAGL_v_neurons_activity[i], py_v_BAGR_v_neurons_activity[i], py_v_BDUL_v_neurons_activity[i], py_v_BDUR_v_neurons_activity[i], py_v_CANL_v_neurons_activity[i], py_v_CANR_v_neurons_activity[i], py_v_CEPDL_v_neurons_activity[i], py_v_CEPDR_v_neurons_activity[i], py_v_CEPVL_v_neurons_activity[i], py_v_CEPVR_v_neurons_activity[i], py_v_DA1_v_neurons_activity[i], py_v_DA2_v_neurons_activity[i], py_v_DA3_v_neurons_activity[i], py_v_DA4_v_neurons_activity[i], py_v_DA5_v_neurons_activity[i], py_v_DA6_v_neurons_activity[i], py_v_DA7_v_neurons_activity[i], py_v_DA8_v_neurons_activity[i], py_v_DA9_v_neurons_activity[i], py_v_DB1_v_neurons_activity[i], py_v_DB2_v_neurons_activity[i], py_v_DB3_v_neurons_activity[i], py_v_DB4_v_neurons_activity[i], py_v_DB5_v_neurons_activity[i], py_v_DB6_v_neurons_activity[i], py_v_DB7_v_neurons_activity[i], py_v_DD1_v_neurons_activity[i], py_v_DD2_v_neurons_activity[i], py_v_DD3_v_neurons_activity[i], py_v_DD4_v_neurons_activity[i], py_v_DD5_v_neurons_activity[i], py_v_DD6_v_neurons_activity[i], py_v_DVA_v_neurons_activity[i], py_v_DVB_v_neurons_activity[i], py_v_DVC_v_neurons_activity[i], py_v_FLPL_v_neurons_activity[i], py_v_FLPR_v_neurons_activity[i], py_v_HSNL_v_neurons_activity[i], py_v_HSNR_v_neurons_activity[i], py_v_I1L_v_neurons_activity[i], py_v_I1R_v_neurons_activity[i], py_v_I2L_v_neurons_activity[i], py_v_I2R_v_neurons_activity[i], py_v_I3_v_neurons_activity[i], py_v_I4_v_neurons_activity[i], py_v_I5_v_neurons_activity[i], py_v_I6_v_neurons_activity[i], py_v_IL1DL_v_neurons_activity[i], py_v_IL1DR_v_neurons_activity[i], py_v_IL1L_v_neurons_activity[i], py_v_IL1R_v_neurons_activity[i], py_v_IL1VL_v_neurons_activity[i], py_v_IL1VR_v_neurons_activity[i], py_v_IL2DL_v_neurons_activity[i], py_v_IL2DR_v_neurons_activity[i], py_v_IL2L_v_neurons_activity[i], py_v_IL2R_v_neurons_activity[i], py_v_IL2VL_v_neurons_activity[i], py_v_IL2VR_v_neurons_activity[i], py_v_LUAL_v_neurons_activity[i], py_v_LUAR_v_neurons_activity[i], py_v_M1_v_neurons_activity[i], py_v_M2L_v_neurons_activity[i], py_v_M2R_v_neurons_activity[i], py_v_M3L_v_neurons_activity[i], py_v_M3R_v_neurons_activity[i], py_v_M4_v_neurons_activity[i], py_v_M5_v_neurons_activity[i], py_v_MCL_v_neurons_activity[i], py_v_MCR_v_neurons_activity[i], py_v_MI_v_neurons_activity[i], py_v_NSML_v_neurons_activity[i], py_v_NSMR_v_neurons_activity[i], py_v_OLLL_v_neurons_activity[i], py_v_OLLR_v_neurons_activity[i], py_v_OLQDL_v_neurons_activity[i], py_v_OLQDR_v_neurons_activity[i], py_v_OLQVL_v_neurons_activity[i], py_v_OLQVR_v_neurons_activity[i], py_v_PDA_v_neurons_activity[i], py_v_PDB_v_neurons_activity[i], py_v_PDEL_v_neurons_activity[i], py_v_PDER_v_neurons_activity[i], py_v_PHAL_v_neurons_activity[i], py_v_PHAR_v_neurons_activity[i], py_v_PHBL_v_neurons_activity[i], py_v_PHBR_v_neurons_activity[i], py_v_PHCL_v_neurons_activity[i], py_v_PHCR_v_neurons_activity[i], py_v_PLML_v_neurons_activity[i], py_v_PLMR_v_neurons_activity[i], py_v_PLNL_v_neurons_activity[i], py_v_PLNR_v_neurons_activity[i], py_v_PQR_v_neurons_activity[i], py_v_PVCL_v_neurons_activity[i], py_v_PVCR_v_neurons_activity[i], py_v_PVDL_v_neurons_activity[i], py_v_PVDR_v_neurons_activity[i], py_v_PVM_v_neurons_activity[i], py_v_PVNL_v_neurons_activity[i], py_v_PVNR_v_neurons_activity[i], py_v_PVPL_v_neurons_activity[i], py_v_PVPR_v_neurons_activity[i], py_v_PVQL_v_neurons_activity[i], py_v_PVQR_v_neurons_activity[i], py_v_PVR_v_neurons_activity[i], py_v_PVT_v_neurons_activity[i], py_v_PVWL_v_neurons_activity[i], py_v_PVWR_v_neurons_activity[i], py_v_RIAL_v_neurons_activity[i], py_v_RIAR_v_neurons_activity[i], py_v_RIBL_v_neurons_activity[i], py_v_RIBR_v_neurons_activity[i], py_v_RICL_v_neurons_activity[i], py_v_RICR_v_neurons_activity[i], py_v_RID_v_neurons_activity[i], py_v_RIFL_v_neurons_activity[i], py_v_RIFR_v_neurons_activity[i], py_v_RIGL_v_neurons_activity[i], py_v_RIGR_v_neurons_activity[i], py_v_RIH_v_neurons_activity[i], py_v_RIML_v_neurons_activity[i], py_v_RIMR_v_neurons_activity[i], py_v_RIPL_v_neurons_activity[i], py_v_RIPR_v_neurons_activity[i], py_v_RIR_v_neurons_activity[i], py_v_RIS_v_neurons_activity[i], py_v_RIVL_v_neurons_activity[i], py_v_RIVR_v_neurons_activity[i], py_v_RMDDL_v_neurons_activity[i], py_v_RMDDR_v_neurons_activity[i], py_v_RMDL_v_neurons_activity[i], py_v_RMDR_v_neurons_activity[i], py_v_RMDVL_v_neurons_activity[i], py_v_RMDVR_v_neurons_activity[i], py_v_RMED_v_neurons_activity[i], py_v_RMEL_v_neurons_activity[i], py_v_RMER_v_neurons_activity[i], py_v_RMEV_v_neurons_activity[i], py_v_RMFL_v_neurons_activity[i], py_v_RMFR_v_neurons_activity[i], py_v_RMGL_v_neurons_activity[i], py_v_RMGR_v_neurons_activity[i], py_v_RMHL_v_neurons_activity[i], py_v_RMHR_v_neurons_activity[i], py_v_SAADL_v_neurons_activity[i], py_v_SAADR_v_neurons_activity[i], py_v_SAAVL_v_neurons_activity[i], py_v_SAAVR_v_neurons_activity[i], py_v_SABD_v_neurons_activity[i], py_v_SABVL_v_neurons_activity[i], py_v_SABVR_v_neurons_activity[i], py_v_SDQL_v_neurons_activity[i], py_v_SDQR_v_neurons_activity[i], py_v_SIADL_v_neurons_activity[i], py_v_SIADR_v_neurons_activity[i], py_v_SIAVL_v_neurons_activity[i], py_v_SIAVR_v_neurons_activity[i], py_v_SIBDL_v_neurons_activity[i], py_v_SIBDR_v_neurons_activity[i], py_v_SIBVL_v_neurons_activity[i], py_v_SIBVR_v_neurons_activity[i], py_v_SMBDL_v_neurons_activity[i], py_v_SMBDR_v_neurons_activity[i], py_v_SMBVL_v_neurons_activity[i], py_v_SMBVR_v_neurons_activity[i], py_v_SMDDL_v_neurons_activity[i], py_v_SMDDR_v_neurons_activity[i], py_v_SMDVL_v_neurons_activity[i], py_v_SMDVR_v_neurons_activity[i], py_v_URADL_v_neurons_activity[i], py_v_URADR_v_neurons_activity[i], py_v_URAVL_v_neurons_activity[i], py_v_URAVR_v_neurons_activity[i], py_v_URBL_v_neurons_activity[i], py_v_URBR_v_neurons_activity[i], py_v_URXL_v_neurons_activity[i], py_v_URXR_v_neurons_activity[i], py_v_URYDL_v_neurons_activity[i], py_v_URYDR_v_neurons_activity[i], py_v_URYVL_v_neurons_activity[i], py_v_URYVR_v_neurons_activity[i], py_v_VA1_v_neurons_activity[i], py_v_VA10_v_neurons_activity[i], py_v_VA11_v_neurons_activity[i], py_v_VA12_v_neurons_activity[i], py_v_VA2_v_neurons_activity[i], py_v_VA3_v_neurons_activity[i], py_v_VA4_v_neurons_activity[i], py_v_VA5_v_neurons_activity[i], py_v_VA6_v_neurons_activity[i], py_v_VA7_v_neurons_activity[i], py_v_VA8_v_neurons_activity[i], py_v_VA9_v_neurons_activity[i], py_v_VB1_v_neurons_activity[i], py_v_VB10_v_neurons_activity[i], py_v_VB11_v_neurons_activity[i], py_v_VB2_v_neurons_activity[i], py_v_VB3_v_neurons_activity[i], py_v_VB4_v_neurons_activity[i], py_v_VB5_v_neurons_activity[i], py_v_VB6_v_neurons_activity[i], py_v_VB7_v_neurons_activity[i], py_v_VB8_v_neurons_activity[i], py_v_VB9_v_neurons_activity[i], py_v_VC1_v_neurons_activity[i], py_v_VC2_v_neurons_activity[i], py_v_VC3_v_neurons_activity[i], py_v_VC4_v_neurons_activity[i], py_v_VC5_v_neurons_activity[i], py_v_VC6_v_neurons_activity[i], py_v_VD1_v_neurons_activity[i], py_v_VD10_v_neurons_activity[i], py_v_VD11_v_neurons_activity[i], py_v_VD12_v_neurons_activity[i], py_v_VD13_v_neurons_activity[i], py_v_VD2_v_neurons_activity[i], py_v_VD3_v_neurons_activity[i], py_v_VD4_v_neurons_activity[i], py_v_VD5_v_neurons_activity[i], py_v_VD6_v_neurons_activity[i], py_v_VD7_v_neurons_activity[i], py_v_VD8_v_neurons_activity[i], py_v_VD9_v_neurons_activity[i], ))
        f_neurons_activity_f2.close()
        print("Saved data to: c302_D_Full.activity.dat")

        # ######################   File to save: c302_D_Full.dat (neurons_v). Note, saving in SI units
        py_v_ADAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADEL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADEL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADER_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADER_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADFL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADFL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADFR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADFR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADLL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADLL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ADLR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ADLR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AFDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AFDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AFDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AFDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIBL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIBL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIBR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIBR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIML_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIML_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIMR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIMR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AINL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AINL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AINR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AINR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIYL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIYL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIYR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIYR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIZL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIZL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AIZR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AIZR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ALA_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ALA_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ALML_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ALML_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ALMR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ALMR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ALNL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ALNL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ALNR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ALNR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AQR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AQR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS10_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS10_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS11_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS11_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS7_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS7_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS8_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS8_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AS9_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AS9_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASEL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASEL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASER_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASER_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASGL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASGL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASGR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASGR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASHL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASHL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASHR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASHR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASIL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASIL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASIR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASIR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASJL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASJL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASJR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASJR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASKL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASKL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_ASKR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_ASKR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AUAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AUAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AUAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AUAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVBL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVBL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVBR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVBR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVEL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVEL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVER_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVER_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVFL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVFL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVFR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVFR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVG_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVG_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVHL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVHL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVHR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVHR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVJL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVJL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVJR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVJR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVKL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVKL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVKR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVKR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AVM_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AVM_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AWAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AWAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AWAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AWAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AWBL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AWBL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AWBR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AWBR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AWCL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AWCL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_AWCR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_AWCR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_BAGL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_BAGL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_BAGR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_BAGR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_BDUL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_BDUL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_BDUR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_BDUR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_CANL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_CANL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_CANR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_CANR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_CEPDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_CEPDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_CEPDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_CEPDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_CEPVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_CEPVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_CEPVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_CEPVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA7_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA7_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA8_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA8_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DA9_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DA9_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DB7_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DB7_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DD1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DD1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DD2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DD2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DD3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DD3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DD4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DD4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DD5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DD5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DD6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DD6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DVA_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DVA_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DVB_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DVB_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_DVC_v_neurons_v = [ float(x  / 1000.0) for x in h.v_DVC_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_FLPL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_FLPL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_FLPR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_FLPR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_HSNL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_HSNL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_HSNR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_HSNR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I1L_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I1L_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I1R_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I1R_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I2L_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I2L_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I2R_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I2R_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_I6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_I6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL1DL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL1DL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL1DR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL1DR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL1L_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL1L_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL1R_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL1R_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL1VL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL1VL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL1VR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL1VR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL2DL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL2DL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL2DR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL2DR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL2L_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL2L_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL2R_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL2R_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL2VL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL2VL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_IL2VR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_IL2VR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_LUAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_LUAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_LUAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_LUAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M2L_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M2L_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M2R_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M2R_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M3L_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M3L_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M3R_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M3R_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_M5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_M5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_MCL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_MCL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_MCR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_MCR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_MI_v_neurons_v = [ float(x  / 1000.0) for x in h.v_MI_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_NSML_v_neurons_v = [ float(x  / 1000.0) for x in h.v_NSML_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_NSMR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_NSMR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_OLLL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_OLLL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_OLLR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_OLLR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_OLQDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_OLQDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_OLQDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_OLQDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_OLQVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_OLQVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_OLQVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_OLQVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PDA_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PDA_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PDB_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PDB_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PDEL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PDEL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PDER_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PDER_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PHAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PHAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PHAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PHAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PHBL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PHBL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PHBR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PHBR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PHCL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PHCL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PHCR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PHCR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PLML_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PLML_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PLMR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PLMR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PLNL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PLNL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PLNR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PLNR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PQR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PQR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVCL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVCL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVCR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVCR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVM_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVM_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVNL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVNL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVNR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVNR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVPL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVPL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVPR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVPR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVQL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVQL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVQR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVQR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVT_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVT_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVWL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVWL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_PVWR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_PVWR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIAL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIAL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIAR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIAR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIBL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIBL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIBR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIBR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RICL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RICL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RICR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RICR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RID_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RID_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIFL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIFL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIFR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIFR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIGL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIGL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIGR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIGR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIH_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIH_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIML_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIML_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIMR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIMR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIPL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIPL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIPR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIPR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIS_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIS_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RIVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RIVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMDDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMDDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMDDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMDDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMDVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMDVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMDVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMDVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMED_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMED_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMEL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMEL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMER_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMER_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMEV_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMEV_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMFL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMFL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMFR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMFR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMGL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMGL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMGR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMGR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMHL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMHL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_RMHR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_RMHR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SAADL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SAADL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SAADR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SAADR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SAAVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SAAVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SAAVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SAAVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SABD_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SABD_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SABVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SABVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SABVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SABVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SDQL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SDQL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SDQR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SDQR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIADL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIADL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIADR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIADR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIAVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIAVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIAVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIAVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIBDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIBDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIBDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIBDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIBVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIBVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SIBVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SIBVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMBDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMBDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMBDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMBDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMBVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMBVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMBVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMBVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMDDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMDDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMDDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMDDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMDVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMDVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_SMDVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_SMDVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URADL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URADL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URADR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URADR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URAVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URAVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URAVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URAVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URBL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URBL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URBR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URBR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URXL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URXL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URXR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URXR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URYDL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URYDL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URYDR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URYDR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URYVL_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URYVL_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_URYVR_v_neurons_v = [ float(x  / 1000.0) for x in h.v_URYVR_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA10_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA10_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA11_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA11_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA12_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA12_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA7_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA7_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA8_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA8_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VA9_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VA9_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB10_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB10_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB11_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB11_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB7_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB7_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB8_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB8_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VB9_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VB9_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VC1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VC1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VC2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VC2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VC3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VC3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VC4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VC4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VC5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VC5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VC6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VC6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD1_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD1_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD10_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD10_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD11_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD11_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD12_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD12_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD13_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD13_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD2_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD2_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD3_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD3_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD4_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD4_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD5_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD5_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD6_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD6_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD7_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD7_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD8_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD8_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage
        py_v_VD9_v_neurons_v = [ float(x  / 1000.0) for x in h.v_VD9_v_neurons_v.to_python() ]  # Convert to Python list for speed, variable has dim: voltage

        f_neurons_v_f2 = open('c302_D_Full.dat', 'w')
        num_points = len(py_v_time)  # Simulation may have been stopped before tstop...

        for i in range(num_points):
            f_neurons_v_f2.write('%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t%e\t\n' % (py_v_time[i], py_v_ADAL_v_neurons_v[i], py_v_ADAR_v_neurons_v[i], py_v_ADEL_v_neurons_v[i], py_v_ADER_v_neurons_v[i], py_v_ADFL_v_neurons_v[i], py_v_ADFR_v_neurons_v[i], py_v_ADLL_v_neurons_v[i], py_v_ADLR_v_neurons_v[i], py_v_AFDL_v_neurons_v[i], py_v_AFDR_v_neurons_v[i], py_v_AIAL_v_neurons_v[i], py_v_AIAR_v_neurons_v[i], py_v_AIBL_v_neurons_v[i], py_v_AIBR_v_neurons_v[i], py_v_AIML_v_neurons_v[i], py_v_AIMR_v_neurons_v[i], py_v_AINL_v_neurons_v[i], py_v_AINR_v_neurons_v[i], py_v_AIYL_v_neurons_v[i], py_v_AIYR_v_neurons_v[i], py_v_AIZL_v_neurons_v[i], py_v_AIZR_v_neurons_v[i], py_v_ALA_v_neurons_v[i], py_v_ALML_v_neurons_v[i], py_v_ALMR_v_neurons_v[i], py_v_ALNL_v_neurons_v[i], py_v_ALNR_v_neurons_v[i], py_v_AQR_v_neurons_v[i], py_v_AS1_v_neurons_v[i], py_v_AS10_v_neurons_v[i], py_v_AS11_v_neurons_v[i], py_v_AS2_v_neurons_v[i], py_v_AS3_v_neurons_v[i], py_v_AS4_v_neurons_v[i], py_v_AS5_v_neurons_v[i], py_v_AS6_v_neurons_v[i], py_v_AS7_v_neurons_v[i], py_v_AS8_v_neurons_v[i], py_v_AS9_v_neurons_v[i], py_v_ASEL_v_neurons_v[i], py_v_ASER_v_neurons_v[i], py_v_ASGL_v_neurons_v[i], py_v_ASGR_v_neurons_v[i], py_v_ASHL_v_neurons_v[i], py_v_ASHR_v_neurons_v[i], py_v_ASIL_v_neurons_v[i], py_v_ASIR_v_neurons_v[i], py_v_ASJL_v_neurons_v[i], py_v_ASJR_v_neurons_v[i], py_v_ASKL_v_neurons_v[i], py_v_ASKR_v_neurons_v[i], py_v_AUAL_v_neurons_v[i], py_v_AUAR_v_neurons_v[i], py_v_AVAL_v_neurons_v[i], py_v_AVAR_v_neurons_v[i], py_v_AVBL_v_neurons_v[i], py_v_AVBR_v_neurons_v[i], py_v_AVDL_v_neurons_v[i], py_v_AVDR_v_neurons_v[i], py_v_AVEL_v_neurons_v[i], py_v_AVER_v_neurons_v[i], py_v_AVFL_v_neurons_v[i], py_v_AVFR_v_neurons_v[i], py_v_AVG_v_neurons_v[i], py_v_AVHL_v_neurons_v[i], py_v_AVHR_v_neurons_v[i], py_v_AVJL_v_neurons_v[i], py_v_AVJR_v_neurons_v[i], py_v_AVKL_v_neurons_v[i], py_v_AVKR_v_neurons_v[i], py_v_AVL_v_neurons_v[i], py_v_AVM_v_neurons_v[i], py_v_AWAL_v_neurons_v[i], py_v_AWAR_v_neurons_v[i], py_v_AWBL_v_neurons_v[i], py_v_AWBR_v_neurons_v[i], py_v_AWCL_v_neurons_v[i], py_v_AWCR_v_neurons_v[i], py_v_BAGL_v_neurons_v[i], py_v_BAGR_v_neurons_v[i], py_v_BDUL_v_neurons_v[i], py_v_BDUR_v_neurons_v[i], py_v_CANL_v_neurons_v[i], py_v_CANR_v_neurons_v[i], py_v_CEPDL_v_neurons_v[i], py_v_CEPDR_v_neurons_v[i], py_v_CEPVL_v_neurons_v[i], py_v_CEPVR_v_neurons_v[i], py_v_DA1_v_neurons_v[i], py_v_DA2_v_neurons_v[i], py_v_DA3_v_neurons_v[i], py_v_DA4_v_neurons_v[i], py_v_DA5_v_neurons_v[i], py_v_DA6_v_neurons_v[i], py_v_DA7_v_neurons_v[i], py_v_DA8_v_neurons_v[i], py_v_DA9_v_neurons_v[i], py_v_DB1_v_neurons_v[i], py_v_DB2_v_neurons_v[i], py_v_DB3_v_neurons_v[i], py_v_DB4_v_neurons_v[i], py_v_DB5_v_neurons_v[i], py_v_DB6_v_neurons_v[i], py_v_DB7_v_neurons_v[i], py_v_DD1_v_neurons_v[i], py_v_DD2_v_neurons_v[i], py_v_DD3_v_neurons_v[i], py_v_DD4_v_neurons_v[i], py_v_DD5_v_neurons_v[i], py_v_DD6_v_neurons_v[i], py_v_DVA_v_neurons_v[i], py_v_DVB_v_neurons_v[i], py_v_DVC_v_neurons_v[i], py_v_FLPL_v_neurons_v[i], py_v_FLPR_v_neurons_v[i], py_v_HSNL_v_neurons_v[i], py_v_HSNR_v_neurons_v[i], py_v_I1L_v_neurons_v[i], py_v_I1R_v_neurons_v[i], py_v_I2L_v_neurons_v[i], py_v_I2R_v_neurons_v[i], py_v_I3_v_neurons_v[i], py_v_I4_v_neurons_v[i], py_v_I5_v_neurons_v[i], py_v_I6_v_neurons_v[i], py_v_IL1DL_v_neurons_v[i], py_v_IL1DR_v_neurons_v[i], py_v_IL1L_v_neurons_v[i], py_v_IL1R_v_neurons_v[i], py_v_IL1VL_v_neurons_v[i], py_v_IL1VR_v_neurons_v[i], py_v_IL2DL_v_neurons_v[i], py_v_IL2DR_v_neurons_v[i], py_v_IL2L_v_neurons_v[i], py_v_IL2R_v_neurons_v[i], py_v_IL2VL_v_neurons_v[i], py_v_IL2VR_v_neurons_v[i], py_v_LUAL_v_neurons_v[i], py_v_LUAR_v_neurons_v[i], py_v_M1_v_neurons_v[i], py_v_M2L_v_neurons_v[i], py_v_M2R_v_neurons_v[i], py_v_M3L_v_neurons_v[i], py_v_M3R_v_neurons_v[i], py_v_M4_v_neurons_v[i], py_v_M5_v_neurons_v[i], py_v_MCL_v_neurons_v[i], py_v_MCR_v_neurons_v[i], py_v_MI_v_neurons_v[i], py_v_NSML_v_neurons_v[i], py_v_NSMR_v_neurons_v[i], py_v_OLLL_v_neurons_v[i], py_v_OLLR_v_neurons_v[i], py_v_OLQDL_v_neurons_v[i], py_v_OLQDR_v_neurons_v[i], py_v_OLQVL_v_neurons_v[i], py_v_OLQVR_v_neurons_v[i], py_v_PDA_v_neurons_v[i], py_v_PDB_v_neurons_v[i], py_v_PDEL_v_neurons_v[i], py_v_PDER_v_neurons_v[i], py_v_PHAL_v_neurons_v[i], py_v_PHAR_v_neurons_v[i], py_v_PHBL_v_neurons_v[i], py_v_PHBR_v_neurons_v[i], py_v_PHCL_v_neurons_v[i], py_v_PHCR_v_neurons_v[i], py_v_PLML_v_neurons_v[i], py_v_PLMR_v_neurons_v[i], py_v_PLNL_v_neurons_v[i], py_v_PLNR_v_neurons_v[i], py_v_PQR_v_neurons_v[i], py_v_PVCL_v_neurons_v[i], py_v_PVCR_v_neurons_v[i], py_v_PVDL_v_neurons_v[i], py_v_PVDR_v_neurons_v[i], py_v_PVM_v_neurons_v[i], py_v_PVNL_v_neurons_v[i], py_v_PVNR_v_neurons_v[i], py_v_PVPL_v_neurons_v[i], py_v_PVPR_v_neurons_v[i], py_v_PVQL_v_neurons_v[i], py_v_PVQR_v_neurons_v[i], py_v_PVR_v_neurons_v[i], py_v_PVT_v_neurons_v[i], py_v_PVWL_v_neurons_v[i], py_v_PVWR_v_neurons_v[i], py_v_RIAL_v_neurons_v[i], py_v_RIAR_v_neurons_v[i], py_v_RIBL_v_neurons_v[i], py_v_RIBR_v_neurons_v[i], py_v_RICL_v_neurons_v[i], py_v_RICR_v_neurons_v[i], py_v_RID_v_neurons_v[i], py_v_RIFL_v_neurons_v[i], py_v_RIFR_v_neurons_v[i], py_v_RIGL_v_neurons_v[i], py_v_RIGR_v_neurons_v[i], py_v_RIH_v_neurons_v[i], py_v_RIML_v_neurons_v[i], py_v_RIMR_v_neurons_v[i], py_v_RIPL_v_neurons_v[i], py_v_RIPR_v_neurons_v[i], py_v_RIR_v_neurons_v[i], py_v_RIS_v_neurons_v[i], py_v_RIVL_v_neurons_v[i], py_v_RIVR_v_neurons_v[i], py_v_RMDDL_v_neurons_v[i], py_v_RMDDR_v_neurons_v[i], py_v_RMDL_v_neurons_v[i], py_v_RMDR_v_neurons_v[i], py_v_RMDVL_v_neurons_v[i], py_v_RMDVR_v_neurons_v[i], py_v_RMED_v_neurons_v[i], py_v_RMEL_v_neurons_v[i], py_v_RMER_v_neurons_v[i], py_v_RMEV_v_neurons_v[i], py_v_RMFL_v_neurons_v[i], py_v_RMFR_v_neurons_v[i], py_v_RMGL_v_neurons_v[i], py_v_RMGR_v_neurons_v[i], py_v_RMHL_v_neurons_v[i], py_v_RMHR_v_neurons_v[i], py_v_SAADL_v_neurons_v[i], py_v_SAADR_v_neurons_v[i], py_v_SAAVL_v_neurons_v[i], py_v_SAAVR_v_neurons_v[i], py_v_SABD_v_neurons_v[i], py_v_SABVL_v_neurons_v[i], py_v_SABVR_v_neurons_v[i], py_v_SDQL_v_neurons_v[i], py_v_SDQR_v_neurons_v[i], py_v_SIADL_v_neurons_v[i], py_v_SIADR_v_neurons_v[i], py_v_SIAVL_v_neurons_v[i], py_v_SIAVR_v_neurons_v[i], py_v_SIBDL_v_neurons_v[i], py_v_SIBDR_v_neurons_v[i], py_v_SIBVL_v_neurons_v[i], py_v_SIBVR_v_neurons_v[i], py_v_SMBDL_v_neurons_v[i], py_v_SMBDR_v_neurons_v[i], py_v_SMBVL_v_neurons_v[i], py_v_SMBVR_v_neurons_v[i], py_v_SMDDL_v_neurons_v[i], py_v_SMDDR_v_neurons_v[i], py_v_SMDVL_v_neurons_v[i], py_v_SMDVR_v_neurons_v[i], py_v_URADL_v_neurons_v[i], py_v_URADR_v_neurons_v[i], py_v_URAVL_v_neurons_v[i], py_v_URAVR_v_neurons_v[i], py_v_URBL_v_neurons_v[i], py_v_URBR_v_neurons_v[i], py_v_URXL_v_neurons_v[i], py_v_URXR_v_neurons_v[i], py_v_URYDL_v_neurons_v[i], py_v_URYDR_v_neurons_v[i], py_v_URYVL_v_neurons_v[i], py_v_URYVR_v_neurons_v[i], py_v_VA1_v_neurons_v[i], py_v_VA10_v_neurons_v[i], py_v_VA11_v_neurons_v[i], py_v_VA12_v_neurons_v[i], py_v_VA2_v_neurons_v[i], py_v_VA3_v_neurons_v[i], py_v_VA4_v_neurons_v[i], py_v_VA5_v_neurons_v[i], py_v_VA6_v_neurons_v[i], py_v_VA7_v_neurons_v[i], py_v_VA8_v_neurons_v[i], py_v_VA9_v_neurons_v[i], py_v_VB1_v_neurons_v[i], py_v_VB10_v_neurons_v[i], py_v_VB11_v_neurons_v[i], py_v_VB2_v_neurons_v[i], py_v_VB3_v_neurons_v[i], py_v_VB4_v_neurons_v[i], py_v_VB5_v_neurons_v[i], py_v_VB6_v_neurons_v[i], py_v_VB7_v_neurons_v[i], py_v_VB8_v_neurons_v[i], py_v_VB9_v_neurons_v[i], py_v_VC1_v_neurons_v[i], py_v_VC2_v_neurons_v[i], py_v_VC3_v_neurons_v[i], py_v_VC4_v_neurons_v[i], py_v_VC5_v_neurons_v[i], py_v_VC6_v_neurons_v[i], py_v_VD1_v_neurons_v[i], py_v_VD10_v_neurons_v[i], py_v_VD11_v_neurons_v[i], py_v_VD12_v_neurons_v[i], py_v_VD13_v_neurons_v[i], py_v_VD2_v_neurons_v[i], py_v_VD3_v_neurons_v[i], py_v_VD4_v_neurons_v[i], py_v_VD5_v_neurons_v[i], py_v_VD6_v_neurons_v[i], py_v_VD7_v_neurons_v[i], py_v_VD8_v_neurons_v[i], py_v_VD9_v_neurons_v[i], ))
        f_neurons_v_f2.close()
        print("Saved data to: c302_D_Full.dat")

        save_end = time.time()
        save_time = save_end - self.sim_end
        print("Finished saving results in %f seconds"%(save_time))

        print("Done")

if __name__ == '__main__':

    ns = NeuronSimulation(tstop=100, dt=0.01, seed=123456789, abs_tol=None, rel_tol=None)

    ns.run()

